using Microsoft.EntityFrameworkCore;
using Volo.Abp;

namespace FarVision.Mes.EntityFrameworkCore
{
    public static class MesDbContextModelCreatingExtensions
    {
        public static void ConfigureMes(this ModelBuilder builder)
        {
            Check.NotNull(builder, nameof(builder));

            /* Configure your own tables/entities inside here */

            //builder.Entity<YourEntity>(b =>
            //{
            //    b.ToTable(MesConsts.DbTablePrefix + "YourEntities", MesConsts.DbSchema);
            //    b.ConfigureByConvention(); //auto configure for the base class props
            //    //...
            //});
            OnModelCreatingPartial(builder);
        }
        static void OnModelCreatingPartial(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Accn>(entity =>
            {
                entity.ToTable("ACCN");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.AccNo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ACC_NO");

                entity.Property(e => e.AccNoB)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ACC_NO_B");

                entity.Property(e => e.AccNoE)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ACC_NO_E");

                entity.Property(e => e.AccNoGstd)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("ACC_NO_GSTD");

                entity.Property(e => e.AccNoIfrs)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ACC_NO_IFRS");

                entity.Property(e => e.AccNoQyjz)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ACC_NO_QYJZ");

                entity.Property(e => e.AccNoStd)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("ACC_NO_STD");

                entity.Property(e => e.AccNoUp)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ACC_NO_UP");

                entity.Property(e => e.Accno2)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ACCNO2");

                entity.Property(e => e.ChkCashFlow)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CHK_CASH_FLOW");

                entity.Property(e => e.ChkCsh)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CHK_CSH");

                entity.Property(e => e.Cls)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CLS");

                entity.Property(e => e.ClsId1)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CLS_ID1");

                entity.Property(e => e.ClsId2)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CLS_ID2");

                entity.Property(e => e.ClsId3)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CLS_ID3");

                entity.Property(e => e.ClsId4)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CLS_ID4");

                entity.Property(e => e.CshFr)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CSH_FR");

                entity.Property(e => e.CurType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CUR_TYPE");

                entity.Property(e => e.Curid)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CURID");

                entity.Property(e => e.Dc)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("DC");

                entity.Property(e => e.EngName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("ENG_NAME");

                entity.Property(e => e.ExcId)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("EXC_ID");

                entity.Property(e => e.Kind)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("KIND");

                entity.Property(e => e.KmId)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("KM_ID");

                entity.Property(e => e.KmType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("KM_TYPE");

                entity.Property(e => e.KnCst)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("KN_CST");

                entity.Property(e => e.Name)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("NAME");

                entity.Property(e => e.OffsetId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("OFFSET_ID");

                entity.Property(e => e.OthSw1)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("OTH_SW1");

                entity.Property(e => e.OthSw2)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("OTH_SW2");

                entity.Property(e => e.RelCls)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("REL_CLS");

                entity.Property(e => e.Rem)
                    .HasColumnType("text")
                    .HasColumnName("REM");

                entity.Property(e => e.StopDd)
                    .HasColumnType("datetime")
                    .HasColumnName("STOP_DD");

                entity.Property(e => e.SwArp)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SW_ARP");

                entity.Property(e => e.SwCas)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SW_CAS");

                entity.Property(e => e.SwInv)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SW_INV");

                entity.Property(e => e.SwObj)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SW_OBJ");

                entity.Property(e => e.SwTax)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SW_TAX");

                entity.Property(e => e.UpDd).HasColumnName("UP_DD");

                entity.Property(e => e.WordNo1)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("WORD_NO1");

                entity.Property(e => e.WordNo2)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("WORD_NO2");

                entity.Property(e => e.WordNo3)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("WORD_NO3");

                entity.Property(e => e.WordNo4)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("WORD_NO4");

                entity.Property(e => e.WordNo5)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("WORD_NO5");
            });

            modelBuilder.Entity<Actualdcr>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ACTUALDCR");

                entity.Property(e => e.Csbh)
                    .HasMaxLength(100)
                    .HasColumnName("CSBH");

                entity.Property(e => e.Cssz)
                    .HasMaxLength(1000)
                    .HasColumnName("CSSZ");

                entity.Property(e => e.Cszt).HasColumnName("CSZT");

                entity.Property(e => e.Sbbh)
                    .HasMaxLength(100)
                    .HasColumnName("SBBH");

                entity.Property(e => e.Sj)
                    .HasMaxLength(100)
                    .HasColumnName("SJ");
            });

            modelBuilder.Entity<Actualpara>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ACTUALPARA");

                entity.Property(e => e.LowLimit)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("LOW_LIMIT");

                entity.Property(e => e.Para)
                    .HasMaxLength(200)
                    .HasColumnName("PARA");

                entity.Property(e => e.ParaName)
                    .HasMaxLength(100)
                    .HasColumnName("PARA_NAME");

                entity.Property(e => e.ParaNo)
                    .HasMaxLength(100)
                    .HasColumnName("PARA_NO");

                entity.Property(e => e.Rn).HasColumnName("RN");

                entity.Property(e => e.UpLimit)
                    .HasColumnType("decimal(18, 4)")
                    .HasColumnName("UP_LIMIT");
            });

            modelBuilder.Entity<Aifilter>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("AIFILTER");

                entity.Property(e => e.BatchNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.BillNo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.BillStatus)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.BusiNo)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.DeptNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.InspectionDate).HasColumnType("datetime");

                entity.Property(e => e.InspectorId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("InspectorID");

                entity.Property(e => e.PrcId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("PRC_ID");

                entity.Property(e => e.ProductionName)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.ProductionNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.QtyChk)
                    .HasColumnType("decimal(38, 4)")
                    .HasColumnName("QTY_CHK");

                entity.Property(e => e.QtyChkLost)
                    .HasColumnType("decimal(38, 4)")
                    .HasColumnName("QTY_CHK_LOST");

                entity.Property(e => e.QtyChkOk)
                    .HasColumnType("decimal(38, 4)")
                    .HasColumnName("QTY_CHK_OK");

                entity.Property(e => e.QtyLostRtn)
                    .HasColumnType("decimal(18, 4)")
                    .HasColumnName("QTY_LOST_RTN");

                entity.Property(e => e.QtyOkRtn)
                    .HasColumnType("decimal(18, 4)")
                    .HasColumnName("QTY_OK_RTN");

                entity.Property(e => e.QtyRtn)
                    .HasColumnType("decimal(18, 4)")
                    .HasColumnName("QTY_RTN");

                entity.Property(e => e.Snm)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SNM");

                entity.Property(e => e.SourceBillNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Spc)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("SPC");

                entity.Property(e => e.SpcNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SPC_NO");

                entity.Property(e => e.StorageLocation)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SubId).HasColumnName("SubID");

                entity.Property(e => e.SuppCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SuppName)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.ViewDetail)
                    .IsRequired()
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.WhId).HasColumnName("WhID");
            });

            modelBuilder.Entity<AlertMessageHisT>(entity =>
            {
                entity.ToTable("ALERT_MESSAGE_HIS_T");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.AlertNotification)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("ALERT_NOTIFICATION");

                entity.Property(e => e.Msgid)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("MSGID");

                entity.Property(e => e.Receiver)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("RECEIVER");

                entity.Property(e => e.Sendresult)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("SENDRESULT");

                entity.Property(e => e.Sendtime)
                    .HasColumnType("datetime")
                    .HasColumnName("SENDTIME");

                entity.Property(e => e.UpgradeLevel).HasColumnName("UPGRADE_LEVEL");
            });

            modelBuilder.Entity<AlertMessageT>(entity =>
            {
                entity.ToTable("ALERT_MESSAGE_T");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BilBusi)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("BIL_BUSI");

                entity.Property(e => e.BilNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("BIL_NO");

                entity.Property(e => e.DevStation)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("DEV_STATION");

                entity.Property(e => e.Duration).HasColumnName("DURATION");

                entity.Property(e => e.EndTime)
                    .HasColumnType("datetime")
                    .HasColumnName("END_TIME");

                entity.Property(e => e.ExcepDesc)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("EXCEP_DESC");

                entity.Property(e => e.ExcepLevel)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("EXCEP_LEVEL");

                entity.Property(e => e.ExcepNo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("EXCEP_NO");

                entity.Property(e => e.ExcepType)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("EXCEP_TYPE");

                entity.Property(e => e.Factory)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("FACTORY");

                entity.Property(e => e.IsTrack).HasColumnName("IS_TRACK");

                entity.Property(e => e.StartTime)
                    .HasColumnType("datetime")
                    .HasColumnName("START_TIME");

                entity.Property(e => e.Status).HasColumnName("STATUS");

                entity.Property(e => e.Sysdate)
                    .HasColumnType("datetime")
                    .HasColumnName("SYSDATE");

                entity.Property(e => e.Title)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.UpgradeLevel).HasColumnName("UPGRADE_LEVEL");

                entity.Property(e => e.Workshop)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("WORKSHOP");
            });

            modelBuilder.Entity<AlertPdpara>(entity =>
            {
                entity.ToTable("ALERT_PDPARA");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Issend)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ISSEND");

                entity.Property(e => e.Menutype)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("MENUTYPE");

                entity.Property(e => e.ParaChange)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("PARA_CHANGE");

                entity.Property(e => e.PrdNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("PRD_NO");

                entity.Property(e => e.Updatetime)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATETIME");

                entity.Property(e => e.ZcName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ZC_NAME");

                entity.Property(e => e.ZcNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ZC_NO");
            });

            modelBuilder.Entity<AlertRulesT>(entity =>
            {
                entity.ToTable("ALERT_RULES_T");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.AlertLevel)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("ALERT_LEVEL");

                entity.Property(e => e.AlertNotification)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("ALERT_NOTIFICATION");

                entity.Property(e => e.AlertStation)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("ALERT_STATION");

                entity.Property(e => e.AlertType)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("ALERT_TYPE");

                entity.Property(e => e.IsTrackstatus).HasColumnName("IS_TRACKSTATUS");

                entity.Property(e => e.Isenable).HasColumnName("ISENABLE");

                entity.Property(e => e.Receiver)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("RECEIVER");

                entity.Property(e => e.Sysdate)
                    .HasColumnType("datetime")
                    .HasColumnName("SYSDATE");

                entity.Property(e => e.UpgradeLevel).HasColumnName("UPGRADE_LEVEL");

                entity.Property(e => e.UpgradeTime).HasColumnName("UPGRADE_TIME");
            });

            modelBuilder.Entity<Area>(entity =>
            {
                entity.ToTable("AREA");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.AreaNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("AREA_NO");

                entity.Property(e => e.AreaUp)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("AREA_UP");

                entity.Property(e => e.Name)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("NAME");

                entity.Property(e => e.Rem)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("REM");

                entity.Property(e => e.StopDd)
                    .HasColumnType("datetime")
                    .HasColumnName("STOP_DD");

                entity.Property(e => e.UpDd)
                    .HasColumnType("datetime")
                    .HasColumnName("UP_DD");
            });

            modelBuilder.Entity<Baclose>(entity =>
            {
                entity.ToTable("BACLOSE");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BillDate).HasColumnType("datetime");

                entity.Property(e => e.BusiNo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.UserId).HasColumnName("userID");
            });

            modelBuilder.Entity<Bacomp>(entity =>
            {
                entity.ToTable("BACOMP");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Addr)
                    .IsRequired()
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.AddrEn)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.ComName)
                    .IsRequired()
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.CurName)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("curName")
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.CurNo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("curNo")
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.CurSymbol)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("curSymbol")
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.CustomCode)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Domain)
                    .IsRequired()
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Email)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("EMail")
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Fax)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.InputDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Lp)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("LP")
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Memo)
                    .IsRequired()
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Name)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.NameEn)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.NameS)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.No)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.OpenDate).HasColumnType("datetime");

                entity.Property(e => e.Orgcode)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("ORGCode")
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Path)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.TaxNo)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Tel1)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Tel2)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.UserId).HasColumnName("userID");

                entity.Property(e => e.Zap)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");
            });

            modelBuilder.Entity<BarcodeProductMap>(entity =>
            {
                entity.ToTable("BARCODE_PRODUCT_MAP");

                entity.HasIndex(e => new { e.Barcode, e.PrdNo })
                    .IsUnique()
                    .HasName("IX_BARCODE_PRODUCT_MAP");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Barcode)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("BARCODE");

                entity.Property(e => e.IdNo)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("ID_NO");

                entity.Property(e => e.ModNo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("MOD_NO");

                entity.Property(e => e.PrdNo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("PRD_NO");

                entity.Property(e => e.PrdSnm)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("PRD_SNM");
            });

            modelBuilder.Entity<BatNo>(entity =>
            {
                entity.ToTable("BAT_NO");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BatNo1)
                    .IsRequired()
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("BAT_NO");

                entity.Property(e => e.JhNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("JH_NO");

                entity.Property(e => e.Name)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("NAME");

                entity.Property(e => e.PrdNo)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("PRD_NO");

                entity.Property(e => e.UniqueIdent)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.UpDd)
                    .HasColumnType("datetime")
                    .HasColumnName("UP_DD");

                entity.Property(e => e.ValidDd)
                    .HasColumnType("datetime")
                    .HasColumnName("VALID_DD");
            });

            modelBuilder.Entity<BatRec1>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("BAT_REC1");

                entity.Property(e => e.BatNo)
                    .IsRequired()
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("BAT_NO");

                entity.Property(e => e.ChqcDd)
                    .HasColumnType("datetime")
                    .HasColumnName("CHQC_DD");

                entity.Property(e => e.ClsId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CLS_ID");

                entity.Property(e => e.Cst)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("CST");

                entity.Property(e => e.CstBx)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("CST_BX");

                entity.Property(e => e.CstIfrs)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("CST_IFRS");

                entity.Property(e => e.LstInd)
                    .HasColumnType("datetime")
                    .HasColumnName("LST_IND");

                entity.Property(e => e.LstIndQc)
                    .HasColumnType("datetime")
                    .HasColumnName("LST_IND_QC");

                entity.Property(e => e.LstOtd)
                    .HasColumnType("datetime")
                    .HasColumnName("LST_OTD");

                entity.Property(e => e.LstOtdQc)
                    .HasColumnType("datetime")
                    .HasColumnName("LST_OTD_QC");

                entity.Property(e => e.Pass)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("PASS");

                entity.Property(e => e.PrdMark)
                    .IsRequired()
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("PRD_MARK")
                    .HasDefaultValueSql("(space((0)))");

                entity.Property(e => e.PrdNo)
                    .IsRequired()
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("PRD_NO");

                entity.Property(e => e.Qty1Brw)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY1_BRW");

                entity.Property(e => e.Qty1In)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY1_IN");

                entity.Property(e => e.Qty1Lock)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY1_LOCK");

                entity.Property(e => e.Qty1Lrn)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY1_LRN");

                entity.Property(e => e.Qty1Out)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY1_OUT");

                entity.Property(e => e.QtyBrw)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_BRW");

                entity.Property(e => e.QtyCk)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_CK");

                entity.Property(e => e.QtyIn)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_IN");

                entity.Property(e => e.QtyJh)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_JH");

                entity.Property(e => e.QtyLock)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_LOCK");

                entity.Property(e => e.QtyLrn)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_LRN");

                entity.Property(e => e.QtyMax)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_MAX");

                entity.Property(e => e.QtyMin)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_MIN");

                entity.Property(e => e.QtyOnOdr)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_ON_ODR");

                entity.Property(e => e.QtyOnPrc)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_ON_PRC");

                entity.Property(e => e.QtyOnRsv)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_ON_RSV");

                entity.Property(e => e.QtyOnWay)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_ON_WAY");

                entity.Property(e => e.QtyOut)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_OUT");

                entity.Property(e => e.QtyQ2)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_Q2");

                entity.Property(e => e.QtyQ2Yl)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_Q2_YL");

                entity.Property(e => e.QtyQ3)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_Q3");

                entity.Property(e => e.QtyQl)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_QL");

                entity.Property(e => e.QtyRk)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_RK");

                entity.Property(e => e.QtySa)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_SA");

                entity.Property(e => e.QtySq)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_SQ");

                entity.Property(e => e.QtySqc)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_SQC");

                entity.Property(e => e.QtySqr)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_SQR");

                entity.Property(e => e.QtySw)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_SW");

                entity.Property(e => e.QtyWs)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_WS");

                entity.Property(e => e.QtyWsKc)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_WS_KC");

                entity.Property(e => e.QtyWx)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_WX");

                entity.Property(e => e.QtyZg)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_ZG");

                entity.Property(e => e.Rem)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("REM");

                entity.Property(e => e.ScDd)
                    .HasColumnType("datetime")
                    .HasColumnName("SC_DD");

                entity.Property(e => e.UpDd).HasColumnName("UP_DD");

                entity.Property(e => e.Usr)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("USR");

                entity.Property(e => e.ValidDd)
                    .HasColumnType("datetime")
                    .HasColumnName("VALID_DD");

                entity.Property(e => e.Wh)
                    .IsRequired()
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("WH");
            });

            modelBuilder.Entity<BatchgRec>(entity =>
            {
                entity.ToTable("BATCHG_REC");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BatNo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("BAT_NO");

                entity.Property(e => e.PrdNo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("PRD_NO");

                entity.Property(e => e.SalNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("SAL_NO");

                entity.Property(e => e.SebNo)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("SEB_NO");

                entity.Property(e => e.Sysdate)
                    .HasColumnType("datetime")
                    .HasColumnName("SYSDATE");
            });

            modelBuilder.Entity<BfBusiFieldC>(entity =>
            {
                entity.ToTable("_bf_Busi_Field_C");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.EditAble).HasColumnName("edit_Able");

                entity.Property(e => e.EditType).HasColumnName("Edit_Type");

                entity.Property(e => e.FilterAble).HasColumnName("Filter_Able");

                entity.Property(e => e.GcFormat)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("gc_Format")
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.GcVisible)
                    .HasColumnName("gc_Visible")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.MBusiNo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("m_BusiNo");

                entity.Property(e => e.MHistory).HasColumnName("m_History");

                entity.Property(e => e.MName)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("m_Name");

                entity.Property(e => e.MValueControl).HasColumnName("m_ValueControl");

                entity.Property(e => e.MValueDefault)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("m_ValueDefault")
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.SysDate).HasColumnType("datetime");

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Usr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UsrName)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<BfDataHistory>(entity =>
            {
                entity.ToTable("_bf_Data_History");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.DTime)
                    .HasColumnType("datetime")
                    .HasColumnName("dTime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.ObjectId).HasColumnName("ObjectID");

                entity.Property(e => e.Remark)
                    .IsRequired()
                    .HasMaxLength(4000)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.TableName)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.UserId).HasColumnName("UserID");
            });

            modelBuilder.Entity<BfFieldSelectList>(entity =>
            {
                entity.ToTable("_bf_FieldSelectList");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.ItemField)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.ItemValue)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PropertyNo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Symbol)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.TableName)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<BfFilter>(entity =>
            {
                entity.ToTable("BF_FILTER");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Category)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("CATEGORY");

                entity.Property(e => e.Isdefault).HasColumnName("ISDEFAULT");

                entity.Property(e => e.Iuserid).HasColumnName("IUSERID");

                entity.Property(e => e.No)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("NO");

                entity.Property(e => e.Type).HasColumnName("TYPE");

                entity.Property(e => e.Viewdata).HasColumnName("VIEWDATA");
            });

            modelBuilder.Entity<BfLayout>(entity =>
            {
                entity.ToTable("BF_LAYOUT");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Category)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("CATEGORY");

                entity.Property(e => e.No)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("NO");

                entity.Property(e => e.Type).HasColumnName("TYPE");

                entity.Property(e => e.Usrno)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("USRNO");

                entity.Property(e => e.Viewdata)
                    .HasColumnType("image")
                    .HasColumnName("VIEWDATA");
            });

            modelBuilder.Entity<BfRptTempletC>(entity =>
            {
                entity.ToTable("BF_RPT_TEMPLET_C");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Busikind)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("BUSIKIND");

                entity.Property(e => e.Busino)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("BUSINO");

                entity.Property(e => e.Flag).HasColumnName("FLAG");

                entity.Property(e => e.Inputdate)
                    .HasColumnType("datetime")
                    .HasColumnName("INPUTDATE");

                entity.Property(e => e.Isdefault).HasColumnName("ISDEFAULT");

                entity.Property(e => e.Memo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("MEMO");

                entity.Property(e => e.MenuNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Name)
                    .IsRequired()
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("NAME");

                entity.Property(e => e.No)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("NO");

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.Userno)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("USERNO");

                entity.Property(e => e.Viewdata)
                    .HasColumnType("image")
                    .HasColumnName("VIEWDATA");
            });

            modelBuilder.Entity<BfRptTempletS>(entity =>
            {
                entity.ToTable("BF_RPT_TEMPLET_S");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Busikind)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("BUSIKIND");

                entity.Property(e => e.Busino)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("BUSINO");

                entity.Property(e => e.Flag).HasColumnName("FLAG");

                entity.Property(e => e.Inputdate)
                    .HasColumnType("datetime")
                    .HasColumnName("INPUTDATE");

                entity.Property(e => e.Isdefault).HasColumnName("ISDEFAULT");

                entity.Property(e => e.Memo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("MEMO");

                entity.Property(e => e.Name)
                    .IsRequired()
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("NAME");

                entity.Property(e => e.Userno)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("USERNO");

                entity.Property(e => e.Viewdata)
                    .IsRequired()
                    .HasColumnType("image")
                    .HasColumnName("VIEWDATA");
            });

            modelBuilder.Entity<BfRptTemplets1>(entity =>
            {
                entity.ToTable("BF_RPT_TEMPLETS");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Childbusino)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("CHILDBUSINO");

                entity.Property(e => e.Childfkeyname)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("CHILDFKEYNAME");

                entity.Property(e => e.Mid).HasColumnName("MID");

                entity.Property(e => e.Parentbusino)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("PARENTBUSINO");

                entity.Property(e => e.Parentkeyname)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("PARENTKEYNAME");

                entity.HasOne(d => d.MidNavigation)
                    .WithMany(p => p.BfRptTemplets1)
                    .HasForeignKey(d => d.Mid)
                    .HasConstraintName("FK_BF_RPT_TEMPLETS_BF_RPT_TEMPLET_C");
            });

            modelBuilder.Entity<BilSpc>(entity =>
            {
                entity.ToTable("BIL_SPC");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BilId)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("BIL_ID");

                entity.Property(e => e.Name)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("NAME");

                entity.Property(e => e.Rem)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("REM");

                entity.Property(e => e.SpcId)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SPC_ID");

                entity.Property(e => e.SpcNo)
                    .IsRequired()
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("SPC_NO");

                entity.Property(e => e.SysDate).HasColumnType("datetime");

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Usr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Billbase>(entity =>
            {
                entity.ToTable("BILLBASE");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BilType)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.BilTypeName)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.BillDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.BusiNo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.ChkDate).HasColumnType("datetime");

                entity.Property(e => e.ChkMan)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.ChkManName)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkMob)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.ClsDate).HasColumnType("datetime");

                entity.Property(e => e.ClsUsr)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ClsUsrName)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.No)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Rem)
                    .IsRequired()
                    .HasMaxLength(4000)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.SysDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.UpdUsrName)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Usr)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.UsrName)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<BlobTemp>(entity =>
            {
                entity.ToTable("BLOB_TEMP");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Bdata).HasColumnName("BDATA");
            });

            modelBuilder.Entity<CallInfo>(entity =>
            {
                entity.ToTable("CALL_INFO");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.AlmsgNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ALMSG_NO");

                entity.Property(e => e.BusiNo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CallDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CALL_DATE");

                entity.Property(e => e.CallDep)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CALL_DEP");

                entity.Property(e => e.CallPad)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("CALL_PAD");

                entity.Property(e => e.CallPadIp)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("CALL_PAD_IP");

                entity.Property(e => e.CallSalNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CALL_SAL_NO");

                entity.Property(e => e.CallSta)
                    .IsRequired()
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("CALL_STA");

                entity.Property(e => e.CallTypeNo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CallType_NO");

                entity.Property(e => e.ResetUsr)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.RsDesp)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("RS_DESP");

                entity.Property(e => e.RsNo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("RS_NO");

                entity.Property(e => e.SebNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SEB_NO");

                entity.Property(e => e.SourceNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Source_No");

                entity.Property(e => e.SysDate).HasColumnType("datetime");

                entity.Property(e => e.ToBillNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("TO_BillNo");

                entity.Property(e => e.Usr)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UsrName)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Calltype>(entity =>
            {
                entity.ToTable("CALLTYPE");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.No)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.TypeName)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<CameraSebMap>(entity =>
            {
                entity.ToTable("CAMERA_SEB_MAP");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.CamIp)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CAM_IP");

                entity.Property(e => e.CamNo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("CAM_NO");

                entity.Property(e => e.SebNo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SEB_NO");

                entity.Property(e => e.SebType)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SEB_TYPE");
            });

            modelBuilder.Entity<Casn>(entity =>
            {
                entity.ToTable("CASN");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.AccDays)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ACC_DAYS");

                entity.Property(e => e.Adr1)
                    .HasColumnType("text")
                    .HasColumnName("ADR1");

                entity.Property(e => e.AgName)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("AG_NAME");

                entity.Property(e => e.AgNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("AG_NO");

                entity.Property(e => e.Amtn)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("AMTN");

                entity.Property(e => e.AmtnAdd)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("AMTN_ADD");

                entity.Property(e => e.AmtnBz)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("AMTN_BZ");

                entity.Property(e => e.AmtnDj)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("AMTN_DJ");

                entity.Property(e => e.AmtnJh)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("AMTN_JH");

                entity.Property(e => e.AmtnJs)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("AMTN_JS");

                entity.Property(e => e.AmtnSp1)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("AMTN_SP1");

                entity.Property(e => e.AmtnSp2)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("AMTN_SP2");

                entity.Property(e => e.AmtnSp3)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("AMTN_SP3");

                entity.Property(e => e.AmtnSp4)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("AMTN_SP4");

                entity.Property(e => e.AmtnSp5)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("AMTN_SP5");

                entity.Property(e => e.AmtnSub)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("AMTN_SUB");

                entity.Property(e => e.AmtnTarget)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("AMTN_TARGET");

                entity.Property(e => e.AmtnZb)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("AMTN_ZB");

                entity.Property(e => e.AutoBil)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("AUTO_BIL");

                entity.Property(e => e.BanNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("BAN_NO");

                entity.Property(e => e.BilType)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("BIL_TYPE");

                entity.Property(e => e.BnkName)
                    .HasMaxLength(7)
                    .IsUnicode(false)
                    .HasColumnName("BNK_NAME");

                entity.Property(e => e.CasNo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CAS_NO");

                entity.Property(e => e.CasOk)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CAS_OK");

                entity.Property(e => e.CasVer)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("CAS_VER");

                entity.Property(e => e.Cellphone)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CELLPHONE");

                entity.Property(e => e.ChkMan)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("CHK_MAN");

                entity.Property(e => e.ClsDat)
                    .HasColumnType("datetime")
                    .HasColumnName("CLS_DAT");

                entity.Property(e => e.ClsDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CLS_DATE");

                entity.Property(e => e.ClsDdZb)
                    .HasColumnType("datetime")
                    .HasColumnName("CLS_DD_ZB");

                entity.Property(e => e.ClsId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CLS_ID");

                entity.Property(e => e.ClsIdZb)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CLS_ID_ZB");

                entity.Property(e => e.ClsMth)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CLS_MTH");

                entity.Property(e => e.Cst1)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("CST1");

                entity.Property(e => e.Cst2)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("CST2");

                entity.Property(e => e.Cst3)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("CST3");

                entity.Property(e => e.Cst4)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("CST4");

                entity.Property(e => e.CtFile).HasColumnName("CT_FILE");

                entity.Property(e => e.CtFileName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("CT_FILE_NAME");

                entity.Property(e => e.CtRtnRto)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("CT_RTN_RTO");

                entity.Property(e => e.Cus)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("CUS");

                entity.Property(e => e.CusNo)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("CUS_NO");

                entity.Property(e => e.DataSrc)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("DATA_SRC");

                entity.Property(e => e.DayHh).HasColumnName("DAY_HH");

                entity.Property(e => e.Dep)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("DEP");

                entity.Property(e => e.DfTel)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("DF_TEL");

                entity.Property(e => e.DfUsr)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("DF_USR");

                entity.Property(e => e.EndDat)
                    .HasColumnType("datetime")
                    .HasColumnName("END_DAT");

                entity.Property(e => e.EndRto)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("END_RTO");

                entity.Property(e => e.FileId)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("FILE_ID");

                entity.Property(e => e.FxNo)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("FX_NO");

                entity.Property(e => e.IdCode)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("ID_CODE");

                entity.Property(e => e.IdxNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDX_NO");

                entity.Property(e => e.LockDate)
                    .HasColumnType("datetime")
                    .HasColumnName("LOCK_DATE");

                entity.Property(e => e.LockMan)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("LOCK_MAN");

                entity.Property(e => e.LossRate1)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("LOSS_RATE1");

                entity.Property(e => e.LossRate2)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("LOSS_RATE2");

                entity.Property(e => e.MobId)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("MOB_ID");

                entity.Property(e => e.ModifyDd)
                    .HasColumnType("datetime")
                    .HasColumnName("MODIFY_DD");

                entity.Property(e => e.ModifyMan)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("MODIFY_MAN");

                entity.Property(e => e.MonthDd).HasColumnName("MONTH_DD");

                entity.Property(e => e.Name)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("NAME");

                entity.Property(e => e.OpnDat)
                    .HasColumnType("datetime")
                    .HasColumnName("OPN_DAT");

                entity.Property(e => e.Pay1Amtn)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("PAY1_AMTN");

                entity.Property(e => e.Pay2Amtn)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("PAY2_AMTN");

                entity.Property(e => e.Pay2Days)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("PAY2_DAYS");

                entity.Property(e => e.PerZb).HasColumnName("PER_ZB");

                entity.Property(e => e.Qty1Fined)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY1_FINED");

                entity.Property(e => e.Qty1Rcv)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY1_RCV");

                entity.Property(e => e.RcvType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("RCV_TYPE");

                entity.Property(e => e.RefNo)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("REF_NO");

                entity.Property(e => e.Rem)
                    .HasColumnType("text")
                    .HasColumnName("REM");

                entity.Property(e => e.RemRcv)
                    .HasColumnType("text")
                    .HasColumnName("REM_RCV");

                entity.Property(e => e.ReturnId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("RETURN_ID");

                entity.Property(e => e.RtoHb)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("RTO_HB");

                entity.Property(e => e.RtoXk)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("RTO_XK");

                entity.Property(e => e.RtoZk)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("RTO_ZK");

                entity.Property(e => e.SalNo)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("SAL_NO");

                entity.Property(e => e.SignDd)
                    .HasColumnType("datetime")
                    .HasColumnName("SIGN_DD");

                entity.Property(e => e.Snm)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("SNM");

                entity.Property(e => e.SupCode)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("SUP_CODE");

                entity.Property(e => e.SysDate)
                    .HasColumnType("datetime")
                    .HasColumnName("SYS_DATE");

                entity.Property(e => e.TaxpayerCode)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("TAXPAYER_CODE");

                entity.Property(e => e.TempId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TEMP_ID");

                entity.Property(e => e.Type)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TYPE")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Up)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("UP");

                entity.Property(e => e.UpDd).HasColumnName("UP_DD");

                entity.Property(e => e.Usr)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("USR");

                entity.Property(e => e.Ut1)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("UT1");

                entity.Property(e => e.WeekHh).HasColumnName("WEEK_HH");
            });

            modelBuilder.Entity<Ceshi>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("CESHI");

                entity.Property(e => e.CallSta1)
                    .IsRequired()
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("CALL_STA1");

                entity.Property(e => e.Dt)
                    .HasColumnType("datetime")
                    .HasColumnName("DT");

                entity.Property(e => e.Name)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("NAME");

                entity.Property(e => e.RsDesp)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("RS_DESP");

                entity.Property(e => e.SebNo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("SEB_NO");
            });

            modelBuilder.Entity<CmmMeasureRec>(entity =>
            {
                entity.ToTable("CMM_MEASURE_REC");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BanNo)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("BAN_NO");

                entity.Property(e => e.ChkType)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("CHK_TYPE");

                entity.Property(e => e.Ddate)
                    .HasColumnType("datetime")
                    .HasColumnName("DDATE");

                entity.Property(e => e.Dtime)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("DTIME");

                entity.Property(e => e.PartName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("PART_NAME");

                entity.Property(e => e.PrdNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("PRD_NO");

                entity.Property(e => e.RecDd)
                    .HasColumnType("datetime")
                    .HasColumnName("REC_DD");

                entity.Property(e => e.Revisionnumber)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("REVISIONNUMBER");

                entity.Property(e => e.SebNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SEB_NO");

                entity.Property(e => e.Serialnumber)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SERIALNUMBER");

                entity.Property(e => e.Sysdate)
                    .HasColumnType("datetime")
                    .HasColumnName("SYSDATE");

                entity.Property(e => e.TzNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TZ_NO");

                entity.Property(e => e.ZcNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ZC_NO");
            });

            modelBuilder.Entity<CmmMeasureRecItem>(entity =>
            {
                entity.ToTable("CMM_MEASURE_REC_ITEM");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Axis)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("AXIS");

                entity.Property(e => e.Description)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("DESCRIPTION");

                entity.Property(e => e.Dimension)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("DIMENSION");

                entity.Property(e => e.Isout).HasColumnName("ISOUT");

                entity.Property(e => e.LowLimit)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("LOW_LIMIT");

                entity.Property(e => e.Meas)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("MEAS");

                entity.Property(e => e.Mid).HasColumnName("MID");

                entity.Property(e => e.Standard)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("STANDARD");

                entity.Property(e => e.UpLimit)
                    .HasColumnType("decimal(18, 4)")
                    .HasColumnName("UP_LIMIT");

                entity.HasOne(d => d.MidNavigation)
                    .WithMany(p => p.CmmMeasureRecItem)
                    .HasForeignKey(d => d.Mid)
                    .HasConstraintName("FK_CMM_MEASURE_REC_ITEM_CMM_MEASURE_REC");
            });

            modelBuilder.Entity<CnttSgt>(entity =>
            {
                entity.ToTable("CNTT_SGT");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.AccareaId)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("ACCAREA_ID");

                entity.Property(e => e.AgreeNo)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("AGREE_NO");

                entity.Property(e => e.AmtIpMtr)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("AMT_IP_MTR");

                entity.Property(e => e.AmtMng)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("AMT_MNG");

                entity.Property(e => e.AmtOpPrd)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("AMT_OP_PRD");

                entity.Property(e => e.AppDd)
                    .HasColumnType("datetime")
                    .HasColumnName("APP_DD");

                entity.Property(e => e.ChgFlag)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CHG_FLAG");

                entity.Property(e => e.ChkDd)
                    .HasColumnType("datetime")
                    .HasColumnName("CHK_DD");

                entity.Property(e => e.ChkMan)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CHK_MAN");

                entity.Property(e => e.CnttQty).HasColumnName("CNTT_QTY");

                entity.Property(e => e.CstWork)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("CST_WORK");

                entity.Property(e => e.CtDd)
                    .HasColumnType("datetime")
                    .HasColumnName("CT_DD");

                entity.Property(e => e.CtNo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CT_NO");

                entity.Property(e => e.CurIdIp)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CUR_ID_IP");

                entity.Property(e => e.CurIdOp)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CUR_ID_OP");

                entity.Property(e => e.CusNoFrgn)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("CUS_NO_FRGN");

                entity.Property(e => e.CusNoTrade)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("CUS_NO_TRADE");

                entity.Property(e => e.CusNoWork)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("CUS_NO_WORK");

                entity.Property(e => e.CustId1)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("CUST_ID_1");

                entity.Property(e => e.CustId2)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("CUST_ID_2");

                entity.Property(e => e.CustId3)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("CUST_ID_3");

                entity.Property(e => e.CustId4)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("CUST_ID_4");

                entity.Property(e => e.CutNo)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CUT_NO");

                entity.Property(e => e.FeSc)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("FE_SC");

                entity.Property(e => e.ImFlg)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("IM_FLG");

                entity.Property(e => e.InvType)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("INV_TYPE");

                entity.Property(e => e.IpCnttNo)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("IP_CNTT_NO");

                entity.Property(e => e.IpDd)
                    .HasColumnType("datetime")
                    .HasColumnName("IP_DD");

                entity.Property(e => e.IpMprdNo)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("IP_MPRD_NO");

                entity.Property(e => e.ManualNo)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("MANUAL_NO");

                entity.Property(e => e.Memo)
                    .HasColumnType("text")
                    .HasColumnName("MEMO");

                entity.Property(e => e.Offer)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("OFFER");

                entity.Property(e => e.OpCnttNo)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("OP_CNTT_NO");

                entity.Property(e => e.OpDd)
                    .HasColumnType("datetime")
                    .HasColumnName("OP_DD");

                entity.Property(e => e.OpMprdNo)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("OP_MPRD_NO");

                entity.Property(e => e.PassNo)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("PASS_NO");

                entity.Property(e => e.PreManualNo)
                    .HasMaxLength(18)
                    .IsUnicode(false)
                    .HasColumnName("PRE_MANUAL_NO");

                entity.Property(e => e.PrjNo)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("PRJ_NO");

                entity.Property(e => e.RtoIsal)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("RTO_ISAL");

                entity.Property(e => e.RtoMng)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("RTO_MNG");

                entity.Property(e => e.RtoTax)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("RTO_TAX");

                entity.Property(e => e.SalNo)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("SAL_NO");

                entity.Property(e => e.State)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("STATE");

                entity.Property(e => e.StrArea)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("STR_AREA");

                entity.Property(e => e.SuppmtrCnttNo)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("SUPPMTR_CNTT_NO");

                entity.Property(e => e.TaxId)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("TAX_ID");

                entity.Property(e => e.TaxType)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("TAX_TYPE");

                entity.Property(e => e.TradeId)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("TRADE_ID");

                entity.Property(e => e.TradeType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TRADE_TYPE");

                entity.Property(e => e.TransId)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TRANS_ID");

                entity.Property(e => e.VstType)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("VST_TYPE");

                entity.Property(e => e.WorkType)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("WORK_TYPE");
            });

            modelBuilder.Entity<Combitable>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("COMBITABLE");

                entity.Property(e => e.Align)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ALIGN");

                entity.Property(e => e.Combitype)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("COMBITYPE");

                entity.Property(e => e.Covercar)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("COVERCAR");

                entity.Property(e => e.Fixchar)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("FIXCHAR");

                entity.Property(e => e.Format)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("FORMAT");

                entity.Property(e => e.Itemlen).HasColumnName("ITEMLEN");

                entity.Property(e => e.Itemtype)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ITEMTYPE");

                entity.Property(e => e.Rowindex).HasColumnName("ROWINDEX");
            });

            modelBuilder.Entity<CsiTemp>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("CSiTemp");

                entity.Property(e => e.Barcode)
                    .HasMaxLength(55)
                    .IsUnicode(false)
                    .HasColumnName("BARCODE");

                entity.Property(e => e.Castingbatchno)
                    .HasMaxLength(55)
                    .IsUnicode(false)
                    .HasColumnName("CASTINGBATCHNO");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");

                entity.Property(e => e.Inputdate)
                    .HasMaxLength(55)
                    .IsUnicode(false)
                    .HasColumnName("INPUTDATE");

                entity.Property(e => e.InspectDevice)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Itm)
                    .HasMaxLength(55)
                    .IsUnicode(false)
                    .HasColumnName("ITM");

                entity.Property(e => e.Maxlimit)
                    .HasMaxLength(55)
                    .IsUnicode(false)
                    .HasColumnName("MAXLIMIT");

                entity.Property(e => e.Minlimit)
                    .HasMaxLength(55)
                    .IsUnicode(false)
                    .HasColumnName("MINLIMIT");

                entity.Property(e => e.No)
                    .HasMaxLength(55)
                    .IsUnicode(false)
                    .HasColumnName("NO");

                entity.Property(e => e.SebNo)
                    .HasMaxLength(55)
                    .IsUnicode(false)
                    .HasColumnName("SEB_NO");

                entity.Property(e => e.Stoveno)
                    .HasMaxLength(55)
                    .IsUnicode(false)
                    .HasColumnName("STOVENO");

                entity.Property(e => e.SysDate)
                    .HasMaxLength(55)
                    .IsUnicode(false)
                    .HasColumnName("SYS_DATE");

                entity.Property(e => e.Type)
                    .HasMaxLength(55)
                    .IsUnicode(false)
                    .HasColumnName("TYPE");

                entity.Property(e => e.Value)
                    .HasMaxLength(55)
                    .IsUnicode(false)
                    .HasColumnName("VALUE");
            });

            modelBuilder.Entity<CurId>(entity =>
            {
                entity.ToTable("CUR_ID");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.AccNoChk)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ACC_NO_CHK");

                entity.Property(e => e.AccNoIp)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ACC_NO_IP");

                entity.Property(e => e.AccNoIr)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ACC_NO_IR");

                entity.Property(e => e.CurId1)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CUR_ID");

                entity.Property(e => e.CurName)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CUR_NAME");

                entity.Property(e => e.Dep)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("DEP");

                entity.Property(e => e.DeproNo)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("DEPRO_NO");

                entity.Property(e => e.ExcRto)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("EXC_RTO");

                entity.Property(e => e.ExcRtoE)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("EXC_RTO_E");

                entity.Property(e => e.ExcRtoI)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("EXC_RTO_I");

                entity.Property(e => e.ExcRtoO)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("EXC_RTO_O");

                entity.Property(e => e.IdSgt)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ID_SGT");

                entity.Property(e => e.IjDd)
                    .HasColumnType("datetime")
                    .HasColumnName("IJ_DD");

                entity.Property(e => e.UpDd).HasColumnName("UP_DD");
            });

            modelBuilder.Entity<CusBox>(entity =>
            {
                entity.ToTable("CUS_BOX");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Boxcode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("BOXCODE");

                entity.Property(e => e.Number)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("NUMBER");

                entity.Property(e => e.ProTime)
                    .HasColumnType("datetime")
                    .HasColumnName("PRO_TIME");

                entity.Property(e => e.Productcode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("PRODUCTCODE");

                entity.Property(e => e.Tablename)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TABLENAME");
            });

            modelBuilder.Entity<CusWh>(entity =>
            {
                entity.ToTable("CUS_WH");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Adr)
                    .HasColumnType("text")
                    .HasColumnName("ADR");

                entity.Property(e => e.CellNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CELL_NO");

                entity.Property(e => e.ChkDft)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CHK_DFT");

                entity.Property(e => e.CntMan)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("CNT_MAN");

                entity.Property(e => e.ConMan)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CON_MAN");

                entity.Property(e => e.CounId).HasColumnName("COUN_ID");

                entity.Property(e => e.CusNo)
                    .IsRequired()
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("CUS_NO");

                entity.Property(e => e.EMail)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("E_MAIL");

                entity.Property(e => e.FaxNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("FAX_NO");

                entity.Property(e => e.Name)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("NAME");

                entity.Property(e => e.Rem)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("REM");

                entity.Property(e => e.SendcusName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SENDCUS_NAME");

                entity.Property(e => e.TelNo)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("TEL_NO");

                entity.Property(e => e.UpDd).HasColumnName("UP_DD");

                entity.Property(e => e.Wh)
                    .IsRequired()
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("WH");

                entity.Property(e => e.Zip)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("ZIP");
            });

            modelBuilder.Entity<Cust>(entity =>
            {
                entity.ToTable("CUST");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.AccMan)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("ACC_MAN");

                entity.Property(e => e.AccNoIp)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ACC_NO_IP");

                entity.Property(e => e.AccNoIr)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ACC_NO_IR");

                entity.Property(e => e.AccNoZp)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ACC_NO_ZP");

                entity.Property(e => e.Adr1)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("ADR1");

                entity.Property(e => e.Adr2)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("ADR2");

                entity.Property(e => e.AdrEng)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("ADR_ENG");

                entity.Property(e => e.AmtnFl)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("AMTN_FL");

                entity.Property(e => e.AmtnFled)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("AMTN_FLED");

                entity.Property(e => e.AmtnMaxPay)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("AMTN_MAX_PAY");

                entity.Property(e => e.AmtnMinXf)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("AMTN_MIN_XF");

                entity.Property(e => e.AmtnQk)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("AMTN_QK");

                entity.Property(e => e.BilMinXf)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("BIL_MIN_XF");

                entity.Property(e => e.BizDsc)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("BIZ_DSC");

                entity.Property(e => e.BizDsc1)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("BIZ_DSC1");

                entity.Property(e => e.BosNm)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("BOS_NM");

                entity.Property(e => e.Broker)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("BROKER");

                entity.Property(e => e.Businote)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("BUSINOTE");

                entity.Property(e => e.Busisum)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("BUSISUM");

                entity.Property(e => e.Capsum)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("CAPSUM");

                entity.Property(e => e.ChkBarcode)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CHK_BARCODE");

                entity.Property(e => e.ChkCusIdx)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CHK_CUS_IDX");

                entity.Property(e => e.ChkDate).HasColumnType("datetime");

                entity.Property(e => e.ChkDd).HasColumnName("CHK_DD");

                entity.Property(e => e.ChkDep)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CHK_DEP");

                entity.Property(e => e.ChkDrp1)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CHK_DRP1");

                entity.Property(e => e.ChkDrp2)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CHK_DRP2");

                entity.Property(e => e.ChkDrp3)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CHK_DRP3");

                entity.Property(e => e.ChkFax).HasColumnName("CHK_FAX");

                entity.Property(e => e.ChkIrp2).HasColumnName("CHK_IRP2");

                entity.Property(e => e.ChkMan)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkManName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkMinXf)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CHK_MIN_XF");

                entity.Property(e => e.ChkMob)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.ChkQk)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CHK_QK");

                entity.Property(e => e.ChkSbrto)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CHK_SBRTO");

                entity.Property(e => e.Cls1)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("CLS1");

                entity.Property(e => e.ClsDd).HasColumnName("CLS_DD");

                entity.Property(e => e.ClsMth)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CLS_MTH");

                entity.Property(e => e.CntMan1)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("CNT_MAN1");

                entity.Property(e => e.CntMan2)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("CNT_MAN2");

                entity.Property(e => e.CodeName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("CODE_NAME");

                entity.Property(e => e.CompDd)
                    .HasColumnType("datetime")
                    .HasColumnName("COMP_DD");

                entity.Property(e => e.Compnet)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("COMPNET");

                entity.Property(e => e.CorpId)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CORP_ID");

                entity.Property(e => e.Country)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("COUNTRY");

                entity.Property(e => e.CrdNrNc)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CRD_NR_NC");

                entity.Property(e => e.Cur)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CUR");

                entity.Property(e => e.CusAre)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CUS_ARE");

                entity.Property(e => e.CusNo)
                    .IsRequired()
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("CUS_NO");

                entity.Property(e => e.CyId).HasColumnName("CY_ID");

                entity.Property(e => e.DateFqsk)
                    .HasColumnType("datetime")
                    .HasColumnName("DATE_FQSK");

                entity.Property(e => e.DateflagFqsk)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("DATEFLAG_FQSK");

                entity.Property(e => e.Dep)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("DEP");

                entity.Property(e => e.Dep1)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("DEP1");

                entity.Property(e => e.DisPort)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("DIS_PORT");

                entity.Property(e => e.DrpId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("DRP_ID");

                entity.Property(e => e.EMail)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("E_MAIL");

                entity.Property(e => e.EffectiveDate).HasColumnType("datetime");

                entity.Property(e => e.EndDd)
                    .HasColumnType("datetime")
                    .HasColumnName("END_DD");

                entity.Property(e => e.ExTrdId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("EX_TRD_ID");

                entity.Property(e => e.ExpirationDate).HasColumnType("datetime");

                entity.Property(e => e.Fax)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("FAX");

                entity.Property(e => e.FpName)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("FP_NAME");

                entity.Property(e => e.FpType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("FP_TYPE");

                entity.Property(e => e.HmId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("HM_ID");

                entity.Property(e => e.Id1Tax)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ID1_TAX");

                entity.Property(e => e.IdCode)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("ID_CODE");

                entity.Property(e => e.ImTrdId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("IM_TRD_ID");

                entity.Property(e => e.InvId)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("INV_ID");

                entity.Property(e => e.IsCustomerDeposit).HasDefaultValueSql("((0))");

                entity.Property(e => e.Isdelete).HasColumnName("ISDELETE");

                entity.Property(e => e.LoadingPort)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("LOADING_PORT");

                entity.Property(e => e.Logon)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("LOGON");

                entity.Property(e => e.MCust)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("M_CUST");

                entity.Property(e => e.MainPrd)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("MAIN_PRD");

                entity.Property(e => e.ManuPlace)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("MANU_PLACE");

                entity.Property(e => e.MasCus)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("MAS_CUS");

                entity.Property(e => e.MmEnd).HasColumnName("MM_END");

                entity.Property(e => e.Name)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("NAME");

                entity.Property(e => e.NamePy)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("NAME_PY");

                entity.Property(e => e.NmEng)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("NM_ENG");

                entity.Property(e => e.Notify)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("NOTIFY");

                entity.Property(e => e.NsrCode)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NSR_CODE");

                entity.Property(e => e.ObjId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("OBJ_ID");

                entity.Property(e => e.PayDays).HasColumnName("PAY_DAYS");

                entity.Property(e => e.PayFlag)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("PAY_FLAG");

                entity.Property(e => e.PrtweeksPo).HasColumnName("PRTWEEKS_PO");

                entity.Property(e => e.QsFqsk).HasColumnName("QS_FQSK");

                entity.Property(e => e.RegistCode)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("REGIST_CODE");

                entity.Property(e => e.Rem)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("REM");

                entity.Property(e => e.RtnCtrl)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("RTN_CTRL");

                entity.Property(e => e.RtoDiscnt)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("RTO_DISCNT");

                entity.Property(e => e.RtoFl)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("RTO_FL");

                entity.Property(e => e.RtoFqsk)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("RTO_FQSK");

                entity.Property(e => e.RtoKk)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("RTO_KK");

                entity.Property(e => e.RtoTax)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("RTO_TAX");

                entity.Property(e => e.RtoYl)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("RTO_YL");

                entity.Property(e => e.SalNo)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("SAL_NO");

                entity.Property(e => e.SaleType)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Salms).HasColumnName("SALMS");

                entity.Property(e => e.SendMth)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("SEND_MTH");

                entity.Property(e => e.SendWh)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("SEND_WH");

                entity.Property(e => e.SmallPackageQty)
                    .HasColumnType("decimal(18, 0)")
                    .HasColumnName("SmallPackageQTY");

                entity.Property(e => e.Snm)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("SNM");

                entity.Property(e => e.SoweeksPo).HasColumnName("SOWEEKS_PO");

                entity.Property(e => e.StopOrder)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("STOP_ORDER");

                entity.Property(e => e.StrDd)
                    .HasColumnType("datetime")
                    .HasColumnName("STR_DD");

                entity.Property(e => e.SysDate).HasColumnType("datetime");

                entity.Property(e => e.Tel1)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("TEL1");

                entity.Property(e => e.Tel2)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("TEL2");

                entity.Property(e => e.UniNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("UNI_NO");

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Usr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.WhNo)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("WH_NO");

                entity.Property(e => e.XnNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("XN_NO");

                entity.Property(e => e.YhWh1)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("YH_WH1");

                entity.Property(e => e.YhWh2)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("YH_WH2");

                entity.Property(e => e.Zip)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ZIP");
            });

            modelBuilder.Entity<CycleTime>(entity =>
            {
                entity.ToTable("CYCLE_TIME");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.ChkDate).HasColumnType("datetime");

                entity.Property(e => e.ChkMan)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkManName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkMob)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.CtUnit)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CT_UNIT");

                entity.Property(e => e.CycleTime1)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("CYCLE_TIME");

                entity.Property(e => e.Model)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("MODEL");

                entity.Property(e => e.PrdName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("PRD_NAME");

                entity.Property(e => e.PrdNo)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("PRD_NO");

                entity.Property(e => e.Qty).HasColumnName("QTY");

                entity.Property(e => e.SebName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("SEB_NAME");

                entity.Property(e => e.SebNo)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("SEB_NO");

                entity.Property(e => e.SysDate).HasColumnType("datetime");

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Usr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ZcName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("ZC_NAME");

                entity.Property(e => e.ZcNo)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("ZC_NO");
            });

            modelBuilder.Entity<Database>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("DATABASE");

                entity.Property(e => e.ChkDate).HasColumnType("datetime");

                entity.Property(e => e.ChkMan)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkManName)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkMob)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("ChkMOB");

                entity.Property(e => e.ConnectString)
                    .IsRequired()
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("CONNECT_STRING");

                entity.Property(e => e.CpuThresh).HasColumnName("CPU_THRESH");

                entity.Property(e => e.DatabaseNum).HasColumnName("DATABASE_NUM");

                entity.Property(e => e.DbType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("DB_TYPE")
                    .IsFixedLength(true);

                entity.Property(e => e.EncryptedGsmPassword).HasColumnName("ENCRYPTED_GSM_PASSWORD");

                entity.Property(e => e.GsmPassword)
                    .IsRequired()
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("GSM_PASSWORD");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Name)
                    .IsRequired()
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("NAME");

                entity.Property(e => e.NumAssignedInstances).HasColumnName("NUM_ASSIGNED_INSTANCES");

                entity.Property(e => e.OnsPort).HasColumnName("ONS_PORT");

                entity.Property(e => e.PoolName)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("POOL_NAME");

                entity.Property(e => e.RegionNum).HasColumnName("REGION_NUM");

                entity.Property(e => e.ScanAddress)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("SCAN_ADDRESS");

                entity.Property(e => e.SrlatThresh).HasColumnName("SRLAT_THRESH");

                entity.Property(e => e.Status)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("STATUS")
                    .IsFixedLength(true);

                entity.Property(e => e.SysDate).HasColumnType("datetime");

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UpdUsrName)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Usr)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UsrName)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Version)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("VERSION");
            });

            modelBuilder.Entity<DcCsRecord>(entity =>
            {
                entity.ToTable("dc_CS_Record");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Barcode)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("BARCODE");

                entity.Property(e => e.CastingBatchNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("castingBatchNo");

                entity.Property(e => e.DataTime)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.DevNo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("DEV_NO");

                entity.Property(e => e.Itm).HasColumnName("ITM");

                entity.Property(e => e.LowerLimit)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ParaNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Product)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.RecId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("RecID");

                entity.Property(e => e.StoveNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Sysdate)
                    .HasColumnType("datetime")
                    .HasColumnName("SYSDATE");

                entity.Property(e => e.UpperLimit)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Value)
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Dcrresult>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("DCRRESULT");

                entity.Property(e => e.Maxvalue)
                    .HasMaxLength(100)
                    .HasColumnName("MAXVALUE");

                entity.Property(e => e.Minvalue)
                    .HasMaxLength(100)
                    .HasColumnName("MINVALUE");

                entity.Property(e => e.ParaNo)
                    .HasMaxLength(100)
                    .HasColumnName("PARA_NO");

                entity.Property(e => e.SebNo)
                    .HasMaxLength(100)
                    .HasColumnName("SEB_NO");

                entity.Property(e => e.Type).HasColumnName("TYPE");
            });

            modelBuilder.Entity<DctDevice>(entity =>
            {
                entity.ToTable("DCT_Device");

                entity.Property(e => e.Id)
                    .ValueGeneratedNever()
                    .HasColumnName("ID");

                entity.Property(e => e.CreateTime).HasColumnType("datetime");

                entity.Property(e => e.DeviceNo).HasMaxLength(50);

                entity.Property(e => e.ProcessResult).HasMaxLength(100);
            });

            modelBuilder.Entity<DctDeviceAlarm>(entity =>
            {
                entity.ToTable("DCT_DeviceAlarm");

                entity.Property(e => e.Id)
                    .ValueGeneratedNever()
                    .HasColumnName("ID");

                entity.Property(e => e.AlarmCode).HasMaxLength(50);

                entity.Property(e => e.AlarmReason).HasMaxLength(100);

                entity.Property(e => e.CreateTime).HasColumnType("datetime");

                entity.Property(e => e.DeviceNo).HasMaxLength(50);

                entity.Property(e => e.ProcessResult).HasMaxLength(100);

                entity.Property(e => e.StartTime).HasColumnType("datetime");
            });

            modelBuilder.Entity<Dept>(entity =>
            {
                entity.ToTable("DEPT");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.ChkDate).HasColumnType("datetime");

                entity.Property(e => e.ChkMan)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkManName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkMob)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.CusNo)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("CUS_NO");

                entity.Property(e => e.CusNos)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("CUS_NOS");

                entity.Property(e => e.Daytime)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("DAYTIME");

                entity.Property(e => e.Dep)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("DEP");

                entity.Property(e => e.DepGstd)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("DEP_GSTD");

                entity.Property(e => e.Dname)
                    .HasMaxLength(14)
                    .IsUnicode(false)
                    .HasColumnName("DNAME");

                entity.Property(e => e.EngName)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("ENG_NAME");

                entity.Property(e => e.GroupId).HasColumnName("GROUP_ID");

                entity.Property(e => e.Loc)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("LOC");

                entity.Property(e => e.MakeId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("MAKE_ID");

                entity.Property(e => e.MaterialWarehouse)
                    .HasMaxLength(55)
                    .IsUnicode(false);

                entity.Property(e => e.Name)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("NAME");

                entity.Property(e => e.NamePy)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("NAME_PY");

                entity.Property(e => e.Pid).HasColumnName("PID");

                entity.Property(e => e.StopDd)
                    .HasColumnType("datetime")
                    .HasColumnName("STOP_DD");

                entity.Property(e => e.SysDate).HasColumnType("datetime");

                entity.Property(e => e.TargetWarehouse)
                    .HasMaxLength(55)
                    .IsUnicode(false);

                entity.Property(e => e.Up)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("UP");

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Usr)
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.UsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<DeviceShift>(entity =>
            {
                entity.ToTable("DEVICE_SHIFT");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BeginTime)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("BEGIN_TIME");

                entity.Property(e => e.BeginTimeType).HasColumnName("BEGIN_TIME_TYPE");

                entity.Property(e => e.EndTime)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("END_TIME");

                entity.Property(e => e.EndTimeType).HasColumnName("END_TIME_TYPE");

                entity.Property(e => e.SebName)
                    .IsRequired()
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("SEB_NAME");

                entity.Property(e => e.SebNo)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("SEB_NO");

                entity.Property(e => e.ShiftName)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("SHIFT_NAME");

                entity.Property(e => e.ShiftNo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SHIFT_NO");

                entity.Property(e => e.Sysdate)
                    .HasColumnType("datetime")
                    .HasColumnName("SYSDATE");

                entity.Property(e => e.TimeLen).HasColumnName("TIME_LEN");

                entity.Property(e => e.Usr)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("USR");

                entity.Property(e => e.Usrname)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("USRNAME");
            });

            modelBuilder.Entity<DieChangeInfos>(entity =>
            {
                entity.ToTable("DIE_CHANGE_INFOS");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Blstatus).HasColumnName("BLSTATUS");

                entity.Property(e => e.CoolMode)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("COOL_MODE");

                entity.Property(e => e.EndTime)
                    .HasColumnType("datetime")
                    .HasColumnName("END_TIME");

                entity.Property(e => e.Jgqty).HasColumnName("JGQTY");

                entity.Property(e => e.ModNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("MOD_NO");

                entity.Property(e => e.OeeId).HasColumnName("OEE_ID");

                entity.Property(e => e.PrdNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("PRD_NO");

                entity.Property(e => e.SebNo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SEB_NO");

                entity.Property(e => e.StaTime)
                    .HasColumnType("datetime")
                    .HasColumnName("STA_TIME");

                entity.Property(e => e.Sysdate)
                    .HasColumnType("datetime")
                    .HasColumnName("SYSDATE");

                entity.Property(e => e.Upddate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDDATE");

                entity.Property(e => e.Updusr)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("UPDUSR");

                entity.Property(e => e.Updusrname)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("UPDUSRNAME");

                entity.Property(e => e.Usr)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("USR");

                entity.Property(e => e.Usrname)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("USRNAME");
            });

            modelBuilder.Entity<DncAlarmRec>(entity =>
            {
                entity.ToTable("DNC_ALARM_REC");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.AlarmDd)
                    .HasColumnType("datetime")
                    .HasColumnName("ALARM_DD");

                entity.Property(e => e.AlarmNo)
                    .IsRequired()
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("ALARM_NO");

                entity.Property(e => e.SebNo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SEB_NO");

                entity.Property(e => e.Sysdate)
                    .HasColumnType("datetime")
                    .HasColumnName("SYSDATE");
            });

            modelBuilder.Entity<DncProcessParasRec>(entity =>
            {
                entity.ToTable("DNC_PROCESS_PARAS_REC");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Alarmmessage)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("ALARMMESSAGE");

                entity.Property(e => e.Alarmno)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ALARMNO");

                entity.Property(e => e.Createtime)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATETIME");

                entity.Property(e => e.Cuttingtime).HasColumnName("CUTTINGTIME");

                entity.Property(e => e.Feedoverride)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("FEEDOVERRIDE");

                entity.Property(e => e.Feedspeed)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("FEEDSPEED");

                entity.Property(e => e.Machinemode)
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("MACHINEMODE");

                entity.Property(e => e.Machinestatus)
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("MACHINESTATUS");

                entity.Property(e => e.Powerontime).HasColumnName("POWERONTIME");

                entity.Property(e => e.Processedcount).HasColumnName("PROCESSEDCOUNT");

                entity.Property(e => e.Runningtime).HasColumnName("RUNNINGTIME");

                entity.Property(e => e.SebNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SEB_NO");

                entity.Property(e => e.Spindleload)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SPINDLELOAD");

                entity.Property(e => e.Spindleoverride)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("SPINDLEOVERRIDE");

                entity.Property(e => e.Spindlespeed)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SPINDLESPEED");

                entity.Property(e => e.Toolnum)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("TOOLNUM");

                entity.Property(e => e.Xload)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("XLOAD");

                entity.Property(e => e.Yload)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("YLOAD");

                entity.Property(e => e.Zload)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("ZLOAD");
            });

            modelBuilder.Entity<DncTtlT>(entity =>
            {
                entity.ToTable("DNC_TTL_T");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BanNo)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("BAN_NO");

                entity.Property(e => e.Qty).HasColumnName("QTY");

                entity.Property(e => e.QtyAcc).HasColumnName("QTY_ACC");

                entity.Property(e => e.QtyBan).HasColumnName("QTY_BAN");

                entity.Property(e => e.SebNo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SEB_NO");

                entity.Property(e => e.Sysdate)
                    .HasColumnType("datetime")
                    .HasColumnName("SYSDATE");

                entity.Property(e => e.Upddate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDDATE");
            });

            modelBuilder.Entity<EqpAlertTrace>(entity =>
            {
                entity.ToTable("EQP_Alert_Trace");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.AlertContent)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.Barcode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.DevNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Dev_No");

                entity.Property(e => e.EndTime).HasColumnType("datetime");

                entity.Property(e => e.ExcepNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("EXCEP_NO");

                entity.Property(e => e.ProdNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Prod_No");

                entity.Property(e => e.StartTime).HasColumnType("datetime");

                entity.Property(e => e.StationNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Station_No");

                entity.Property(e => e.SysDate).HasColumnType("datetime");

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Usr)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UsrName)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.WoNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("WO_NO");
            });

            modelBuilder.Entity<EqpDeviceWarning>(entity =>
            {
                entity.ToTable("EQP_DeviceWarning");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.DeviceCode)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.DeviceName)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.WarningCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.WarningInfo)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.WarningType)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<EqpMaintainPlan>(entity =>
            {
                entity.ToTable("EQP_Maintain_Plan");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.ActQtyCycle)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("ActQTY_Cycle");

                entity.Property(e => e.BilType)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.BilTypeName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.BillDate).HasColumnType("datetime");

                entity.Property(e => e.BusiNo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.ChkDate).HasColumnType("datetime");

                entity.Property(e => e.ChkMan)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.ChkManName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.ChkMob)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.ClsDate).HasColumnType("datetime");

                entity.Property(e => e.ClsUsr)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.ClsUsrName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.CycelInfo).HasColumnType("image");

                entity.Property(e => e.Dep)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("DEP");

                entity.Property(e => e.IsAllRelease).HasColumnName("IsAll_Release");

                entity.Property(e => e.IsClose).HasDefaultValueSql("((0))");

                entity.Property(e => e.IsPrint).HasDefaultValueSql("((0))");

                entity.Property(e => e.JhSpec)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("JH_Spec");

                entity.Property(e => e.JhStatus)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("JH_Status");

                entity.Property(e => e.LastReleaseTime)
                    .HasColumnType("datetime")
                    .HasColumnName("Last_Release_Time");

                entity.Property(e => e.Name)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.No)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NO");

                entity.Property(e => e.QtyCycle).HasColumnName("QTY_Cycle");

                entity.Property(e => e.Rem)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.SalNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("SAL_NO");

                entity.Property(e => e.SebCycleUnit)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("SEB_CycleUnit");

                entity.Property(e => e.SebNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("SEB_NO");

                entity.Property(e => e.Standard)
                    .HasColumnType("numeric(18, 0)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.StationNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("Station_NO");

                entity.Property(e => e.SysDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Usr)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.UsrName)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");
            });

            modelBuilder.Entity<EqpMaintainSpec>(entity =>
            {
                entity.ToTable("EQP_MAINTAIN_SPEC");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BilType)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.BilTypeName)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.BillDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.BusiNo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.ChkDate).HasColumnType("datetime");

                entity.Property(e => e.ChkMan)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.ChkManName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.ChkMob)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.ClsDate).HasColumnType("datetime");

                entity.Property(e => e.ClsUsr)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.ClsUsrName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Dep)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("DEP");

                entity.Property(e => e.Guide)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("guide");

                entity.Property(e => e.IsClose).HasDefaultValueSql("((0))");

                entity.Property(e => e.IsPrint).HasDefaultValueSql("((0))");

                entity.Property(e => e.Name)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.No)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NO");

                entity.Property(e => e.PostNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("POST_NO");

                entity.Property(e => e.QtyCycle).HasColumnName("QTY_Cycle");

                entity.Property(e => e.Rem)
                    .HasMaxLength(4000)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.SebCycleUnit)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("SEB_CycleUnit");

                entity.Property(e => e.SebName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("SEB_Name");

                entity.Property(e => e.SebNo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SEB_NO");

                entity.Property(e => e.Standard)
                    .HasColumnType("numeric(18, 0)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.SysDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.UpdDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Usr)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.UsrName)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Version)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<EqpMtOrder>(entity =>
            {
                entity.ToTable("EQP_MT_Order");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BanNo)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("BAN_NO");

                entity.Property(e => e.BilNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("BIL_NO");

                entity.Property(e => e.BilType)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.BilTypeName)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.BillDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.BusiNo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.ChkDate).HasColumnType("datetime");

                entity.Property(e => e.ChkMan)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.ChkManName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.ChkMob)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.ClsDate).HasColumnType("datetime");

                entity.Property(e => e.ClsUsr)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.ClsUsrName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.EndDd)
                    .HasColumnType("datetime")
                    .HasColumnName("END_DD");

                entity.Property(e => e.GdSource)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("GD_Source");

                entity.Property(e => e.IsClose).HasDefaultValueSql("((0))");

                entity.Property(e => e.IsPrint).HasDefaultValueSql("((0))");

                entity.Property(e => e.JhDd)
                    .HasColumnType("datetime")
                    .HasColumnName("JH_DD");

                entity.Property(e => e.Name).HasMaxLength(120);

                entity.Property(e => e.No)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NO");

                entity.Property(e => e.Rem)
                    .HasMaxLength(1000)
                    .IsUnicode(false);

                entity.Property(e => e.SalNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("SAL_NO");

                entity.Property(e => e.SebNo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SEB_NO");

                entity.Property(e => e.SpecNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("Spec_NO");

                entity.Property(e => e.Standard)
                    .HasColumnType("numeric(18, 0)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.StationNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("Station_NO");

                entity.Property(e => e.Status)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.SysDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.UpdDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Usr)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.UsrName)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");
            });

            modelBuilder.Entity<EqpMtRunTime>(entity =>
            {
                entity.ToTable("EQP_MT_RunTime");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.QtyCycle).HasColumnName("QTY_Cycle");

                entity.Property(e => e.SebNo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SEB_NO");

                entity.Property(e => e.SpecNo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Spec_No");

                entity.Property(e => e.SpecType)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("Spec_Type");

                entity.Property(e => e.StaNo)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("Sta_No");

                entity.Property(e => e.SysDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.TimeFromLatestMt)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("TimeFromLatestMT");

                entity.Property(e => e.TotalRunTime).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Usr)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.UsrName)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");
            });

            modelBuilder.Entity<EqpMtorderInfo>(entity =>
            {
                entity.ToTable("EQP_MTOrder_Info");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.ActualAddAmount)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Content)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.ExcStatus)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.Itm).HasColumnName("ITM");

                entity.Property(e => e.Method)
                    .HasMaxLength(600)
                    .IsUnicode(false);

                entity.Property(e => e.Mid).HasColumnName("MID");

                entity.Property(e => e.OilsName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PartNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("Part_NO");

                entity.Property(e => e.Recorder)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Rem).HasMaxLength(2000);

                entity.Property(e => e.Result)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SparePartsNo)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("SpareParts_NO");

                entity.Property(e => e.SpecImage).HasColumnType("image");

                entity.Property(e => e.SpecNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Spec_NO");

                entity.Property(e => e.SrcItemId).HasColumnName("Src_ItemID");

                entity.Property(e => e.Standard)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.StandardAddAmount)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Unit)
                    .HasMaxLength(10)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<EqpMtspecInfo>(entity =>
            {
                entity.ToTable("EQP_MTSPEC_INFO");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.ChkEnumBusino)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("CHK_ENUM_BUSINO");

                entity.Property(e => e.ChkModel)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("CHK_MODEL");

                entity.Property(e => e.Content).HasMaxLength(2000);

                entity.Property(e => e.FaultHandle)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.Itm).HasColumnName("ITM");

                entity.Property(e => e.LowLimit)
                    .HasColumnType("decimal(18, 3)")
                    .HasColumnName("Low_Limit");

                entity.Property(e => e.LowSybol)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Lubrication)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Method).HasMaxLength(2000);

                entity.Property(e => e.Mid).HasColumnName("MID");

                entity.Property(e => e.No)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("NO");

                entity.Property(e => e.OilsName).HasMaxLength(200);

                entity.Property(e => e.Opportunity)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.Optype)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OPType");

                entity.Property(e => e.PartNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Part_NO");

                entity.Property(e => e.Rhpoints).HasColumnName("RHPoints");

                entity.Property(e => e.Rhtype)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("RHType");

                entity.Property(e => e.SpecImage)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Standard)
                    .HasMaxLength(1000)
                    .IsUnicode(false);

                entity.Property(e => e.StandardValue).HasColumnType("decimal(18, 3)");

                entity.Property(e => e.Unit)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.UpLimit)
                    .HasColumnType("decimal(18, 3)")
                    .HasColumnName("Up_Limit");

                entity.Property(e => e.UpSybol)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.HasOne(d => d.MidNavigation)
                    .WithMany(p => p.EqpMtspecInfo)
                    .HasForeignKey(d => d.Mid)
                    .HasConstraintName("FK_EQP_MTSPEC_INFO_EQP_MAINTAIN_SPEC");
            });

            modelBuilder.Entity<EqpPartChangeRecord>(entity =>
            {
                entity.ToTable("EQP_PartChange_Record");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Itm).HasColumnName("ITM");

                entity.Property(e => e.Mid).HasColumnName("MID");

                entity.Property(e => e.PartName)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Part_Name");

                entity.Property(e => e.PartNo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Part_No");

                entity.Property(e => e.Qty)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY");

                entity.Property(e => e.Rem)
                    .HasMaxLength(1000)
                    .IsUnicode(false);

                entity.Property(e => e.SalNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("SAL_NO");

                entity.Property(e => e.Sysdate)
                    .HasColumnType("datetime")
                    .HasColumnName("SYSDATE");
            });

            modelBuilder.Entity<EqpPartInfo>(entity =>
            {
                entity.ToTable("EQP_PartInfo");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.ChkDate).HasColumnType("datetime");

                entity.Property(e => e.ChkMan)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.ChkManName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.ChkMob)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.IsPrint).HasDefaultValueSql("((0))");

                entity.Property(e => e.Name)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.No)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NO");

                entity.Property(e => e.SysDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Usr)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.UsrName)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");
            });

            modelBuilder.Entity<EqpRunRecord>(entity =>
            {
                entity.ToTable("EQP_RUN_RECORD");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.DevName)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("DEV_Name");

                entity.Property(e => e.DevNo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("DEV_NO");

                entity.Property(e => e.EndTime).HasColumnType("datetime");

                entity.Property(e => e.Mid).HasColumnName("MID");

                entity.Property(e => e.Rem)
                    .HasMaxLength(1000)
                    .IsUnicode(false);

                entity.Property(e => e.StartTime).HasColumnType("datetime");

                entity.Property(e => e.StatusNo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("Status_No");

                entity.Property(e => e.StatusProp)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("Status_Prop");

                entity.Property(e => e.SysDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.TimeDiff)
                    .HasColumnType("numeric(18, 3)")
                    .HasColumnName("Time_Diff");

                entity.Property(e => e.TimeUnit)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("Time_Unit");

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Usr)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.UsrEnd)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.UsrName)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.HasOne(d => d.MidNavigation)
                    .WithMany(p => p.EqpRunRecord)
                    .HasForeignKey(d => d.Mid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("FK_EQP_Run_Record_EQP_DevStatus");
            });

            modelBuilder.Entity<EqpRunStatus>(entity =>
            {
                entity.ToTable("EQP_RunStatus");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.DevNo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Dev_No");

                entity.Property(e => e.StartTime).HasColumnType("datetime");

                entity.Property(e => e.StatusNo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Status_No");

                entity.Property(e => e.StatusProp)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("Status_Prop");

                entity.Property(e => e.SysDate).HasColumnType("datetime");

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Usr)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UsrName)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<EqpRunStatusDef>(entity =>
            {
                entity.ToTable("EQP_RunStatus_Def");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Name)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.No)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NO");

                entity.Property(e => e.Rem)
                    .HasMaxLength(2000)
                    .IsUnicode(false);

                entity.Property(e => e.RunStatus)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.SysDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Usr)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.UsrName)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");
            });

            modelBuilder.Entity<EqpSparePart>(entity =>
            {
                entity.ToTable("EQP_Spare_Part");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Mid).HasColumnName("MID");

                entity.Property(e => e.Mitm).HasColumnName("MITM");

                entity.Property(e => e.Name)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("NAME");

                entity.Property(e => e.Qty)
                    .HasColumnType("decimal(18, 4)")
                    .HasColumnName("QTY");

                entity.Property(e => e.Rem)
                    .HasMaxLength(2000)
                    .IsUnicode(false);

                entity.Property(e => e.SpNo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("SP_NO");

                entity.Property(e => e.SpecNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Spec_NO");

                entity.HasOne(d => d.MidNavigation)
                    .WithMany(p => p.EqpSparePart)
                    .HasForeignKey(d => d.Mid)
                    .HasConstraintName("FK_EQP_SPARE_PART_EQP_MAINTAIN_SPEC");
            });

            modelBuilder.Entity<EqptInfoEa2113>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("EQPT_INFO_EA211_3");

                entity.Property(e => e.DatabaseName)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("DATABASE_NAME");

                entity.Property(e => e.EqptNo)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("EQPT_NO");

                entity.Property(e => e.No)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NO");

                entity.Property(e => e.PrmName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("PRM_NAME");

                entity.Property(e => e.PrmNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("PRM_NO");

                entity.Property(e => e.PrmValue)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("PRM_VALUE");

                entity.Property(e => e.SebNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("SEB_NO");

                entity.Property(e => e.SysDate)
                    .HasColumnType("datetime")
                    .HasColumnName("SYS_DATE");

                entity.Property(e => e.TableName)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("TABLE_NAME");

                entity.Property(e => e.ZcNo)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ZC_NO");
            });

            modelBuilder.Entity<EvnNo>(entity =>
            {
                entity.ToTable("EVN_NO");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.ChkDate).HasColumnType("datetime");

                entity.Property(e => e.ChkMan)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ChkManName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ChkMob)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.EvnName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("EVN_NAME");

                entity.Property(e => e.EvnNo1)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("EVN_NO");

                entity.Property(e => e.SysDate).HasColumnType("datetime");

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Usr)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.UsrName)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<EvnParmInfo>(entity =>
            {
                entity.ToTable("EVN_PARM_INFO");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.ChkDate).HasColumnType("datetime");

                entity.Property(e => e.ChkMan)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.ChkManName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.ChkMob)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.EvnName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("EVN_NAME");

                entity.Property(e => e.EvnNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("EVN_NO");

                entity.Property(e => e.IsPrint).HasDefaultValueSql("((0))");

                entity.Property(e => e.Name)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("NAME");

                entity.Property(e => e.NumMax)
                    .HasColumnType("decimal(18, 4)")
                    .HasColumnName("NUM_MAX");

                entity.Property(e => e.NumMin)
                    .HasColumnType("decimal(18, 4)")
                    .HasColumnName("NUM_MIN");

                entity.Property(e => e.SysDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Unit)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("UNIT");

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Usr)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.UsrName)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Workshop)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("WORKSHOP");
            });

            modelBuilder.Entity<EvnParmRecord>(entity =>
            {
                entity.ToTable("EVN_PARM_RECORD");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BgnDate)
                    .HasColumnType("datetime")
                    .HasColumnName("BGN_DATE");

                entity.Property(e => e.BilType)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.BilTypeName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.BusiNo)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkDate).HasColumnType("datetime");

                entity.Property(e => e.ChkMan)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkManName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkMob)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.ClsDate).HasColumnType("datetime");

                entity.Property(e => e.ClsUsr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ClsUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.CycleUnit)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CYCLE_UNIT");

                entity.Property(e => e.EndDate)
                    .HasColumnType("datetime")
                    .HasColumnName("END_DATE");

                entity.Property(e => e.EvnName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("EVN_NAME");

                entity.Property(e => e.EvnNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("EVN_NO");

                entity.Property(e => e.ExecDate)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("EXEC_DATE");

                entity.Property(e => e.ExecHour).HasColumnName("EXEC_HOUR");

                entity.Property(e => e.ExecMinute).HasColumnName("EXEC_MINUTE");

                entity.Property(e => e.JhDate)
                    .HasColumnType("datetime")
                    .HasColumnName("JH_DATE");

                entity.Property(e => e.Name)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("NAME");

                entity.Property(e => e.QtyCycle).HasColumnName("QTY_CYCLE");

                entity.Property(e => e.Rem)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("REM");

                entity.Property(e => e.SalDep)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("SAL_DEP");

                entity.Property(e => e.SalNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("SAL_NO");

                entity.Property(e => e.SysDate).HasColumnType("datetime");

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Usr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Workshop)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("WORKSHOP");
            });

            modelBuilder.Entity<EvnParmRecordValue>(entity =>
            {
                entity.ToTable("EVN_PARM_RECORD_VALUE");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.EvnName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("EVN_NAME");

                entity.Property(e => e.EvnNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("EVN_NO");

                entity.Property(e => e.Mid).HasColumnName("MID");

                entity.Property(e => e.NumMax)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("NUM_MAX");

                entity.Property(e => e.NumMin)
                    .HasColumnType("decimal(18, 4)")
                    .HasColumnName("NUM_MIN");

                entity.Property(e => e.Unit)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("UNIT");
            });

            modelBuilder.Entity<ExImpTemp>(entity =>
            {
                entity.ToTable("EX_IMP_TEMP");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BusiNo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SheetName)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.SysDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.TableName)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TpName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TP_Name");

                entity.Property(e => e.TpType)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TP_Type");

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Usr)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.UsrName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");
            });

            modelBuilder.Entity<FaultCause>(entity =>
            {
                entity.ToTable("FAULT_CAUSE");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Busino)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("BUSINO");

                entity.Property(e => e.Calltypeno)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CALLTYPENO");

                entity.Property(e => e.Name)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("NAME");

                entity.Property(e => e.No)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NO");

                entity.Property(e => e.Sort).HasColumnName("SORT");

                entity.Property(e => e.Sysdate)
                    .HasColumnType("datetime")
                    .HasColumnName("SYSDATE");

                entity.Property(e => e.Upddate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDDATE");

                entity.Property(e => e.Updusr)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("UPDUSR");

                entity.Property(e => e.Updusrname)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("UPDUSRNAME");

                entity.Property(e => e.Usr)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("USR");

                entity.Property(e => e.Usrname)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("USRNAME");

                entity.Property(e => e.ZcNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ZC_NO");
            });

            modelBuilder.Entity<Fieldstable>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("FIELDSTABLE");

                entity.Property(e => e.Datatype)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("DATATYPE");

                entity.Property(e => e.Name)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("NAME");

                entity.Property(e => e.Rown).HasColumnName("ROWN");

                entity.Property(e => e.Vvalue)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("VVALUE");
            });

            modelBuilder.Entity<Fifoincludelist>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("FIFOINCLUDELIST");

                entity.Property(e => e.CheckCusNo).HasColumnName("CheckCusNO");

                entity.Property(e => e.PrdName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("PRD_NAME");

                entity.Property(e => e.PrdNo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("PRD_NO");

                entity.Property(e => e.PrdSpc)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("PRD_SPC");
            });

            modelBuilder.Entity<Filedstable>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("FILEDSTABLE");

                entity.Property(e => e.Datatype)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("DATATYPE");

                entity.Property(e => e.Name)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("NAME");

                entity.Property(e => e.Rown).HasColumnName("ROWN");

                entity.Property(e => e.Value)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("VALUE");
            });

            modelBuilder.Entity<FixtureRlosp>(entity =>
            {
                entity.ToTable("Fixture_RLOSP");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.ChangeDate).HasColumnType("datetime");

                entity.Property(e => e.ChangeUser)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.FixtureCode)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ReplacementCode)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SysDate).HasColumnType("datetime");

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Usr)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UsrName)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<FlowCheck>(entity =>
            {
                entity.ToTable("FLOW_CHECK");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Attachment)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.CheckType)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.ChkDate).HasColumnType("datetime");

                entity.Property(e => e.ChkMan)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkManName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkMob)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ChkMOB");

                entity.Property(e => e.Name)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.No)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NO");

                entity.Property(e => e.Rem)
                    .IsRequired()
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.SebNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SEB_NO");

                entity.Property(e => e.SysDate).HasColumnType("datetime");

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Usr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<FrXt>(entity =>
            {
                entity.ToTable("FR_XT");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Descp)
                    .IsRequired()
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("DESCP");

                entity.Property(e => e.Ipadd)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IPADD");

                entity.Property(e => e.No)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("NO");

                entity.Property(e => e.XtTime)
                    .HasColumnType("datetime")
                    .HasColumnName("XT_TIME");
            });

            modelBuilder.Entity<FurnaceBinding>(entity =>
            {
                entity.ToTable("Furnace_Binding");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.BanNo)
                    .IsRequired()
                    .HasMaxLength(55)
                    .IsUnicode(false)
                    .HasColumnName("BAN_NO");

                entity.Property(e => e.BatNo)
                    .IsRequired()
                    .HasMaxLength(55)
                    .IsUnicode(false)
                    .HasColumnName("Bat_No");

                entity.Property(e => e.GpbatNo)
                    .IsRequired()
                    .HasMaxLength(55)
                    .IsUnicode(false)
                    .HasColumnName("GPBat_NO");

                entity.Property(e => e.InspectionResult)
                    .HasMaxLength(55)
                    .IsUnicode(false);

                entity.Property(e => e.SebNo)
                    .IsRequired()
                    .HasMaxLength(55)
                    .IsUnicode(false)
                    .HasColumnName("Seb_NO");

                entity.Property(e => e.Sysdate)
                    .HasColumnType("datetime")
                    .HasColumnName("SYSDATE");

                entity.Property(e => e.Upddate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDDATE");

                entity.Property(e => e.Updusr)
                    .HasMaxLength(55)
                    .IsUnicode(false)
                    .HasColumnName("UPDUSR");

                entity.Property(e => e.Usr)
                    .IsRequired()
                    .HasMaxLength(55)
                    .IsUnicode(false)
                    .HasColumnName("USR");

                entity.Property(e => e.ZcNo)
                    .IsRequired()
                    .HasMaxLength(55)
                    .IsUnicode(false)
                    .HasColumnName("ZC_NO");
            });

            modelBuilder.Entity<FxKnd>(entity =>
            {
                entity.ToTable("FX_KND");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.AccNoFx)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ACC_NO_FX");

                entity.Property(e => e.AccNoFy)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ACC_NO_FY");

                entity.Property(e => e.AccNoShare)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ACC_NO_SHARE");

                entity.Property(e => e.AmtnRest)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("AMTN_REST");

                entity.Property(e => e.ChkDate).HasColumnType("datetime");

                entity.Property(e => e.ChkMan)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkManName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkMob)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.DdQy)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("DD_QY");

                entity.Property(e => e.KndNo)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("KND_NO");

                entity.Property(e => e.KndUp)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("KND_UP");

                entity.Property(e => e.Name)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("NAME");

                entity.Property(e => e.Rem)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.ShareMth)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SHARE_MTH");

                entity.Property(e => e.StopDd)
                    .HasColumnType("datetime")
                    .HasColumnName("STOP_DD");

                entity.Property(e => e.SysDate).HasColumnType("datetime");

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UseMonth).HasColumnName("USE_MONTH");

                entity.Property(e => e.UseYears).HasColumnName("USE_YEARS");

                entity.Property(e => e.Usr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<GxOtherItems>(entity =>
            {
                entity.ToTable("GX_Other_Items");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Gwname)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("GWNAME");

                entity.Property(e => e.Gwno).HasColumnName("GWNO");

                entity.Property(e => e.Mid).HasColumnName("MID");

                entity.HasOne(d => d.MidNavigation)
                    .WithMany(p => p.GxOtherItems)
                    .HasForeignKey(d => d.Mid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("FK_GX_Other_Items_GX_Other_Main");
            });

            modelBuilder.Entity<GxOtherMain>(entity =>
            {
                entity.ToTable("GX_Other_Main");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BilType)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.BilTypeName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.BillDate).HasColumnType("datetime");

                entity.Property(e => e.BusiNo)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkDate).HasColumnType("datetime");

                entity.Property(e => e.ChkMan)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkManName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkMob)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.ClsDate).HasColumnType("datetime");

                entity.Property(e => e.ClsUsr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ClsUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.GxOtherName)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("GX_Other_Name");

                entity.Property(e => e.No)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Rem)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.SysDate).HasColumnType("datetime");

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Usr)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UsrName)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<HfplRec>(entity =>
            {
                entity.ToTable("HFPL_REC");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BatNo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("BAT_NO");

                entity.Property(e => e.BilType)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.BilTypeName)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.BillDate).HasColumnType("datetime");

                entity.Property(e => e.BusiNo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.ChkDate).HasColumnType("datetime");

                entity.Property(e => e.ChkMan)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.ChkManName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.ChkMob)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.ClsDate).HasColumnType("datetime");

                entity.Property(e => e.ClsUsr)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.ClsUsrName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.FmNo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("FM_NO");

                entity.Property(e => e.FmResult)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("FM_Result");

                entity.Property(e => e.HfDd)
                    .HasColumnType("datetime")
                    .HasColumnName("HF_DD");

                entity.Property(e => e.IsClose).HasDefaultValueSql("((0))");

                entity.Property(e => e.IsPrint).HasDefaultValueSql("((0))");

                entity.Property(e => e.No)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.PrdNo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("PRD_NO");

                entity.Property(e => e.Rem)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.SysDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Usr)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.UsrName)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");
            });

            modelBuilder.Entity<HfplRecs>(entity =>
            {
                entity.ToTable("HFPL_RECS");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BatNo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("BAT_NO");

                entity.Property(e => e.Itm).HasColumnName("ITM");

                entity.Property(e => e.Mid).HasColumnName("MID");

                entity.Property(e => e.PrdNo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("PRD_NO");

                entity.Property(e => e.Qty)
                    .HasColumnType("decimal(18, 4)")
                    .HasColumnName("QTY");
            });

            modelBuilder.Entity<Indx>(entity =>
            {
                entity.ToTable("INDX");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.ChkDate).HasColumnType("datetime");

                entity.Property(e => e.ChkMan)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkManName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkMob)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.ChkPos)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CHK_POS");

                entity.Property(e => e.ChkYh)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CHK_YH");

                entity.Property(e => e.DaySupply)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("DAY_SUPPLY");

                entity.Property(e => e.IdxNo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDX_NO");

                entity.Property(e => e.IdxType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("IDX_TYPE");

                entity.Property(e => e.IdxUp)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDX_UP");

                entity.Property(e => e.LosRto)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("LOS_RTO");

                entity.Property(e => e.Name)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("NAME");

                entity.Property(e => e.Rem)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("REM");

                entity.Property(e => e.StopDd)
                    .HasColumnType("datetime")
                    .HasColumnName("STOP_DD");

                entity.Property(e => e.SysDate).HasColumnType("datetime");

                entity.Property(e => e.UpDd).HasColumnName("UP_DD");

                entity.Property(e => e.UpStd)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("UP_STD");

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Usr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.WebDescription)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("WEB_DESCRIPTION");

                entity.Property(e => e.WebKeywords)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("WEB_KEYWORDS");

                entity.Property(e => e.WebTitle)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("WEB_TITLE");
            });

            modelBuilder.Entity<Indx1>(entity =>
            {
                entity.ToTable("INDX1");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.AccNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ACC_NO");

                entity.Property(e => e.ChkComp)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CHK_COMP");

                entity.Property(e => e.ChkSum)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CHK_SUM");

                entity.Property(e => e.FlRem)
                    .HasColumnType("text")
                    .HasColumnName("FL_REM");

                entity.Property(e => e.Idx1)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDX1");

                entity.Property(e => e.Name)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("NAME");

                entity.Property(e => e.PrdNoVir)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("PRD_NO_VIR");

                entity.Property(e => e.RtoTax)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("RTO_TAX");

                entity.Property(e => e.SpcId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SPC_ID");

                entity.Property(e => e.SpcIdx)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("SPC_IDX");

                entity.Property(e => e.TaxId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TAX_ID");

                entity.Property(e => e.TaxKnd)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TAX_KND");

                entity.Property(e => e.UpDd).HasColumnName("UP_DD");
            });

            modelBuilder.Entity<InspectItemsList>(entity =>
            {
                entity.ToTable("INSPECT_ITEMS_LIST");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Busino)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("BUSINO");

                entity.Property(e => e.Chkman)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("CHKMAN");

                entity.Property(e => e.CreateTime)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATE_TIME");

                entity.Property(e => e.InspectType)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("INSPECT_TYPE");

                entity.Property(e => e.ItemName)
                    .HasMaxLength(400)
                    .HasColumnName("ITEM_NAME");

                entity.Property(e => e.ItemNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ITEM_NO");

                entity.Property(e => e.MaxDesign)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("MAX_DESIGN");

                entity.Property(e => e.MaxTech)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("MAX_TECH");

                entity.Property(e => e.MinDesign)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("MIN_DESIGN");

                entity.Property(e => e.MinTech)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("MIN_TECH");

                entity.Property(e => e.ModNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("MOD_NO");

                entity.Property(e => e.MonthCondition)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("MONTH_CONDITION");

                entity.Property(e => e.PrdNo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("PRD_NO");

                entity.Property(e => e.QcCollectMethod)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("QC_COLLECT_METHOD");

                entity.Property(e => e.QcFe)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("QC_FE");

                entity.Property(e => e.QcInspectHz)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("QC_INSPECT_HZ");

                entity.Property(e => e.QcSpc)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("QC_SPC");

                entity.Property(e => e.SebNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SEB_NO");

                entity.Property(e => e.ShDate)
                    .HasColumnType("datetime")
                    .HasColumnName("SH_DATE");

                entity.Property(e => e.ShRem)
                    .HasMaxLength(2000)
                    .IsUnicode(false)
                    .HasColumnName("SH_REM");

                entity.Property(e => e.StandardTech)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("STANDARD_TECH");

                entity.Property(e => e.Status)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("STATUS");

                entity.Property(e => e.Upddate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDDATE");

                entity.Property(e => e.Usr)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("USR");

                entity.Property(e => e.Usrname)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("USRNAME");

                entity.Property(e => e.Vorder).HasColumnName("VORDER");

                entity.Property(e => e.WsCollectMethod)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("WS_COLLECT_METHOD");

                entity.Property(e => e.WsFe)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("WS_FE");

                entity.Property(e => e.WsInspectHz)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("WS_INSPECT_HZ");

                entity.Property(e => e.WsSpc)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("WS_SPC");

                entity.Property(e => e.ZcNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ZC_NO");
            });

            modelBuilder.Entity<Jhtp2Temp>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("JHTP2_TEMP");

                entity.Property(e => e.Id)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("ID");

                entity.Property(e => e.Idx).HasColumnName("IDX");

                entity.Property(e => e.Pid)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("PID");
            });

            modelBuilder.Entity<JhtpTemp>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("JHTP_TEMP");

                entity.Property(e => e.Id)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("ID");

                entity.Property(e => e.Pid)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("PID");
            });

            modelBuilder.Entity<LblSupqc>(entity =>
            {
                entity.ToTable("LBL_SUPQC");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Attachment)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ATTACHMENT");

                entity.Property(e => e.Busino)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("BUSINO");

                entity.Property(e => e.DelNo)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("DEL_NO");

                entity.Property(e => e.MtBarcode)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("MT_BARCODE");

                entity.Property(e => e.No)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NO");

                entity.Property(e => e.PrdNo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("PRD_NO");

                entity.Property(e => e.SupNo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SUP_NO");

                entity.Property(e => e.Sysdate)
                    .HasColumnType("datetime")
                    .HasColumnName("SYSDATE");
            });

            modelBuilder.Entity<LblSupqcBars>(entity =>
            {
                entity.ToTable("LBL_SUPQC_BARS");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Barcode)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("BARCODE");

                entity.Property(e => e.Mid).HasColumnName("MID");
            });

            modelBuilder.Entity<LeLogisticsTasks>(entity =>
            {
                entity.ToTable("LE_LogisticsTasks");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.CarrierUser)
                    .HasMaxLength(50)
                    .HasColumnName("CarrierUSER");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.CreateUser).HasMaxLength(50);

                entity.Property(e => e.DeadlineDate).HasColumnType("datetime");

                entity.Property(e => e.DistributionDate).HasColumnType("datetime");

                entity.Property(e => e.EndPoint)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.FinishDate).HasColumnType("datetime");

                entity.Property(e => e.FinishUser)
                    .HasMaxLength(50)
                    .HasColumnName("FinishUSER");

                entity.Property(e => e.No)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.Remark)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.ShippingCategory).HasMaxLength(50);

                entity.Property(e => e.SourceNo)
                    .HasMaxLength(50)
                    .HasColumnName("Source_No");

                entity.Property(e => e.StartingPoint)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.Status)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.VehicleRequirements).HasMaxLength(50);

                entity.Property(e => e.WoNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("WO_NO");
            });

            modelBuilder.Entity<LeLogisticsTasksHistory>(entity =>
            {
                entity.ToTable("LE_LogisticsTasksHistory");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.FinishedQuantity)
                    .HasColumnType("decimal(18, 2)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.ItemId).HasColumnName("ItemID");

                entity.Property(e => e.ItemStatus).HasMaxLength(50);

                entity.Property(e => e.No)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.OperateType).HasMaxLength(50);

                entity.Property(e => e.OperateUser)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.PlanQuantity)
                    .HasColumnType("decimal(18, 2)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Quantity)
                    .HasColumnType("decimal(18, 2)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Status)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.SysDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");
            });

            modelBuilder.Entity<LeLogisticsTasksItem>(entity =>
            {
                entity.ToTable("LE_LogisticsTasksItem");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BatchNo)
                    .HasMaxLength(50)
                    .HasColumnName("Batch_No");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.DeadlineDate).HasColumnType("datetime");

                entity.Property(e => e.Location).HasMaxLength(50);

                entity.Property(e => e.Mid).HasColumnName("MID");

                entity.Property(e => e.PlanQuantity).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.ProdNo)
                    .HasMaxLength(50)
                    .HasColumnName("Prod_No");

                entity.Property(e => e.ProdType)
                    .HasMaxLength(50)
                    .HasColumnName("Prod_Type");

                entity.Property(e => e.Quantity)
                    .HasColumnType("decimal(18, 2)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Rmark).HasMaxLength(100);

                entity.Property(e => e.SourceId).HasColumnName("Source_ID");

                entity.Property(e => e.SourceLocation)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SourceLocationName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SourceNo)
                    .HasMaxLength(50)
                    .HasColumnName("Source_No");

                entity.Property(e => e.Status)
                    .HasMaxLength(50)
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Unit).HasMaxLength(50);

                entity.Property(e => e.UpdateDate).HasColumnType("datetime");
            });

            modelBuilder.Entity<LeTestItems>(entity =>
            {
                entity.ToTable("LE_TestItems");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Item).HasColumnName("ITEM");

                entity.Property(e => e.Mid).HasColumnName("MID");

                entity.Property(e => e.ProdNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Prod_No");

                entity.HasOne(d => d.MidNavigation)
                    .WithMany(p => p.LeTestItems)
                    .HasForeignKey(d => d.Mid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("FK_LE_TestItems_LE_Test_Main");
            });

            modelBuilder.Entity<LeTestMain>(entity =>
            {
                entity.ToTable("LE_Test_Main");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BilType)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.BilTypeName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.BusiNo)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkDate).HasColumnType("datetime");

                entity.Property(e => e.ChkMan)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkManName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkMob)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.ClsDate).HasColumnType("datetime");

                entity.Property(e => e.ClsUsr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ClsUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.LeDate)
                    .HasColumnType("datetime")
                    .HasColumnName("LE_Date");

                entity.Property(e => e.LeNo)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("LE_NO");

                entity.Property(e => e.Rem)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.SysDate).HasColumnType("datetime");

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Usr)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UsrName)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<LsbYzjMap>(entity =>
            {
                entity.ToTable("LSB_YZJ_MAP");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BanNo)
                    .HasMaxLength(50)
                    .HasColumnName("BAN_NO");

                entity.Property(e => e.LsbNo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("LSB_NO");

                entity.Property(e => e.Outtime)
                    .HasColumnType("datetime")
                    .HasColumnName("OUTTIME");

                entity.Property(e => e.RlId).HasColumnName("RL_ID");

                entity.Property(e => e.RlTz)
                    .HasMaxLength(50)
                    .HasColumnName("RL_TZ");

                entity.Property(e => e.SebNo)
                    .HasMaxLength(50)
                    .HasColumnName("SEB_NO");

                entity.Property(e => e.Sysdate)
                    .HasColumnType("datetime")
                    .HasColumnName("SYSDATE");

                entity.Property(e => e.Temperature)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("TEMPERATURE");

                entity.Property(e => e.TzNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TZ_NO");

                entity.Property(e => e.Unit)
                    .HasMaxLength(20)
                    .HasColumnName("UNIT");

                entity.Property(e => e.YzjNo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("YZJ_NO");

                entity.Property(e => e.ZcNo)
                    .HasMaxLength(50)
                    .HasColumnName("ZC_NO");

                entity.Property(e => e.ZyCapacity)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("ZY_CAPACITY");
            });

            modelBuilder.Entity<Major>(entity =>
            {
                entity.Property(e => e.MajorId)
                    .ValueGeneratedNever()
                    .HasColumnName("MajorID");

                entity.Property(e => e.Name).HasMaxLength(50);
            });

            modelBuilder.Entity<MdSpInfo>(entity =>
            {
                entity.ToTable("MD_SP_INFO");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.ChkContent)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.Itm).HasColumnName("ITM");

                entity.Property(e => e.Method)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.Opportunity)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Optype)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("OPType");

                entity.Property(e => e.PartNo)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Part_NO");

                entity.Property(e => e.Rem)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.Result)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.SpecNo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Spec_NO");

                entity.Property(e => e.Standard)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.SysDate).HasColumnType("datetime");

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Usr)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UsrName)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<MdmAqlsample>(entity =>
            {
                entity.ToTable("MDM_AQLSample");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.SysDate).HasColumnType("datetime");

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Usr)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UsrName)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<MdmAttribute>(entity =>
            {
                entity.ToTable("MDM_Attribute");

                entity.HasComment("属性配置");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.AttributeCode).HasMaxLength(50);

                entity.Property(e => e.AttributeDescribtion).HasMaxLength(200);

                entity.Property(e => e.AttributeOwnershipHierarchy)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.AttributeType)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.BusinessCode).HasMaxLength(50);

                entity.Property(e => e.ConfigurationField).HasMaxLength(50);

                entity.Property(e => e.CreateTime).HasColumnType("datetime");

                entity.Property(e => e.CreateUser).HasMaxLength(50);

                entity.Property(e => e.DisplayField).HasMaxLength(50);

                entity.Property(e => e.Isdelete).HasColumnName("ISDELETE");

                entity.Property(e => e.UpdateTime).HasColumnType("datetime");

                entity.Property(e => e.UpdateUser).HasMaxLength(50);
            });

            modelBuilder.Entity<MdmAttributeValue>(entity =>
            {
                entity.ToTable("MDM_AttributeValue");

                entity.HasComment("属性");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.AttributeCode)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.AttributeDescribtion).HasMaxLength(200);

                entity.Property(e => e.AttributeType).HasMaxLength(50);

                entity.Property(e => e.AttributeValue)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.BusinessCode).HasMaxLength(50);

                entity.Property(e => e.ConfigurationField).HasMaxLength(50);

                entity.Property(e => e.CreateTime).HasColumnType("datetime");

                entity.Property(e => e.CreateUser).HasMaxLength(50);

                entity.Property(e => e.DisplayField).HasMaxLength(50);

                entity.Property(e => e.Isdelete).HasColumnName("ISDELETE");

                entity.Property(e => e.ObjectCode)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.UpdateTime).HasColumnType("datetime");

                entity.Property(e => e.UpdateUser).HasMaxLength(50);
            });

            modelBuilder.Entity<MdmBom>(entity =>
            {
                entity.ToTable("MDM_BOM");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.EffectiveDate)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ExpirationDate)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.IsDelete)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.IsEffective)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.PartNo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ProductionPurpose)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.UpdateTime)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.VersionNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<MdmBomdetail>(entity =>
            {
                entity.ToTable("MDM_BOMDetail");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.EffectiveDate)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ExpirationDate)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.FeedingMode)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.IsDelete)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.IsEffective)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.MaterialNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.MeasuringUnit)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.MeasuringUnitName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Mid).HasColumnName("MID");

                entity.Property(e => e.ParentBaseQty).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.Quantity).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.Remark)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Seq)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.StorageLocation)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.StorageLocationCode)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UpdateTime)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.VirtualId)
                    .HasMaxLength(32)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<MdmCustomer>(entity =>
            {
                entity.ToTable("MDM_Customer");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Code)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.EffectiveDate)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ExpirationDate)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.IsDelete)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.IsEffective)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Name)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.ShortName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.UpdateTime)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");
            });

            modelBuilder.Entity<MdmCycleTime>(entity =>
            {
                entity.ToTable("MDM_CycleTime");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.CycleTime).HasColumnType("decimal(16, 8)");

                entity.Property(e => e.Mid).HasColumnName("MID");

                entity.Property(e => e.No)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.QtySingle)
                    .HasColumnType("decimal(16, 8)")
                    .HasColumnName("Qty_Single");

                entity.Property(e => e.TypeNo)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Unit)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.HasOne(d => d.MidNavigation)
                    .WithMany(p => p.MdmCycleTime)
                    .HasForeignKey(d => d.Mid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("FK_MDM_CycleTime_TF_ZC");
            });

            modelBuilder.Entity<MdmFixtureFaultBom>(entity =>
            {
                entity.ToTable("MDM_Fixture_FaultBOM");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Dept)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.FixtureCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Name)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ParentCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PartCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SysDate).HasColumnType("datetime");

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Usr)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UsrName)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<MdmFixtureFaultBomdetail>(entity =>
            {
                entity.ToTable("MDM_Fixture_FaultBOMDetail");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.CycleUnit)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Mid).HasColumnName("MID");

                entity.Property(e => e.Qty).HasColumnType("decimal(22, 8)");

                entity.Property(e => e.Rem)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.RepCycle).HasColumnName("Rep_Cycle");

                entity.Property(e => e.SpName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("SP_Name");

                entity.Property(e => e.SpNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SP_NO");

                entity.HasOne(d => d.MidNavigation)
                    .WithMany(p => p.MdmFixtureFaultBomdetail)
                    .HasForeignKey(d => d.Mid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("FK_MDM_Fixture_FaultBOMDetail_MDM_Fixture_FaultBOM");
            });

            modelBuilder.Entity<MdmFixtureFaultCause>(entity =>
            {
                entity.ToTable("MDM_Fixture_FaultCause");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Name)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SerialNumber)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SysDate).HasColumnType("datetime");

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Usr)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UsrName)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<MdmFixtureFaultPhenomenon>(entity =>
            {
                entity.ToTable("MDM_Fixture_FaultPhenomenon");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Name)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SerialNumber)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SysDate).HasColumnType("datetime");

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Usr)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UsrName)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<MdmFormAttribute>(entity =>
            {
                entity.ToTable("MDM_FormAttribute");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Attribution)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.BilType)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.BilTypeName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.BusiNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ChkDate).HasColumnType("datetime");

                entity.Property(e => e.ChkMan)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ChkManName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ChkMob)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.ClsDate).HasColumnType("datetime");

                entity.Property(e => e.ClsUsr)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ClsUsrName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Name)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Rem)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.SysDate).HasColumnType("datetime");

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Usr)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.UsrName)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Value)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<MdmLayout>(entity =>
            {
                entity.ToTable("MDM_Layout");

                entity.HasComment("工厂布局");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.EffectiveDate).HasColumnType("datetime");

                entity.Property(e => e.ExpiryDate).HasColumnType("datetime");

                entity.Property(e => e.Isdelete).HasColumnName("ISDELETE");

                entity.Property(e => e.MaterialWarehouse).HasMaxLength(55);

                entity.Property(e => e.Name)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.No)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnName("NO");

                entity.Property(e => e.SysDate).HasColumnType("datetime");

                entity.Property(e => e.TargetWarehouse).HasMaxLength(55);

                entity.Property(e => e.Type)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnName("TYPE");

                entity.Property(e => e.Up).HasMaxLength(50);

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr).HasMaxLength(50);

                entity.Property(e => e.Usr).HasMaxLength(50);
            });

            modelBuilder.Entity<MdmMaterial>(entity =>
            {
                entity.ToTable("MDM_Material");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Code)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Describe)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.EffectiveDate)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ExpirationDate)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.FigureNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.IsBom)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("IsBOM");

                entity.Property(e => e.IsDelete)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.IsEffective)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.MaxLimitQty).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.MeasuringUnit)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.MinLimitQty).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.Multiple).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.Name)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("NAME");

                entity.Property(e => e.ProductionDepartment)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ProductionDepartmentName)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Spec)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.Type)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.UpdateTime)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.WareHouseCode)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.WareHouseName)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.WeightUnit)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<MdmParameterType>(entity =>
            {
                entity.ToTable("MDM_ParameterType");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Comment)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.ParameterCode)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ParameterName)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SysDate).HasColumnType("datetime");

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Usr)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UsrName)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<MdmPqip>(entity =>
            {
                entity.ToTable("MDM_PQIP");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Aql)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("AQL");

                entity.Property(e => e.Comment).HasMaxLength(200);

                entity.Property(e => e.EffectiveDate).HasColumnType("datetime");

                entity.Property(e => e.Efi).HasColumnName("EFI");

                entity.Property(e => e.ExpiryDate).HasColumnType("datetime");

                entity.Property(e => e.FrequencyType)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InspectionInstructor)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InspectionSchemeId).HasColumnName("InspectionSchemeID");

                entity.Property(e => e.InspectionType)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.MaterialType)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ProcessNo)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.ProductionNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SolutionFeature)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.SolutionName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SolutionNo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SolutionType)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.SuppCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SysDate).HasColumnType("datetime");

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Usr)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UsrName)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Version)
                    .HasMaxLength(20)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<MdmProcessBom>(entity =>
            {
                entity.ToTable("MDM_ProcessBOM");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.AccuracyTrace)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("Accuracy_Trace");

                entity.Property(e => e.EffectDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Effect_Date");

                entity.Property(e => e.ExpiryDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Expiry_Date");

                entity.Property(e => e.MateialType)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("Mateial_Type");

                entity.Property(e => e.Mid).HasColumnName("MID");

                entity.Property(e => e.PickingMode)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("Picking_Mode");

                entity.Property(e => e.ProcVerNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Proc_VerNo");

                entity.Property(e => e.ProcessNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ProdAlternate)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Prod_Alternate");

                entity.Property(e => e.ProdNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Prod_No");

                entity.Property(e => e.Qty).HasColumnType("decimal(12, 4)");

                entity.Property(e => e.QtyBase)
                    .HasColumnType("decimal(12, 4)")
                    .HasColumnName("Qty_Base");

                entity.Property(e => e.WastageQty)
                    .HasColumnType("decimal(12, 4)")
                    .HasColumnName("Wastage_Qty");

                entity.Property(e => e.WastageRate)
                    .HasColumnType("decimal(12, 8)")
                    .HasColumnName("Wastage_Rate");

                entity.HasOne(d => d.MidNavigation)
                    .WithMany(p => p.MdmProcessBom)
                    .HasForeignKey(d => d.Mid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("FK_MDM_ProcessBOM_TF_BOM");
            });

            modelBuilder.Entity<MdmProcessProductMap>(entity =>
            {
                entity.ToTable("MDM_ProcessProduct_Map");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Bomno)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("BOMNO");

                entity.Property(e => e.ProcNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Proc_No");

                entity.Property(e => e.ProdNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Prod_No");

                entity.Property(e => e.SysDate).HasColumnType("datetime");

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Usr)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UsrName)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.VerNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Ver_No");
            });

            modelBuilder.Entity<MdmProdCapacity>(entity =>
            {
                entity.ToTable("MDM_ProdCapacity");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.LineNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Line_No");

                entity.Property(e => e.ProdName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Prod_Name");

                entity.Property(e => e.ProdNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Prod_No");

                entity.Property(e => e.SysDate).HasColumnType("datetime");

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Usr)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UsrName)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<MdmSpotCheckSchedule>(entity =>
            {
                entity.ToTable("MDM_SpotCheckSchedule");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.ItemName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ItemNo)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.MaterialType)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.SysDate).HasColumnType("datetime");

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Usr)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UsrName)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<MdmSupplier>(entity =>
            {
                entity.ToTable("MDM_Supplier");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.EffectiveDate)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ExpirationDate)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.IsDelete)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.IsEffective)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Name)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("NAME");

                entity.Property(e => e.ShortName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SupplierNo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("SupplierNO");

                entity.Property(e => e.UpdateTime)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");
            });

            modelBuilder.Entity<MdmWareHouse>(entity =>
            {
                entity.ToTable("MDM_WareHouse");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Address)
                    .HasMaxLength(55)
                    .IsUnicode(false);

                entity.Property(e => e.EffectiveDate)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ExpirationDate)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.IsDelete)
                    .HasMaxLength(10)
                    .IsFixedLength(true);

                entity.Property(e => e.IsEffective)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.IssueMes)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IssueMES");

                entity.Property(e => e.Name)
                    .IsRequired()
                    .HasMaxLength(55)
                    .IsUnicode(false);

                entity.Property(e => e.No)
                    .IsRequired()
                    .HasMaxLength(55)
                    .IsUnicode(false);

                entity.Property(e => e.UpdateTime)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");
            });

            modelBuilder.Entity<MdmWorkCenter>(entity =>
            {
                entity.ToTable("MDM_WorkCenter");

                entity.HasIndex(e => e.No)
                    .IsUnique().HasName("IX_sys_WorkCenter");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.ExceedQty).HasColumnType("decimal(16, 2)");

                entity.Property(e => e.ExceedRatio).HasColumnType("decimal(16, 2)");

                entity.Property(e => e.FactoryNo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Factory_NO");

                entity.Property(e => e.MinMemberNum).HasDefaultValueSql("((0))");

                entity.Property(e => e.Name)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("NAME");

                entity.Property(e => e.No)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("NO");

                entity.Property(e => e.PullMaterialWh1)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("PullMaterialWH1");

                entity.Property(e => e.PullMaterialWh2)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("PullMaterialWH2");

                entity.Property(e => e.PullMaterialWh3)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("PullMaterialWH3");

                entity.Property(e => e.ScheduleValue).HasColumnType("decimal(16, 2)");

                entity.Property(e => e.SysDate).HasColumnType("datetime");

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Usr)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UsrName)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<MdmWorkCenterMap>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("MDM_WorkCenter_Map");

                entity.Property(e => e.CenterName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Center_Name");

                entity.Property(e => e.CenterNo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Center_No");

                entity.Property(e => e.FactoryNo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Factory_NO");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.MapType)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("Map_Type");

                entity.Property(e => e.SysDate).HasColumnType("datetime");

                entity.Property(e => e.TypeName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Type_Name");

                entity.Property(e => e.TypeNo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Type_No");

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(10)
                    .IsFixedLength(true);

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(10)
                    .IsFixedLength(true);

                entity.Property(e => e.Usr)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UsrName)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<MesDncIntfcT>(entity =>
            {
                entity.ToTable("MES_DNC_INTFC_T");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Interface)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("INTERFACE");

                entity.Property(e => e.Name)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("NAME");

                entity.Property(e => e.Paras)
                    .HasMaxLength(4000)
                    .IsUnicode(false)
                    .HasColumnName("PARAS");

                entity.Property(e => e.Timestamp)
                    .HasColumnType("datetime")
                    .HasColumnName("TIMESTAMP");
            });

            modelBuilder.Entity<MesJobData>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("MES_JOB_DATA");

                entity.Property(e => e.No)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("NO");

                entity.Property(e => e.Value1)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("VALUE1");

                entity.Property(e => e.Value2)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("VALUE2");

                entity.Property(e => e.Value3)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("VALUE3");
            });

            modelBuilder.Entity<MesJobInfos>(entity =>
            {
                entity.ToTable("MES_JOB_INFOS");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Assemblyname)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("ASSEMBLYNAME");

                entity.Property(e => e.Classname)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("CLASSNAME");

                entity.Property(e => e.Cronexpdesp)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("CRONEXPDESP");

                entity.Property(e => e.Cronexpression)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("CRONEXPRESSION");

                entity.Property(e => e.DebugRun).HasColumnName("DEBUG_RUN");

                entity.Property(e => e.Description)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("DESCRIPTION");

                entity.Property(e => e.Displayorder).HasColumnName("DISPLAYORDER");

                entity.Property(e => e.Jobargs)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("JOBARGS");

                entity.Property(e => e.Jobtype)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("JOBTYPE");

                entity.Property(e => e.Lastruntime)
                    .HasColumnType("datetime")
                    .HasColumnName("LASTRUNTIME");

                entity.Property(e => e.Name)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("NAME");

                entity.Property(e => e.Nextruntime)
                    .HasColumnType("datetime")
                    .HasColumnName("NEXTRUNTIME");

                entity.Property(e => e.RunType)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Runcount).HasColumnName("RUNCOUNT");

                entity.Property(e => e.State).HasColumnName("STATE");

                entity.Property(e => e.Sysdate)
                    .HasColumnType("datetime")
                    .HasColumnName("SYSDATE");

                entity.Property(e => e.Upddate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDDATE");

                entity.Property(e => e.Updusr)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("UPDUSR");

                entity.Property(e => e.Updusrname)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("UPDUSRNAME");

                entity.Property(e => e.Usr)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("USR");

                entity.Property(e => e.Usrname)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("USRNAME");
            });

            modelBuilder.Entity<MesJobLog>(entity =>
            {
                entity.ToTable("MES_JOB_LOG");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Createdate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATEDATE");

                entity.Property(e => e.Executionduration)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("EXECUTIONDURATION");

                entity.Property(e => e.Executiontime)
                    .HasColumnType("datetime")
                    .HasColumnName("EXECUTIONTIME");

                entity.Property(e => e.JobId).HasColumnName("JOB_ID");

                entity.Property(e => e.Jobname)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("JOBNAME");

                entity.Property(e => e.Runlog)
                    .HasMaxLength(4000)
                    .IsUnicode(false)
                    .HasColumnName("RUNLOG");
            });

            modelBuilder.Entity<MfBan>(entity =>
            {
                entity.ToTable("MF_BAN");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.ActFx).HasColumnName("ACT_FX");

                entity.Property(e => e.ActId).HasColumnName("ACT_ID");

                entity.Property(e => e.ActMin).HasColumnName("ACT_MIN");

                entity.Property(e => e.ActRange).HasColumnName("ACT_RANGE");

                entity.Property(e => e.BanId).HasColumnName("BAN_ID");

                entity.Property(e => e.BanNo)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("BAN_NO");

                entity.Property(e => e.BatchBegTime)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Batch_BEG_TIME");

                entity.Property(e => e.BatchEndTime)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Batch_END_TIME");

                entity.Property(e => e.BegId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("BEG_ID");

                entity.Property(e => e.BegTime)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("BEG_TIME");

                entity.Property(e => e.BilType)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.BilTypeName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.BusiNo)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkDate).HasColumnType("datetime");

                entity.Property(e => e.ChkMan)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkManName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkMob)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.ClsDate).HasColumnType("datetime");

                entity.Property(e => e.ClsUsr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ClsUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.EndId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("END_ID");

                entity.Property(e => e.EndTime)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("END_TIME");

                entity.Property(e => e.HalfItm).HasColumnName("HALF_ITM");

                entity.Property(e => e.Name)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NAME");

                entity.Property(e => e.Rem)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.StopId).HasColumnName("STOP_ID");

                entity.Property(e => e.SysDate).HasColumnType("datetime");

                entity.Property(e => e.TimeOut).HasColumnName("TIME_OUT");

                entity.Property(e => e.TotalTime).HasColumnName("TOTAL_TIME");

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Usr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<MfBom>(entity =>
            {
                entity.ToTable("MF_BOM");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BilType)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.BilTypeName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.BomNo)
                    .IsRequired()
                    .HasMaxLength(38)
                    .IsUnicode(false)
                    .HasColumnName("BOM_NO");

                entity.Property(e => e.BusiNo)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkDate).HasColumnType("datetime");

                entity.Property(e => e.ChkMan)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkManName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkMob)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.ClsDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CLS_DATE");

                entity.Property(e => e.ClsDate1)
                    .HasColumnType("datetime")
                    .HasColumnName("ClsDate");

                entity.Property(e => e.ClsUsr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ClsUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Cst)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("CST");

                entity.Property(e => e.CstMake)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("CST_MAKE");

                entity.Property(e => e.CstMan)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("CST_MAN");

                entity.Property(e => e.CstMl)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("CST_ML");

                entity.Property(e => e.CstOut)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("CST_OUT");

                entity.Property(e => e.CstPrd)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("CST_PRD");

                entity.Property(e => e.CustNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Cust_No");

                entity.Property(e => e.Dep)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("DEP");

                entity.Property(e => e.DepInc)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("DEP_INC");

                entity.Property(e => e.EndDd)
                    .HasColumnType("datetime")
                    .HasColumnName("END_DD");

                entity.Property(e => e.IdxNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDX_NO");

                entity.Property(e => e.Isdelete).HasColumnName("ISDELETE");

                entity.Property(e => e.ModNo)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("MOD_NO");

                entity.Property(e => e.Name)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("NAME");

                entity.Property(e => e.PfNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("PF_NO");

                entity.Property(e => e.PrdKnd)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("PRD_KND");

                entity.Property(e => e.PrdMark)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("PRD_MARK")
                    .HasDefaultValueSql("(space((0)))");

                entity.Property(e => e.PrdNo)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("PRD_NO");

                entity.Property(e => e.Qty)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY");

                entity.Property(e => e.Qty1)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY1");

                entity.Property(e => e.Rem)
                    .HasMaxLength(3500)
                    .IsUnicode(false);

                entity.Property(e => e.SebNo)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("SEB_NO");

                entity.Property(e => e.Spc)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("SPC");

                entity.Property(e => e.SrcNo)
                    .HasMaxLength(36)
                    .IsUnicode(false)
                    .HasColumnName("Src_No");

                entity.Property(e => e.SrcType)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("Src_Type");

                entity.Property(e => e.SysDate).HasColumnType("datetime");

                entity.Property(e => e.TimeCnt)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("TIME_CNT");

                entity.Property(e => e.Unit)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("UNIT");

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UsedTime)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("USED_TIME");

                entity.Property(e => e.Usr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UsrNo)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("USR_NO");

                entity.Property(e => e.ValidDd)
                    .HasColumnType("datetime")
                    .HasColumnName("VALID_DD");

                entity.Property(e => e.WhNo)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("WH_NO");
            });

            modelBuilder.Entity<MfByjl>(entity =>
            {
                entity.ToTable("MF_BYJL");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BilDate).HasColumnType("datetime");

                entity.Property(e => e.BilType)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.BilTypeName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.BusiNo)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ByDd)
                    .HasColumnType("datetime")
                    .HasColumnName("BY_DD");

                entity.Property(e => e.ByNo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("BY_NO");

                entity.Property(e => e.CancelId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CANCEL_ID");

                entity.Property(e => e.ChkDate).HasColumnType("datetime");

                entity.Property(e => e.ChkMan)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkManName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkMob)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.ClsDate).HasColumnType("datetime");

                entity.Property(e => e.ClsUsr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ClsUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.CpySw)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CPY_SW");

                entity.Property(e => e.Dep)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("DEP");

                entity.Property(e => e.ItmSb).HasColumnName("ITM_SB");

                entity.Property(e => e.JhbyDd)
                    .HasColumnType("datetime")
                    .HasColumnName("JHBY_DD");

                entity.Property(e => e.JhbyDj)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("JHBY_DJ");

                entity.Property(e => e.LockDate)
                    .HasColumnType("datetime")
                    .HasColumnName("LOCK_DATE");

                entity.Property(e => e.LockMan)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("LOCK_MAN");

                entity.Property(e => e.PrtDate)
                    .HasColumnType("datetime")
                    .HasColumnName("PRT_DATE");

                entity.Property(e => e.PrtSw)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("PRT_SW");

                entity.Property(e => e.PrtUsr)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("PRT_USR");

                entity.Property(e => e.Rem)
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.SalNo)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("SAL_NO");

                entity.Property(e => e.SebNo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("SEB_NO");

                entity.Property(e => e.SysDate).HasColumnType("datetime");

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Usr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ZdFlag)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ZD_FLAG");
            });

            modelBuilder.Entity<MfCk>(entity =>
            {
                entity.ToTable("MF_CK");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Adr)
                    .HasColumnType("text")
                    .HasColumnName("ADR");

                entity.Property(e => e.Amt)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("AMT");

                entity.Property(e => e.AmtCls)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("AMT_CLS");

                entity.Property(e => e.AmtPoi).HasColumnName("AMT_POI");

                entity.Property(e => e.AmtnDs)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("AMTN_DS");

                entity.Property(e => e.AmtnNet)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("AMTN_NET");

                entity.Property(e => e.AmtnNetCls)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("AMTN_NET_CLS");

                entity.Property(e => e.BatNo)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("BAT_NO");

                entity.Property(e => e.BilType)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("BIL_TYPE");

                entity.Property(e => e.BilType1)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("BilType");

                entity.Property(e => e.BilTypeName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.BusiNo)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.CancelId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CANCEL_ID");

                entity.Property(e => e.CardNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CARD_NO");

                entity.Property(e => e.CasNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CAS_NO");

                entity.Property(e => e.ChkCache)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CHK_CACHE");

                entity.Property(e => e.ChkDate).HasColumnType("datetime");

                entity.Property(e => e.ChkDays).HasColumnName("CHK_DAYS");

                entity.Property(e => e.ChkFullPay)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CHK_FULL_PAY");

                entity.Property(e => e.ChkMan)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkManName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkMob)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.ChkPicking)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CHK_PICKING");

                entity.Property(e => e.ChkPkche)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CHK_PKCHE");

                entity.Property(e => e.CkDd)
                    .HasColumnType("datetime")
                    .HasColumnName("CK_DD");

                entity.Property(e => e.CkId)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("CK_ID");

                entity.Property(e => e.CkNo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CK_NO");

                entity.Property(e => e.ClsDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CLS_DATE");

                entity.Property(e => e.ClsDate1)
                    .HasColumnType("datetime")
                    .HasColumnName("ClsDate");

                entity.Property(e => e.ClsRem)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("CLS_REM");

                entity.Property(e => e.ClsUsr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ClsUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Clslz)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CLSLZ");

                entity.Property(e => e.Clssa)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CLSSA");

                entity.Property(e => e.CntMan1)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CNT_MAN1");

                entity.Property(e => e.Contract)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("CONTRACT");

                entity.Property(e => e.CpySw)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CPY_SW");

                entity.Property(e => e.CurId)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CUR_ID");

                entity.Property(e => e.CusFh)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("CUS_FH");

                entity.Property(e => e.CusFx)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("CUS_FX");

                entity.Property(e => e.CusNo)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("CUS_NO");

                entity.Property(e => e.CusNoPos)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("CUS_NO_POS");

                entity.Property(e => e.CusOsNo)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("CUS_OS_NO");

                entity.Property(e => e.DateFqsk)
                    .HasColumnType("datetime")
                    .HasColumnName("DATE_FQSK");

                entity.Property(e => e.DateflagFqsk)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("DATEFLAG_FQSK");

                entity.Property(e => e.Dep)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("DEP");

                entity.Property(e => e.DepFh)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("DEP_FH");

                entity.Property(e => e.DisCnt)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("DIS_CNT");

                entity.Property(e => e.ExcRto)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("EXC_RTO");

                entity.Property(e => e.InstTeam)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("INST_TEAM");

                entity.Property(e => e.IntDays).HasColumnName("INT_DAYS");

                entity.Property(e => e.LockDate)
                    .HasColumnType("datetime")
                    .HasColumnName("LOCK_DATE");

                entity.Property(e => e.LockMan)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("LOCK_MAN");

                entity.Property(e => e.LzClsDd)
                    .HasColumnType("datetime")
                    .HasColumnName("LZ_CLS_DD");

                entity.Property(e => e.LzClsId).HasColumnName("LZ_CLS_ID");

                entity.Property(e => e.MobId)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("MOB_ID");

                entity.Property(e => e.OsId)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("OS_ID");

                entity.Property(e => e.OsNo)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("OS_NO");

                entity.Property(e => e.PayDays).HasColumnName("PAY_DAYS");

                entity.Property(e => e.PayDd)
                    .HasColumnType("datetime")
                    .HasColumnName("PAY_DD");

                entity.Property(e => e.PayMth)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("PAY_MTH");

                entity.Property(e => e.PayRem)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("PAY_REM");

                entity.Property(e => e.PrtDate)
                    .HasColumnType("datetime")
                    .HasColumnName("PRT_DATE");

                entity.Property(e => e.PrtSw)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("PRT_SW");

                entity.Property(e => e.PrtUsr)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("PRT_USR");

                entity.Property(e => e.PsNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("PS_NO");

                entity.Property(e => e.QsFqsk).HasColumnName("QS_FQSK");

                entity.Property(e => e.Qty1Cls)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY1_CLS");

                entity.Property(e => e.QtyCls)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_CLS");

                entity.Property(e => e.Rem)
                    .HasMaxLength(3500)
                    .IsUnicode(false);

                entity.Property(e => e.RtoFqsk)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("RTO_FQSK");

                entity.Property(e => e.SaClsId).HasColumnName("SA_CLS_ID");

                entity.Property(e => e.SalNo)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("SAL_NO");

                entity.Property(e => e.ScanDate)
                    .HasColumnType("datetime")
                    .HasColumnName("SCAN_DATE");

                entity.Property(e => e.ScanUsr)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("SCAN_USR");

                entity.Property(e => e.SendMth)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("SEND_MTH");

                entity.Property(e => e.SendWh)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("SEND_WH");

                entity.Property(e => e.SofhId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SOFH_ID");

                entity.Property(e => e.SysDate).HasColumnType("datetime");

                entity.Property(e => e.TaskId).HasColumnName("TASK_ID");

                entity.Property(e => e.Tax)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("TAX");

                entity.Property(e => e.TaxCls)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("TAX_CLS");

                entity.Property(e => e.TaxId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TAX_ID");

                entity.Property(e => e.TradMth)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("TRAD_MTH");

                entity.Property(e => e.TtTypeSet)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("TT_TYPE_SET");

                entity.Property(e => e.TtYmB)
                    .HasColumnType("datetime")
                    .HasColumnName("TT_YM_B");

                entity.Property(e => e.TurnId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TURN_ID");

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Usr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.YdId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("YD_ID");

                entity.Property(e => e.Zgfx)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ZGFX");

                entity.Property(e => e.ZhangId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ZHANG_ID");
            });

            modelBuilder.Entity<MfCs>(entity =>
            {
                entity.ToTable("MF_CS");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BilType)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.BilTypeName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.BusiNo)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.CancelId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CANCEL_ID");

                entity.Property(e => e.ChgDd)
                    .HasColumnType("datetime")
                    .HasColumnName("CHG_DD");

                entity.Property(e => e.ChkDate).HasColumnType("datetime");

                entity.Property(e => e.ChkMan)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkManName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkMob)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.ClsDate).HasColumnType("datetime");

                entity.Property(e => e.ClsUsr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ClsUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.CpySw)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CPY_SW");

                entity.Property(e => e.CsDd)
                    .HasColumnType("datetime")
                    .HasColumnName("CS_DD");

                entity.Property(e => e.CsNo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CS_NO");

                entity.Property(e => e.Cstype)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CSType");

                entity.Property(e => e.Dep)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("DEP");

                entity.Property(e => e.LockDate)
                    .HasColumnType("datetime")
                    .HasColumnName("LOCK_DATE");

                entity.Property(e => e.LockMan)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("LOCK_MAN");

                entity.Property(e => e.PrtDate)
                    .HasColumnType("datetime")
                    .HasColumnName("PRT_DATE");

                entity.Property(e => e.PrtSw)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("PRT_SW");

                entity.Property(e => e.PrtUsr)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("PRT_USR");

                entity.Property(e => e.Reason)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("REASON");

                entity.Property(e => e.Rem)
                    .HasMaxLength(3500)
                    .IsUnicode(false);

                entity.Property(e => e.SalNo)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("SAL_NO");

                entity.Property(e => e.Status)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("STATUS");

                entity.Property(e => e.SysDate).HasColumnType("datetime");

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Usr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<MfDs>(entity =>
            {
                entity.ToTable("MF_DS");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BatNo)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("BAT_NO");

                entity.Property(e => e.BilId)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("BIL_ID");

                entity.Property(e => e.BilNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("BIL_NO");

                entity.Property(e => e.BilType)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("BIL_TYPE");

                entity.Property(e => e.BilType1)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("BilType");

                entity.Property(e => e.BilTypeName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.BusiNo)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.CancelId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CANCEL_ID");

                entity.Property(e => e.ChkDate).HasColumnType("datetime");

                entity.Property(e => e.ChkMan)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("CHK_MAN");

                entity.Property(e => e.ChkMan1)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ChkMan");

                entity.Property(e => e.ChkManName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkMob)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.ClsDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CLS_DATE");

                entity.Property(e => e.ClsDate1)
                    .HasColumnType("datetime")
                    .HasColumnName("ClsDate");

                entity.Property(e => e.ClsId).HasColumnName("CLS_ID");

                entity.Property(e => e.ClsUsr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ClsUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.CpySw)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CPY_SW");

                entity.Property(e => e.CurId)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CUR_ID");

                entity.Property(e => e.CusName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("CUS_NAME");

                entity.Property(e => e.CusNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("CUS_NO");

                entity.Property(e => e.Dep)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("DEP");

                entity.Property(e => e.DsDd)
                    .HasColumnType("datetime")
                    .HasColumnName("DS_DD");

                entity.Property(e => e.DsId)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("DS_ID");

                entity.Property(e => e.DsNo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("DS_NO");

                entity.Property(e => e.ExcRto)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("EXC_RTO");

                entity.Property(e => e.FixCst)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("FIX_CST");

                entity.Property(e => e.IcNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IC_NO");

                entity.Property(e => e.InvBcodeNo)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("INV_BCODE_NO");

                entity.Property(e => e.LockDate)
                    .HasColumnType("datetime")
                    .HasColumnName("LOCK_DATE");

                entity.Property(e => e.LockMan)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("LOCK_MAN");

                entity.Property(e => e.McId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("MC_ID");

                entity.Property(e => e.MobId)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("MOB_ID");

                entity.Property(e => e.ModifyDd)
                    .HasColumnType("datetime")
                    .HasColumnName("MODIFY_DD");

                entity.Property(e => e.ModifyMan)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("MODIFY_MAN");

                entity.Property(e => e.PrtDate)
                    .HasColumnType("datetime")
                    .HasColumnName("PRT_DATE");

                entity.Property(e => e.PrtSw)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("PRT_SW");

                entity.Property(e => e.PrtUsr)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("PRT_USR");

                entity.Property(e => e.Qty)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY");

                entity.Property(e => e.Rem)
                    .HasColumnType("text")
                    .HasColumnName("REM");

                entity.Property(e => e.SalNo)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("SAL_NO");

                entity.Property(e => e.SpcId)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("SPC_ID");

                entity.Property(e => e.SysDate)
                    .HasColumnType("datetime")
                    .HasColumnName("SYS_DATE");

                entity.Property(e => e.SysDate1)
                    .HasColumnType("datetime")
                    .HasColumnName("SysDate");

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Usr)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("USR");

                entity.Property(e => e.Usr1)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<MfGrM>(entity =>
            {
                entity.ToTable("MF_GR_M");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Adr)
                    .HasColumnType("text")
                    .HasColumnName("ADR");

                entity.Property(e => e.Amt)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("AMT");

                entity.Property(e => e.AmtCls)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("AMT_CLS");

                entity.Property(e => e.AmtIrp)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("AMT_IRP");

                entity.Property(e => e.Amtn)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("AMTN");

                entity.Property(e => e.AmtnIrp)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("AMTN_IRP");

                entity.Property(e => e.AmtnNet)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("AMTN_NET");

                entity.Property(e => e.AmtnNetCls)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("AMTN_NET_CLS");

                entity.Property(e => e.ArpNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ARP_NO");

                entity.Property(e => e.BilId)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("BIL_ID");

                entity.Property(e => e.BilNo)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("BIL_NO");

                entity.Property(e => e.BilType)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("BIL_TYPE");

                entity.Property(e => e.BilType1)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("BilType");

                entity.Property(e => e.BilTypeName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.BusiNo)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.CancelId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CANCEL_ID");

                entity.Property(e => e.ChkDate).HasColumnType("datetime");

                entity.Property(e => e.ChkDays).HasColumnName("CHK_DAYS");

                entity.Property(e => e.ChkDd)
                    .HasColumnType("datetime")
                    .HasColumnName("CHK_DD");

                entity.Property(e => e.ChkMan)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("CHK_MAN");

                entity.Property(e => e.ChkMan1)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ChkMan");

                entity.Property(e => e.ChkManName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkMob)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.CloseId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CLOSE_ID");

                entity.Property(e => e.ClsDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CLS_DATE");

                entity.Property(e => e.ClsDate1)
                    .HasColumnType("datetime")
                    .HasColumnName("ClsDate");

                entity.Property(e => e.ClsRem)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("CLS_REM");

                entity.Property(e => e.ClsUsr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ClsUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.CpySw)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("CPY_SW");

                entity.Property(e => e.CurId)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CUR_ID");

                entity.Property(e => e.CusNo)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("CUS_NO");

                entity.Property(e => e.DateFqsk)
                    .HasColumnType("datetime")
                    .HasColumnName("DATE_FQSK");

                entity.Property(e => e.DateflagFqsk)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("DATEFLAG_FQSK");

                entity.Property(e => e.Dep)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("DEP");

                entity.Property(e => e.DepUse)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("DEP_USE");

                entity.Property(e => e.DzDate)
                    .HasColumnType("datetime")
                    .HasColumnName("DZ_DATE");

                entity.Property(e => e.DzUsr)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("DZ_USR");

                entity.Property(e => e.ExcRto)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("EXC_RTO");

                entity.Property(e => e.GrDd)
                    .HasColumnType("datetime")
                    .HasColumnName("GR_DD");

                entity.Property(e => e.GrId)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("GR_ID");

                entity.Property(e => e.GrNo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("GR_NO");

                entity.Property(e => e.IntDays).HasColumnName("INT_DAYS");

                entity.Property(e => e.InvBilId)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("INV_BIL_ID");

                entity.Property(e => e.InvBilNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("INV_BIL_NO");

                entity.Property(e => e.InvNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("INV_NO");

                entity.Property(e => e.KpId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("KP_ID");

                entity.Property(e => e.LockDate)
                    .HasColumnType("datetime")
                    .HasColumnName("LOCK_DATE");

                entity.Property(e => e.LockMan)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("LOCK_MAN");

                entity.Property(e => e.LzClsDd)
                    .HasColumnType("datetime")
                    .HasColumnName("LZ_CLS_DD");

                entity.Property(e => e.LzClsId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("LZ_CLS_ID");

                entity.Property(e => e.MobId)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("MOB_ID");

                entity.Property(e => e.ModifyDd)
                    .HasColumnType("datetime")
                    .HasColumnName("MODIFY_DD");

                entity.Property(e => e.ModifyMan)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("MODIFY_MAN");

                entity.Property(e => e.PayDays).HasColumnName("PAY_DAYS");

                entity.Property(e => e.PayDd)
                    .HasColumnType("datetime")
                    .HasColumnName("PAY_DD");

                entity.Property(e => e.PayMth)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("PAY_MTH");

                entity.Property(e => e.PayRem)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("PAY_REM");

                entity.Property(e => e.PrtDate)
                    .HasColumnType("datetime")
                    .HasColumnName("PRT_DATE");

                entity.Property(e => e.PrtSw)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("PRT_SW");

                entity.Property(e => e.PrtUsr)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("PRT_USR");

                entity.Property(e => e.QcSw)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("QC_SW");

                entity.Property(e => e.QsFqsk).HasColumnName("QS_FQSK");

                entity.Property(e => e.Qty1Cls)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY1_CLS");

                entity.Property(e => e.QtyCls)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_CLS");

                entity.Property(e => e.Rem)
                    .HasColumnType("text")
                    .HasColumnName("REM");

                entity.Property(e => e.RpNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("RP_NO");

                entity.Property(e => e.RtoFqsk)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("RTO_FQSK");

                entity.Property(e => e.SalNo)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("SAL_NO");

                entity.Property(e => e.SalNoBg)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("SAL_NO_BG");

                entity.Property(e => e.SendMth)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("SEND_MTH");

                entity.Property(e => e.SendWh)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("SEND_WH");

                entity.Property(e => e.SysDate)
                    .HasColumnType("datetime")
                    .HasColumnName("SYS_DATE");

                entity.Property(e => e.SysDate1)
                    .HasColumnType("datetime")
                    .HasColumnName("SysDate");

                entity.Property(e => e.Tax)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("TAX");

                entity.Property(e => e.TaxCls)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("TAX_CLS");

                entity.Property(e => e.TaxId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TAX_ID");

                entity.Property(e => e.TaxIrp)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("TAX_IRP");

                entity.Property(e => e.TurnId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TURN_ID");

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Usr)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("USR");

                entity.Property(e => e.Usr1)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.VohId)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("VOH_ID");

                entity.Property(e => e.VohNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("VOH_NO");

                entity.Property(e => e.ZhangId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ZHANG_ID");
            });

            modelBuilder.Entity<MfGrS>(entity =>
            {
                entity.ToTable("MF_GR_S");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Adr)
                    .HasColumnType("text")
                    .HasColumnName("ADR");

                entity.Property(e => e.Amt)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("AMT");

                entity.Property(e => e.AmtCls)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("AMT_CLS");

                entity.Property(e => e.AmtIrp)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("AMT_IRP");

                entity.Property(e => e.Amtn)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("AMTN");

                entity.Property(e => e.AmtnIrp)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("AMTN_IRP");

                entity.Property(e => e.AmtnNet)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("AMTN_NET");

                entity.Property(e => e.AmtnNetCls)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("AMTN_NET_CLS");

                entity.Property(e => e.ArpNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ARP_NO");

                entity.Property(e => e.BilId)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("BIL_ID");

                entity.Property(e => e.BilNo)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("BIL_NO");

                entity.Property(e => e.BilType)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.BilTypeName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.BusiNo)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.CancelId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CANCEL_ID");

                entity.Property(e => e.ChkDate).HasColumnType("datetime");

                entity.Property(e => e.ChkDays).HasColumnName("CHK_DAYS");

                entity.Property(e => e.ChkDd)
                    .HasColumnType("datetime")
                    .HasColumnName("CHK_DD");

                entity.Property(e => e.ChkMan)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkManName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkMob)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.ClsDate).HasColumnType("datetime");

                entity.Property(e => e.ClsRem)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("CLS_REM");

                entity.Property(e => e.ClsUsr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ClsUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.CpySw)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CPY_SW");

                entity.Property(e => e.CurId)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CUR_ID");

                entity.Property(e => e.CusNo)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("CUS_NO");

                entity.Property(e => e.DateFqsk)
                    .HasColumnType("datetime")
                    .HasColumnName("DATE_FQSK");

                entity.Property(e => e.DateflagFqsk)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("DATEFLAG_FQSK");

                entity.Property(e => e.Dep)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("DEP");

                entity.Property(e => e.DepUse)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("DEP_USE");

                entity.Property(e => e.DzDate)
                    .HasColumnType("datetime")
                    .HasColumnName("DZ_DATE");

                entity.Property(e => e.DzUsr)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("DZ_USR");

                entity.Property(e => e.ExcRto)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("EXC_RTO");

                entity.Property(e => e.GrDd)
                    .HasColumnType("datetime")
                    .HasColumnName("GR_DD");

                entity.Property(e => e.GrId)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("GR_ID");

                entity.Property(e => e.GrNo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("GR_NO");

                entity.Property(e => e.IntDays).HasColumnName("INT_DAYS");

                entity.Property(e => e.InvBilId)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("INV_BIL_ID");

                entity.Property(e => e.InvBilNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("INV_BIL_NO");

                entity.Property(e => e.InvNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("INV_NO");

                entity.Property(e => e.KpId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("KP_ID");

                entity.Property(e => e.LockDate)
                    .HasColumnType("datetime")
                    .HasColumnName("LOCK_DATE");

                entity.Property(e => e.LockMan)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("LOCK_MAN");

                entity.Property(e => e.LzClsDd)
                    .HasColumnType("datetime")
                    .HasColumnName("LZ_CLS_DD");

                entity.Property(e => e.LzClsId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("LZ_CLS_ID");

                entity.Property(e => e.PayDays).HasColumnName("PAY_DAYS");

                entity.Property(e => e.PayDd)
                    .HasColumnType("datetime")
                    .HasColumnName("PAY_DD");

                entity.Property(e => e.PayMth)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("PAY_MTH");

                entity.Property(e => e.PayRem)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("PAY_REM");

                entity.Property(e => e.PrtDate)
                    .HasColumnType("datetime")
                    .HasColumnName("PRT_DATE");

                entity.Property(e => e.PrtSw)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("PRT_SW");

                entity.Property(e => e.PrtUsr)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("PRT_USR");

                entity.Property(e => e.QcSw)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("QC_SW");

                entity.Property(e => e.QsFqsk).HasColumnName("QS_FQSK");

                entity.Property(e => e.Qty1Cls)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY1_CLS");

                entity.Property(e => e.QtyCls)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_CLS");

                entity.Property(e => e.Rem)
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.RpNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("RP_NO");

                entity.Property(e => e.RtoFqsk)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("RTO_FQSK");

                entity.Property(e => e.SalNo)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("SAL_NO");

                entity.Property(e => e.SalNoBg)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("SAL_NO_BG");

                entity.Property(e => e.SendMth)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("SEND_MTH");

                entity.Property(e => e.SendWh)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("SEND_WH");

                entity.Property(e => e.SysDate).HasColumnType("datetime");

                entity.Property(e => e.Tax)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("TAX");

                entity.Property(e => e.TaxCls)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("TAX_CLS");

                entity.Property(e => e.TaxId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TAX_ID");

                entity.Property(e => e.TaxIrp)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("TAX_IRP");

                entity.Property(e => e.TurnId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TURN_ID");

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Usr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.VohId)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("VOH_ID");

                entity.Property(e => e.VohNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("VOH_NO");

                entity.Property(e => e.ZhangId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ZHANG_ID");
            });

            modelBuilder.Entity<MfIc>(entity =>
            {
                entity.ToTable("MF_IC");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Adr)
                    .HasColumnType("text")
                    .HasColumnName("ADR");

                entity.Property(e => e.AmtCls)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("AMT_CLS");

                entity.Property(e => e.AmtCls2)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("AMT_CLS2");

                entity.Property(e => e.Amtn)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("AMTN");

                entity.Property(e => e.AmtnNetCls)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("AMTN_NET_CLS");

                entity.Property(e => e.AmtnNetCls2)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("AMTN_NET_CLS2");

                entity.Property(e => e.BatNo)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("BAT_NO");

                entity.Property(e => e.BilId)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("BIL_ID");

                entity.Property(e => e.BilNo)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("BIL_NO");

                entity.Property(e => e.BilType)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("BIL_TYPE");

                entity.Property(e => e.BilType1)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("BilType");

                entity.Property(e => e.BilTypeName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.BusiNo)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Bybox)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("BYBOX");

                entity.Property(e => e.CancelId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CANCEL_ID");

                entity.Property(e => e.CasNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CAS_NO");

                entity.Property(e => e.CfmSw)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CFM_SW");

                entity.Property(e => e.ChkDate).HasColumnType("datetime");

                entity.Property(e => e.ChkMan)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("CHK_MAN");

                entity.Property(e => e.ChkMan1)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ChkMan");

                entity.Property(e => e.ChkManName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkMob)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.ClsDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CLS_DATE");

                entity.Property(e => e.ClsDate1)
                    .HasColumnType("datetime")
                    .HasColumnName("ClsDate");

                entity.Property(e => e.ClsId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CLS_ID");

                entity.Property(e => e.ClsUsr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ClsUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.CpySw)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CPY_SW");

                entity.Property(e => e.CurIdIfrs)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CUR_ID_IFRS");

                entity.Property(e => e.CusNo1)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("CUS_NO1");

                entity.Property(e => e.CusNo2)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("CUS_NO2");

                entity.Property(e => e.CusOsNo)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("CUS_OS_NO");

                entity.Property(e => e.Dep)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("DEP");

                entity.Property(e => e.DepDs)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("DEP_DS");

                entity.Property(e => e.EpId)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("EP_ID");

                entity.Property(e => e.EpNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("EP_NO");

                entity.Property(e => e.ExcRtoIfrs)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("EXC_RTO_IFRS");

                entity.Property(e => e.FixCst)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("FIX_CST");

                entity.Property(e => e.FixCst1)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("FIX_CST1");

                entity.Property(e => e.FjNum).HasColumnName("FJ_NUM");

                entity.Property(e => e.GlNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("GL_NO");

                entity.Property(e => e.IcDd)
                    .HasColumnType("datetime")
                    .HasColumnName("IC_DD");

                entity.Property(e => e.IcId)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("IC_ID");

                entity.Property(e => e.IcNo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IC_NO");

                entity.Property(e => e.IdNo)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("ID_NO");

                entity.Property(e => e.Issvs)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ISSVS");

                entity.Property(e => e.IzBackId)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("IZ_BACK_ID");

                entity.Property(e => e.IzClsId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("IZ_CLS_ID");

                entity.Property(e => e.LockDate)
                    .HasColumnType("datetime")
                    .HasColumnName("LOCK_DATE");

                entity.Property(e => e.LockMan)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("LOCK_MAN");

                entity.Property(e => e.LzClsId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("LZ_CLS_ID");

                entity.Property(e => e.LzClsId2)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("LZ_CLS_ID2");

                entity.Property(e => e.MobId)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("MOB_ID");

                entity.Property(e => e.ModifyDd)
                    .HasColumnType("datetime")
                    .HasColumnName("MODIFY_DD");

                entity.Property(e => e.ModifyMan)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("MODIFY_MAN");

                entity.Property(e => e.OsId)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("OS_ID");

                entity.Property(e => e.OsNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("OS_NO");

                entity.Property(e => e.Outdep)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("OUTDEP");

                entity.Property(e => e.PosId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("POS_ID");

                entity.Property(e => e.PrtDate)
                    .HasColumnType("datetime")
                    .HasColumnName("PRT_DATE");

                entity.Property(e => e.PrtSw)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("PRT_SW");

                entity.Property(e => e.PrtUsr)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("PRT_USR");

                entity.Property(e => e.Qty1Cls)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY1_CLS");

                entity.Property(e => e.Qty1Cls2)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY1_CLS2");

                entity.Property(e => e.QtyCls)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_CLS");

                entity.Property(e => e.QtyCls2)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_CLS2");

                entity.Property(e => e.Rem)
                    .HasColumnType("text")
                    .HasColumnName("REM");

                entity.Property(e => e.ReqDd)
                    .HasColumnType("datetime")
                    .HasColumnName("REQ_DD");

                entity.Property(e => e.SalDs)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("SAL_DS");

                entity.Property(e => e.SalNo)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("SAL_NO");

                entity.Property(e => e.SalNo2)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("SAL_NO2");

                entity.Property(e => e.ScanDate)
                    .HasColumnType("datetime")
                    .HasColumnName("SCAN_DATE");

                entity.Property(e => e.ScanId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SCAN_ID");

                entity.Property(e => e.ScanUsr)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("SCAN_USR");

                entity.Property(e => e.SendMth)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("SEND_MTH");

                entity.Property(e => e.SendWh)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("SEND_WH");

                entity.Property(e => e.SysDate)
                    .HasColumnType("datetime")
                    .HasColumnName("SYS_DATE");

                entity.Property(e => e.SysDate1)
                    .HasColumnType("datetime")
                    .HasColumnName("SysDate");

                entity.Property(e => e.TaskId).HasColumnName("TASK_ID");

                entity.Property(e => e.TaxCls)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("TAX_CLS");

                entity.Property(e => e.TaxCls2)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("TAX_CLS2");

                entity.Property(e => e.TotBox)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("TOT_BOX");

                entity.Property(e => e.TotQty)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("TOT_QTY");

                entity.Property(e => e.TurnId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TURN_ID");

                entity.Property(e => e.TurnId2)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TURN_ID2");

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Usr)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("USR");

                entity.Property(e => e.Usr1)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.VohId)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("VOH_ID");

                entity.Property(e => e.VohNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("VOH_NO");

                entity.Property(e => e.ZyNo)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("ZY_NO");
            });

            modelBuilder.Entity<MfIj>(entity =>
            {
                entity.ToTable("MF_IJ");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.AccNoC)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ACC_NO_C");

                entity.Property(e => e.AccNoD)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ACC_NO_D");

                entity.Property(e => e.AccNoSs)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ACC_NO_SS");

                entity.Property(e => e.AccNoSy)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ACC_NO_SY");

                entity.Property(e => e.BatNo)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("BAT_NO");

                entity.Property(e => e.BilId)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("BIL_ID");

                entity.Property(e => e.BilNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("BIL_NO");

                entity.Property(e => e.BilType)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("BIL_TYPE");

                entity.Property(e => e.BilType1)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("BilType");

                entity.Property(e => e.BilTypeName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.BusiNo)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.CancelId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CANCEL_ID");

                entity.Property(e => e.CasNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CAS_NO");

                entity.Property(e => e.ChkDate).HasColumnType("datetime");

                entity.Property(e => e.ChkMan)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("CHK_MAN");

                entity.Property(e => e.ChkMan1)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ChkMan");

                entity.Property(e => e.ChkManName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkMob)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.ClsDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CLS_DATE");

                entity.Property(e => e.ClsDate1)
                    .HasColumnType("datetime")
                    .HasColumnName("ClsDate");

                entity.Property(e => e.ClsUsr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ClsUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.CnttNo)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("CNTT_NO");

                entity.Property(e => e.CpySw)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CPY_SW");

                entity.Property(e => e.CurIdIfrs)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CUR_ID_IFRS");

                entity.Property(e => e.CusNo)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("CUS_NO");

                entity.Property(e => e.Dep)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("DEP");

                entity.Property(e => e.ExcRtoIfrs)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("EXC_RTO_IFRS");

                entity.Property(e => e.FixCst)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("FIX_CST");

                entity.Property(e => e.FjNum).HasColumnName("FJ_NUM");

                entity.Property(e => e.FromcbCalc)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("FROMCB_CALC");

                entity.Property(e => e.GroupKey)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("GROUP_KEY");

                entity.Property(e => e.IjDd)
                    .HasColumnType("datetime")
                    .HasColumnName("IJ_DD");

                entity.Property(e => e.IjId)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("IJ_ID");

                entity.Property(e => e.IjNo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IJ_NO");

                entity.Property(e => e.IjReason)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("IJ_REASON");

                entity.Property(e => e.Ijid1)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("IJID");

                entity.Property(e => e.Issvs)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ISSVS");

                entity.Property(e => e.JhSoNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("JH_SO_NO");

                entity.Property(e => e.LockDate)
                    .HasColumnType("datetime")
                    .HasColumnName("LOCK_DATE");

                entity.Property(e => e.LockMan)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("LOCK_MAN");

                entity.Property(e => e.ManNo)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("MAN_NO");

                entity.Property(e => e.MobId)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("MOB_ID");

                entity.Property(e => e.ModifyDd)
                    .HasColumnType("datetime")
                    .HasColumnName("MODIFY_DD");

                entity.Property(e => e.ModifyMan)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("MODIFY_MAN");

                entity.Property(e => e.PosId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("POS_ID");

                entity.Property(e => e.PosNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("POS_NO");

                entity.Property(e => e.PrtDate)
                    .HasColumnType("datetime")
                    .HasColumnName("PRT_DATE");

                entity.Property(e => e.PrtSw)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("PRT_SW");

                entity.Property(e => e.PrtUsr)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("PRT_USR");

                entity.Property(e => e.RefNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("REF_NO");

                entity.Property(e => e.Rem)
                    .HasColumnType("text")
                    .HasColumnName("REM");

                entity.Property(e => e.ScanDate)
                    .HasColumnType("datetime")
                    .HasColumnName("SCAN_DATE");

                entity.Property(e => e.ScanDate1)
                    .HasColumnType("datetime")
                    .HasColumnName("SCAN_DATE1");

                entity.Property(e => e.ScanId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SCAN_ID");

                entity.Property(e => e.ScanUsr)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("SCAN_USR");

                entity.Property(e => e.ScanUsr1)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("SCAN_USR1");

                entity.Property(e => e.SqId)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("SQ_ID");

                entity.Property(e => e.SqItm).HasColumnName("SQ_ITM");

                entity.Property(e => e.SqNo)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("SQ_NO");

                entity.Property(e => e.SysDate)
                    .HasColumnType("datetime")
                    .HasColumnName("SYS_DATE");

                entity.Property(e => e.SysDate1)
                    .HasColumnType("datetime")
                    .HasColumnName("SysDate");

                entity.Property(e => e.TaskId).HasColumnName("TASK_ID");

                entity.Property(e => e.Tzzg)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TZZG");

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Usr)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("USR");

                entity.Property(e => e.Usr1)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.VohId)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("VOH_ID");

                entity.Property(e => e.VohNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("VOH_NO");

                entity.Property(e => e.YgNo)
                    .HasMaxLength(65)
                    .IsUnicode(false)
                    .HasColumnName("YG_NO");
            });

            modelBuilder.Entity<MfJh>(entity =>
            {
                entity.ToTable("MF_JH");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BatNo)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("BAT_NO");

                entity.Property(e => e.BilType)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.BilTypeName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.BusiNo)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkDate).HasColumnType("datetime");

                entity.Property(e => e.ChkMan)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkManName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkMob)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.ClsDate).HasColumnType("datetime");

                entity.Property(e => e.ClsIdSc).HasColumnName("CLS_ID_SC");

                entity.Property(e => e.ClsUsr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ClsUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.CusNo)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("CUS_NO");

                entity.Property(e => e.Dep)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("DEP");

                entity.Property(e => e.EstDd)
                    .HasColumnType("datetime")
                    .HasColumnName("EST_DD");

                entity.Property(e => e.JhDd)
                    .HasColumnType("datetime")
                    .HasColumnName("JH_DD");

                entity.Property(e => e.JhId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("JH_ID");

                entity.Property(e => e.JhNo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("JH_NO");

                entity.Property(e => e.Rem).HasColumnType("text");

                entity.Property(e => e.SalNo)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("SAL_NO");

                entity.Property(e => e.SoNo)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("SO_NO");

                entity.Property(e => e.SysDate).HasColumnType("datetime");

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Usr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<MfJj>(entity =>
            {
                entity.ToTable("MF_JJ");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.AmtnFix)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("AMTN_FIX");

                entity.Property(e => e.AmtnKc)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("AMTN_KC");

                entity.Property(e => e.BilType)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.BilTypeName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.BomNo)
                    .IsRequired()
                    .HasMaxLength(38)
                    .IsUnicode(false)
                    .HasColumnName("BOM_NO");

                entity.Property(e => e.BusiNo)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.CancelId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CANCEL_ID");

                entity.Property(e => e.ChkDate).HasColumnType("datetime");

                entity.Property(e => e.ChkMan)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkManName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkMob)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.ClsDate).HasColumnType("datetime");

                entity.Property(e => e.ClsUsr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ClsUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Gxs)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("GXS");

                entity.Property(e => e.JjId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("JJ_ID");

                entity.Property(e => e.PrdMark)
                    .IsRequired()
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("PRD_MARK")
                    .HasDefaultValueSql("(space((0)))");

                entity.Property(e => e.PrdNo)
                    .IsRequired()
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("PRD_NO");

                entity.Property(e => e.Rem)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.RtoKk)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("RTO_KK");

                entity.Property(e => e.SebNo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("SEB_NO");

                entity.Property(e => e.SysDate).HasColumnType("datetime");

                entity.Property(e => e.SzNo1)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("SZ_NO1");

                entity.Property(e => e.SzNo2)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("SZ_NO2");

                entity.Property(e => e.Unit)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("UNIT");

                entity.Property(e => e.UpDd)
                    .HasColumnType("datetime")
                    .HasColumnName("UP_DD");

                entity.Property(e => e.UpFix)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("UP_FIX");

                entity.Property(e => e.UpKc)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("UP_KC");

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Usr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Ygxz)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("YGXZ");

                entity.Property(e => e.ZcNo)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ZC_NO");
            });

            modelBuilder.Entity<MfJxzbJs>(entity =>
            {
                entity.ToTable("MF_JXZB_JS");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BanNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("BAN_NO");

                entity.Property(e => e.Billdate)
                    .HasColumnType("datetime")
                    .HasColumnName("BILLDATE");

                entity.Property(e => e.Biltype)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("BILTYPE");

                entity.Property(e => e.Biltypename)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("BILTYPENAME");

                entity.Property(e => e.Busino)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("BUSINO");

                entity.Property(e => e.Chkdate)
                    .HasColumnType("datetime")
                    .HasColumnName("CHKDATE");

                entity.Property(e => e.Chkman)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CHKMAN");

                entity.Property(e => e.Chkmanname)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CHKMANNAME");

                entity.Property(e => e.Chkmob)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("CHKMOB");

                entity.Property(e => e.Clsdate)
                    .HasColumnType("datetime")
                    .HasColumnName("CLSDATE");

                entity.Property(e => e.Clsusr)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CLSUSR");

                entity.Property(e => e.Clsusrname)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CLSUSRNAME");

                entity.Property(e => e.Dep)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("DEP");

                entity.Property(e => e.EndDd)
                    .HasColumnType("datetime")
                    .HasColumnName("END_DD");

                entity.Property(e => e.Isclose).HasColumnName("ISCLOSE");

                entity.Property(e => e.Isprint).HasColumnName("ISPRINT");

                entity.Property(e => e.JxjsName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("JXJS_NAME");

                entity.Property(e => e.No)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("NO");

                entity.Property(e => e.Qty)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY");

                entity.Property(e => e.QtyLost)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_LOST");

                entity.Property(e => e.QtyTc)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_TC");

                entity.Property(e => e.Rem)
                    .HasMaxLength(4000)
                    .IsUnicode(false)
                    .HasColumnName("REM");

                entity.Property(e => e.SebNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("SEB_NO");

                entity.Property(e => e.StaDd)
                    .HasColumnType("datetime")
                    .HasColumnName("STA_DD");

                entity.Property(e => e.Sysdate)
                    .HasColumnType("datetime")
                    .HasColumnName("SYSDATE");

                entity.Property(e => e.TzNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("TZ_NO");

                entity.Property(e => e.Upddate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDDATE");

                entity.Property(e => e.Updusr)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("UPDUSR");

                entity.Property(e => e.Updusrname)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("UPDUSRNAME");

                entity.Property(e => e.UseTime)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("USE_TIME");

                entity.Property(e => e.Usr)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("USR");

                entity.Property(e => e.Usrname)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("USRNAME");

                entity.Property(e => e.Version)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("VERSION");

                entity.Property(e => e.YgNo)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("YG_NO");
            });

            modelBuilder.Entity<MfJxzbSz>(entity =>
            {
                entity.ToTable("MF_JXZB_SZ");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Authdep)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("AUTHDEP");

                entity.Property(e => e.Billdate)
                    .HasColumnType("datetime")
                    .HasColumnName("BILLDATE");

                entity.Property(e => e.Biltype)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("BILTYPE");

                entity.Property(e => e.Biltypename)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("BILTYPENAME");

                entity.Property(e => e.Busino)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("BUSINO");

                entity.Property(e => e.Chkdate)
                    .HasColumnType("datetime")
                    .HasColumnName("CHKDATE");

                entity.Property(e => e.Chkman)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CHKMAN");

                entity.Property(e => e.Chkmanname)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CHKMANNAME");

                entity.Property(e => e.Chkmob)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("CHKMOB");

                entity.Property(e => e.Clsdate)
                    .HasColumnType("datetime")
                    .HasColumnName("CLSDATE");

                entity.Property(e => e.Clsusr)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CLSUSR");

                entity.Property(e => e.Clsusrname)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CLSUSRNAME");

                entity.Property(e => e.Dep)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("DEP");

                entity.Property(e => e.EndDd)
                    .HasColumnType("datetime")
                    .HasColumnName("END_DD");

                entity.Property(e => e.Isclose).HasColumnName("ISCLOSE");

                entity.Property(e => e.Isprint).HasColumnName("ISPRINT");

                entity.Property(e => e.JxszName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("JXSZ_NAME");

                entity.Property(e => e.No)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("NO");

                entity.Property(e => e.Releasetime)
                    .HasColumnType("datetime")
                    .HasColumnName("RELEASETIME");

                entity.Property(e => e.Rem)
                    .HasMaxLength(4000)
                    .IsUnicode(false)
                    .HasColumnName("REM");

                entity.Property(e => e.StaDd)
                    .HasColumnType("datetime")
                    .HasColumnName("STA_DD");

                entity.Property(e => e.State)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("STATE");

                entity.Property(e => e.Sysdate)
                    .HasColumnType("datetime")
                    .HasColumnName("SYSDATE");

                entity.Property(e => e.Upddate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDDATE");

                entity.Property(e => e.Updusr)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("UPDUSR");

                entity.Property(e => e.Updusrname)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("UPDUSRNAME");

                entity.Property(e => e.Usr)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("USR");

                entity.Property(e => e.Usrname)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("USRNAME");

                entity.Property(e => e.Version)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("VERSION");
            });

            modelBuilder.Entity<MfMdInout>(entity =>
            {
                entity.ToTable("MF_MD_INOUT");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BusiNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.EntDate).HasColumnType("datetime");

                entity.Property(e => e.EntryNo)
                    .IsRequired()
                    .HasMaxLength(80);

                entity.Property(e => e.SysDate).HasColumnType("datetime");

                entity.Property(e => e.Usr)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.UsrName)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<MfMjaa>(entity =>
            {
                entity.ToTable("MF_MJAA");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.AaDd)
                    .HasColumnType("datetime")
                    .HasColumnName("AA_DD");

                entity.Property(e => e.AaNo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("AA_NO");

                entity.Property(e => e.BilId)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("BIL_ID");

                entity.Property(e => e.BilNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("BIL_NO");

                entity.Property(e => e.BilType)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("BIL_TYPE");

                entity.Property(e => e.BilType1)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("BilType");

                entity.Property(e => e.BilTypeName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.BusiNo)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkDate).HasColumnType("datetime");

                entity.Property(e => e.ChkMan)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("CHK_MAN");

                entity.Property(e => e.ChkMan1)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ChkMan");

                entity.Property(e => e.ChkManName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkMob)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.CkId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CK_ID");

                entity.Property(e => e.ClsDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CLS_DATE");

                entity.Property(e => e.ClsDate1)
                    .HasColumnType("datetime")
                    .HasColumnName("ClsDate");

                entity.Property(e => e.ClsUsr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ClsUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.CpySw)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CPY_SW");

                entity.Property(e => e.Dep)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("DEP");

                entity.Property(e => e.LockDate)
                    .HasColumnType("datetime")
                    .HasColumnName("LOCK_DATE");

                entity.Property(e => e.LockMan)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("LOCK_MAN");

                entity.Property(e => e.MobId)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("MOB_ID");

                entity.Property(e => e.ModifyDd)
                    .HasColumnType("datetime")
                    .HasColumnName("MODIFY_DD");

                entity.Property(e => e.ModifyMan)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("MODIFY_MAN");

                entity.Property(e => e.PrtDate)
                    .HasColumnType("datetime")
                    .HasColumnName("PRT_DATE");

                entity.Property(e => e.PrtSw)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("PRT_SW");

                entity.Property(e => e.PrtUsr)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("PRT_USR");

                entity.Property(e => e.Rem)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("REM");

                entity.Property(e => e.SalNo)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("SAL_NO");

                entity.Property(e => e.SysDate)
                    .HasColumnType("datetime")
                    .HasColumnName("SYS_DATE");

                entity.Property(e => e.SysDate1)
                    .HasColumnType("datetime")
                    .HasColumnName("SysDate");

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Usr)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("USR");

                entity.Property(e => e.Usr1)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.VohId)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("VOH_ID");

                entity.Property(e => e.VohNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("VOH_NO");

                entity.Property(e => e.WxId)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("WX_ID");

                entity.Property(e => e.WxNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("WX_NO");
            });

            modelBuilder.Entity<MfMkYg>(entity =>
            {
                entity.ToTable("MF_MK_YG");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BilDd)
                    .HasColumnType("datetime")
                    .HasColumnName("BIL_DD");

                entity.Property(e => e.BilId)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("BIL_ID");

                entity.Property(e => e.BilNo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("BIL_NO");

                entity.Property(e => e.BilType)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.BilTypeName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.BusiNo)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkDate).HasColumnType("datetime");

                entity.Property(e => e.ChkMan)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkManName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkMob)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.ClsDate).HasColumnType("datetime");

                entity.Property(e => e.ClsUsr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ClsUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Rem)
                    .HasMaxLength(3500)
                    .IsUnicode(false);

                entity.Property(e => e.SysDate).HasColumnType("datetime");

                entity.Property(e => e.ToZcdsp).HasColumnName("To_ZCDSP");

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Usr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<MfMl>(entity =>
            {
                entity.ToTable("MF_ML");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BanNo)
                    .HasMaxLength(50)
                    .HasColumnName("BAN_NO");

                entity.Property(e => e.BatNo)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("BAT_NO");

                entity.Property(e => e.BilNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("BIL_NO");

                entity.Property(e => e.BilType)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.BilTypeName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.BusiNo)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkDate).HasColumnType("datetime");

                entity.Property(e => e.ChkMan)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkManName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkMob)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.ClsDate).HasColumnType("datetime");

                entity.Property(e => e.ClsUsr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ClsUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Dep)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("DEP");

                entity.Property(e => e.JhNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("JH_NO");

                entity.Property(e => e.MlDd)
                    .HasColumnType("datetime")
                    .HasColumnName("ML_DD");

                entity.Property(e => e.MlId1)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ML_ID");

                entity.Property(e => e.MlNo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ML_NO");

                entity.Property(e => e.Mlid)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("MLID");

                entity.Property(e => e.MoNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("MO_NO");

                entity.Property(e => e.MrpNo)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("MRP_NO");

                entity.Property(e => e.PrdMark)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("PRD_MARK")
                    .HasDefaultValueSql("(space((0)))");

                entity.Property(e => e.PrdName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("PRD_NAME");

                entity.Property(e => e.QlNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("QL_NO");

                entity.Property(e => e.Qty)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY");

                entity.Property(e => e.Rem)
                    .HasMaxLength(3500)
                    .IsUnicode(false);

                entity.Property(e => e.RlId).HasColumnName("RL_ID");

                entity.Property(e => e.RlTz)
                    .HasMaxLength(100)
                    .HasColumnName("RL_TZ");

                entity.Property(e => e.SebNo)
                    .HasMaxLength(50)
                    .HasColumnName("SEB_NO");

                entity.Property(e => e.SysDate).HasColumnType("datetime");

                entity.Property(e => e.TzNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("TZ_NO");

                entity.Property(e => e.Unit)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("UNIT");

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Usr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UsrNo)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("USR_NO");

                entity.Property(e => e.WhMtl)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("WH_MTL");

                entity.Property(e => e.ZcNo)
                    .HasMaxLength(50)
                    .HasColumnName("ZC_NO");
            });

            modelBuilder.Entity<MfMm0>(entity =>
            {
                entity.ToTable("MF_MM0");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BilId)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("BIL_ID");

                entity.Property(e => e.BilNo)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("BIL_NO");

                entity.Property(e => e.BilType)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("BIL_TYPE");

                entity.Property(e => e.BilType1)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("BilType");

                entity.Property(e => e.BilTypeName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.BusiNo)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.CancelId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CANCEL_ID");

                entity.Property(e => e.ChkDate).HasColumnType("datetime");

                entity.Property(e => e.ChkMan)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("CHK_MAN");

                entity.Property(e => e.ChkMan1)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ChkMan");

                entity.Property(e => e.ChkManName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkMob)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.ClsDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CLS_DATE");

                entity.Property(e => e.ClsDate1)
                    .HasColumnType("datetime")
                    .HasColumnName("ClsDate");

                entity.Property(e => e.ClsUsr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ClsUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.CpySw)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CPY_SW");

                entity.Property(e => e.CurIdIfrs)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CUR_ID_IFRS");

                entity.Property(e => e.Dep)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("DEP");

                entity.Property(e => e.ExcRtoIfrs)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("EXC_RTO_IFRS");

                entity.Property(e => e.FinId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("FIN_ID");

                entity.Property(e => e.FjNum).HasColumnName("FJ_NUM");

                entity.Property(e => e.LockDate)
                    .HasColumnType("datetime")
                    .HasColumnName("LOCK_DATE");

                entity.Property(e => e.LockMan)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("LOCK_MAN");

                entity.Property(e => e.MmDd)
                    .HasColumnType("datetime")
                    .HasColumnName("MM_DD");

                entity.Property(e => e.MmId)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("MM_ID");

                entity.Property(e => e.MmNo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("MM_NO");

                entity.Property(e => e.MoNo)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("MO_NO");

                entity.Property(e => e.MobId)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("MOB_ID");

                entity.Property(e => e.ModifyDd)
                    .HasColumnType("datetime")
                    .HasColumnName("MODIFY_DD");

                entity.Property(e => e.ModifyMan)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("MODIFY_MAN");

                entity.Property(e => e.OsId)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("OS_ID");

                entity.Property(e => e.OsNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("OS_NO");

                entity.Property(e => e.PrtDate)
                    .HasColumnType("datetime")
                    .HasColumnName("PRT_DATE");

                entity.Property(e => e.PrtSw)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("PRT_SW");

                entity.Property(e => e.PrtUsr)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("PRT_USR");

                entity.Property(e => e.Rem)
                    .HasColumnType("text")
                    .HasColumnName("REM");

                entity.Property(e => e.ScanDate)
                    .HasColumnType("datetime")
                    .HasColumnName("SCAN_DATE");

                entity.Property(e => e.ScanId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SCAN_ID");

                entity.Property(e => e.ScanUsr)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("SCAN_USR");

                entity.Property(e => e.SysDate)
                    .HasColumnType("datetime")
                    .HasColumnName("SYS_DATE");

                entity.Property(e => e.SysDate1)
                    .HasColumnType("datetime")
                    .HasColumnName("SysDate");

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Usr)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("USR");

                entity.Property(e => e.Usr1)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UsrNo)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("USR_NO");

                entity.Property(e => e.VohId)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("VOH_ID");

                entity.Property(e => e.VohNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("VOH_NO");
            });

            modelBuilder.Entity<MfMmjh>(entity =>
            {
                entity.ToTable("MF_MMJH");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BatNo)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("BAT_NO");

                entity.Property(e => e.BilType)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.BilTypeName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.BusiNo)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkDate).HasColumnType("datetime");

                entity.Property(e => e.ChkMan)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkManName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkMob)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.ClsDate).HasColumnType("datetime");

                entity.Property(e => e.ClsUsr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ClsUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.CusNo)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("CUS_NO");

                entity.Property(e => e.Dep)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("DEP");

                entity.Property(e => e.EstDd)
                    .HasColumnType("datetime")
                    .HasColumnName("EST_DD");

                entity.Property(e => e.JhDd)
                    .HasColumnType("datetime")
                    .HasColumnName("JH_DD");

                entity.Property(e => e.JhId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("JH_ID");

                entity.Property(e => e.JhNo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("JH_NO");

                entity.Property(e => e.Rem).HasColumnType("text");

                entity.Property(e => e.SalNo)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("SAL_NO");

                entity.Property(e => e.SoNo)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("SO_NO");

                entity.Property(e => e.SysDate).HasColumnType("datetime");

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Usr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<MfMo>(entity =>
            {
                entity.ToTable("MF_MO");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BatNo)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("BAT_NO");

                entity.Property(e => e.BilDspId)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("BIL_DSP_ID");

                entity.Property(e => e.BilId)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("BIL_ID");

                entity.Property(e => e.BilNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("BIL_NO");

                entity.Property(e => e.BilType)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.BilTypeName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.BusiNo)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.CfId).HasColumnName("CF_ID");

                entity.Property(e => e.ChkDate).HasColumnType("datetime");

                entity.Property(e => e.ChkMan)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkManName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkMob)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.ClsDate).HasColumnType("datetime");

                entity.Property(e => e.ClsUsr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ClsUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.CnttNo)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("CNTT_NO");

                entity.Property(e => e.Control).HasColumnName("CONTROL");

                entity.Property(e => e.Cst)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("CST");

                entity.Property(e => e.CstMake)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("CST_MAKE");

                entity.Property(e => e.CstMan)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("CST_MAN");

                entity.Property(e => e.CstOut)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("CST_OUT");

                entity.Property(e => e.CstPrd)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("CST_PRD");

                entity.Property(e => e.CusNo)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("CUS_NO");

                entity.Property(e => e.CusOsNo)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("CUS_OS_NO");

                entity.Property(e => e.Dep)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("DEP");

                entity.Property(e => e.EndDd)
                    .HasColumnType("datetime")
                    .HasColumnName("END_DD");

                entity.Property(e => e.EstItm).HasColumnName("EST_ITM");

                entity.Property(e => e.FinDd)
                    .HasColumnType("datetime")
                    .HasColumnName("FIN_DD");

                entity.Property(e => e.GrpNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("GRP_NO");

                entity.Property(e => e.IdNo)
                    .HasMaxLength(38)
                    .IsUnicode(false)
                    .HasColumnName("ID_NO");

                entity.Property(e => e.MdNo)
                    .HasMaxLength(400)
                    .IsUnicode(false)
                    .HasColumnName("MD_NO");

                entity.Property(e => e.MlOk)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ML_OK");

                entity.Property(e => e.MmCurml).HasColumnName("MM_CURML");

                entity.Property(e => e.MoDd)
                    .HasColumnType("datetime")
                    .HasColumnName("MO_DD");

                entity.Property(e => e.MoNo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("MO_NO");

                entity.Property(e => e.MoNoAdd)
                    .HasMaxLength(38)
                    .IsUnicode(false)
                    .HasColumnName("MO_NO_ADD");

                entity.Property(e => e.MoState)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("MO_STATE");

                entity.Property(e => e.MrpNo)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("MRP_NO");

                entity.Property(e => e.MtItm)
                    .HasColumnName("MT_ITM")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.NeedDd)
                    .HasColumnType("datetime")
                    .HasColumnName("NEED_DD");

                entity.Property(e => e.OpnDd)
                    .HasColumnType("datetime")
                    .HasColumnName("OPN_DD");

                entity.Property(e => e.PrdMark)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("PRD_MARK")
                    .HasDefaultValueSql("(space((0)))");

                entity.Property(e => e.PrdNoMt)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("PRD_NO_MT");

                entity.Property(e => e.Q2Id).HasColumnName("Q2_ID");

                entity.Property(e => e.Q3Id).HasColumnName("Q3_ID");

                entity.Property(e => e.QlId).HasColumnName("QL_ID");

                entity.Property(e => e.Qty)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY");

                entity.Property(e => e.Qty1)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY1");

                entity.Property(e => e.QtyChk)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_CHK");

                entity.Property(e => e.QtyFin)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_FIN")
                    .HasDefaultValueSql("('0')");

                entity.Property(e => e.QtyLost)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_LOST");

                entity.Property(e => e.QtyMl)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_ML")
                    .HasDefaultValueSql("('0')");

                entity.Property(e => e.QtyQl)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_QL");

                entity.Property(e => e.QtyQlUnsh)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_QL_UNSH");

                entity.Property(e => e.QtyQs)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_QS");

                entity.Property(e => e.QtyQsUnsh)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_QS_UNSH");

                entity.Property(e => e.QtyRk)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_RK");

                entity.Property(e => e.QtyRkUnsh)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_RK_UNSH");

                entity.Property(e => e.Rem)
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.SebNo)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("SEB_NO");

                entity.Property(e => e.SoNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("SO_NO");

                entity.Property(e => e.StaDd)
                    .HasColumnType("datetime")
                    .HasColumnName("STA_DD");

                entity.Property(e => e.SupPrdMark)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("SUP_PRD_MARK");

                entity.Property(e => e.SupPrdNo)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("SUP_PRD_NO");

                entity.Property(e => e.SysDate).HasColumnType("datetime");

                entity.Property(e => e.TimeCnt)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("TIME_CNT");

                entity.Property(e => e.Unit)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("UNIT");

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UsedTime)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("USED_TIME");

                entity.Property(e => e.Usr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Wh)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("WH");

                entity.Property(e => e.ZtDd)
                    .HasColumnType("datetime")
                    .HasColumnName("ZT_DD");

                entity.Property(e => e.ZtId).HasColumnName("ZT_ID");
            });

            modelBuilder.Entity<MfMp>(entity =>
            {
                entity.ToTable("MF_MP");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BatNo)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("BAT_NO");

                entity.Property(e => e.BilType)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.BilTypeName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.BusiNo)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.BuyMan)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("BUY_MAN");

                entity.Property(e => e.CancelId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CANCEL_ID");

                entity.Property(e => e.ChkDate).HasColumnType("datetime");

                entity.Property(e => e.ChkMan)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkManName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkMob)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.ClsDate).HasColumnType("datetime");

                entity.Property(e => e.ClsUsr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ClsUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Clude).HasColumnName("CLUDE");

                entity.Property(e => e.CpySw)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CPY_SW");

                entity.Property(e => e.Dep)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("DEP");

                entity.Property(e => e.EstDd)
                    .HasColumnType("datetime")
                    .HasColumnName("EST_DD");

                entity.Property(e => e.LockDate)
                    .HasColumnType("datetime")
                    .HasColumnName("LOCK_DATE");

                entity.Property(e => e.LockMan)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("LOCK_MAN");

                entity.Property(e => e.MpDd)
                    .HasColumnType("datetime")
                    .HasColumnName("MP_DD");

                entity.Property(e => e.MpNo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("MP_NO");

                entity.Property(e => e.OverRto)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("OVER_RTO");

                entity.Property(e => e.PoOk)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("PO_OK");

                entity.Property(e => e.PrcMan)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("PRC_MAN");

                entity.Property(e => e.PrdOut)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("PRD_OUT");

                entity.Property(e => e.PrtDate)
                    .HasColumnType("datetime")
                    .HasColumnName("PRT_DATE");

                entity.Property(e => e.PrtMo)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("PRT_MO");

                entity.Property(e => e.PrtMoDate)
                    .HasColumnType("datetime")
                    .HasColumnName("PRT_MO_DATE");

                entity.Property(e => e.PrtPo)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("PRT_PO");

                entity.Property(e => e.PrtPoDate)
                    .HasColumnType("datetime")
                    .HasColumnName("PRT_PO_DATE");

                entity.Property(e => e.PrtSw)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("PRT_SW");

                entity.Property(e => e.PrtUsr)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("PRT_USR");

                entity.Property(e => e.Rem)
                    .HasMaxLength(3500)
                    .IsUnicode(false);

                entity.Property(e => e.SalNo)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("SAL_NO");

                entity.Property(e => e.SoNo)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("SO_NO");

                entity.Property(e => e.SysDate).HasColumnType("datetime");

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Usr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UsrMan)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("USR_MAN");

                entity.Property(e => e.UsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Wh)
                    .HasMaxLength(2000)
                    .IsUnicode(false)
                    .HasColumnName("WH");
            });

            modelBuilder.Entity<MfMsc>(entity =>
            {
                entity.ToTable("MF_MSC");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.AjNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("AJ_NO");

                entity.Property(e => e.BilId)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("BIL_ID");

                entity.Property(e => e.BilNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("BIL_NO");

                entity.Property(e => e.BilType)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("BIL_TYPE");

                entity.Property(e => e.BilType1)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("BilType");

                entity.Property(e => e.BilTypeName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.BusiNo)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.CancelId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CANCEL_ID");

                entity.Property(e => e.ChkDate).HasColumnType("datetime");

                entity.Property(e => e.ChkMan)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("CHK_MAN");

                entity.Property(e => e.ChkMan1)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ChkMan");

                entity.Property(e => e.ChkManName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkMob)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.CloseId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CLOSE_ID");

                entity.Property(e => e.ClsDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CLS_DATE");

                entity.Property(e => e.ClsDate1)
                    .HasColumnType("datetime")
                    .HasColumnName("ClsDate");

                entity.Property(e => e.ClsUsr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ClsUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.CpySw)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CPY_SW");

                entity.Property(e => e.Dep)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("DEP");

                entity.Property(e => e.LockDate)
                    .HasColumnType("datetime")
                    .HasColumnName("LOCK_DATE");

                entity.Property(e => e.LockMan)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("LOCK_MAN");

                entity.Property(e => e.MobId)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("MOB_ID");

                entity.Property(e => e.ModifyDd)
                    .HasColumnType("datetime")
                    .HasColumnName("MODIFY_DD");

                entity.Property(e => e.ModifyMan)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("MODIFY_MAN");

                entity.Property(e => e.MscDd)
                    .HasColumnType("datetime")
                    .HasColumnName("MSC_DD");

                entity.Property(e => e.MscNo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("MSC_NO");

                entity.Property(e => e.PreItmAj).HasColumnName("PRE_ITM_AJ");

                entity.Property(e => e.PrtDate)
                    .HasColumnType("datetime")
                    .HasColumnName("PRT_DATE");

                entity.Property(e => e.PrtSw)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("PRT_SW");

                entity.Property(e => e.PrtUsr)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("PRT_USR");

                entity.Property(e => e.Rem)
                    .HasColumnType("text")
                    .HasColumnName("REM");

                entity.Property(e => e.SalNo)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("SAL_NO");

                entity.Property(e => e.SysDate)
                    .HasColumnType("datetime")
                    .HasColumnName("SYS_DATE");

                entity.Property(e => e.SysDate1)
                    .HasColumnType("datetime")
                    .HasColumnName("SysDate");

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Usr)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("USR");

                entity.Property(e => e.Usr1)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.VohId)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("VOH_ID");

                entity.Property(e => e.VohNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("VOH_NO");
            });

            modelBuilder.Entity<MfPos>(entity =>
            {
                entity.ToTable("MF_POS");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.ActNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ACT_NO");

                entity.Property(e => e.Adr)
                    .HasColumnType("text")
                    .HasColumnName("ADR");

                entity.Property(e => e.AmtInt)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("AMT_INT");

                entity.Property(e => e.AmtInv)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("AMT_INV");

                entity.Property(e => e.AmtLc)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("AMT_LC");

                entity.Property(e => e.AmtnBx)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("AMTN_BX");

                entity.Property(e => e.AmtnCbac)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("AMTN_CBAC");

                entity.Property(e => e.AmtnCbacPs)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("AMTN_CBAC_PS");

                entity.Property(e => e.AmtnDis)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("AMTN_DIS");

                entity.Property(e => e.AmtnDs)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("AMTN_DS");

                entity.Property(e => e.AmtnHx)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("AMTN_HX");

                entity.Property(e => e.AmtnHxMax)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("AMTN_HX_MAX");

                entity.Property(e => e.AmtnInt)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("AMTN_INT");

                entity.Property(e => e.AmtnNet)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("AMTN_NET");

                entity.Property(e => e.AmtnYjbx)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("AMTN_YJBX");

                entity.Property(e => e.BackId)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("BACK_ID");

                entity.Property(e => e.BatNo)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("BAT_NO");

                entity.Property(e => e.BilComp)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("BIL_COMP");

                entity.Property(e => e.BilId)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("BIL_ID");

                entity.Property(e => e.BilMark)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("BIL_MARK");

                entity.Property(e => e.BilNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("BIL_NO");

                entity.Property(e => e.BilType)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.BilTypeName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.BusiNo)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Bybox)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("BYBOX");

                entity.Property(e => e.BzNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("BZ_NO");

                entity.Property(e => e.CancelId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CANCEL_ID");

                entity.Property(e => e.CardNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CARD_NO");

                entity.Property(e => e.CasNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CAS_NO");

                entity.Property(e => e.CbacCls)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CBAC_CLS");

                entity.Property(e => e.CfmSw)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CFM_SW");

                entity.Property(e => e.ChkCache)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CHK_CACHE");

                entity.Property(e => e.ChkDate).HasColumnType("datetime");

                entity.Property(e => e.ChkDays).HasColumnName("CHK_DAYS");

                entity.Property(e => e.ChkFullPaid).HasColumnName("CHK_FULL_PAID");

                entity.Property(e => e.ChkFullPay).HasColumnName("CHK_FULL_PAY");

                entity.Property(e => e.ChkFx)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CHK_FX");

                entity.Property(e => e.ChkLatest)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CHK_LATEST");

                entity.Property(e => e.ChkMan)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkManName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkMob)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.ClsDate).HasColumnType("datetime");

                entity.Property(e => e.ClsMeId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CLS_ME_ID");

                entity.Property(e => e.ClsMpId).HasColumnName("CLS_MP_ID");

                entity.Property(e => e.ClsRem)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("CLS_REM");

                entity.Property(e => e.ClsUsr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ClsUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.CntMan1)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CNT_MAN1");

                entity.Property(e => e.CnttNo)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("CNTT_NO");

                entity.Property(e => e.Contract)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("CONTRACT");

                entity.Property(e => e.CpySw)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CPY_SW");

                entity.Property(e => e.CurId)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CUR_ID");

                entity.Property(e => e.CusFh)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("CUS_FH");

                entity.Property(e => e.CusFx)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("CUS_FX");

                entity.Property(e => e.CusNo)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("CUS_NO");

                entity.Property(e => e.CusNoPos)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("CUS_NO_POS");

                entity.Property(e => e.CusOsNo)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("CUS_OS_NO");

                entity.Property(e => e.CxId)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("CX_ID");

                entity.Property(e => e.CxNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CX_NO");

                entity.Property(e => e.DateFqsk)
                    .HasColumnType("datetime")
                    .HasColumnName("DATE_FQSK");

                entity.Property(e => e.DateflagFqsk)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("DATEFLAG_FQSK");

                entity.Property(e => e.DepFh)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("DEP_FH");

                entity.Property(e => e.DisCnt)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("DIS_CNT");

                entity.Property(e => e.DjNo)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("DJ_NO");

                entity.Property(e => e.EstDd)
                    .HasColumnType("datetime")
                    .HasColumnName("EST_DD");

                entity.Property(e => e.ExcRto)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("EXC_RTO");

                entity.Property(e => e.FjNum).HasColumnName("FJ_NUM");

                entity.Property(e => e.FxWh)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("FX_WH");

                entity.Property(e => e.GroupDep)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("GROUP_DEP");

                entity.Property(e => e.HasFx)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("HAS_FX");

                entity.Property(e => e.HisPrice).HasColumnName("HIS_PRICE");

                entity.Property(e => e.HsId).HasColumnName("HS_ID");

                entity.Property(e => e.HxjsId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("HXJS_ID");

                entity.Property(e => e.IcosId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ICOS_ID");

                entity.Property(e => e.InstTeam)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("INST_TEAM");

                entity.Property(e => e.IntDays).HasColumnName("INT_DAYS");

                entity.Property(e => e.InvAmt)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("INV_AMT");

                entity.Property(e => e.InvBcodeNo)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("INV_BCODE_NO");

                entity.Property(e => e.InvBilId)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("INV_BIL_ID");

                entity.Property(e => e.InvBilNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("INV_BIL_NO");

                entity.Property(e => e.InvChk)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("INV_CHK");

                entity.Property(e => e.InvDd)
                    .HasColumnType("datetime")
                    .HasColumnName("INV_DD");

                entity.Property(e => e.InvDisId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("INV_DIS_ID");

                entity.Property(e => e.InvId)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("INV_ID");

                entity.Property(e => e.InvNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("INV_NO");

                entity.Property(e => e.InvTitle)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("INV_TITLE");

                entity.Property(e => e.InvUniNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("INV_UNI_NO");

                entity.Property(e => e.InvYm).HasColumnName("INV_YM");

                entity.Property(e => e.IsClose).HasDefaultValueSql("((0))");

                entity.Property(e => e.IsPos)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("IS_POS");

                entity.Property(e => e.Isoversh).HasColumnName("ISOVERSH");

                entity.Property(e => e.Issvs)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ISSVS");

                entity.Property(e => e.JfendDd)
                    .HasColumnType("datetime")
                    .HasColumnName("JFEND_DD");

                entity.Property(e => e.LcNo)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("LC_NO");

                entity.Property(e => e.LockDate)
                    .HasColumnType("datetime")
                    .HasColumnName("LOCK_DATE");

                entity.Property(e => e.LockMan)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("LOCK_MAN");

                entity.Property(e => e.MethId)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("METH_ID");

                entity.Property(e => e.ModifyDd)
                    .HasColumnType("datetime")
                    .HasColumnName("MODIFY_DD");

                entity.Property(e => e.ModifyMan)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("MODIFY_MAN");

                entity.Property(e => e.Mrk)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("MRK");

                entity.Property(e => e.OffOsNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("OFF_OS_NO");

                entity.Property(e => e.OldInvNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("OLD_INV_NO");

                entity.Property(e => e.OsDd)
                    .HasColumnType("datetime")
                    .HasColumnName("OS_DD");

                entity.Property(e => e.OsId)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("OS_ID");

                entity.Property(e => e.OsNo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("OS_NO");

                entity.Property(e => e.PayB2c)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("PAY_B2C");

                entity.Property(e => e.PayDays).HasColumnName("PAY_DAYS");

                entity.Property(e => e.PayDd)
                    .HasColumnType("datetime")
                    .HasColumnName("PAY_DD");

                entity.Property(e => e.PayMth)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("PAY_MTH");

                entity.Property(e => e.PayNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("PAY_NO");

                entity.Property(e => e.PayRem)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("PAY_REM");

                entity.Property(e => e.PclId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("PCL_ID");

                entity.Property(e => e.PoDep)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("PO_DEP");

                entity.Property(e => e.PoSoNo)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("PO_SO_NO");

                entity.Property(e => e.PosNo)
                    .HasMaxLength(14)
                    .IsUnicode(false)
                    .HasColumnName("POS_NO");

                entity.Property(e => e.PreId).HasColumnName("PRE_ID");

                entity.Property(e => e.PrmNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("PRM_NO");

                entity.Property(e => e.PrtDate)
                    .HasColumnType("datetime")
                    .HasColumnName("PRT_DATE");

                entity.Property(e => e.PrtNum).HasColumnName("PRT_NUM");

                entity.Property(e => e.PrtSw)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("PRT_SW");

                entity.Property(e => e.PrtUsr)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("PRT_USR");

                entity.Property(e => e.QsFqsk).HasColumnName("QS_FQSK");

                entity.Property(e => e.QtNo)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("QT_NO");

                entity.Property(e => e.Qty)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY");

                entity.Property(e => e.Rem)
                    .HasMaxLength(3500)
                    .IsUnicode(false);

                entity.Property(e => e.RkClsId).HasColumnName("RK_CLS_ID");

                entity.Property(e => e.RpNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("RP_NO");

                entity.Property(e => e.RpNo1)
                    .HasColumnType("text")
                    .HasColumnName("RP_NO1");

                entity.Property(e => e.RtoFqsk)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("RTO_FQSK");

                entity.Property(e => e.SalNo)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("SAL_NO");

                entity.Property(e => e.SbNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("SB_NO");

                entity.Property(e => e.SendArea)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("SEND_AREA");

                entity.Property(e => e.SendMth)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("SEND_MTH");

                entity.Property(e => e.SendWh)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("SEND_WH");

                entity.Property(e => e.SgBilComp)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("SG_BIL_COMP");

                entity.Property(e => e.SgId)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("SG_ID");

                entity.Property(e => e.SgId1)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SG_ID1");

                entity.Property(e => e.SoByDd).HasColumnName("SO_BY_DD");

                entity.Property(e => e.SoByMm).HasColumnName("SO_BY_MM");

                entity.Property(e => e.SoEndDd)
                    .HasColumnType("datetime")
                    .HasColumnName("SO_END_DD");

                entity.Property(e => e.SoLngCas)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SO_LNG_CAS");

                entity.Property(e => e.SoLstDd)
                    .HasColumnType("datetime")
                    .HasColumnName("SO_LST_DD");

                entity.Property(e => e.SoOtDd).HasColumnName("SO_OT_DD");

                entity.Property(e => e.Sokp)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SOKP");

                entity.Property(e => e.SqId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SQ_ID");

                entity.Property(e => e.SqNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("SQ_NO");

                entity.Property(e => e.SrcId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SRC_ID");

                entity.Property(e => e.SysDate).HasColumnType("datetime");

                entity.Property(e => e.TaskId).HasColumnName("TASK_ID");

                entity.Property(e => e.Tax)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("TAX");

                entity.Property(e => e.TaxId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TAX_ID");

                entity.Property(e => e.TaxInv)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("TAX_INV");

                entity.Property(e => e.TitleBuy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TITLE_BUY");

                entity.Property(e => e.TotBox)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("TOT_BOX");

                entity.Property(e => e.TotQty)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("TOT_QTY");

                entity.Property(e => e.TradMth)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("TRAD_MTH");

                entity.Property(e => e.TtTypeSet)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("TT_TYPE_SET");

                entity.Property(e => e.TtYmB)
                    .HasColumnType("datetime")
                    .HasColumnName("TT_YM_B");

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UseDep)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("USE_DEP");

                entity.Property(e => e.Usr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.VohId)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("VOH_ID");

                entity.Property(e => e.VohNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("VOH_NO");

                entity.Property(e => e.YhNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("YH_NO");

                entity.Property(e => e.ZhangId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ZHANG_ID");
            });

            modelBuilder.Entity<MfPromv>(entity =>
            {
                entity.ToTable("MF_PROMV");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BilType)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.BilTypeName)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.BillDate).HasColumnType("datetime");

                entity.Property(e => e.BusiNo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.ChkDate).HasColumnType("datetime");

                entity.Property(e => e.ChkMan)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.ChkManName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.ChkMob)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.ClsDate).HasColumnType("datetime");

                entity.Property(e => e.ClsUsr)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.ClsUsrName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Flag)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.IsClose).HasDefaultValueSql("((0))");

                entity.Property(e => e.IsPrint).HasDefaultValueSql("((0))");

                entity.Property(e => e.Memo)
                    .HasMaxLength(3500)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.No)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.PmvNo)
                    .IsRequired()
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("PMV_NO")
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Rem)
                    .HasMaxLength(3500)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.SoNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SO_NO");

                entity.Property(e => e.SysDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.UpdDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Usr)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.UsrName)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.WrId)
                    .HasColumnName("WR_ID")
                    .HasDefaultValueSql("((0))");
            });

            modelBuilder.Entity<MfPss>(entity =>
            {
                entity.ToTable("MF_PSS");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.AccFpNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ACC_FP_NO");

                entity.Property(e => e.ActId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ACT_ID");

                entity.Property(e => e.Adr)
                    .HasColumnType("text")
                    .HasColumnName("ADR");

                entity.Property(e => e.Amt)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("AMT");

                entity.Property(e => e.AmtCls)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("AMT_CLS");

                entity.Property(e => e.AmtInv)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("AMT_INV");

                entity.Property(e => e.AmtIrp)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("AMT_IRP");

                entity.Property(e => e.AmtPoi).HasColumnName("AMT_POI");

                entity.Property(e => e.AmtRsv)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("AMT_RSV");

                entity.Property(e => e.AmtnCash)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("AMTN_CASH");

                entity.Property(e => e.AmtnCbac)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("AMTN_CBAC");

                entity.Property(e => e.AmtnDs)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("AMTN_DS");

                entity.Property(e => e.AmtnEp)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("AMTN_EP");

                entity.Property(e => e.AmtnEp1)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("AMTN_EP1");

                entity.Property(e => e.AmtnEp1Ifrs)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("AMTN_EP1_IFRS");

                entity.Property(e => e.AmtnEpIfrs)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("AMTN_EP_IFRS");

                entity.Property(e => e.AmtnFl)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("AMTN_FL");

                entity.Property(e => e.AmtnFt)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("AMTN_FT");

                entity.Property(e => e.AmtnInv)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("AMTN_INV");

                entity.Property(e => e.AmtnIrp)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("AMTN_IRP");

                entity.Property(e => e.AmtnNetCls)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("AMTN_NET_CLS");

                entity.Property(e => e.AmtnRsv)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("AMTN_RSV");

                entity.Property(e => e.AmtnSx)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("AMTN_SX");

                entity.Property(e => e.ArpDd)
                    .HasColumnType("datetime")
                    .HasColumnName("ARP_DD");

                entity.Property(e => e.ArpNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ARP_NO");

                entity.Property(e => e.AuthCode)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("AUTH_CODE");

                entity.Property(e => e.AuthInfo)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("AUTH_INFO");

                entity.Property(e => e.AuthNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("AUTH_NO");

                entity.Property(e => e.BatNo)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("BAT_NO");

                entity.Property(e => e.BdId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("BD_ID");

                entity.Property(e => e.BilComp)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("BIL_COMP");

                entity.Property(e => e.BilId)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("BIL_ID");

                entity.Property(e => e.BilMark)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("BIL_MARK");

                entity.Property(e => e.BilNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("BIL_NO");

                entity.Property(e => e.BilType)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("BIL_TYPE");

                entity.Property(e => e.BilType1)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("BilType");

                entity.Property(e => e.BilTypeName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.BusiNo)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.CancelId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CANCEL_ID");

                entity.Property(e => e.CardCls)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CARD_CLS");

                entity.Property(e => e.CardNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CARD_NO");

                entity.Property(e => e.CasNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CAS_NO");

                entity.Property(e => e.CashId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CASH_ID");

                entity.Property(e => e.CbId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CB_ID");

                entity.Property(e => e.CbIdIfrs)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CB_ID_IFRS");

                entity.Property(e => e.CfmClsId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CFM_CLS_ID");

                entity.Property(e => e.CfmId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CFM_ID");

                entity.Property(e => e.ChkDate).HasColumnType("datetime");

                entity.Property(e => e.ChkDays).HasColumnName("CHK_DAYS");

                entity.Property(e => e.ChkDd)
                    .HasColumnType("datetime")
                    .HasColumnName("CHK_DD");

                entity.Property(e => e.ChkFullPay)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CHK_FULL_PAY");

                entity.Property(e => e.ChkMan)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("CHK_MAN");

                entity.Property(e => e.ChkMan1)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ChkMan");

                entity.Property(e => e.ChkManName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkMob)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.ChkPkche)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CHK_PKCHE");

                entity.Property(e => e.CkClsId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CK_CLS_ID");

                entity.Property(e => e.ClsDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CLS_DATE");

                entity.Property(e => e.ClsDate1)
                    .HasColumnType("datetime")
                    .HasColumnName("ClsDate");

                entity.Property(e => e.ClsId).HasColumnName("CLS_ID");

                entity.Property(e => e.ClsRem)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("CLS_REM");

                entity.Property(e => e.ClsUsr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ClsUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Clsck)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CLSCK");

                entity.Property(e => e.Clsid1)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CLSID");

                entity.Property(e => e.Clslz)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CLSLZ");

                entity.Property(e => e.CntMan1)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CNT_MAN1");

                entity.Property(e => e.CnttNo)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("CNTT_NO");

                entity.Property(e => e.Contract)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("CONTRACT");

                entity.Property(e => e.CpySw)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CPY_SW");

                entity.Property(e => e.CurId)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CUR_ID");

                entity.Property(e => e.CurIdIfrs)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CUR_ID_IFRS");

                entity.Property(e => e.CusCardNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CUS_CARD_NO");

                entity.Property(e => e.CusFh)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("CUS_FH");

                entity.Property(e => e.CusFx)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("CUS_FX");

                entity.Property(e => e.CusNo)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("CUS_NO");

                entity.Property(e => e.CusNoPos)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("CUS_NO_POS");

                entity.Property(e => e.CusOsNo)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("CUS_OS_NO");

                entity.Property(e => e.CustYg)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("CUST_YG");

                entity.Property(e => e.DateFqsk)
                    .HasColumnType("datetime")
                    .HasColumnName("DATE_FQSK");

                entity.Property(e => e.DateflagFqsk)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("DATEFLAG_FQSK");

                entity.Property(e => e.Dep)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("DEP");

                entity.Property(e => e.DepFh)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("DEP_FH");

                entity.Property(e => e.DisCnt)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("DIS_CNT");

                entity.Property(e => e.DzDate)
                    .HasColumnType("datetime")
                    .HasColumnName("DZ_DATE");

                entity.Property(e => e.DzUsr)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("DZ_USR");

                entity.Property(e => e.EcNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("EC_NO");

                entity.Property(e => e.EpNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("EP_NO");

                entity.Property(e => e.EpNo1)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("EP_NO1");

                entity.Property(e => e.ExcRto)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("EXC_RTO");

                entity.Property(e => e.ExcRtoIfrs)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("EXC_RTO_IFRS");

                entity.Property(e => e.FjNum).HasColumnName("FJ_NUM");

                entity.Property(e => e.GroupAutoBil)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("GROUP_AUTO_BIL");

                entity.Property(e => e.GroupCusNo)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("GROUP_CUS_NO");

                entity.Property(e => e.GroupDx)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("GROUP_DX");

                entity.Property(e => e.GroupKey)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("GROUP_KEY");

                entity.Property(e => e.GroupTypeId)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("GROUP_TYPE_ID");

                entity.Property(e => e.HasFx)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("HAS_FX");

                entity.Property(e => e.HgBh)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("HG_BH");

                entity.Property(e => e.HzId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("HZ_ID");

                entity.Property(e => e.InstTeam)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("INST_TEAM");

                entity.Property(e => e.IntDays).HasColumnName("INT_DAYS");

                entity.Property(e => e.InvBcodeNo)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("INV_BCODE_NO");

                entity.Property(e => e.InvBilId)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("INV_BIL_ID");

                entity.Property(e => e.InvBilNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("INV_BIL_NO");

                entity.Property(e => e.InvDd)
                    .HasColumnType("datetime")
                    .HasColumnName("INV_DD");

                entity.Property(e => e.InvNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("INV_NO");

                entity.Property(e => e.InvYm).HasColumnName("INV_YM");

                entity.Property(e => e.IsPos)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("IS_POS");

                entity.Property(e => e.Isflzl)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ISFLZL");

                entity.Property(e => e.Issvs)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ISSVS");

                entity.Property(e => e.JfendDd)
                    .HasColumnType("datetime")
                    .HasColumnName("JFEND_DD");

                entity.Property(e => e.KpId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("KP_ID");

                entity.Property(e => e.LcNo)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("LC_NO");

                entity.Property(e => e.LockDate)
                    .HasColumnType("datetime")
                    .HasColumnName("LOCK_DATE");

                entity.Property(e => e.LockMan)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("LOCK_MAN");

                entity.Property(e => e.LzClsDd)
                    .HasColumnType("datetime")
                    .HasColumnName("LZ_CLS_DD");

                entity.Property(e => e.LzClsId).HasColumnName("LZ_CLS_ID");

                entity.Property(e => e.MethId)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("METH_ID");

                entity.Property(e => e.MmId)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("MM_ID");

                entity.Property(e => e.MobId)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("MOB_ID");

                entity.Property(e => e.ModifyDd)
                    .HasColumnType("datetime")
                    .HasColumnName("MODIFY_DD");

                entity.Property(e => e.ModifyMan)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("MODIFY_MAN");

                entity.Property(e => e.OmNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("OM_NO");

                entity.Property(e => e.OrgLzId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ORG_LZ_ID");

                entity.Property(e => e.OsId)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("OS_ID");

                entity.Property(e => e.OsNo)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("OS_NO");

                entity.Property(e => e.PayDays).HasColumnName("PAY_DAYS");

                entity.Property(e => e.PayDd)
                    .HasColumnType("datetime")
                    .HasColumnName("PAY_DD");

                entity.Property(e => e.PayMth)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("PAY_MTH");

                entity.Property(e => e.PayRem)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("PAY_REM");

                entity.Property(e => e.PaycardNo)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("PAYCARD_NO");

                entity.Property(e => e.Pctosa)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("PCTOSA");

                entity.Property(e => e.PhNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("PH_NO");

                entity.Property(e => e.PkNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("PK_NO");

                entity.Property(e => e.PoId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("PO_ID");

                entity.Property(e => e.PoNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("PO_NO");

                entity.Property(e => e.PopcId)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("POPC_ID");

                entity.Property(e => e.PosId)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("POS_ID");

                entity.Property(e => e.PosNo)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("POS_NO");

                entity.Property(e => e.PosOsCls)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("POS_OS_CLS");

                entity.Property(e => e.PosOsId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("POS_OS_ID");

                entity.Property(e => e.PrtDate)
                    .HasColumnType("datetime")
                    .HasColumnName("PRT_DATE");

                entity.Property(e => e.PrtSw)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("PRT_SW");

                entity.Property(e => e.PrtUsr)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("PRT_USR");

                entity.Property(e => e.PsDd)
                    .HasColumnType("datetime")
                    .HasColumnName("PS_DD");

                entity.Property(e => e.PsId)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("PS_ID");

                entity.Property(e => e.PsNo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("PS_NO");

                entity.Property(e => e.QcSw)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("QC_SW");

                entity.Property(e => e.QsFqsk).HasColumnName("QS_FQSK");

                entity.Property(e => e.Qty)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY");

                entity.Property(e => e.Qty1Cls)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY1_CLS");

                entity.Property(e => e.QtyCash)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_CASH");

                entity.Property(e => e.QtyCls)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_CLS");

                entity.Property(e => e.QtyInv)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_INV");

                entity.Property(e => e.Rem)
                    .HasColumnType("text")
                    .HasColumnName("REM");

                entity.Property(e => e.RpNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("RP_NO");

                entity.Property(e => e.RsvPer)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("RSV_PER");

                entity.Property(e => e.RtoFqsk)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("RTO_FQSK");

                entity.Property(e => e.SalNo)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("SAL_NO");

                entity.Property(e => e.SbChk).HasColumnName("SB_CHK");

                entity.Property(e => e.ScanDate)
                    .HasColumnType("datetime")
                    .HasColumnName("SCAN_DATE");

                entity.Property(e => e.ScanId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SCAN_ID");

                entity.Property(e => e.ScanUsr)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("SCAN_USR");

                entity.Property(e => e.ScusNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("SCUS_NO");

                entity.Property(e => e.SendArea)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("SEND_AREA");

                entity.Property(e => e.SendMth)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("SEND_MTH");

                entity.Property(e => e.SendWh)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("SEND_WH");

                entity.Property(e => e.SgBilComp)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("SG_BIL_COMP");

                entity.Property(e => e.SgId)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("SG_ID");

                entity.Property(e => e.SgId1)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SG_ID1");

                entity.Property(e => e.Sgtflag).HasColumnName("SGTFLAG");

                entity.Property(e => e.SignDd)
                    .HasColumnType("datetime")
                    .HasColumnName("SIGN_DD");

                entity.Property(e => e.Soutype).HasColumnName("SOUTYPE");

                entity.Property(e => e.SubNo)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("SUB_NO");

                entity.Property(e => e.SysDate)
                    .HasColumnType("datetime")
                    .HasColumnName("SYS_DATE");

                entity.Property(e => e.SysDate1)
                    .HasColumnType("datetime")
                    .HasColumnName("SysDate");

                entity.Property(e => e.TaskId).HasColumnName("TASK_ID");

                entity.Property(e => e.TaxCls)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("TAX_CLS");

                entity.Property(e => e.TaxId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TAX_ID");

                entity.Property(e => e.TaxInv)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("TAX_INV");

                entity.Property(e => e.TaxIrp)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("TAX_IRP");

                entity.Property(e => e.TbNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("TB_NO");

                entity.Property(e => e.TitleBuy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TITLE_BUY");

                entity.Property(e => e.ToMj)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TO_MJ");

                entity.Property(e => e.ToSb)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TO_SB");

                entity.Property(e => e.TotBox)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("TOT_BOX");

                entity.Property(e => e.TotQty)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("TOT_QTY");

                entity.Property(e => e.TradMth)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("TRAD_MTH");

                entity.Property(e => e.TtTypeSet)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("TT_TYPE_SET");

                entity.Property(e => e.TtYmB)
                    .HasColumnType("datetime")
                    .HasColumnName("TT_YM_B");

                entity.Property(e => e.TurnId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TURN_ID");

                entity.Property(e => e.Tzzg)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TZZG");

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Usr)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("USR");

                entity.Property(e => e.UsrAuth)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("USR_AUTH");

                entity.Property(e => e.UsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.VohId)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("VOH_ID");

                entity.Property(e => e.VohMkno)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("VOH_MKNO");

                entity.Property(e => e.VohNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("VOH_NO");

                entity.Property(e => e.WsChkPay)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("WS_CHK_PAY");

                entity.Property(e => e.WsKdChk)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("WS_KD_CHK");

                entity.Property(e => e.WsRcvChk)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("WS_RCV_CHK");

                entity.Property(e => e.YdId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("YD_ID");

                entity.Property(e => e.ZbNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ZB_NO");

                entity.Property(e => e.ZcFlag)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ZC_FLAG");

                entity.Property(e => e.ZhangId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ZHANG_ID");
            });

            modelBuilder.Entity<MfPss0Z>(entity =>
            {
                entity.ToTable("MF_PSS0_Z");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Mid).HasColumnName("MID");
            });

            modelBuilder.Entity<MfQl>(entity =>
            {
                entity.ToTable("MF_QL");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.AmtnPc)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("AMTN_PC");

                entity.Property(e => e.AmtnYz)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("AMTN_YZ");

                entity.Property(e => e.BatNo)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("BAT_NO");

                entity.Property(e => e.BilId)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("BIL_ID");

                entity.Property(e => e.BilNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("BIL_NO");

                entity.Property(e => e.BilType)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("BIL_TYPE");

                entity.Property(e => e.BilType1)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("BilType");

                entity.Property(e => e.BilTypeName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.BusiNo)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.CancelId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CANCEL_ID");

                entity.Property(e => e.CasNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CAS_NO");

                entity.Property(e => e.ChkDate).HasColumnType("datetime");

                entity.Property(e => e.ChkMan)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("CHK_MAN");

                entity.Property(e => e.ChkMan1)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ChkMan");

                entity.Property(e => e.ChkManName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkMob)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.CloseId).HasColumnName("CLOSE_ID");

                entity.Property(e => e.ClsDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CLS_DATE");

                entity.Property(e => e.ClsDate1)
                    .HasColumnType("datetime")
                    .HasColumnName("ClsDate");

                entity.Property(e => e.ClsId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CLS_ID");

                entity.Property(e => e.ClsUsr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ClsUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.CnttNo)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("CNTT_NO");

                entity.Property(e => e.CpySw)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CPY_SW");

                entity.Property(e => e.CurId)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CUR_ID");

                entity.Property(e => e.CusNo)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("CUS_NO");

                entity.Property(e => e.CusOsNo)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("CUS_OS_NO");

                entity.Property(e => e.Dep)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("DEP");

                entity.Property(e => e.FjNum).HasColumnName("FJ_NUM");

                entity.Property(e => e.IdNo)
                    .HasMaxLength(38)
                    .IsUnicode(false)
                    .HasColumnName("ID_NO");

                entity.Property(e => e.IsClose).HasDefaultValueSql("((0))");

                entity.Property(e => e.LockDate)
                    .HasColumnType("datetime")
                    .HasColumnName("LOCK_DATE");

                entity.Property(e => e.LockMan)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("LOCK_MAN");

                entity.Property(e => e.LqNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("LQ_NO");

                entity.Property(e => e.MoNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("MO_NO");

                entity.Property(e => e.MobId)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("MOB_ID");

                entity.Property(e => e.ModifyDd)
                    .HasColumnType("datetime")
                    .HasColumnName("MODIFY_DD");

                entity.Property(e => e.ModifyMan)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("MODIFY_MAN");

                entity.Property(e => e.MrpNo)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("MRP_NO");

                entity.Property(e => e.PoOk)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("PO_OK");

                entity.Property(e => e.PrdMark)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("PRD_MARK")
                    .HasDefaultValueSql("(space((0)))");

                entity.Property(e => e.PrdName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("PRD_NAME");

                entity.Property(e => e.PrtDate)
                    .HasColumnType("datetime")
                    .HasColumnName("PRT_DATE");

                entity.Property(e => e.PrtNum).HasColumnName("PRT_NUM");

                entity.Property(e => e.PrtSw)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("PRT_SW");

                entity.Property(e => e.PrtUsr)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("PRT_USR");

                entity.Property(e => e.QlDd)
                    .HasColumnType("datetime")
                    .HasColumnName("QL_DD");

                entity.Property(e => e.QlId)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("QL_ID");

                entity.Property(e => e.QlNo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("QL_NO");

                entity.Property(e => e.QlType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("QL_TYPE");

                entity.Property(e => e.Qty)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY");

                entity.Property(e => e.Qty1)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY1");

                entity.Property(e => e.Qty1Rtn)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY1_RTN");

                entity.Property(e => e.Qty1RtnUnsh)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY1_RTN_UNSH");

                entity.Property(e => e.QtyRtn)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_RTN");

                entity.Property(e => e.QtyRtnUnsh)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_RTN_UNSH");

                entity.Property(e => e.Rem)
                    .HasColumnType("text")
                    .HasColumnName("REM");

                entity.Property(e => e.Rem1)
                    .HasMaxLength(3500)
                    .IsUnicode(false);

                entity.Property(e => e.SoId)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("SO_ID");

                entity.Property(e => e.SoNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("SO_NO");

                entity.Property(e => e.SysDate)
                    .HasColumnType("datetime")
                    .HasColumnName("SYS_DATE");

                entity.Property(e => e.SysDate1)
                    .HasColumnType("datetime")
                    .HasColumnName("SysDate");

                entity.Property(e => e.TaskId).HasColumnName("TASK_ID");

                entity.Property(e => e.TzNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("TZ_NO");

                entity.Property(e => e.Unit)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("UNIT");

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Usr)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("USR");

                entity.Property(e => e.Usr1)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UsrNo)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("USR_NO");

                entity.Property(e => e.WhMtl)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("WH_MTL");

                entity.Property(e => e.YlId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("YL_ID");
            });

            modelBuilder.Entity<MfQyM>(entity =>
            {
                entity.ToTable("MF_QY_M");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BilId)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("BIL_ID");

                entity.Property(e => e.BilNo)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("BIL_NO");

                entity.Property(e => e.BilType)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("BIL_TYPE");

                entity.Property(e => e.BilType1)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("BilType");

                entity.Property(e => e.BilTypeName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.BusiNo)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.CancelId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CANCEL_ID");

                entity.Property(e => e.ChkDate).HasColumnType("datetime");

                entity.Property(e => e.ChkMan)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("CHK_MAN");

                entity.Property(e => e.ChkMan1)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ChkMan");

                entity.Property(e => e.ChkManName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkMob)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.ClsDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CLS_DATE");

                entity.Property(e => e.ClsDate1)
                    .HasColumnType("datetime")
                    .HasColumnName("ClsDate");

                entity.Property(e => e.ClsUsr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ClsUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.CpySw)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CPY_SW");

                entity.Property(e => e.Dep)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("DEP");

                entity.Property(e => e.LockDate)
                    .HasColumnType("datetime")
                    .HasColumnName("LOCK_DATE");

                entity.Property(e => e.LockMan)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("LOCK_MAN");

                entity.Property(e => e.MobId)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("MOB_ID");

                entity.Property(e => e.ModifyDd)
                    .HasColumnType("datetime")
                    .HasColumnName("MODIFY_DD");

                entity.Property(e => e.ModifyMan)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("MODIFY_MAN");

                entity.Property(e => e.PrtDate)
                    .HasColumnType("datetime")
                    .HasColumnName("PRT_DATE");

                entity.Property(e => e.PrtSw)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("PRT_SW");

                entity.Property(e => e.PrtUsr)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("PRT_USR");

                entity.Property(e => e.QyDd)
                    .HasColumnType("datetime")
                    .HasColumnName("QY_DD");

                entity.Property(e => e.QyNo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("QY_NO");

                entity.Property(e => e.Rem)
                    .HasColumnType("text")
                    .HasColumnName("REM");

                entity.Property(e => e.SalNo)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("SAL_NO");

                entity.Property(e => e.SysDate)
                    .HasColumnType("datetime")
                    .HasColumnName("SYS_DATE");

                entity.Property(e => e.SysDate1)
                    .HasColumnType("datetime")
                    .HasColumnName("SysDate");

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Usr)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("USR");

                entity.Property(e => e.UsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<MfQyS>(entity =>
            {
                entity.ToTable("MF_QY_S");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BilId)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("BIL_ID");

                entity.Property(e => e.BilNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("BIL_NO");

                entity.Property(e => e.BilType)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.BilTypeName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.BusiNo)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.CancelId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CANCEL_ID");

                entity.Property(e => e.ChkDate).HasColumnType("datetime");

                entity.Property(e => e.ChkMan)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkManName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkMob)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.ClsDate).HasColumnType("datetime");

                entity.Property(e => e.ClsUsr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ClsUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.CpySw)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CPY_SW");

                entity.Property(e => e.Dep)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("DEP");

                entity.Property(e => e.LockDate)
                    .HasColumnType("datetime")
                    .HasColumnName("LOCK_DATE");

                entity.Property(e => e.LockMan)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("LOCK_MAN");

                entity.Property(e => e.PrtDate)
                    .HasColumnType("datetime")
                    .HasColumnName("PRT_DATE");

                entity.Property(e => e.PrtSw)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("PRT_SW");

                entity.Property(e => e.PrtUsr)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("PRT_USR");

                entity.Property(e => e.QyDd)
                    .HasColumnType("datetime")
                    .HasColumnName("QY_DD");

                entity.Property(e => e.QyNo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("QY_NO");

                entity.Property(e => e.Rem)
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.SalNo)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("SAL_NO");

                entity.Property(e => e.SysDate).HasColumnType("datetime");

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Usr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<MfRsc>(entity =>
            {
                entity.ToTable("MF_RSC");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BilId)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("BIL_ID");

                entity.Property(e => e.BilNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("BIL_NO");

                entity.Property(e => e.BilType)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("BIL_TYPE");

                entity.Property(e => e.BilType1)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("BilType");

                entity.Property(e => e.BilTypeName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.BusiNo)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.CancelId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CANCEL_ID");

                entity.Property(e => e.ChkDate).HasColumnType("datetime");

                entity.Property(e => e.ChkMan)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("CHK_MAN");

                entity.Property(e => e.ChkMan1)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ChkMan");

                entity.Property(e => e.ChkManName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkMob)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.CloseId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CLOSE_ID");

                entity.Property(e => e.ClsDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CLS_DATE");

                entity.Property(e => e.ClsDate1)
                    .HasColumnType("datetime")
                    .HasColumnName("ClsDate");

                entity.Property(e => e.ClsUsr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ClsUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.CpySw)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CPY_SW");

                entity.Property(e => e.Dep)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("DEP");

                entity.Property(e => e.LockDate)
                    .HasColumnType("datetime")
                    .HasColumnName("LOCK_DATE");

                entity.Property(e => e.LockMan)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("LOCK_MAN");

                entity.Property(e => e.MobId)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("MOB_ID");

                entity.Property(e => e.ModifyDd)
                    .HasColumnType("datetime")
                    .HasColumnName("MODIFY_DD");

                entity.Property(e => e.ModifyMan)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("MODIFY_MAN");

                entity.Property(e => e.PrtDate)
                    .HasColumnType("datetime")
                    .HasColumnName("PRT_DATE");

                entity.Property(e => e.PrtSw)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("PRT_SW");

                entity.Property(e => e.PrtUsr)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("PRT_USR");

                entity.Property(e => e.Rem)
                    .HasColumnType("text")
                    .HasColumnName("REM");

                entity.Property(e => e.RscDd)
                    .HasColumnType("datetime")
                    .HasColumnName("RSC_DD");

                entity.Property(e => e.RscNo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("RSC_NO");

                entity.Property(e => e.SalNo)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("SAL_NO");

                entity.Property(e => e.SysDate)
                    .HasColumnType("datetime")
                    .HasColumnName("SYS_DATE");

                entity.Property(e => e.SysDate1)
                    .HasColumnType("datetime")
                    .HasColumnName("SysDate");

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Usr)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("USR");

                entity.Property(e => e.Usr1)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<MfRxM>(entity =>
            {
                entity.ToTable("MF_RX_M");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BilId)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("BIL_ID");

                entity.Property(e => e.BilNo)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("BIL_NO");

                entity.Property(e => e.BilType)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("BIL_TYPE");

                entity.Property(e => e.BilType1)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("BilType");

                entity.Property(e => e.BilTypeName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.BusiNo)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.CancelId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CANCEL_ID");

                entity.Property(e => e.ChkDate).HasColumnType("datetime");

                entity.Property(e => e.ChkMan)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("CHK_MAN");

                entity.Property(e => e.ChkMan1)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ChkMan");

                entity.Property(e => e.ChkManName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkMob)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.ClsDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CLS_DATE");

                entity.Property(e => e.ClsDate1)
                    .HasColumnType("datetime")
                    .HasColumnName("ClsDate");

                entity.Property(e => e.ClsUsr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ClsUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.CpySw)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CPY_SW");

                entity.Property(e => e.CurId)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CUR_ID");

                entity.Property(e => e.CusNo)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("CUS_NO");

                entity.Property(e => e.Dep)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("DEP");

                entity.Property(e => e.DepRep)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("DEP_REP");

                entity.Property(e => e.ExcRto)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("EXC_RTO");

                entity.Property(e => e.LockDate)
                    .HasColumnType("datetime")
                    .HasColumnName("LOCK_DATE");

                entity.Property(e => e.LockMan)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("LOCK_MAN");

                entity.Property(e => e.MobId)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("MOB_ID");

                entity.Property(e => e.ModifyDd)
                    .HasColumnType("datetime")
                    .HasColumnName("MODIFY_DD");

                entity.Property(e => e.ModifyMan)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("MODIFY_MAN");

                entity.Property(e => e.PrtDate)
                    .HasColumnType("datetime")
                    .HasColumnName("PRT_DATE");

                entity.Property(e => e.PrtSw)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("PRT_SW");

                entity.Property(e => e.PrtUsr)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("PRT_USR");

                entity.Property(e => e.Rem)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("REM");

                entity.Property(e => e.RxDd)
                    .HasColumnType("datetime")
                    .HasColumnName("RX_DD");

                entity.Property(e => e.RxId)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("RX_ID");

                entity.Property(e => e.RxNo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("RX_NO");

                entity.Property(e => e.SalNo)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("SAL_NO");

                entity.Property(e => e.SysDate)
                    .HasColumnType("datetime")
                    .HasColumnName("SYS_DATE");

                entity.Property(e => e.SysDate1)
                    .HasColumnType("datetime")
                    .HasColumnName("SysDate");

                entity.Property(e => e.TaxId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TAX_ID");

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Usr)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("USR");

                entity.Property(e => e.Usr1)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.VohId)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("VOH_ID");

                entity.Property(e => e.VohNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("VOH_NO");

                entity.Property(e => e.Wh)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("WH");

                entity.Property(e => e.ZhangId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ZHANG_ID");
            });

            modelBuilder.Entity<MfRxS>(entity =>
            {
                entity.ToTable("MF_RX_S");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BilId)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("BIL_ID");

                entity.Property(e => e.BilNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("BIL_NO");

                entity.Property(e => e.BilType)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.BilTypeName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.BusiNo)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkAutouse).HasColumnName("CHK_AUTOUSE");

                entity.Property(e => e.ChkDate).HasColumnType("datetime");

                entity.Property(e => e.ChkMan)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkManName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkMob)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.ClsDate).HasColumnType("datetime");

                entity.Property(e => e.ClsUsr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ClsUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.CusNo)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("CUS_NO");

                entity.Property(e => e.Dep)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("DEP");

                entity.Property(e => e.Rem)
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.RxDd)
                    .HasColumnType("datetime")
                    .HasColumnName("RX_DD");

                entity.Property(e => e.RxId)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("RX_ID");

                entity.Property(e => e.RxNo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("RX_NO");

                entity.Property(e => e.SalNo)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("SAL_NO");

                entity.Property(e => e.SysDate).HasColumnType("datetime");

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Usr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<MfSbaa>(entity =>
            {
                entity.ToTable("MF_SBAA");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.AaDd)
                    .HasColumnType("datetime")
                    .HasColumnName("AA_DD");

                entity.Property(e => e.AaNo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("AA_NO");

                entity.Property(e => e.BilId)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("BIL_ID");

                entity.Property(e => e.BilNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("BIL_NO");

                entity.Property(e => e.BilType)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.BilTypeName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.BusiNo)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkDate).HasColumnType("datetime");

                entity.Property(e => e.ChkMan)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkManName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkMob)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.CkId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CK_ID");

                entity.Property(e => e.ClsDate).HasColumnType("datetime");

                entity.Property(e => e.ClsUsr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ClsUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.CpySw)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CPY_SW");

                entity.Property(e => e.Dep)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("DEP");

                entity.Property(e => e.LockDate)
                    .HasColumnType("datetime")
                    .HasColumnName("LOCK_DATE");

                entity.Property(e => e.LockMan)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("LOCK_MAN");

                entity.Property(e => e.ModId)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("MOD_ID");

                entity.Property(e => e.PrtDate)
                    .HasColumnType("datetime")
                    .HasColumnName("PRT_DATE");

                entity.Property(e => e.PrtSw)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("PRT_SW");

                entity.Property(e => e.PrtUsr)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("PRT_USR");

                entity.Property(e => e.Rem)
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.SalNo)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("SAL_NO");

                entity.Property(e => e.SysDate).HasColumnType("datetime");

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Usr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.VohId)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("VOH_ID");

                entity.Property(e => e.VohNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("VOH_NO");

                entity.Property(e => e.WxId)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("WX_ID");

                entity.Property(e => e.WxNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("WX_NO");
            });

            modelBuilder.Entity<MfSbycbg>(entity =>
            {
                entity.ToTable("MF_SBYCBG");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BilType)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.BilTypeName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.BusiNo)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.CancelId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CANCEL_ID");

                entity.Property(e => e.ChkDate).HasColumnType("datetime");

                entity.Property(e => e.ChkMan)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkManName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkMob)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.ClsDate).HasColumnType("datetime");

                entity.Property(e => e.ClsUsr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ClsUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.CpySw)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CPY_SW");

                entity.Property(e => e.Dep)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("DEP");

                entity.Property(e => e.ItmSb).HasColumnName("ITM_SB");

                entity.Property(e => e.LockDate)
                    .HasColumnType("datetime")
                    .HasColumnName("LOCK_DATE");

                entity.Property(e => e.LockMan)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("LOCK_MAN");

                entity.Property(e => e.MrpNo)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("MRP_NO");

                entity.Property(e => e.PrtDate)
                    .HasColumnType("datetime")
                    .HasColumnName("PRT_DATE");

                entity.Property(e => e.PrtSw)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("PRT_SW");

                entity.Property(e => e.PrtUsr)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("PRT_USR");

                entity.Property(e => e.Rem)
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.SalNo)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("SAL_NO");

                entity.Property(e => e.SebNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("SEB_NO");

                entity.Property(e => e.SysDate).HasColumnType("datetime");

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Usr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.WxFlag).HasColumnName("WX_FLAG");

                entity.Property(e => e.YcDd)
                    .HasColumnType("datetime")
                    .HasColumnName("YC_DD");

                entity.Property(e => e.YcNo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("YC_NO");

                entity.Property(e => e.YcRem)
                    .HasColumnType("text")
                    .HasColumnName("YC_REM");
            });

            modelBuilder.Entity<MfSq>(entity =>
            {
                entity.ToTable("MF_SQ");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BackId)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("BACK_ID");

                entity.Property(e => e.BatNo)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("BAT_NO");

                entity.Property(e => e.BilId)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("BIL_ID");

                entity.Property(e => e.BilNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("BIL_NO");

                entity.Property(e => e.BilType)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("BIL_TYPE");

                entity.Property(e => e.BilType1)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("BilType");

                entity.Property(e => e.BilTypeName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.BusiNo)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.CancelId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CANCEL_ID");

                entity.Property(e => e.CasNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CAS_NO");

                entity.Property(e => e.ChkDate).HasColumnType("datetime");

                entity.Property(e => e.ChkMan)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("CHK_MAN");

                entity.Property(e => e.ChkMan1)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ChkMan");

                entity.Property(e => e.ChkManName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkMob)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.ClsDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CLS_DATE");

                entity.Property(e => e.ClsDate1)
                    .HasColumnType("datetime")
                    .HasColumnName("ClsDate");

                entity.Property(e => e.ClsId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CLS_ID");

                entity.Property(e => e.ClsUsr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ClsUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.CnttNo)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("CNTT_NO");

                entity.Property(e => e.CpySw)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CPY_SW");

                entity.Property(e => e.CurId)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CUR_ID");

                entity.Property(e => e.CusNo)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("CUS_NO");

                entity.Property(e => e.Dep)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("DEP");

                entity.Property(e => e.EstDd)
                    .HasColumnType("datetime")
                    .HasColumnName("EST_DD");

                entity.Property(e => e.ExcRto)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("EXC_RTO");

                entity.Property(e => e.IncId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("INC_ID");

                entity.Property(e => e.LockDate)
                    .HasColumnType("datetime")
                    .HasColumnName("LOCK_DATE");

                entity.Property(e => e.LockMan)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("LOCK_MAN");

                entity.Property(e => e.MobId)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("MOB_ID");

                entity.Property(e => e.ModifyDd)
                    .HasColumnType("datetime")
                    .HasColumnName("MODIFY_DD");

                entity.Property(e => e.ModifyMan)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("MODIFY_MAN");

                entity.Property(e => e.PoDep)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("PO_DEP");

                entity.Property(e => e.PoNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("PO_NO");

                entity.Property(e => e.PrtDate)
                    .HasColumnType("datetime")
                    .HasColumnName("PRT_DATE");

                entity.Property(e => e.PrtSw)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("PRT_SW");

                entity.Property(e => e.PrtUsr)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("PRT_USR");

                entity.Property(e => e.Rem)
                    .HasColumnType("text")
                    .HasColumnName("REM");

                entity.Property(e => e.SalNo)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("SAL_NO");

                entity.Property(e => e.SoId)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("SO_ID");

                entity.Property(e => e.SoNo)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("SO_NO");

                entity.Property(e => e.SqDd)
                    .HasColumnType("datetime")
                    .HasColumnName("SQ_DD");

                entity.Property(e => e.SqNo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("SQ_NO");

                entity.Property(e => e.SysDate)
                    .HasColumnType("datetime")
                    .HasColumnName("SYS_DATE");

                entity.Property(e => e.SysDate1)
                    .HasColumnType("datetime")
                    .HasColumnName("SysDate");

                entity.Property(e => e.TaskId).HasColumnName("TASK_ID");

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Usr)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("USR");

                entity.Property(e => e.UsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<MfSqd>(entity =>
            {
                entity.ToTable("MF_SQD");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BatNo)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("BAT_NO");

                entity.Property(e => e.BfType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("BF_TYPE");

                entity.Property(e => e.BilId)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("BIL_ID");

                entity.Property(e => e.BilNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("BIL_NO");

                entity.Property(e => e.BilType)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("BIL_TYPE");

                entity.Property(e => e.BilType1)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("BilType");

                entity.Property(e => e.BilTypeName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.BusiNo)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.CancelId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CANCEL_ID");

                entity.Property(e => e.CasNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CAS_NO");

                entity.Property(e => e.ChkDate).HasColumnType("datetime");

                entity.Property(e => e.ChkMan)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("CHK_MAN");

                entity.Property(e => e.ChkMan1)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ChkMan");

                entity.Property(e => e.ChkManName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkMob)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.ClsDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CLS_DATE");

                entity.Property(e => e.ClsDate1)
                    .HasColumnType("datetime")
                    .HasColumnName("ClsDate");

                entity.Property(e => e.ClsId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CLS_ID");

                entity.Property(e => e.ClsUsr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ClsUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.CpySw)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CPY_SW");

                entity.Property(e => e.Dep)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("DEP");

                entity.Property(e => e.DepMl)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("DEP_ML");

                entity.Property(e => e.JhSoNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("JH_SO_NO");

                entity.Property(e => e.LockDate)
                    .HasColumnType("datetime")
                    .HasColumnName("LOCK_DATE");

                entity.Property(e => e.LockMan)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("LOCK_MAN");

                entity.Property(e => e.MobId)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("MOB_ID");

                entity.Property(e => e.ModifyDd)
                    .HasColumnType("datetime")
                    .HasColumnName("MODIFY_DD");

                entity.Property(e => e.ModifyMan)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("MODIFY_MAN");

                entity.Property(e => e.PoOk)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("PO_OK");

                entity.Property(e => e.PrtDate)
                    .HasColumnType("datetime")
                    .HasColumnName("PRT_DATE");

                entity.Property(e => e.PrtSw)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("PRT_SW");

                entity.Property(e => e.PrtUsr)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("PRT_USR");

                entity.Property(e => e.Reason)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("REASON");

                entity.Property(e => e.Rem)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("REM");

                entity.Property(e => e.SalNo)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("SAL_NO");

                entity.Property(e => e.SqDd)
                    .HasColumnType("datetime")
                    .HasColumnName("SQ_DD");

                entity.Property(e => e.SqId)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("SQ_ID");

                entity.Property(e => e.SqNo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("SQ_NO");

                entity.Property(e => e.SysDate)
                    .HasColumnType("datetime")
                    .HasColumnName("SYS_DATE");

                entity.Property(e => e.SysDate1)
                    .HasColumnType("datetime")
                    .HasColumnName("SysDate");

                entity.Property(e => e.TaskId).HasColumnName("TASK_ID");

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Usr)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("USR");

                entity.Property(e => e.UsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<MfStM>(entity =>
            {
                entity.ToTable("MF_ST_M");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BilId)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("BIL_ID");

                entity.Property(e => e.BilNo)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("BIL_NO");

                entity.Property(e => e.BilType)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("BIL_TYPE");

                entity.Property(e => e.BilType1)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("BilType");

                entity.Property(e => e.BilTypeName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.BusiNo)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.CancelId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CANCEL_ID");

                entity.Property(e => e.ChkDate).HasColumnType("datetime");

                entity.Property(e => e.ChkMan)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("CHK_MAN");

                entity.Property(e => e.ChkMan1)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ChkMan");

                entity.Property(e => e.ChkManName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkMob)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.CloseId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CLOSE_ID");

                entity.Property(e => e.ClsDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CLS_DATE");

                entity.Property(e => e.ClsDate1)
                    .HasColumnType("datetime")
                    .HasColumnName("ClsDate");

                entity.Property(e => e.ClsUsr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ClsUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.CpySw)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CPY_SW");

                entity.Property(e => e.Dep)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("DEP");

                entity.Property(e => e.LockDate)
                    .HasColumnType("datetime")
                    .HasColumnName("LOCK_DATE");

                entity.Property(e => e.LockMan)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("LOCK_MAN");

                entity.Property(e => e.MobId)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("MOB_ID");

                entity.Property(e => e.ModifyDd)
                    .HasColumnType("datetime")
                    .HasColumnName("MODIFY_DD");

                entity.Property(e => e.ModifyMan)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("MODIFY_MAN");

                entity.Property(e => e.PrtDate)
                    .HasColumnType("datetime")
                    .HasColumnName("PRT_DATE");

                entity.Property(e => e.PrtSw)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("PRT_SW");

                entity.Property(e => e.PrtUsr)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("PRT_USR");

                entity.Property(e => e.Rem)
                    .HasColumnType("text")
                    .HasColumnName("REM");

                entity.Property(e => e.SalNo)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("SAL_NO");

                entity.Property(e => e.StDd)
                    .HasColumnType("datetime")
                    .HasColumnName("ST_DD");

                entity.Property(e => e.StId)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("ST_ID");

                entity.Property(e => e.StNo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ST_NO");

                entity.Property(e => e.SysDate)
                    .HasColumnType("datetime")
                    .HasColumnName("SYS_DATE");

                entity.Property(e => e.SysDate1)
                    .HasColumnType("datetime")
                    .HasColumnName("SysDate");

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Usr)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("USR");

                entity.Property(e => e.UsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.VohId)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("VOH_ID");

                entity.Property(e => e.VohNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("VOH_NO");
            });

            modelBuilder.Entity<MfStS>(entity =>
            {
                entity.ToTable("MF_ST_S");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BilId)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("BIL_ID");

                entity.Property(e => e.BilNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("BIL_NO");

                entity.Property(e => e.BilType)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.BilTypeName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.BusiNo)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.CancelId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CANCEL_ID");

                entity.Property(e => e.ChkDate).HasColumnType("datetime");

                entity.Property(e => e.ChkMan)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkManName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkMob)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.CloseId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CLOSE_ID");

                entity.Property(e => e.ClsDate).HasColumnType("datetime");

                entity.Property(e => e.ClsUsr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ClsUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.CpySw)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CPY_SW");

                entity.Property(e => e.Dep)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("DEP");

                entity.Property(e => e.LockDate)
                    .HasColumnType("datetime")
                    .HasColumnName("LOCK_DATE");

                entity.Property(e => e.LockMan)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("LOCK_MAN");

                entity.Property(e => e.PrtDate)
                    .HasColumnType("datetime")
                    .HasColumnName("PRT_DATE");

                entity.Property(e => e.PrtSw)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("PRT_SW");

                entity.Property(e => e.PrtUsr)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("PRT_USR");

                entity.Property(e => e.Rem).HasColumnType("text");

                entity.Property(e => e.SalNo)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("SAL_NO");

                entity.Property(e => e.StDd)
                    .HasColumnType("datetime")
                    .HasColumnName("ST_DD");

                entity.Property(e => e.StNo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ST_NO");

                entity.Property(e => e.SysDate).HasColumnType("datetime");

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Usr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<MfTb>(entity =>
            {
                entity.ToTable("MF_TB");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.AmtCls)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("AMT_CLS");

                entity.Property(e => e.AmtIrp)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("AMT_IRP");

                entity.Property(e => e.AmtnEp)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("AMTN_EP");

                entity.Property(e => e.AmtnEpIfrs)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("AMTN_EP_IFRS");

                entity.Property(e => e.AmtnIrp)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("AMTN_IRP");

                entity.Property(e => e.AmtnNetCls)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("AMTN_NET_CLS");

                entity.Property(e => e.ArpNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ARP_NO");

                entity.Property(e => e.BatNo)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("BAT_NO");

                entity.Property(e => e.BilComp)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("BIL_COMP");

                entity.Property(e => e.BilId)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("BIL_ID");

                entity.Property(e => e.BilNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("BIL_NO");

                entity.Property(e => e.BilType)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("BIL_TYPE");

                entity.Property(e => e.CancelId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CANCEL_ID");

                entity.Property(e => e.CasNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CAS_NO");

                entity.Property(e => e.ChkDays).HasColumnName("CHK_DAYS");

                entity.Property(e => e.ChkDd)
                    .HasColumnType("datetime")
                    .HasColumnName("CHK_DD");

                entity.Property(e => e.ChkMan)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("CHK_MAN");

                entity.Property(e => e.CloseId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CLOSE_ID");

                entity.Property(e => e.ClsDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CLS_DATE");

                entity.Property(e => e.ClsRem)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("CLS_REM");

                entity.Property(e => e.CpySw)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CPY_SW");

                entity.Property(e => e.CurId)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CUR_ID");

                entity.Property(e => e.CurIdIfrs)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CUR_ID_IFRS");

                entity.Property(e => e.CusNo)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("CUS_NO");

                entity.Property(e => e.CusOsNo)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("CUS_OS_NO");

                entity.Property(e => e.DateFqsk)
                    .HasColumnType("datetime")
                    .HasColumnName("DATE_FQSK");

                entity.Property(e => e.DateflagFqsk)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("DATEFLAG_FQSK");

                entity.Property(e => e.Dep)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("DEP");

                entity.Property(e => e.DzDate)
                    .HasColumnType("datetime")
                    .HasColumnName("DZ_DATE");

                entity.Property(e => e.DzUsr)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("DZ_USR");

                entity.Property(e => e.EpNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("EP_NO");

                entity.Property(e => e.ExcRto)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("EXC_RTO");

                entity.Property(e => e.ExcRtoIfrs)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("EXC_RTO_IFRS");

                entity.Property(e => e.FjNum).HasColumnName("FJ_NUM");

                entity.Property(e => e.IntDays).HasColumnName("INT_DAYS");

                entity.Property(e => e.InvBilId)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("INV_BIL_ID");

                entity.Property(e => e.InvBilNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("INV_BIL_NO");

                entity.Property(e => e.InvNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("INV_NO");

                entity.Property(e => e.KpId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("KP_ID");

                entity.Property(e => e.LockDate)
                    .HasColumnType("datetime")
                    .HasColumnName("LOCK_DATE");

                entity.Property(e => e.LockMan)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("LOCK_MAN");

                entity.Property(e => e.LzClsDd)
                    .HasColumnType("datetime")
                    .HasColumnName("LZ_CLS_DD");

                entity.Property(e => e.LzClsId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("LZ_CLS_ID");

                entity.Property(e => e.MmvohId)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("MMVOH_ID");

                entity.Property(e => e.MobId)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("MOB_ID");

                entity.Property(e => e.ModifyDd)
                    .HasColumnType("datetime")
                    .HasColumnName("MODIFY_DD");

                entity.Property(e => e.ModifyMan)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("MODIFY_MAN");

                entity.Property(e => e.PayDays).HasColumnName("PAY_DAYS");

                entity.Property(e => e.PayDd)
                    .HasColumnType("datetime")
                    .HasColumnName("PAY_DD");

                entity.Property(e => e.PayMth)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("PAY_MTH");

                entity.Property(e => e.PayRem)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("PAY_REM");

                entity.Property(e => e.PrtDate)
                    .HasColumnType("datetime")
                    .HasColumnName("PRT_DATE");

                entity.Property(e => e.PrtSw)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("PRT_SW");

                entity.Property(e => e.PrtUsr)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("PRT_USR");

                entity.Property(e => e.QsFqsk).HasColumnName("QS_FQSK");

                entity.Property(e => e.Qty1Cls)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY1_CLS");

                entity.Property(e => e.QtyCls)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_CLS");

                entity.Property(e => e.Rem)
                    .HasColumnType("text")
                    .HasColumnName("REM");

                entity.Property(e => e.RpNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("RP_NO");

                entity.Property(e => e.RtoFqsk)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("RTO_FQSK");

                entity.Property(e => e.RtoTax)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("RTO_TAX");

                entity.Property(e => e.SalNo)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("SAL_NO");

                entity.Property(e => e.ScanDate)
                    .HasColumnType("datetime")
                    .HasColumnName("SCAN_DATE");

                entity.Property(e => e.ScanId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SCAN_ID");

                entity.Property(e => e.ScanUsr)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("SCAN_USR");

                entity.Property(e => e.SendMth)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("SEND_MTH");

                entity.Property(e => e.SendWh)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("SEND_WH");

                entity.Property(e => e.SysDate)
                    .HasColumnType("datetime")
                    .HasColumnName("SYS_DATE");

                entity.Property(e => e.TaskId).HasColumnName("TASK_ID");

                entity.Property(e => e.TaxCls)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("TAX_CLS");

                entity.Property(e => e.TaxId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TAX_ID");

                entity.Property(e => e.TaxIrp)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("TAX_IRP");

                entity.Property(e => e.TbDd)
                    .HasColumnType("datetime")
                    .HasColumnName("TB_DD");

                entity.Property(e => e.TbNo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("TB_NO");

                entity.Property(e => e.TradMth)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("TRAD_MTH");

                entity.Property(e => e.TurnId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TURN_ID");

                entity.Property(e => e.TwId)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TW_ID");

                entity.Property(e => e.TwNo)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("TW_NO");

                entity.Property(e => e.Usr)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("USR");

                entity.Property(e => e.VohId)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("VOH_ID");

                entity.Property(e => e.VohNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("VOH_NO");

                entity.Property(e => e.ZhangId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ZHANG_ID");
            });

            modelBuilder.Entity<MfTi>(entity =>
            {
                entity.ToTable("MF_TI");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BackId)
                    .HasColumnName("BACK_ID")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.BatNo)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("BAT_NO");

                entity.Property(e => e.BilComp)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("BIL_COMP");

                entity.Property(e => e.BilId)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("BIL_ID");

                entity.Property(e => e.BilNo)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("BIL_NO");

                entity.Property(e => e.BilType)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.BilTypeName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.BusiNo)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.CancelId)
                    .HasColumnName("CANCEL_ID")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.ChkDate).HasColumnType("datetime");

                entity.Property(e => e.ChkMan)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkManName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkMob)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.ChktyId)
                    .HasColumnName("CHKTY_ID")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Chktypeid)
                    .HasColumnName("CHKTYPEID")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.ClsDate).HasColumnType("datetime");

                entity.Property(e => e.ClsUsr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ClsUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.CnttNo)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("CNTT_NO");

                entity.Property(e => e.CpySw)
                    .HasColumnName("CPY_SW")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.CusNo)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("CUS_NO");

                entity.Property(e => e.CusOsNo)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("CUS_OS_NO");

                entity.Property(e => e.Dep)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("DEP");

                entity.Property(e => e.FxWh)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("FX_WH");

                entity.Property(e => e.LockDate)
                    .HasColumnType("datetime")
                    .HasColumnName("LOCK_DATE");

                entity.Property(e => e.LockMan)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("LOCK_MAN");

                entity.Property(e => e.OsId)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("OS_ID");

                entity.Property(e => e.OsNo)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("OS_NO");

                entity.Property(e => e.PrtDate)
                    .HasColumnType("datetime")
                    .HasColumnName("PRT_DATE");

                entity.Property(e => e.PrtSw)
                    .HasColumnName("PRT_SW")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.PrtUsr)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("PRT_USR");

                entity.Property(e => e.RBusiNo)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("R_BusiNO");

                entity.Property(e => e.Rem)
                    .HasMaxLength(3500)
                    .IsUnicode(false);

                entity.Property(e => e.SalNo)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("SAL_NO");

                entity.Property(e => e.ScanDate)
                    .HasColumnType("datetime")
                    .HasColumnName("SCAN_DATE");

                entity.Property(e => e.ScanId)
                    .HasColumnName("SCAN_ID")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.ScanUsr)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("SCAN_USR");

                entity.Property(e => e.SysDate).HasColumnType("datetime");

                entity.Property(e => e.TiDd)
                    .HasColumnType("datetime")
                    .HasColumnName("TI_DD");

                entity.Property(e => e.TiId)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("TI_ID");

                entity.Property(e => e.TiNo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("TI_NO");

                entity.Property(e => e.TzNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("TZ_NO");

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Usr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ZjId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ZJ_ID");
            });

            modelBuilder.Entity<MfTw>(entity =>
            {
                entity.ToTable("MF_TW");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Adr)
                    .HasColumnType("text")
                    .HasColumnName("ADR");

                entity.Property(e => e.Amt)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("AMT");

                entity.Property(e => e.AmtDisCnt)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("AMT_DIS_CNT");

                entity.Property(e => e.AmtInt)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("AMT_INT");

                entity.Property(e => e.AmtnNet)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("AMTN_NET");

                entity.Property(e => e.AmtnNetInt)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("AMTN_NET_INT");

                entity.Property(e => e.BackId)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("BACK_ID");

                entity.Property(e => e.BatNo)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("BAT_NO");

                entity.Property(e => e.BilId)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("BIL_ID");

                entity.Property(e => e.BilNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("BIL_NO");

                entity.Property(e => e.BilType)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("BIL_TYPE");

                entity.Property(e => e.CancelId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CANCEL_ID");

                entity.Property(e => e.CasNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CAS_NO");

                entity.Property(e => e.CfId)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("CF_ID");

                entity.Property(e => e.ChkDays).HasColumnName("CHK_DAYS");

                entity.Property(e => e.ChkDd)
                    .HasColumnType("datetime")
                    .HasColumnName("CHK_DD");

                entity.Property(e => e.ChkId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CHK_ID");

                entity.Property(e => e.ChkMan)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("CHK_MAN");

                entity.Property(e => e.CloseId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CLOSE_ID");

                entity.Property(e => e.ClsDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CLS_DATE");

                entity.Property(e => e.ClsRem)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("CLS_REM");

                entity.Property(e => e.CnttNo)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("CNTT_NO");

                entity.Property(e => e.Contract)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("CONTRACT");

                entity.Property(e => e.Control).HasColumnName("CONTROL");

                entity.Property(e => e.CpySw)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CPY_SW");

                entity.Property(e => e.Cst)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("CST");

                entity.Property(e => e.CurId)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CUR_ID");

                entity.Property(e => e.CusDown)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("CUS_DOWN");

                entity.Property(e => e.CusNo)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("CUS_NO");

                entity.Property(e => e.CusNoSo)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("CUS_NO_SO");

                entity.Property(e => e.CusOsNo)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("CUS_OS_NO");

                entity.Property(e => e.CusUp)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("CUS_UP");

                entity.Property(e => e.CvId).HasColumnName("CV_ID");

                entity.Property(e => e.DateFqsk)
                    .HasColumnType("datetime")
                    .HasColumnName("DATE_FQSK");

                entity.Property(e => e.DateflagFqsk)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("DATEFLAG_FQSK");

                entity.Property(e => e.Dep)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("DEP");

                entity.Property(e => e.DisCnt)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("DIS_CNT");

                entity.Property(e => e.EstDd)
                    .HasColumnType("datetime")
                    .HasColumnName("EST_DD");

                entity.Property(e => e.EstItm).HasColumnName("EST_ITM");

                entity.Property(e => e.ExcRto)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("EXC_RTO");

                entity.Property(e => e.FinDd)
                    .HasColumnType("datetime")
                    .HasColumnName("FIN_DD");

                entity.Property(e => e.FjNum).HasColumnName("FJ_NUM");

                entity.Property(e => e.FreeId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("FREE_ID");

                entity.Property(e => e.IdNo)
                    .HasMaxLength(38)
                    .IsUnicode(false)
                    .HasColumnName("ID_NO");

                entity.Property(e => e.IntDays).HasColumnName("INT_DAYS");

                entity.Property(e => e.InvBilId)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("INV_BIL_ID");

                entity.Property(e => e.InvBilNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("INV_BIL_NO");

                entity.Property(e => e.InvNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("INV_NO");

                entity.Property(e => e.Isfirst)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ISFIRST");

                entity.Property(e => e.Issvs).HasColumnName("ISSVS");

                entity.Property(e => e.LockDate)
                    .HasColumnType("datetime")
                    .HasColumnName("LOCK_DATE");

                entity.Property(e => e.LockMan)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("LOCK_MAN");

                entity.Property(e => e.MlByMm)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ML_BY_MM");

                entity.Property(e => e.MlNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ML_NO");

                entity.Property(e => e.MlOk).HasColumnName("ML_OK");

                entity.Property(e => e.MmCurml).HasColumnName("MM_CURML");

                entity.Property(e => e.MoNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("MO_NO");

                entity.Property(e => e.MobId)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("MOB_ID");

                entity.Property(e => e.ModifyDd)
                    .HasColumnType("datetime")
                    .HasColumnName("MODIFY_DD");

                entity.Property(e => e.ModifyMan)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("MODIFY_MAN");

                entity.Property(e => e.MrpNo)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("MRP_NO");

                entity.Property(e => e.MvId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("MV_ID");

                entity.Property(e => e.OldId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("OLD_ID");

                entity.Property(e => e.PayDays).HasColumnName("PAY_DAYS");

                entity.Property(e => e.PayDd)
                    .HasColumnType("datetime")
                    .HasColumnName("PAY_DD");

                entity.Property(e => e.PayMth)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("PAY_MTH");

                entity.Property(e => e.PayRem)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("PAY_REM");

                entity.Property(e => e.PoOk)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("PO_OK");

                entity.Property(e => e.PrdMark)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("PRD_MARK")
                    .HasDefaultValueSql("(space((0)))");

                entity.Property(e => e.PrtDate)
                    .HasColumnType("datetime")
                    .HasColumnName("PRT_DATE");

                entity.Property(e => e.PrtNum).HasColumnName("PRT_NUM");

                entity.Property(e => e.PrtSw)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("PRT_SW");

                entity.Property(e => e.PrtUsr)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("PRT_USR");

                entity.Property(e => e.Q2Id).HasColumnName("Q2_ID");

                entity.Property(e => e.Q3Id)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("Q3_ID");

                entity.Property(e => e.QcYn)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("QC_YN");

                entity.Property(e => e.QlId).HasColumnName("QL_ID");

                entity.Property(e => e.QsFqsk).HasColumnName("QS_FQSK");

                entity.Property(e => e.Qty)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY");

                entity.Property(e => e.Qty1)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY1");

                entity.Property(e => e.QtyChk)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_CHK");

                entity.Property(e => e.QtyChkUnsh)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_CHK_UNSH");

                entity.Property(e => e.QtyDm)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_DM");

                entity.Property(e => e.QtyDmUnsh)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_DM_UNSH");

                entity.Property(e => e.QtyDz)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_DZ");

                entity.Property(e => e.QtyDzUnsh)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_DZ_UNSH");

                entity.Property(e => e.QtyLost)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_LOST");

                entity.Property(e => e.QtyLostSzc)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_LOST_SZC");

                entity.Property(e => e.QtyLostSzcUnsh)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_LOST_SZC_UNSH");

                entity.Property(e => e.QtyLostUnsh)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_LOST_UNSH");

                entity.Property(e => e.QtyLostZc)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_LOST_ZC");

                entity.Property(e => e.QtyLostZcUnsh)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_LOST_ZC_UNSH");

                entity.Property(e => e.QtyMl)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_ML");

                entity.Property(e => e.QtyMlUnsh)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_ML_UNSH");

                entity.Property(e => e.QtyMv)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_MV");

                entity.Property(e => e.QtyMvUnsh)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_MV_UNSH");

                entity.Property(e => e.QtyPrc)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_PRC");

                entity.Property(e => e.QtyQl)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_QL");

                entity.Property(e => e.QtyQlUnsh)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_QL_UNSH");

                entity.Property(e => e.QtyRk)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_RK");

                entity.Property(e => e.QtyRkUnsh)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_RK_UNSH");

                entity.Property(e => e.QtyRtn)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_RTN");

                entity.Property(e => e.QtyRtnUnsh)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_RTN_UNSH");

                entity.Property(e => e.QtySl)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_SL");

                entity.Property(e => e.QtySlUnsh)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_SL_UNSH");

                entity.Property(e => e.QtyTc)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_TC");

                entity.Property(e => e.QtyTcUnsh)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_TC_UNSH");

                entity.Property(e => e.QtyWh)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_WH");

                entity.Property(e => e.Rem)
                    .HasColumnType("text")
                    .HasColumnName("REM");

                entity.Property(e => e.RpNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("RP_NO");

                entity.Property(e => e.RpNo1)
                    .HasColumnType("text")
                    .HasColumnName("RP_NO1");

                entity.Property(e => e.RtoFqsk)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("RTO_FQSK");

                entity.Property(e => e.RtoTax)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("RTO_TAX");

                entity.Property(e => e.SalNo)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("SAL_NO");

                entity.Property(e => e.ScmDd)
                    .HasColumnType("datetime")
                    .HasColumnName("SCM_DD");

                entity.Property(e => e.ScmUsr)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("SCM_USR");

                entity.Property(e => e.SendMth)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("SEND_MTH");

                entity.Property(e => e.SendWh)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("SEND_WH");

                entity.Property(e => e.SgId1)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SG_ID1");

                entity.Property(e => e.SoNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("SO_NO");

                entity.Property(e => e.StaDd)
                    .HasColumnType("datetime")
                    .HasColumnName("STA_DD");

                entity.Property(e => e.SupPrdMark)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("SUP_PRD_MARK");

                entity.Property(e => e.SupPrdNo)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("SUP_PRD_NO");

                entity.Property(e => e.SysDate)
                    .HasColumnType("datetime")
                    .HasColumnName("SYS_DATE");

                entity.Property(e => e.TaskId).HasColumnName("TASK_ID");

                entity.Property(e => e.Tax)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("TAX");

                entity.Property(e => e.TaxId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TAX_ID");

                entity.Property(e => e.TaxInt)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("TAX_INT");

                entity.Property(e => e.TsId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TS_ID");

                entity.Property(e => e.TwDd)
                    .HasColumnType("datetime")
                    .HasColumnName("TW_DD");

                entity.Property(e => e.TwNo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("TW_NO");

                entity.Property(e => e.Unit)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("UNIT");

                entity.Property(e => e.Up)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("UP");

                entity.Property(e => e.Up1)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("UP1");

                entity.Property(e => e.Usr)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("USR");

                entity.Property(e => e.VohId)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("VOH_ID");

                entity.Property(e => e.VohNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("VOH_NO");

                entity.Property(e => e.Wh)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("WH");

                entity.Property(e => e.WtNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("WT_NO");

                entity.Property(e => e.ZcItm).HasColumnName("ZC_ITM");

                entity.Property(e => e.ZcNo)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ZC_NO");

                entity.Property(e => e.ZcNoDn)
                    .HasMaxLength(440)
                    .IsUnicode(false)
                    .HasColumnName("ZC_NO_DN");

                entity.Property(e => e.ZcNoUp)
                    .HasMaxLength(440)
                    .IsUnicode(false)
                    .HasColumnName("ZC_NO_UP");

                entity.Property(e => e.ZcRem)
                    .HasColumnType("text")
                    .HasColumnName("ZC_REM");

                entity.Property(e => e.ZhangId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ZHANG_ID");

                entity.Property(e => e.ZtDd)
                    .HasColumnType("datetime")
                    .HasColumnName("ZT_DD");

                entity.Property(e => e.ZtId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ZT_ID");
            });

            modelBuilder.Entity<MfTy>(entity =>
            {
                entity.ToTable("MF_TY");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.ArpNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ARP_NO");

                entity.Property(e => e.Barcode)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("BARCODE");

                entity.Property(e => e.BilId)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("BIL_ID");

                entity.Property(e => e.BilNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("BIL_NO");

                entity.Property(e => e.BilType)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.BilTypeName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.BusiNo)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.CancelId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CANCEL_ID");

                entity.Property(e => e.ChkDate).HasColumnType("datetime");

                entity.Property(e => e.ChkKnd)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CHK_KND");

                entity.Property(e => e.ChkMan)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkManName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkMob)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.ChkResult)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CHK_RESULT");

                entity.Property(e => e.ClsDate).HasColumnType("datetime");

                entity.Property(e => e.ClsIdLost).HasColumnName("CLS_ID_LOST");

                entity.Property(e => e.ClsIdOk).HasColumnName("CLS_ID_OK");

                entity.Property(e => e.ClsUsr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ClsUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.CnttNo)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("CNTT_NO");

                entity.Property(e => e.CurId)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CUR_ID");

                entity.Property(e => e.CusNo)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("CUS_NO");

                entity.Property(e => e.CusOsNo)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("CUS_OS_NO");

                entity.Property(e => e.Dep)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("DEP");

                entity.Property(e => e.ExcRto)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("EXC_RTO");

                entity.Property(e => e.FxWh)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("FX_WH");

                entity.Property(e => e.Olefield)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OLEFIELD");

                entity.Property(e => e.PfaNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("PFA_NO");

                entity.Property(e => e.PhotoZc).HasColumnName("PHOTO_ZC");

                entity.Property(e => e.PrdList)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("PRD_LIST");

                entity.Property(e => e.PrdNo)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("PRD_NO");

                entity.Property(e => e.PreClsId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("PRE_CLS_ID");

                entity.Property(e => e.PrjFeature)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("PRJ_FEATURE");

                entity.Property(e => e.PrjNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("PRJ_NO");

                entity.Property(e => e.PrjType)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("PRJ_TYPE");

                entity.Property(e => e.PrtDate)
                    .HasColumnType("datetime")
                    .HasColumnName("PRT_DATE");

                entity.Property(e => e.QcReport)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("QC_REPORT");

                entity.Property(e => e.Qty)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY");

                entity.Property(e => e.QtyActChk)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_ACT_CHK");

                entity.Property(e => e.QtyLost)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_LOST");

                entity.Property(e => e.QtyOk)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_OK");

                entity.Property(e => e.QtyScrap)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_SCRAP");

                entity.Property(e => e.Rem)
                    .HasMaxLength(3500)
                    .IsUnicode(false);

                entity.Property(e => e.SalNo)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("SAL_NO");

                entity.Property(e => e.ScanDate)
                    .HasColumnType("datetime")
                    .HasColumnName("SCAN_DATE");

                entity.Property(e => e.ScanId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SCAN_ID");

                entity.Property(e => e.ScanUsr)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("SCAN_USR");

                entity.Property(e => e.SysDate).HasColumnType("datetime");

                entity.Property(e => e.TaxId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TAX_ID");

                entity.Property(e => e.TbNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("TB_NO");

                entity.Property(e => e.TiId)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TI_ID");

                entity.Property(e => e.TiNo)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("TI_NO");

                entity.Property(e => e.TyDd)
                    .HasColumnType("datetime")
                    .HasColumnName("TY_DD");

                entity.Property(e => e.TyId)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("TY_ID");

                entity.Property(e => e.TyNo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("TY_NO");

                entity.Property(e => e.TzNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("TZ_NO");

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Usr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.VohId)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("VOH_ID");

                entity.Property(e => e.VohNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("VOH_NO");

                entity.Property(e => e.ZhangId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ZHANG_ID");
            });

            modelBuilder.Entity<MfTyprocjyZ>(entity =>
            {
                entity.ToTable("MF_TYPROCJY_Z");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Mid).HasColumnName("MID");

                entity.Property(e => e.UcRead)
                    .IsRequired()
                    .HasMaxLength(2000)
                    .HasColumnName("uc_READ")
                    .HasDefaultValueSql("('')");
            });

            modelBuilder.Entity<MfTz>(entity =>
            {
                entity.ToTable("MF_TZ");

                entity.HasIndex(e => new { e.TzDd, e.SebNo }).HasName("IX_MF_TZ");

                entity.HasIndex(e => e.TzNo).HasName("IX_MF_TZ_1")
                    .IsUnique();

                entity.HasIndex(e => new { e.MrpNo, e.ZcNo }).HasName("IX_MF_TZ_2");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BatNo)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("BAT_NO");

                entity.Property(e => e.BilId)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("BIL_ID");

                entity.Property(e => e.BilNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("BIL_NO");

                entity.Property(e => e.BilType)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.BilTypeName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.BusiNo)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkDate).HasColumnType("datetime");

                entity.Property(e => e.ChkId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CHK_ID");

                entity.Property(e => e.ChkMan)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkManName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkMob)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Chkqcsj).HasColumnName("CHKQCSJ");

                entity.Property(e => e.ClsDate).HasColumnType("datetime");

                entity.Property(e => e.ClsUsr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ClsUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Cst)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("CST");

                entity.Property(e => e.CstMake)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("CST_MAKE");

                entity.Property(e => e.CstMan)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("CST_MAN");

                entity.Property(e => e.CstOut)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("CST_OUT");

                entity.Property(e => e.CstPrd)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("CST_PRD");

                entity.Property(e => e.CusOsNo)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("CUS_OS_NO");

                entity.Property(e => e.Dep)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("DEP");

                entity.Property(e => e.DepDown)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("DEP_DOWN");

                entity.Property(e => e.DepUp)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("DEP_UP");

                entity.Property(e => e.EndDd)
                    .HasColumnType("datetime")
                    .HasColumnName("END_DD");

                entity.Property(e => e.EstItm).HasColumnName("EST_ITM");

                entity.Property(e => e.FinDd)
                    .HasColumnType("datetime")
                    .HasColumnName("FIN_DD");

                entity.Property(e => e.GpId).HasColumnName("GP_ID");

                entity.Property(e => e.GrpNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("GRP_NO");

                entity.Property(e => e.HeatNum)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("HEAT_NUM");

                entity.Property(e => e.IdNo)
                    .HasMaxLength(38)
                    .IsUnicode(false)
                    .HasColumnName("ID_NO");

                entity.Property(e => e.MdNo)
                    .HasMaxLength(400)
                    .IsUnicode(false)
                    .HasColumnName("MD_NO");

                entity.Property(e => e.MlFin).HasColumnName("ML_FIN");

                entity.Property(e => e.MlOk)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ML_OK");

                entity.Property(e => e.MoNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("MO_NO");

                entity.Property(e => e.MrpNo)
                    .IsRequired()
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("MRP_NO");

                entity.Property(e => e.MvId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("MV_ID");

                entity.Property(e => e.OpnDd)
                    .HasColumnType("datetime")
                    .HasColumnName("OPN_DD");

                entity.Property(e => e.OutDdMoj)
                    .HasColumnType("datetime")
                    .HasColumnName("OUT_DD_MOJ");

                entity.Property(e => e.PcBan)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("PC_BAN");

                entity.Property(e => e.PcItm).HasColumnName("PC_ITM");

                entity.Property(e => e.PrdMark)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("PRD_MARK")
                    .HasDefaultValueSql("(space((0)))");

                entity.Property(e => e.Qty)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY");

                entity.Property(e => e.Qty1)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY1");

                entity.Property(e => e.QtyChk)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_CHK");

                entity.Property(e => e.QtyChkUnsh)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_CHK_UNSH");

                entity.Property(e => e.QtyFin)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_FIN");

                entity.Property(e => e.QtyLost)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_LOST");

                entity.Property(e => e.QtyLostSzc)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_LOST_SZC");

                entity.Property(e => e.QtyMl)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_ML");

                entity.Property(e => e.QtyMv)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_MV");

                entity.Property(e => e.QtyPrc)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_PRC");

                entity.Property(e => e.QtyQs)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_QS");

                entity.Property(e => e.QtyQsUnsh)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_QS_UNSH");

                entity.Property(e => e.QtyRk)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_RK");

                entity.Property(e => e.QtyScrap)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_Scrap");

                entity.Property(e => e.Rem)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("REM");

                entity.Property(e => e.Rrem)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("RREM");

                entity.Property(e => e.SalNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SAL_NO");

                entity.Property(e => e.SebNo)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("SEB_NO");

                entity.Property(e => e.SoNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("SO_NO");

                entity.Property(e => e.StaDd)
                    .HasColumnType("datetime")
                    .HasColumnName("STA_DD");

                entity.Property(e => e.SysDate).HasColumnType("datetime");

                entity.Property(e => e.TaskId).HasColumnName("TASK_ID");

                entity.Property(e => e.TimeCnt)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("TIME_CNT");

                entity.Property(e => e.TzDd)
                    .HasColumnType("datetime")
                    .HasColumnName("TZ_DD");

                entity.Property(e => e.TzNo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("TZ_NO");

                entity.Property(e => e.TzState)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TZ_STATE");

                entity.Property(e => e.Unit)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("UNIT");

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UsedTime)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("USED_TIME");

                entity.Property(e => e.Usr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ZcItm).HasColumnName("ZC_ITM");

                entity.Property(e => e.ZcNo)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ZC_NO");

                entity.Property(e => e.ZcNoDn)
                    .HasMaxLength(440)
                    .IsUnicode(false)
                    .HasColumnName("ZC_NO_DN");

                entity.Property(e => e.ZcNoUp)
                    .HasMaxLength(440)
                    .IsUnicode(false)
                    .HasColumnName("ZC_NO_UP");

                entity.Property(e => e.ZtDd)
                    .HasColumnType("datetime")
                    .HasColumnName("ZT_DD");

                entity.Property(e => e.ZtId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ZT_ID");
            });

            modelBuilder.Entity<MfUnqcRecord>(entity =>
            {
                entity.ToTable("MF_UNQC_RECORD");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BilType)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.BilTypeName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.BusiNo)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkDate).HasColumnType("datetime");

                entity.Property(e => e.ChkMan)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkManName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkMob)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.ClsDate).HasColumnType("datetime");

                entity.Property(e => e.ClsUsr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ClsUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Date)
                    .HasColumnType("datetime")
                    .HasColumnName("DATE");

                entity.Property(e => e.No)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NO");

                entity.Property(e => e.PrdNo)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("PRD_NO");

                entity.Property(e => e.Rem)
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.SalNo)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("SAL_NO");

                entity.Property(e => e.SysDate).HasColumnType("datetime");

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Usr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ZcNo)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("ZC_NO");
            });

            modelBuilder.Entity<MfUnqcprdhl>(entity =>
            {
                entity.ToTable("MF_UNQCPRDHL");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BilId)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("BIL_ID");

                entity.Property(e => e.BilNo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("BIL_NO");

                entity.Property(e => e.BilType)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.BilTypeName)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.BillDate).HasColumnType("datetime");

                entity.Property(e => e.BusiNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.ChkDate).HasColumnType("datetime");

                entity.Property(e => e.ChkMan)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.ChkManName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.ChkMob)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.ClsDate).HasColumnType("datetime");

                entity.Property(e => e.ClsUsr)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.ClsUsrName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.CusNo)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("CUS_NO");

                entity.Property(e => e.IdNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ID_NO");

                entity.Property(e => e.IsClose).HasDefaultValueSql("((0))");

                entity.Property(e => e.IsPrint).HasDefaultValueSql("((0))");

                entity.Property(e => e.MoNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("MO_NO");

                entity.Property(e => e.No)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.OpCusNo)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("OP_CUS_NO");

                entity.Property(e => e.OpDd)
                    .HasColumnType("datetime")
                    .HasColumnName("OP_DD");

                entity.Property(e => e.PrdNo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("PRD_NO");

                entity.Property(e => e.Rem)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.SalNo)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("SAL_NO");

                entity.Property(e => e.SysDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.TzNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TZ_NO");

                entity.Property(e => e.UpdDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Usr)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.UsrName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.ZcNo)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ZC_NO");
            });

            modelBuilder.Entity<MfVhid>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("MF_VHID");

                entity.Property(e => e.A)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.BilId)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("BIL_ID");

                entity.Property(e => e.Dep)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("DEP");

                entity.Property(e => e.Name)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NAME");

                entity.Property(e => e.Redflag)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("REDFLAG");

                entity.Property(e => e.RemId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("REM_ID");

                entity.Property(e => e.UpDd).HasColumnName("UP_DD");

                entity.Property(e => e.VohId)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("VOH_ID");
            });

            modelBuilder.Entity<MfWjM>(entity =>
            {
                entity.ToTable("MF_WJ_M");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BDdRep)
                    .HasColumnType("datetime")
                    .HasColumnName("B_DD_REP");

                entity.Property(e => e.BilType)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("BIL_TYPE");

                entity.Property(e => e.BilType1)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("BilType");

                entity.Property(e => e.BilTypeName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.BusiNo)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.CancelId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CANCEL_ID");

                entity.Property(e => e.ChkDate).HasColumnType("datetime");

                entity.Property(e => e.ChkMan)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("CHK_MAN");

                entity.Property(e => e.ChkMan1)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ChkMan");

                entity.Property(e => e.ChkManName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkMob)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.CloseId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CLOSE_ID");

                entity.Property(e => e.ClsDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CLS_DATE");

                entity.Property(e => e.ClsDate1)
                    .HasColumnType("datetime")
                    .HasColumnName("ClsDate");

                entity.Property(e => e.ClsUsr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ClsUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.CpySw)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CPY_SW");

                entity.Property(e => e.CusNo)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("CUS_NO");

                entity.Property(e => e.Dep)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("DEP");

                entity.Property(e => e.DepRep)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("DEP_REP");

                entity.Property(e => e.EDdRep)
                    .HasColumnType("datetime")
                    .HasColumnName("E_DD_REP");

                entity.Property(e => e.LockDate)
                    .HasColumnType("datetime")
                    .HasColumnName("LOCK_DATE");

                entity.Property(e => e.LockMan)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("LOCK_MAN");

                entity.Property(e => e.MobId)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("MOB_ID");

                entity.Property(e => e.ModifyDd)
                    .HasColumnType("datetime")
                    .HasColumnName("MODIFY_DD");

                entity.Property(e => e.ModifyMan)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("MODIFY_MAN");

                entity.Property(e => e.PrtDate)
                    .HasColumnType("datetime")
                    .HasColumnName("PRT_DATE");

                entity.Property(e => e.PrtSw)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("PRT_SW");

                entity.Property(e => e.PrtUsr)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("PRT_USR");

                entity.Property(e => e.Rem)
                    .HasColumnType("text")
                    .HasColumnName("REM");

                entity.Property(e => e.RepNo)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("REP_NO");

                entity.Property(e => e.SalNo)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("SAL_NO");

                entity.Property(e => e.SysDate)
                    .HasColumnType("datetime")
                    .HasColumnName("SYS_DATE");

                entity.Property(e => e.SysDate1)
                    .HasColumnType("datetime")
                    .HasColumnName("SysDate");

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Usr)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("USR");

                entity.Property(e => e.UsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.WxjDd)
                    .HasColumnType("datetime")
                    .HasColumnName("WXJ_DD");

                entity.Property(e => e.WxjId)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("WXJ_ID");

                entity.Property(e => e.WxjNo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("WXJ_NO");
            });

            modelBuilder.Entity<MfWjS>(entity =>
            {
                entity.ToTable("MF_WJ_S");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BDdRep)
                    .HasColumnType("datetime")
                    .HasColumnName("B_DD_REP");

                entity.Property(e => e.BilType)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.BilTypeName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.BusiNo)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkDate).HasColumnType("datetime");

                entity.Property(e => e.ChkMan)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkManName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkMob)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.ClsDate).HasColumnType("datetime");

                entity.Property(e => e.ClsUsr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ClsUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.CusNo)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("CUS_NO");

                entity.Property(e => e.Dep)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("DEP");

                entity.Property(e => e.DepRep)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("DEP_REP");

                entity.Property(e => e.EDdRep)
                    .HasColumnType("datetime")
                    .HasColumnName("E_DD_REP");

                entity.Property(e => e.Rem)
                    .HasMaxLength(3500)
                    .IsUnicode(false);

                entity.Property(e => e.RepNo)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("REP_NO");

                entity.Property(e => e.SalNo)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("SAL_NO");

                entity.Property(e => e.SalRep)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("SAL_REP");

                entity.Property(e => e.SalRepLeader)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("SAL_REP_Leader");

                entity.Property(e => e.SebEngineer)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("SEB_Engineer");

                entity.Property(e => e.SebNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("SEB_NO");

                entity.Property(e => e.Status)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.SysDate).HasColumnType("datetime");

                entity.Property(e => e.TimeRep)
                    .HasColumnType("decimal(18, 4)")
                    .HasColumnName("TIME_REP");

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Usr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.WsSbSal)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("WS_SB_SAL");

                entity.Property(e => e.WxjDd)
                    .HasColumnType("datetime")
                    .HasColumnName("WXJ_DD");

                entity.Property(e => e.WxjId)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("WXJ_ID");

                entity.Property(e => e.WxjNo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("WXJ_NO");
            });

            modelBuilder.Entity<MfWxM>(entity =>
            {
                entity.ToTable("MF_WX_M");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Amt)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("AMT");

                entity.Property(e => e.Amtn)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("AMTN");

                entity.Property(e => e.BilId)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("BIL_ID");

                entity.Property(e => e.BilNo)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("BIL_NO");

                entity.Property(e => e.BilType)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("BIL_TYPE");

                entity.Property(e => e.BilType1)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("BilType");

                entity.Property(e => e.BilTypeName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.BusiNo)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.CancelId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CANCEL_ID");

                entity.Property(e => e.ChkDate).HasColumnType("datetime");

                entity.Property(e => e.ChkMan)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("CHK_MAN");

                entity.Property(e => e.ChkMan1)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ChkMan");

                entity.Property(e => e.ChkManName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkMob)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.CloseId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CLOSE_ID");

                entity.Property(e => e.ClsDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CLS_DATE");

                entity.Property(e => e.ClsDate1)
                    .HasColumnType("datetime")
                    .HasColumnName("ClsDate");

                entity.Property(e => e.ClsUsr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ClsUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.CpySw)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CPY_SW");

                entity.Property(e => e.CurId)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CUR_ID");

                entity.Property(e => e.CusNo)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("CUS_NO");

                entity.Property(e => e.Dep)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("DEP");

                entity.Property(e => e.DepRep)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("DEP_REP");

                entity.Property(e => e.ExcRto)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("EXC_RTO");

                entity.Property(e => e.LockDate)
                    .HasColumnType("datetime")
                    .HasColumnName("LOCK_DATE");

                entity.Property(e => e.LockMan)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("LOCK_MAN");

                entity.Property(e => e.MobId)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("MOB_ID");

                entity.Property(e => e.ModifyDd)
                    .HasColumnType("datetime")
                    .HasColumnName("MODIFY_DD");

                entity.Property(e => e.ModifyMan)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("MODIFY_MAN");

                entity.Property(e => e.PrtDate)
                    .HasColumnType("datetime")
                    .HasColumnName("PRT_DATE");

                entity.Property(e => e.PrtSw)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("PRT_SW");

                entity.Property(e => e.PrtUsr)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("PRT_USR");

                entity.Property(e => e.Rem)
                    .HasColumnType("text")
                    .HasColumnName("REM");

                entity.Property(e => e.SalNo)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("SAL_NO");

                entity.Property(e => e.SysDate)
                    .HasColumnType("datetime")
                    .HasColumnName("SYS_DATE");

                entity.Property(e => e.SysDate1)
                    .HasColumnType("datetime")
                    .HasColumnName("SysDate");

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Usr)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("USR");

                entity.Property(e => e.UsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.WxBeDate)
                    .HasColumnType("datetime")
                    .HasColumnName("WX_BE_DATE");

                entity.Property(e => e.WxDd)
                    .HasColumnType("datetime")
                    .HasColumnName("WX_DD");

                entity.Property(e => e.WxEnDate)
                    .HasColumnType("datetime")
                    .HasColumnName("WX_EN_DATE");

                entity.Property(e => e.WxId)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("WX_ID");

                entity.Property(e => e.WxNo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("WX_NO");
            });

            modelBuilder.Entity<MfWxS>(entity =>
            {
                entity.ToTable("MF_WX_S");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BilId)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("BIL_ID");

                entity.Property(e => e.BilNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("BIL_NO");

                entity.Property(e => e.BilType)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.BilTypeName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.BusiNo)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkDate).HasColumnType("datetime");

                entity.Property(e => e.ChkMan)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkManName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkMob)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.ClsDate).HasColumnType("datetime");

                entity.Property(e => e.ClsUsr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ClsUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.CommEnDate)
                    .HasColumnType("datetime")
                    .HasColumnName("COMM_EN_DATE");

                entity.Property(e => e.CusNo)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("CUS_NO");

                entity.Property(e => e.Dep)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("DEP");

                entity.Property(e => e.DepRep)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("DEP_REP");

                entity.Property(e => e.Rem)
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.SalNo)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("SAL_NO");

                entity.Property(e => e.SysDate).HasColumnType("datetime");

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Usr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.WxBeDate)
                    .HasColumnType("datetime")
                    .HasColumnName("WX_BE_DATE");

                entity.Property(e => e.WxDd)
                    .HasColumnType("datetime")
                    .HasColumnName("WX_DD");

                entity.Property(e => e.WxEnDate)
                    .HasColumnType("datetime")
                    .HasColumnName("WX_EN_DATE");

                entity.Property(e => e.WxId)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("WX_ID");

                entity.Property(e => e.WxNo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("WX_NO");

                entity.Property(e => e.WxResult)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("WX_RESULT");

                entity.Property(e => e.WxTotTime)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("WX_TOT_TIME");
            });

            modelBuilder.Entity<MfZc>(entity =>
            {
                entity.ToTable("MF_ZC");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BilType)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.BilTypeName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.BomNo)
                    .HasMaxLength(38)
                    .IsUnicode(false)
                    .HasColumnName("BOM_NO");

                entity.Property(e => e.BusiNo)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkDate).HasColumnType("datetime");

                entity.Property(e => e.ChkMan)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkManName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkMob)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.ClsDate).HasColumnType("datetime");

                entity.Property(e => e.ClsUsr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ClsUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Dep)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("DEP");

                entity.Property(e => e.EffectDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Effect_Date");

                entity.Property(e => e.ExpiryDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Expiry_Date");

                entity.Property(e => e.Name)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("NAME");

                entity.Property(e => e.No)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("NO");

                entity.Property(e => e.PfNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("PF_NO");

                entity.Property(e => e.PrdMark)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("PRD_MARK")
                    .HasDefaultValueSql("(space((0)))");

                entity.Property(e => e.PrdNo)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("PRD_NO");

                entity.Property(e => e.Qty)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY");

                entity.Property(e => e.QtyBat)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_BAT");

                entity.Property(e => e.Rem).HasColumnType("text");

                entity.Property(e => e.Spc)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("SPC");

                entity.Property(e => e.SrcNo)
                    .HasMaxLength(36)
                    .IsUnicode(false)
                    .HasColumnName("Src_No");

                entity.Property(e => e.SrcType)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("Src_Type");

                entity.Property(e => e.SysDate).HasColumnType("datetime");

                entity.Property(e => e.Unit)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("UNIT");

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Usr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<MfZg>(entity =>
            {
                entity.ToTable("MF_ZG");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Adr)
                    .HasColumnType("text")
                    .HasColumnName("ADR");

                entity.Property(e => e.Amt)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("AMT");

                entity.Property(e => e.AmtPoi).HasColumnName("AMT_POI");

                entity.Property(e => e.BatNo)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("BAT_NO");

                entity.Property(e => e.BilId)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("BIL_ID");

                entity.Property(e => e.BilNo)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("BIL_NO");

                entity.Property(e => e.BilType)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("BIL_TYPE");

                entity.Property(e => e.BilType1)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("BilType");

                entity.Property(e => e.BilTypeName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.BusiNo)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.CancelId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CANCEL_ID");

                entity.Property(e => e.CasNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CAS_NO");

                entity.Property(e => e.ChkDate).HasColumnType("datetime");

                entity.Property(e => e.ChkDays).HasColumnName("CHK_DAYS");

                entity.Property(e => e.ChkDd)
                    .HasColumnType("datetime")
                    .HasColumnName("CHK_DD");

                entity.Property(e => e.ChkMan)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("CHK_MAN");

                entity.Property(e => e.ChkMan1)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ChkMan");

                entity.Property(e => e.ChkManName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkMob)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.ClsDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CLS_DATE");

                entity.Property(e => e.ClsDate1)
                    .HasColumnType("datetime")
                    .HasColumnName("ClsDate");

                entity.Property(e => e.ClsId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CLS_ID");

                entity.Property(e => e.ClsRem)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("CLS_REM");

                entity.Property(e => e.ClsUsr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ClsUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Clsid1)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CLSID");

                entity.Property(e => e.CnttNo)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("CNTT_NO");

                entity.Property(e => e.Contract)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("CONTRACT");

                entity.Property(e => e.CpySw)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CPY_SW");

                entity.Property(e => e.CurId)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CUR_ID");

                entity.Property(e => e.CurIdIfrs)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CUR_ID_IFRS");

                entity.Property(e => e.CusNo)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("CUS_NO");

                entity.Property(e => e.CusOsNo)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("CUS_OS_NO");

                entity.Property(e => e.DateFqsk)
                    .HasColumnType("datetime")
                    .HasColumnName("DATE_FQSK");

                entity.Property(e => e.DateflagFqsk)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("DATEFLAG_FQSK");

                entity.Property(e => e.Dep)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("DEP");

                entity.Property(e => e.DisCnt)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("DIS_CNT");

                entity.Property(e => e.ExcRto)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("EXC_RTO");

                entity.Property(e => e.ExcRtoIfrs)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("EXC_RTO_IFRS");

                entity.Property(e => e.FjNum).HasColumnName("FJ_NUM");

                entity.Property(e => e.HcId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("HC_ID");

                entity.Property(e => e.IntDays).HasColumnName("INT_DAYS");

                entity.Property(e => e.LockDate)
                    .HasColumnType("datetime")
                    .HasColumnName("LOCK_DATE");

                entity.Property(e => e.LockMan)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("LOCK_MAN");

                entity.Property(e => e.MobId)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("MOB_ID");

                entity.Property(e => e.ModifyDd)
                    .HasColumnType("datetime")
                    .HasColumnName("MODIFY_DD");

                entity.Property(e => e.ModifyMan)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("MODIFY_MAN");

                entity.Property(e => e.OsId)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("OS_ID");

                entity.Property(e => e.OsNo)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("OS_NO");

                entity.Property(e => e.PayDays).HasColumnName("PAY_DAYS");

                entity.Property(e => e.PayDd)
                    .HasColumnType("datetime")
                    .HasColumnName("PAY_DD");

                entity.Property(e => e.PayMth)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("PAY_MTH");

                entity.Property(e => e.PayRem)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("PAY_REM");

                entity.Property(e => e.PoId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("PO_ID");

                entity.Property(e => e.PrtDate)
                    .HasColumnType("datetime")
                    .HasColumnName("PRT_DATE");

                entity.Property(e => e.PrtSw)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("PRT_SW");

                entity.Property(e => e.PrtUsr)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("PRT_USR");

                entity.Property(e => e.QsFqsk).HasColumnName("QS_FQSK");

                entity.Property(e => e.Rem)
                    .HasColumnType("text")
                    .HasColumnName("REM");

                entity.Property(e => e.RtoFqsk)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("RTO_FQSK");

                entity.Property(e => e.SalNo)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("SAL_NO");

                entity.Property(e => e.ScanDate)
                    .HasColumnType("datetime")
                    .HasColumnName("SCAN_DATE");

                entity.Property(e => e.ScanId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SCAN_ID");

                entity.Property(e => e.ScanUsr)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("SCAN_USR");

                entity.Property(e => e.SendMth)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("SEND_MTH");

                entity.Property(e => e.SendWh)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("SEND_WH");

                entity.Property(e => e.SgId)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("SG_ID");

                entity.Property(e => e.SgNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("SG_NO");

                entity.Property(e => e.SysDate)
                    .HasColumnType("datetime")
                    .HasColumnName("SYS_DATE");

                entity.Property(e => e.SysDate1)
                    .HasColumnType("datetime")
                    .HasColumnName("SysDate");

                entity.Property(e => e.TaskId).HasColumnName("TASK_ID");

                entity.Property(e => e.TaxId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TAX_ID");

                entity.Property(e => e.TradMth)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("TRAD_MTH");

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Usr)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("USR");

                entity.Property(e => e.UsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.VohId)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("VOH_ID");

                entity.Property(e => e.VohNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("VOH_NO");

                entity.Property(e => e.ZbNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ZB_NO");

                entity.Property(e => e.ZgDd)
                    .HasColumnType("datetime")
                    .HasColumnName("ZG_DD");

                entity.Property(e => e.ZgId)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("ZG_ID");

                entity.Property(e => e.ZgNo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ZG_NO");

                entity.Property(e => e.ZhangId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ZHANG_ID");
            });

            modelBuilder.Entity<MkYg>(entity =>
            {
                entity.ToTable("MK_YG");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BackReason)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("BACK_REASON");

                entity.Property(e => e.BanGroupNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("BAN_GROUP_NO");

                entity.Property(e => e.BanNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("BAN_NO");

                entity.Property(e => e.Barcode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.BatNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("BAT_NO");

                entity.Property(e => e.BilDd)
                    .HasColumnType("datetime")
                    .HasColumnName("BIL_DD");

                entity.Property(e => e.BilId)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("BIL_ID");

                entity.Property(e => e.BilNo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("BIL_NO");

                entity.Property(e => e.BomNo)
                    .HasMaxLength(38)
                    .IsUnicode(false)
                    .HasColumnName("BOM_NO");

                entity.Property(e => e.BusiNo)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.DeliveryDep)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("DELIVERY_DEP");

                entity.Property(e => e.DjNo)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("DJ_NO");

                entity.Property(e => e.EndDd)
                    .HasColumnType("datetime")
                    .HasColumnName("END_DD");

                entity.Property(e => e.IsDelete).HasColumnName("isDelete");

                entity.Property(e => e.Itm).HasColumnName("ITM");

                entity.Property(e => e.KeyItm).HasColumnName("KEY_ITM");

                entity.Property(e => e.Mid).HasColumnName("MID");

                entity.Property(e => e.MoNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("MO_NO");

                entity.Property(e => e.ModNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("MOD_NO")
                    .HasDefaultValueSql("(space((0)))");

                entity.Property(e => e.PrdMark)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("PRD_MARK")
                    .HasDefaultValueSql("(space((0)))");

                entity.Property(e => e.PrdNo)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("PRD_NO");

                entity.Property(e => e.Qty)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY");

                entity.Property(e => e.QtyLost)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_LOST");

                entity.Property(e => e.QtyScrap)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_Scrap");

                entity.Property(e => e.QtyZc)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_ZC");

                entity.Property(e => e.Rem)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("REM");

                entity.Property(e => e.ResponsibilityDep)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("RESPONSIBILITY_DEP");

                entity.Property(e => e.SalNo)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("SAL_NO");

                entity.Property(e => e.SebNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("SEB_NO")
                    .HasDefaultValueSql("(space((0)))");

                entity.Property(e => e.SpcNo)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("SPC_NO");

                entity.Property(e => e.StaDd)
                    .HasColumnType("datetime")
                    .HasColumnName("STA_DD");

                entity.Property(e => e.StationNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SysDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.TzNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("TZ_NO");

                entity.Property(e => e.Unit)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("UNIT");

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.UseTime)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("USE_TIME");

                entity.Property(e => e.Usr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UsrName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.WorkGroup)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.YgNo)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("YG_NO");

                entity.Property(e => e.ZcNo)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ZC_NO");
            });

            modelBuilder.Entity<Mkpg>(entity =>
            {
                entity.ToTable("MKPG");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BatNo)
                    .IsRequired()
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.BilType)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.BilTypeName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.BillDate).HasColumnType("datetime");

                entity.Property(e => e.BusiNo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.ChkDate).HasColumnType("datetime");

                entity.Property(e => e.ChkMan)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkManName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkMob)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.ClsDate).HasColumnType("datetime");

                entity.Property(e => e.ClsUsr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ClsUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Dep)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("DEP")
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.EndDd)
                    .HasColumnType("datetime")
                    .HasColumnName("END_DD");

                entity.Property(e => e.MoNo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("MO_No")
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.No)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.PgDd)
                    .HasColumnType("datetime")
                    .HasColumnName("PG_DD");

                entity.Property(e => e.Pgno)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("PGNo")
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.PrdNo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("PRD_No")
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Qty)
                    .HasColumnType("decimal(18, 4)")
                    .HasColumnName("qty");

                entity.Property(e => e.QtyMm)
                    .HasColumnType("decimal(18, 4)")
                    .HasColumnName("qtyMM");

                entity.Property(e => e.QtyMo)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("qtyMO");

                entity.Property(e => e.QtyPg)
                    .HasColumnType("decimal(18, 4)")
                    .HasColumnName("qtyPG");

                entity.Property(e => e.QtyPgn)
                    .HasColumnType("decimal(18, 4)")
                    .HasColumnName("qtyPGN");

                entity.Property(e => e.Rem)
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.SalNo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SAL_No")
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.StaDd)
                    .HasColumnType("datetime")
                    .HasColumnName("STA_DD");

                entity.Property(e => e.SysDate).HasColumnType("datetime");

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Usr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Mkpgs>(entity =>
            {
                entity.ToTable("MKPGS");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BanNo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("BAN_No");

                entity.Property(e => e.EndDd)
                    .HasColumnType("datetime")
                    .HasColumnName("END_DD");

                entity.Property(e => e.Mid).HasColumnName("MID");

                entity.Property(e => e.ModNo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("MOD_NO");

                entity.Property(e => e.Pmhours)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("PMHours");

                entity.Property(e => e.Qty)
                    .HasColumnType("decimal(18, 4)")
                    .HasColumnName("qty");

                entity.Property(e => e.QtyPm)
                    .HasColumnType("decimal(18, 4)")
                    .HasColumnName("QTY_PM");

                entity.Property(e => e.SMemo)
                    .IsRequired()
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("sMemo");

                entity.Property(e => e.SalNo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SAL_No");

                entity.Property(e => e.SalNoHead)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SAL_NoHead");

                entity.Property(e => e.SebNo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SEB_NO");

                entity.Property(e => e.StaDd)
                    .HasColumnType("datetime")
                    .HasColumnName("STA_DD");

                entity.Property(e => e.TzNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TZ_NO");

                entity.Property(e => e.UpFix)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("UP_FIX");

                entity.Property(e => e.ZcNo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ZC_No");
            });

            modelBuilder.Entity<MmMaterielRequest>(entity =>
            {
                entity.ToTable("MM_MaterielRequest");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.CreateUser).HasMaxLength(50);

                entity.Property(e => e.LatestDate).HasColumnType("datetime");

                entity.Property(e => e.PlanQuantity).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.ProcessNo)
                    .HasMaxLength(50)
                    .HasColumnName("Process_No");

                entity.Property(e => e.ProdNo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnName("Prod_No");

                entity.Property(e => e.ReceiveQuantity)
                    .HasColumnType("decimal(18, 2)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.RequestDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.RequestQuantity).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.SendQuantity)
                    .HasColumnType("decimal(18, 2)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.SourceNo).HasMaxLength(50);

                entity.Property(e => e.SourceWh)
                    .HasMaxLength(50)
                    .HasColumnName("SourceWH");

                entity.Property(e => e.StationNo)
                    .HasMaxLength(50)
                    .HasColumnName("Station_No");

                entity.Property(e => e.Status).HasMaxLength(20);

                entity.Property(e => e.Supplier).HasMaxLength(50);

                entity.Property(e => e.TargetWh)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnName("TargetWH");

                entity.Property(e => e.TransferNo).HasMaxLength(50);

                entity.Property(e => e.Type)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Unit).HasMaxLength(20);

                entity.Property(e => e.UpdateDate).HasColumnType("datetime");

                entity.Property(e => e.UpdateUser).HasMaxLength(50);

                entity.Property(e => e.WkCenterNo)
                    .HasMaxLength(50)
                    .HasColumnName("Wk_Center_No");
            });

            modelBuilder.Entity<MmMaterielRequestList>(entity =>
            {
                entity.ToTable("MM_MaterielRequestList");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.CallCause)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Call_Cause");

                entity.Property(e => e.CreateTime).HasColumnType("datetime");

                entity.Property(e => e.CreateUser)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CstPrd)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("CST_PRD");

                entity.Property(e => e.PlanQuantity).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.ProdNo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Prod_No");

                entity.Property(e => e.Status)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TzNo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TZ_NO");

                entity.Property(e => e.UpdateTime).HasColumnType("datetime");

                entity.Property(e => e.UpdateUser)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.WkCenterNo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("WkCenter_No");
            });

            modelBuilder.Entity<ModDisqualreason>(entity =>
            {
                entity.ToTable("MOD_DISQUALREASON");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.ChkDate).HasColumnType("datetime");

                entity.Property(e => e.ChkMan)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.ChkManName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.ChkMob)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.IsPrint).HasDefaultValueSql("((0))");

                entity.Property(e => e.Name)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.No)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("NO");

                entity.Property(e => e.SysDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Usr)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.UsrName)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");
            });

            modelBuilder.Entity<ModRecord>(entity =>
            {
                entity.ToTable("MOD_RECORD");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.MoNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("MO_NO");

                entity.Property(e => e.ModName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("MOD_NAME");

                entity.Property(e => e.ModNo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("MOD_NO");

                entity.Property(e => e.SysDate).HasColumnType("datetime");

                entity.Property(e => e.TzNo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TZ_NO");

                entity.Property(e => e.UseQty).HasColumnName("USE_QTY");

                entity.Property(e => e.Usr)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.UsrName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.WrDd)
                    .HasColumnType("datetime")
                    .HasColumnName("WR_DD");

                entity.Property(e => e.WrNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("WR_NO");
            });

            modelBuilder.Entity<MojGrp>(entity =>
            {
                entity.ToTable("MOJ_GRP");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.ChkDate).HasColumnType("datetime");

                entity.Property(e => e.ChkMan)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkManName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkMob)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.GrpNo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("GRP_NO");

                entity.Property(e => e.ModNo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("MOD_NO");

                entity.Property(e => e.Name)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("NAME");

                entity.Property(e => e.Qty).HasColumnName("QTY");

                entity.Property(e => e.Rem)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("REM");

                entity.Property(e => e.SysDate).HasColumnType("datetime");

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Usr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Mold>(entity =>
            {
                entity.ToTable("MOLD");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.ChkDate).HasColumnType("datetime");

                entity.Property(e => e.ChkMan)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkManName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkMob)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.ChkQualified)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CHK_QUALIFIED");

                entity.Property(e => e.CstGr)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("CST_GR");

                entity.Property(e => e.CusNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CUS_NO");

                entity.Property(e => e.CycleTime)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("CYCLE_TIME");

                entity.Property(e => e.Dep)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("DEP");

                entity.Property(e => e.DepUse)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("DEP_USE");

                entity.Property(e => e.DeproNo)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("DEPRO_NO");

                entity.Property(e => e.FtMm).HasColumnName("FT_MM");

                entity.Property(e => e.FtType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("FT_TYPE");

                entity.Property(e => e.GrDd)
                    .HasColumnType("datetime")
                    .HasColumnName("GR_DD");

                entity.Property(e => e.GraphNo)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("GRAPH_NO");

                entity.Property(e => e.Height)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("HEIGHT");

                entity.Property(e => e.HoursAll)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("HOURS_ALL");

                entity.Property(e => e.IdxNo).HasColumnName("IDX_NO");

                entity.Property(e => e.InvalidDd)
                    .HasColumnType("datetime")
                    .HasColumnName("INVALID_DD");

                entity.Property(e => e.JgqtyChg).HasColumnName("JGQTY_CHG");

                entity.Property(e => e.JgqtyChgdate)
                    .HasColumnType("datetime")
                    .HasColumnName("JGQTY_CHGDATE");

                entity.Property(e => e.LastStgTime)
                    .HasColumnType("datetime")
                    .HasColumnName("LAST_STG_TIME");

                entity.Property(e => e.LiftCrop)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("LIFT_CROP");

                entity.Property(e => e.LiftTime)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("LIFT_TIME");

                entity.Property(e => e.LiftYear)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("LIFT_YEAR");

                entity.Property(e => e.Lines).HasColumnName("LINES");

                entity.Property(e => e.MaintenanceTimes)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("MAINTENANCE_TIMES");

                entity.Property(e => e.ModId)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("MOD_ID");

                entity.Property(e => e.ModItm)
                    .HasColumnName("MOD_ITM")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.ModNo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("MOD_NO");

                entity.Property(e => e.ModQrcode)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("MOD_QRCODE");

                entity.Property(e => e.ModSpec)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("MOD_Spec");

                entity.Property(e => e.ModStatus)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("MOD_STATUS");

                entity.Property(e => e.ModStgState)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("MOD_STG_STATE");

                entity.Property(e => e.ModType)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("MOD_TYPE");

                entity.Property(e => e.ModUseState)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("MOD_USE_STATE");

                entity.Property(e => e.ModUsedtime)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("MOD_USEDTIME");

                entity.Property(e => e.Name)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("NAME");

                entity.Property(e => e.OpnDd)
                    .HasColumnType("datetime")
                    .HasColumnName("OPN_DD");

                entity.Property(e => e.Pic).HasColumnName("PIC");

                entity.Property(e => e.PrdNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("PRD_NO");

                entity.Property(e => e.Purpose)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("PURPOSE");

                entity.Property(e => e.QtyCirIn)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_CIR_IN");

                entity.Property(e => e.QtyCirOut)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_CIR_OUT");

                entity.Property(e => e.QtyCrop)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_CROP");

                entity.Property(e => e.QtyCropUt)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_CROP_UT");

                entity.Property(e => e.QtyDay)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_DAY");

                entity.Property(e => e.QtyLen)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("QTY_LEN");

                entity.Property(e => e.QualifiedDd)
                    .HasColumnType("datetime")
                    .HasColumnName("QUALIFIED_DD");

                entity.Property(e => e.RecheckTimes)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("RECHECK_TIMES");

                entity.Property(e => e.Rem)
                    .HasMaxLength(2000)
                    .IsUnicode(false)
                    .HasColumnName("REM");

                entity.Property(e => e.SalNoBg)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("SAL_NO_BG");

                entity.Property(e => e.ShowId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SHOW_ID");

                entity.Property(e => e.Spc)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("SPC");

                entity.Property(e => e.SpcId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SPC_ID");

                entity.Property(e => e.Stock)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("STOCK");

                entity.Property(e => e.StopDd)
                    .HasColumnType("datetime")
                    .HasColumnName("STOP_DD");

                entity.Property(e => e.SysDate).HasColumnType("datetime");

                entity.Property(e => e.TaxRto)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("TAX_RTO");

                entity.Property(e => e.TimeUnit)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIME_UNIT");

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UseNum).HasColumnName("USE_NUM");

                entity.Property(e => e.UseSeb)
                    .HasColumnType("text")
                    .HasColumnName("USE_SEB");

                entity.Property(e => e.UseTimes).HasColumnName("USE_TIMES");

                entity.Property(e => e.UsetimeChgdate)
                    .HasColumnType("datetime")
                    .HasColumnName("USETIME_CHGDATE");

                entity.Property(e => e.UsetimeQtyChg).HasColumnName("USETIME_QTY_CHG");

                entity.Property(e => e.Usr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Ut)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("UT");

                entity.Property(e => e.UtTime)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("UT_TIME");

                entity.Property(e => e.VenderNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("Vender_No");

                entity.Property(e => e.WarmMtTime)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("WARM_MT_TIME");

                entity.Property(e => e.WarmTime)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("WARM_TIME");

                entity.Property(e => e.WarningNum).HasColumnName("Warning_Num");

                entity.Property(e => e.Weight)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("WEIGHT");

                entity.Property(e => e.Wh)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("WH");

                entity.Property(e => e.Width)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("WIDTH");

                entity.Property(e => e.WxDdL)
                    .HasColumnType("datetime")
                    .HasColumnName("WX_DD_L");

                entity.Property(e => e.WxTimes).HasColumnName("WX_TIMES");
            });

            modelBuilder.Entity<MoldMaintainPlan>(entity =>
            {
                entity.ToTable("MOLD_MAINTAIN_PLAN");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.ActQtyCycle)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("ActQTY_Cycle");

                entity.Property(e => e.BilType)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.BilTypeName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.BillDate).HasColumnType("datetime");

                entity.Property(e => e.BusiNo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.ChkDate).HasColumnType("datetime");

                entity.Property(e => e.ChkMan)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.ChkManName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.ChkMob)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.ClsDate).HasColumnType("datetime");

                entity.Property(e => e.ClsUsr)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.ClsUsrName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Dep)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("DEP");

                entity.Property(e => e.IsClose).HasDefaultValueSql("((0))");

                entity.Property(e => e.IsPrint).HasDefaultValueSql("((0))");

                entity.Property(e => e.JhSpec)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("JH_Spec");

                entity.Property(e => e.JhStatus)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("JH_Status");

                entity.Property(e => e.ModCycleUnit)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("MOD_CycleUnit");

                entity.Property(e => e.ModNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("MOD_NO");

                entity.Property(e => e.Name)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.No)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NO");

                entity.Property(e => e.QtyCycle).HasColumnName("QTY_Cycle");

                entity.Property(e => e.Rem)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.SalNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("SAL_NO");

                entity.Property(e => e.Standard)
                    .HasColumnType("decimal(18, 4)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.StationNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("Station_NO");

                entity.Property(e => e.SysDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Usr)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.UsrName)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");
            });

            modelBuilder.Entity<MoldMaintainSpec>(entity =>
            {
                entity.ToTable("MOLD_MAINTAIN_SPEC");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BilType)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.BilTypeName)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.BillDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.BusiNo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.ChkDate).HasColumnType("datetime");

                entity.Property(e => e.ChkMan)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.ChkManName)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.ChkMob)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.ClsDate).HasColumnType("datetime");

                entity.Property(e => e.ClsUsr)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.ClsUsrName)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Dep)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("DEP");

                entity.Property(e => e.ModCycleUnit)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("MOD_CycleUnit");

                entity.Property(e => e.ModName)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("MOD_Name");

                entity.Property(e => e.ModNo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("MOD_NO");

                entity.Property(e => e.Name)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.No)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NO");

                entity.Property(e => e.PostNo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("POST_NO");

                entity.Property(e => e.QtyCycle).HasColumnName("QTY_Cycle");

                entity.Property(e => e.Rem)
                    .IsRequired()
                    .HasMaxLength(3500)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Standard)
                    .HasColumnType("numeric(18, 0)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.SysDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.UpdDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.UpdUsr)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.UpdUsrName)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Usr)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.UsrName)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Version)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<MoldMtOrder>(entity =>
            {
                entity.ToTable("MOLD_MT_ORDER");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BilNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("BIL_NO");

                entity.Property(e => e.BilType)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.BilTypeName)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.BillDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.BusiNo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.ChkDate).HasColumnType("datetime");

                entity.Property(e => e.ChkMan)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.ChkManName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.ChkMob)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.ClsDate).HasColumnType("datetime");

                entity.Property(e => e.ClsUsr)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.ClsUsrName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.EndDd)
                    .HasColumnType("datetime")
                    .HasColumnName("END_DD");

                entity.Property(e => e.GdSource)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("GD_Source");

                entity.Property(e => e.IsClose).HasDefaultValueSql("((0))");

                entity.Property(e => e.IsPrint).HasDefaultValueSql("((0))");

                entity.Property(e => e.JhDd)
                    .HasColumnType("datetime")
                    .HasColumnName("JH_DD");

                entity.Property(e => e.ModNo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("MOD_NO");

                entity.Property(e => e.Name).HasMaxLength(120);

                entity.Property(e => e.No)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NO");

                entity.Property(e => e.Rem)
                    .HasMaxLength(1000)
                    .IsUnicode(false);

                entity.Property(e => e.SalNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("SAL_NO");

                entity.Property(e => e.SpecNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("Spec_NO");

                entity.Property(e => e.Standard)
                    .HasColumnType("decimal(18, 4)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.StationNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("Station_NO");

                entity.Property(e => e.Status)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.SysDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.UpdDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Usr)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.UsrName)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");
            });

            modelBuilder.Entity<MoldMtorderInfo>(entity =>
            {
                entity.ToTable("MOLD_MTORDER_INFO");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.ActualAddAmount)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Content)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.ExcStatus)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.Itm).HasColumnName("ITM");

                entity.Property(e => e.Method)
                    .HasMaxLength(600)
                    .IsUnicode(false);

                entity.Property(e => e.Mid).HasColumnName("MID");

                entity.Property(e => e.OilsName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PartNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("Part_NO");

                entity.Property(e => e.Recorder)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Rem).HasMaxLength(2000);

                entity.Property(e => e.Result)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.SparePartsNo)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("SpareParts_NO");

                entity.Property(e => e.SpecImage).HasColumnType("image");

                entity.Property(e => e.SpecNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Spec_NO");

                entity.Property(e => e.Standard)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.StandardAddAmount)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Unit)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.HasOne(d => d.MidNavigation)
                    .WithMany(p => p.MoldMtorderInfo)
                    .HasForeignKey(d => d.Mid)
                    .HasConstraintName("FK_MOLD_MTORDER_INFO_MOLD_MT_ORDER");
            });

            modelBuilder.Entity<MoldMtspecInfo>(entity =>
            {
                entity.ToTable("MOLD_MTSPEC_INFO");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Content).HasMaxLength(2000);

                entity.Property(e => e.FaultHandle)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.Itm).HasColumnName("ITM");

                entity.Property(e => e.Lubrication)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Method).HasMaxLength(2000);

                entity.Property(e => e.Mid).HasColumnName("MID");

                entity.Property(e => e.No)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("NO");

                entity.Property(e => e.OilsName).HasMaxLength(200);

                entity.Property(e => e.Opportunity)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.Optype)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OPType");

                entity.Property(e => e.PartNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Part_NO");

                entity.Property(e => e.Rhpoints).HasColumnName("RHPoints");

                entity.Property(e => e.Rhtype)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("RHType");

                entity.Property(e => e.Standard)
                    .HasMaxLength(1000)
                    .IsUnicode(false);

                entity.Property(e => e.Unit)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.HasOne(d => d.MidNavigation)
                    .WithMany(p => p.MoldMtspecInfo)
                    .HasForeignKey(d => d.Mid)
                    .HasConstraintName("FK_MOLD_MTSPEC_INFO_MOLD_MAINTAIN_SPEC");
            });

            modelBuilder.Entity<MoldSpareparts>(entity =>
            {
                entity.ToTable("MOLD_SPAREPARTS");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.ChkDate).HasColumnType("datetime");

                entity.Property(e => e.ChkMan)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.ChkManName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.ChkMob)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.IsPrint).HasDefaultValueSql("((0))");

                entity.Property(e => e.ModCycleUnit)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("MOD_CycleUnit")
                    .HasDefaultValueSql("('0')");

                entity.Property(e => e.ModName)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("MOD_Name");

                entity.Property(e => e.ModNo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("MOD_NO");

                entity.Property(e => e.ModPartNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("MOD_PartNo");

                entity.Property(e => e.QtyCycle).HasColumnName("QTY_Cycle");

                entity.Property(e => e.SpNo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("SP_NO");

                entity.Property(e => e.SysDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Usr)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.UsrName)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");
            });

            modelBuilder.Entity<MoldTypeinfo>(entity =>
            {
                entity.ToTable("MOLD_TYPEINFO");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BusiNo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkDate).HasColumnType("datetime");

                entity.Property(e => e.ChkMan)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.ChkManName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.ChkMob)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.IsPrint).HasDefaultValueSql("((0))");

                entity.Property(e => e.Name)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.No)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NO");

                entity.Property(e => e.Rem)
                    .HasMaxLength(2000)
                    .IsUnicode(false);

                entity.Property(e => e.Status)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.SysDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Usr)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.UsrName)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");
            });

            modelBuilder.Entity<MoldWh>(entity =>
            {
                entity.ToTable("MOLD_WH");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.AmtnFt)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("AMTN_FT");

                entity.Property(e => e.ChkDate).HasColumnType("datetime");

                entity.Property(e => e.ChkMan)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkManName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkMob)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.ChkQualified)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CHK_QUALIFIED");

                entity.Property(e => e.CstGr)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("CST_GR");

                entity.Property(e => e.CusNo)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("CUS_NO");

                entity.Property(e => e.DepUse)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("DEP_USE");

                entity.Property(e => e.FtMm).HasColumnName("FT_MM");

                entity.Property(e => e.FtMmLast)
                    .HasColumnType("datetime")
                    .HasColumnName("FT_MM_LAST");

                entity.Property(e => e.FtType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("FT_TYPE");

                entity.Property(e => e.GrDd)
                    .HasColumnType("datetime")
                    .HasColumnName("GR_DD");

                entity.Property(e => e.HoursAll)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("HOURS_ALL");

                entity.Property(e => e.InvalidDd)
                    .HasColumnType("datetime")
                    .HasColumnName("INVALID_DD");

                entity.Property(e => e.LiftCrop)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("LIFT_CROP");

                entity.Property(e => e.LiftTime)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("LIFT_TIME");

                entity.Property(e => e.LiftYear)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("LIFT_YEAR");

                entity.Property(e => e.ModId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("MOD_ID");

                entity.Property(e => e.ModItm).HasColumnName("MOD_ITM");

                entity.Property(e => e.ModNo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("MOD_NO");

                entity.Property(e => e.Name)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("NAME");

                entity.Property(e => e.OpnDd)
                    .HasColumnType("datetime")
                    .HasColumnName("OPN_DD");

                entity.Property(e => e.QtyCrop)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_CROP");

                entity.Property(e => e.QualifiedDd)
                    .HasColumnType("datetime")
                    .HasColumnName("QUALIFIED_DD");

                entity.Property(e => e.Rem)
                    .HasColumnType("text")
                    .HasColumnName("REM");

                entity.Property(e => e.SalNoBg)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("SAL_NO_BG");

                entity.Property(e => e.Spc)
                    .HasMaxLength(800)
                    .HasColumnName("SPC");

                entity.Property(e => e.StateId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("STATE_ID");

                entity.Property(e => e.StopDd)
                    .HasColumnType("datetime")
                    .HasColumnName("STOP_DD");

                entity.Property(e => e.SysDate).HasColumnType("datetime");

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UseNum).HasColumnName("USE_NUM");

                entity.Property(e => e.UseTimes).HasColumnName("USE_TIMES");

                entity.Property(e => e.Usr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Wh)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("WH");

                entity.Property(e => e.WxDdL)
                    .HasColumnType("datetime")
                    .HasColumnName("WX_DD_L");

                entity.Property(e => e.WxTimes).HasColumnName("WX_TIMES");
            });

            modelBuilder.Entity<MoldingDeviateT>(entity =>
            {
                entity.ToTable("MOLDING_DEVIATE_T");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.CoolMode)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("COOL_MODE");

                entity.Property(e => e.CumDev)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("CUM_DEV");

                entity.Property(e => e.DevEnd)
                    .HasColumnType("datetime")
                    .HasColumnName("DEV_END");

                entity.Property(e => e.DevSta)
                    .HasColumnType("datetime")
                    .HasColumnName("DEV_STA");

                entity.Property(e => e.DevType)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("DEV_TYPE");

                entity.Property(e => e.DevUnit)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("DEV_UNIT");

                entity.Property(e => e.LowLimit)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("LOW_LIMIT");

                entity.Property(e => e.Lowsybol)
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("LOWSYBOL");

                entity.Property(e => e.ModNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("MOD_NO");

                entity.Property(e => e.No)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NO");

                entity.Property(e => e.ParaName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("PARA_NAME");

                entity.Property(e => e.ParaNo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("PARA_NO");

                entity.Property(e => e.PrdNo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("PRD_NO");

                entity.Property(e => e.PrdType)
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("PRD_TYPE");

                entity.Property(e => e.SebNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SEB_NO");

                entity.Property(e => e.Status)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("STATUS");

                entity.Property(e => e.Systemdate)
                    .HasColumnType("datetime")
                    .HasColumnName("SYSTEMDATE");

                entity.Property(e => e.Threshold)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("THRESHOLD");

                entity.Property(e => e.UpLimit)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("UP_LIMIT");

                entity.Property(e => e.Upddate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDDATE");

                entity.Property(e => e.Upsybol)
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("UPSYBOL");
            });

            modelBuilder.Entity<MoldingDeviatesT>(entity =>
            {
                entity.ToTable("MOLDING_DEVIATES_T");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.DevTime)
                    .HasColumnType("datetime")
                    .HasColumnName("DEV_TIME");

                entity.Property(e => e.Mid).HasColumnName("MID");

                entity.Property(e => e.ParaName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("PARA_NAME");

                entity.Property(e => e.ParaNo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("PARA_NO");

                entity.Property(e => e.ParaValue)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("PARA_VALUE");

                entity.Property(e => e.SebNo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SEB_NO");

                entity.HasOne(d => d.MidNavigation)
                    .WithMany(p => p.MoldingDeviatesT)
                    .HasForeignKey(d => d.Mid)
                    .HasConstraintName("FK_MOLDING_DEVIATES_T_MOLDING_DEVIATE_T");
            });

            modelBuilder.Entity<MoldingRulesT>(entity =>
            {
                entity.ToTable("MOLDING_RULES_T");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.CoolMode)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("COOL_MODE");

                entity.Property(e => e.DevType)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("DEV_TYPE");

                entity.Property(e => e.DevUnit)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("DEV_UNIT");

                entity.Property(e => e.LowLimit)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("LOW_LIMIT");

                entity.Property(e => e.Lowsybol)
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("LOWSYBOL");

                entity.Property(e => e.ModNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("MOD_NO");

                entity.Property(e => e.ParaName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("PARA_NAME");

                entity.Property(e => e.ParaNo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("PARA_NO");

                entity.Property(e => e.ParaUnit)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("PARA_UNIT");

                entity.Property(e => e.PrdNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("PRD_NO");

                entity.Property(e => e.PrdType)
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("PRD_TYPE");

                entity.Property(e => e.Ptype)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("PTYPE");

                entity.Property(e => e.SebNo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SEB_NO");

                entity.Property(e => e.Sysdate)
                    .HasColumnType("datetime")
                    .HasColumnName("SYSDATE");

                entity.Property(e => e.Threshold)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("THRESHOLD");

                entity.Property(e => e.UpLimit)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("UP_LIMIT");

                entity.Property(e => e.Upddate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDDATE");

                entity.Property(e => e.Upsybol)
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("UPSYBOL");

                entity.Property(e => e.Usr)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("USR");
            });

            modelBuilder.Entity<MsAlert>(entity =>
            {
                entity.ToTable("MS_ALERT");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.AheadType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.ChkDate).HasColumnType("datetime");

                entity.Property(e => e.ChkMan)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.ChkManName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.ChkMob)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.DataBusiNo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Fields)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false);

                entity.Property(e => e.FieldsName)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false);

                entity.Property(e => e.IsPrint).HasDefaultValueSql("((0))");

                entity.Property(e => e.ItemCountSql)
                    .IsRequired()
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.ItemName)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Pid).HasColumnName("PID");

                entity.Property(e => e.Qrysql)
                    .IsRequired()
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("QRYSql");

                entity.Property(e => e.QuryField)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.QuryFieldName)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.RpCalStatus)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.RpCalStatusName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.SysDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Usr)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.UsrName)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");
            });

            modelBuilder.Entity<MsBorrow>(entity =>
            {
                entity.ToTable("MS_BORROW");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Amount).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.BilType)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.BilTypeName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.BillDate).HasColumnType("datetime");

                entity.Property(e => e.BorrowDate).HasColumnType("datetime");

                entity.Property(e => e.BorrowDep)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("BorrowDEP");

                entity.Property(e => e.BorrowDepname)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("BorrowDEPName");

                entity.Property(e => e.Borrower)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.BorrowerName)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.BusiNo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.CalLocal)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CalMode)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CalResult)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChargeMan)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChargeManName)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkDate).HasColumnType("datetime");

                entity.Property(e => e.ChkMan)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.ChkManName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ChkMob)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.ClsDate).HasColumnType("datetime");

                entity.Property(e => e.ClsUsr)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.ClsUsrName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.IsClose).HasDefaultValueSql("((0))");

                entity.Property(e => e.MngType)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.MsName)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.MsNo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("MsNO");

                entity.Property(e => e.MsType)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.MsTypeName)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.No)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Reason)
                    .IsRequired()
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.Rem)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.ReturnDate).HasColumnType("datetime");

                entity.Property(e => e.SysDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.UpdDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.UserName)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UserNo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("UserNO");

                entity.Property(e => e.Usr)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.UsrName)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<MsCalcycChange>(entity =>
            {
                entity.ToTable("MS_CALCYC_CHANGE");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BusiId)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("BusiID");

                entity.Property(e => e.CalCycNew).HasColumnName("CalCyc_New");

                entity.Property(e => e.CalDate).HasColumnType("datetime");

                entity.Property(e => e.CalDateNew)
                    .HasColumnType("datetime")
                    .HasColumnName("CalDate_New");

                entity.Property(e => e.CalResult)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChangeReason)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.ChkDate).HasColumnType("datetime");

                entity.Property(e => e.ChkMan)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.ChkManName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.ChkMob)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.CycUnit)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.CycUnitNew)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("CycUnit_New");

                entity.Property(e => e.FromBusiNo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Interval)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.IntervalNew)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("Interval_New");

                entity.Property(e => e.IsPrint).HasDefaultValueSql("((0))");

                entity.Property(e => e.MsName)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.MsNo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Rem)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.SysDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Usr)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.UsrName)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Vld)
                    .HasColumnType("datetime")
                    .HasColumnName("VLD");

                entity.Property(e => e.VldNew)
                    .HasColumnType("datetime")
                    .HasColumnName("VLD_New");
            });

            modelBuilder.Entity<MsCalinfo>(entity =>
            {
                entity.ToTable("MS_CALINFO");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.AfterCalStatus)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.CalContent)
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.CalCost).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.CalCycNew).HasColumnName("CalCyc_New");

                entity.Property(e => e.CalDateNew)
                    .HasColumnType("datetime")
                    .HasColumnName("CalDate_New");

                entity.Property(e => e.CalInstNew)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("CalInst_New");

                entity.Property(e => e.CalLocal)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CalMan)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.CalNoteNo)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CalResultNew)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("CalResult_New");

                entity.Property(e => e.CalRuleNo)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.CalStatus)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.CalStatusName)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.CalType)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CertNo1)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.CertNo2)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.CertNo3)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.CertNo4)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.CertNo5)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.CertTemp)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.CertType)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkDate).HasColumnType("datetime");

                entity.Property(e => e.ChkMan)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.ChkManName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkMob)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.ContactNew)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("Contact_New");

                entity.Property(e => e.CycUnitNew)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CycUnit_New");

                entity.Property(e => e.IntervalNew)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("Interval_New");

                entity.Property(e => e.MsName)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.MsNo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("MsNO");

                entity.Property(e => e.MsStandardContent)
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.MsStandardNo)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.MsStatus)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.No)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NO");

                entity.Property(e => e.OutterCert)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ReCalDate).HasColumnType("datetime");

                entity.Property(e => e.Rem)
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.SendCalDep)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.SoId).HasColumnName("SO_ID");

                entity.Property(e => e.SoNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SO_NO");

                entity.Property(e => e.SysDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Usr)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.UsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.VldNew)
                    .HasColumnType("datetime")
                    .HasColumnName("VLD_New");
            });

            modelBuilder.Entity<MsCalinstitution>(entity =>
            {
                entity.ToTable("MS_CALINSTITUTION");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Addres)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ChkDate).HasColumnType("datetime");

                entity.Property(e => e.ChkMan)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.ChkManName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkMob)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Contacts)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.InsName)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.InsType)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.No)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Phone)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Rem)
                    .IsRequired()
                    .HasMaxLength(3500)
                    .IsUnicode(false);

                entity.Property(e => e.SysDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Usr)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.UsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<MsCalnotice>(entity =>
            {
                entity.ToTable("MS_CALNOTICE");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BilType)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.BilTypeName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.BillDate).HasColumnType("datetime");

                entity.Property(e => e.BillMonth)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.BusiNo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.ChkDate).HasColumnType("datetime");

                entity.Property(e => e.ChkMan)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.ChkManName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkMob)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.ClsDate).HasColumnType("datetime");

                entity.Property(e => e.ClsUsr)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.ClsUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Constitutor)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.No)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.NotedQty).HasColumnName("NotedQTY");

                entity.Property(e => e.Received)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ReceivedDate).HasColumnType("datetime");

                entity.Property(e => e.Rem)
                    .IsRequired()
                    .HasMaxLength(3500)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.SendCalDate).HasColumnType("datetime");

                entity.Property(e => e.SendCalMan)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.SenderDep)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("SenderDEP");

                entity.Property(e => e.SenderMail)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SenderPhone)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.SysDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Title)
                    .IsRequired()
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.UpdDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.UpdUsr)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Usr)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.UsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.WaitCalQty).HasColumnName("WaitCalQTY");

                entity.Property(e => e.WaitNoteQty).HasColumnName("WaitNoteQTY");
            });

            modelBuilder.Entity<MsCalnoticeInfo>(entity =>
            {
                entity.ToTable("MS_CALNOTICE_INFO");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.CalDate).HasColumnType("datetime");

                entity.Property(e => e.CalDep)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.CalLocal)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CalMan)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.CalMode)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CalResult)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.FactoryNo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Initial)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Interval)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.Maker)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Mid).HasColumnName("MID");

                entity.Property(e => e.MngType)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.MsName)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.MsNo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("MsNO");

                entity.Property(e => e.MsStatus)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Ntno)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NTNO");

                entity.Property(e => e.Rem)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false);

                entity.Property(e => e.RpCalStatus)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.RpCalStatusName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Spc)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SPC");

                entity.Property(e => e.UserDep)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.UserDepNo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("UserDepNO");

                entity.Property(e => e.UserNo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("UserNO");

                entity.Property(e => e.Vld)
                    .HasColumnType("datetime")
                    .HasColumnName("VLD");

                entity.HasOne(d => d.MidNavigation)
                    .WithMany(p => p.MsCalnoticeInfo)
                    .HasForeignKey(d => d.Mid)
                    .HasConstraintName("FK_MS_CALNOTICE_INFO_MS_CALNOTICE");
            });

            modelBuilder.Entity<MsCalplan>(entity =>
            {
                entity.ToTable("MS_CALPLAN");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BilType)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.BilTypeName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.BillDate).HasColumnType("datetime");

                entity.Property(e => e.BusiNo)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkDate).HasColumnType("datetime");

                entity.Property(e => e.ChkMan)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkManName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkMob)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.ClsDate).HasColumnType("datetime");

                entity.Property(e => e.ClsUsr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ClsUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.MsName)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.MsNo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("MsNO");

                entity.Property(e => e.MsType)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.MsTypeName)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.No)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Rem)
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.SysDate).HasColumnType("datetime");

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Usr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Yy).HasColumnName("YY");
            });

            modelBuilder.Entity<MsCalplanInfo>(entity =>
            {
                entity.ToTable("MS_CALPLAN_INFO");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.CalFlg)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.CalResult)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Dd).HasColumnName("DD");

                entity.Property(e => e.Mid).HasColumnName("MID");

                entity.Property(e => e.Mm).HasColumnName("MM");

                entity.Property(e => e.Yy).HasColumnName("YY");

                entity.HasOne(d => d.MidNavigation)
                    .WithMany(p => p.MsCalplanInfo)
                    .HasForeignKey(d => d.Mid)
                    .HasConstraintName("FK_MS_CALPLAN_INFO_MS_CALPLAN");
            });

            modelBuilder.Entity<MsCalrule>(entity =>
            {
                entity.ToTable("MS_CALRULE");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Attachment)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ChkDate).HasColumnType("datetime");

                entity.Property(e => e.ChkMan)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.ChkManName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkMob)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.IsPrint).HasDefaultValueSql("((0))");

                entity.Property(e => e.MsType)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.No)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Rem)
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.RuleName)
                    .IsRequired()
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.SysDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Usr)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.UsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<MsFlowStatus>(entity =>
            {
                entity.ToTable("MS_FLOW_STATUS");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.ChkDate).HasColumnType("datetime");

                entity.Property(e => e.ChkMan)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.ChkManName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkMob)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.FlowStatusName)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.No)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Rem)
                    .IsRequired()
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.SysDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Usr)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.UsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<MsMeasureInfo>(entity =>
            {
                entity.ToTable("MS_MEASURE_INFO");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BorrowDep)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("BorrowDEP");

                entity.Property(e => e.Borrower)
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.BorrowerName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.CalDate).HasColumnType("datetime");

                entity.Property(e => e.CalDep)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.CalDepName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CalLocal)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CalMan)
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.CalManName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.CalMode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CalResult)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkDate).HasColumnType("datetime");

                entity.Property(e => e.ChkMan)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.ChkManName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkMob)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Contact)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.CycUnit)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FactoryDate).HasColumnType("datetime");

                entity.Property(e => e.FactoryNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Interval)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.IsPrint).HasDefaultValueSql("((0))");

                entity.Property(e => e.LastCalResult)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Maker)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Mcp)
                    .HasColumnType("decimal(18, 4)")
                    .HasColumnName("MCP");

                entity.Property(e => e.MngType)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.MsName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.MsStatus)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.MsStatusName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.MsTypeName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.No)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("NO");

                entity.Property(e => e.Poprice)
                    .HasColumnType("decimal(18, 4)")
                    .HasColumnName("POPrice");

                entity.Property(e => e.Precision)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Record)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("RECORD");

                entity.Property(e => e.Rem)
                    .HasMaxLength(2000)
                    .IsUnicode(false);

                entity.Property(e => e.RpCalStatus)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.RpCalStatusName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Scope)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Spc)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SPC");

                entity.Property(e => e.StartDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Start_Date");

                entity.Property(e => e.SysDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UseDep)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("UseDEP");

                entity.Property(e => e.UseDepname)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("UseDEPName");

                entity.Property(e => e.UserName)
                    .HasMaxLength(1)
                    .HasColumnName("User_Name")
                    .IsFixedLength(true);

                entity.Property(e => e.UserNo)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("UserNO");

                entity.Property(e => e.Usr)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.UsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Vld)
                    .HasColumnType("datetime")
                    .HasColumnName("VLD");

                entity.Property(e => e.Zjm)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ZJM");
            });

            modelBuilder.Entity<MsMeasureInfoOld>(entity =>
            {
                entity.ToTable("MS_MEASURE_INFO_OLD");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Abc)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ABC");

                entity.Property(e => e.BuyDate).HasColumnType("datetime");

                entity.Property(e => e.CalMode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ChkDate).HasColumnType("datetime");

                entity.Property(e => e.ChkMan)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.ChkMob)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Dep)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("DEP");

                entity.Property(e => e.FactoryDate).HasColumnType("datetime");

                entity.Property(e => e.FactoryNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.IsPrint).HasDefaultValueSql("((0))");

                entity.Property(e => e.Keeper)
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.Maker)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.MsDrawingNo)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.MsPic).HasColumnType("image");

                entity.Property(e => e.MsStatus)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.MsType)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Name)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.No)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("NO");

                entity.Property(e => e.Poprice)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("POPrice");

                entity.Property(e => e.Precision)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Rem)
                    .HasMaxLength(3500)
                    .IsUnicode(false);

                entity.Property(e => e.Scope)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Spc)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SPC");

                entity.Property(e => e.SysDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.UseLocal)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Usr)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Zjm)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ZJM");
            });

            modelBuilder.Entity<MsMeasureStatus>(entity =>
            {
                entity.ToTable("MS_MEASURE_STATUS");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.ChkDate).HasColumnType("datetime");

                entity.Property(e => e.ChkMan)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.ChkManName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkMob)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.No)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NO");

                entity.Property(e => e.Rem)
                    .IsRequired()
                    .HasMaxLength(3500)
                    .IsUnicode(false)
                    .HasColumnName("REM");

                entity.Property(e => e.StatusName)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.SysDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Usr)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.UsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<MsMeasureType>(entity =>
            {
                entity.ToTable("MS_MEASURE_TYPE");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.ChkDate).HasColumnType("datetime");

                entity.Property(e => e.ChkMan)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.ChkManName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkMob)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.No)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NO");

                entity.Property(e => e.Rem)
                    .IsRequired()
                    .HasMaxLength(3500)
                    .IsUnicode(false)
                    .HasColumnName("REM");

                entity.Property(e => e.SysDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.TypeName)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Usr)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.UsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<MsRepair>(entity =>
            {
                entity.ToTable("MS_REPAIR");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.CalLocal)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CalMode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CalNoteNo)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.CalResult)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkDate).HasColumnType("datetime");

                entity.Property(e => e.ChkMan)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.ChkManName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkMob)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Contacts)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.IsPrint).HasDefaultValueSql("((0))");

                entity.Property(e => e.MngType)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.MsName)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.MsNo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("MsNO");

                entity.Property(e => e.MsType)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.No)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NO");

                entity.Property(e => e.Phone)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Rem)
                    .HasMaxLength(3000)
                    .IsUnicode(false);

                entity.Property(e => e.RpCalStatus)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.RpContent)
                    .HasMaxLength(2000)
                    .IsUnicode(false);

                entity.Property(e => e.RpCost).HasColumnType("decimal(18, 4)");

                entity.Property(e => e.RpDate).HasColumnType("datetime");

                entity.Property(e => e.RpDepNo)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.RpDoneDate).HasColumnType("datetime");

                entity.Property(e => e.RpInstNo)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.RpMan)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.RpStatusAfter)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.RpStatusBefore)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.SysDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Usr)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.UsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Msgcache>(entity =>
            {
                entity.ToTable("MSGCACHE");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BillNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Bill_NO");

                entity.Property(e => e.BillType)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.MsgContent)
                    .HasMaxLength(3500)
                    .IsUnicode(false);

                entity.Property(e => e.MsgSetId).HasColumnName("MsgSetID");

                entity.Property(e => e.MsgTitle)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.StartTime).HasColumnType("datetime");

                entity.Property(e => e.SysDate).HasColumnType("datetime");
            });

            modelBuilder.Entity<MsmngStatusinfo>(entity =>
            {
                entity.ToTable("MSMNG_STATUSINFO");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BusiId)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("BusiID");

                entity.Property(e => e.ChkDate).HasColumnType("datetime");

                entity.Property(e => e.ChkMan)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.ChkManName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ChkMob)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.FromBusiNo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.MsName)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.MsNo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("MsNO");

                entity.Property(e => e.RpCalStatus)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.RpCalStatusName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Status)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.StatusName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.SysDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Usr)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.UsrName)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<MyWh>(entity =>
            {
                entity.ToTable("MY_WH");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Adr)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("ADR");

                entity.Property(e => e.Attrib)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ATTRIB");

                entity.Property(e => e.ChkDate).HasColumnType("datetime");

                entity.Property(e => e.ChkMan)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkManName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkMob)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.ChkWh).HasColumnName("CHK_WH");

                entity.Property(e => e.CntMan)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("CNT_MAN");

                entity.Property(e => e.CodeNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CODE_NO");

                entity.Property(e => e.ConMan)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CON_MAN");

                entity.Property(e => e.CusNo)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("CUS_NO");

                entity.Property(e => e.Dep)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("DEP");

                entity.Property(e => e.DeproNo)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("DEPRO_NO");

                entity.Property(e => e.FaxNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("FAX_NO");

                entity.Property(e => e.Invalid).HasColumnName("INVALID");

                entity.Property(e => e.Isiowh).HasColumnName("ISIOWH");

                entity.Property(e => e.Islc).HasColumnName("ISLC");

                entity.Property(e => e.Isyl).HasColumnName("ISYL");

                entity.Property(e => e.Name)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("NAME");

                entity.Property(e => e.NamePy)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("NAME_PY");

                entity.Property(e => e.Rem)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("REM");

                entity.Property(e => e.SendcusName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SENDCUS_NAME");

                entity.Property(e => e.SpcId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SPC_ID");

                entity.Property(e => e.StopDd)
                    .HasColumnType("datetime")
                    .HasColumnName("STOP_DD");

                entity.Property(e => e.SysDate).HasColumnType("datetime");

                entity.Property(e => e.TelNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("TEL_NO");

                entity.Property(e => e.UpDd).HasColumnName("UP_DD");

                entity.Property(e => e.UpWh)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("UP_WH");

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Usr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Wh)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("WH");
            });

            modelBuilder.Entity<NyxhRecord>(entity =>
            {
                entity.ToTable("NYXH_RECORD");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.ActualLevel)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("ACTUAL_LEVEL");

                entity.Property(e => e.ConsumDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CONSUM_DATE");

                entity.Property(e => e.ConsumType)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("CONSUM_TYPE");

                entity.Property(e => e.Dep)
                    .IsRequired()
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("DEP");

                entity.Property(e => e.DiffLevel)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("DIFF_LEVEL");

                entity.Property(e => e.PlanLevel)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("PLAN_LEVEL");

                entity.Property(e => e.Sysdate)
                    .HasColumnType("datetime")
                    .HasColumnName("SYSDATE");

                entity.Property(e => e.Upddate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDDATE");

                entity.Property(e => e.Updusr)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("UPDUSR");

                entity.Property(e => e.Updusrname)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("UPDUSRNAME");

                entity.Property(e => e.Usr)
                    .IsRequired()
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("USR");

                entity.Property(e => e.Usrname)
                    .IsRequired()
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("USRNAME");
            });

            modelBuilder.Entity<OpWorkstart>(entity =>
            {
                entity.ToTable("OP_WORKSTART");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Dept)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.DevNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Dev_No");

                entity.Property(e => e.EndDate).HasColumnType("datetime");

                entity.Property(e => e.ProcessNo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("Process_No");

                entity.Property(e => e.ProdNo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Prod_No");

                entity.Property(e => e.ShiftNo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("Shift_No");

                entity.Property(e => e.StaNo)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("Sta_No");

                entity.Property(e => e.StartDate).HasColumnType("datetime");

                entity.Property(e => e.StationNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SysDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.UsedTime)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("Used_Time");

                entity.Property(e => e.Usr)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.UsrExec)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("Usr_Exec");

                entity.Property(e => e.UsrName)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.WoNo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("WO_NO");

                entity.Property(e => e.WorkState)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Opsballot>(entity =>
            {
                entity.ToTable("OPSBALLOT");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.ChkDate).HasColumnType("datetime");

                entity.Property(e => e.ChkMan)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkManName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkMob)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ChkMOB");

                entity.Property(e => e.SebName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("SEB_NAME");

                entity.Property(e => e.SebNo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SEB_NO");

                entity.Property(e => e.SysDate).HasColumnType("datetime");

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UserNo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Usr)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<PadInspectionOrderCategoryTotalQty>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("PadInspectionOrderCategoryTotalQty");

                entity.Property(e => e.SourceType)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<PadInspectionOrderList>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("PadInspectionOrderList");

                entity.Property(e => e.BatchNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.DepNo)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("DEP_NO");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.InspectionResult).HasMaxLength(50);

                entity.Property(e => e.No)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PfaNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("PFA_NO");

                entity.Property(e => e.PrdNo)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("PRD_NO");

                entity.Property(e => e.PrjType)
                    .HasMaxLength(300)
                    .IsUnicode(false)
                    .HasColumnName("PRJ_TYPE");

                entity.Property(e => e.ProductionName)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.QcDate)
                    .HasColumnType("datetime")
                    .HasColumnName("QC_Date");

                entity.Property(e => e.QcQty)
                    .HasColumnType("decimal(18, 4)")
                    .HasColumnName("QC_QTY");

                entity.Property(e => e.SourceBillNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SourceType)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SuppCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SuppName)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.SysDate).HasColumnType("datetime");

                entity.Property(e => e.Usr)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Padppfi>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("PADPPFI");

                entity.Property(e => e.BillNo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.BillStatus)
                    .IsRequired()
                    .HasMaxLength(6)
                    .IsUnicode(false);

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.QcResult)
                    .HasMaxLength(50)
                    .HasColumnName("QC_Result");

                entity.Property(e => e.SourceType)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SysDate).HasColumnType("datetime");
            });

            modelBuilder.Entity<PcBatchreview>(entity =>
            {
                entity.ToTable("PC_BATCHReview");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Advancesampleno)
                    .HasMaxLength(55)
                    .IsUnicode(false)
                    .HasColumnName("ADVANCESAMPLENO");

                entity.Property(e => e.CastingBatchNo)
                    .HasMaxLength(55)
                    .IsUnicode(false);

                entity.Property(e => e.CreateTime).HasColumnType("datetime");

                entity.Property(e => e.CreateUser)
                    .HasMaxLength(55)
                    .IsUnicode(false);

                entity.Property(e => e.DeviceNo)
                    .HasMaxLength(55)
                    .IsUnicode(false)
                    .HasColumnName("DeviceNO");

                entity.Property(e => e.InspectSid).HasColumnName("InspectSID");

                entity.Property(e => e.IsTransform)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.JzmoNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("JZMO_NO");

                entity.Property(e => e.Jzproductcode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("JZPRODUCTCODE");

                entity.Property(e => e.ProcessNo)
                    .HasMaxLength(55)
                    .IsUnicode(false);

                entity.Property(e => e.TargetDeviceNo)
                    .HasMaxLength(55)
                    .IsUnicode(false)
                    .HasColumnName("TargetDeviceNO");

                entity.Property(e => e.TransferDeviceNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ZxmoNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ZXMO_NO");

                entity.Property(e => e.Zxproductcode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ZXPRODUCTCODE");
            });

            modelBuilder.Entity<PcInOutPutRelation>(entity =>
            {
                entity.ToTable("PC_InOutPut_Relation");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BatchInput)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Batch_Input");

                entity.Property(e => e.BatchNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Batch_No");

                entity.Property(e => e.BatchOutput)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Batch_Output");

                entity.Property(e => e.DeviceNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.FeedingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("Feeding_Time");

                entity.Property(e => e.Input)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.LayoutNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Layout_No");

                entity.Property(e => e.Mid).HasColumnName("MID");

                entity.Property(e => e.Output)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ProcessNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Process_No");

                entity.Property(e => e.ProdNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Prod_No");

                entity.Property(e => e.QtyFeed)
                    .HasColumnType("decimal(22, 8)")
                    .HasColumnName("Qty_Feed");

                entity.Property(e => e.QtyOutput)
                    .HasColumnType("decimal(22, 8)")
                    .HasColumnName("Qty_Output");

                entity.Property(e => e.QtyUse)
                    .HasColumnType("decimal(22, 8)")
                    .HasColumnName("Qty_Use");

                entity.Property(e => e.ReportProd)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Report_Prod");

                entity.Property(e => e.ReportTime)
                    .HasColumnType("datetime")
                    .HasColumnName("Report_Time");

                entity.Property(e => e.ShiftNo)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.StationNo)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Unit)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.UnitOutput)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("Unit_Output");

                entity.Property(e => e.WoNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("WO_NO");

                entity.HasOne(d => d.MidNavigation)
                    .WithMany(p => p.PcInOutPutRelation)
                    .HasForeignKey(d => d.Mid)
                    .HasConstraintName("FK_PC_InOutPut_Relation_PC_OutPut");
            });

            modelBuilder.Entity<PcIntegrityCheck>(entity =>
            {
                entity.ToTable("PC_Integrity_Check");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BomNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CheckFqc).HasColumnName("Check_FQC");

                entity.Property(e => e.CheckPassRec).HasColumnName("CheckPass_Rec");

                entity.Property(e => e.Materials)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.Parameters)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.ProdNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Prod_No");

                entity.Property(e => e.SysDate).HasColumnType("datetime");

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Usr)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UsrName)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.WkCenterNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("WkCenter_No");
            });

            modelBuilder.Entity<PcOrderHeaterNum>(entity =>
            {
                entity.ToTable("PC_Order_HeaterNum");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.DevNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Dev_No");

                entity.Property(e => e.EndDate).HasColumnType("datetime");

                entity.Property(e => e.HeaterNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Heater_No");

                entity.Property(e => e.ProcessNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Process_No");

                entity.Property(e => e.ShiftNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("Shift_No");

                entity.Property(e => e.StartDate).HasColumnType("datetime");

                entity.Property(e => e.StationNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Station_No");

                entity.Property(e => e.SysDate).HasColumnType("datetime");

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Usr)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UsrName)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.WoNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("WO_NO");
            });

            modelBuilder.Entity<PcOutPut>(entity =>
            {
                entity.ToTable("PC_OutPut");

                entity.HasIndex(e => e.ReportGuid).HasName("IX_PC_OutPut");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Barcode)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.BatchNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Batch_No");

                entity.Property(e => e.BilType)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.BilTypeName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.BusiNo)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkDate).HasColumnType("datetime");

                entity.Property(e => e.ChkMan)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkManName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkMob)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.ClsDate).HasColumnType("datetime");

                entity.Property(e => e.ClsUsr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ClsUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.DevNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Dev_No");

                entity.Property(e => e.MoNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("MO_NO");

                entity.Property(e => e.OutBarcode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ProcessNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Process_No");

                entity.Property(e => e.ProdNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Prod_No");

                entity.Property(e => e.Qty).HasColumnType("decimal(22, 8)");

                entity.Property(e => e.QtyLost)
                    .HasColumnType("decimal(22, 8)")
                    .HasColumnName("Qty_Lost");

                entity.Property(e => e.QtyScrap)
                    .HasColumnType("decimal(22, 8)")
                    .HasColumnName("Qty_Scrap");

                entity.Property(e => e.Rem)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.ReportDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Report_Date");

                entity.Property(e => e.ReportGuid)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("Report_Guid");

                entity.Property(e => e.StationNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SysDate).HasColumnType("datetime");

                entity.Property(e => e.Unit)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Usr)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UsrExec)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Usr_Exec");

                entity.Property(e => e.UsrName)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.VerNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Ver_No");

                entity.Property(e => e.WoNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("WO_NO");
            });

            modelBuilder.Entity<PcOutPutDefect>(entity =>
            {
                entity.ToTable("PC_OutPut_Defect");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.DefectName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Defect_Name");

                entity.Property(e => e.DefectNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Defect_No");

                entity.Property(e => e.DefectType)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("Defect_Type");

                entity.Property(e => e.Mid).HasColumnName("MID");

                entity.HasOne(d => d.MidNavigation)
                    .WithMany(p => p.PcOutPutDefect)
                    .HasForeignKey(d => d.Mid)
                    .HasConstraintName("FK_PC_OutPut_Defect_PC_OutPut");
            });

            modelBuilder.Entity<PcTraceabilityDataPortal>(entity =>
            {
                entity.ToTable("PC_TraceabilityDataPortal");

                entity.HasIndex(e => e.TraceCode).HasName("IX_PC_TraceabilityDataPortal")
                    .IsUnique();

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.CreateTime).HasColumnType("datetime");

                entity.Property(e => e.CreateUser)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ProcessNo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ProcessNO");

                entity.Property(e => e.ProductNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ProductNO");

                entity.Property(e => e.TraceCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.UpdateTime).HasColumnType("datetime");

                entity.Property(e => e.UpdateUser)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<PcTraceabilityLog>(entity =>
            {
                entity.ToTable("PC_TraceabilityLog");

                entity.HasIndex(e => e.MainTraceCode).HasName("IX_PC_TraceabilityLog");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.CreateTime).HasColumnType("datetime");

                entity.Property(e => e.CreateUser)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.DeviceNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("DeviceNO");

                entity.Property(e => e.MainTraceCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ProcessNo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ProcessNO");

                entity.Property(e => e.ProcessTraceCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ProductNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ProductNO");

                entity.Property(e => e.ProductionDate).HasColumnType("datetime");

                entity.Property(e => e.Shifts)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SourceOrder)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.UpdateTime).HasColumnType("datetime");

                entity.Property(e => e.UpdateUser)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.UpperTraceCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<PcTransfer>(entity =>
            {
                entity.ToTable("PC_Transfer");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.DevNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Dev_No");

                entity.Property(e => e.HeaterNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Heater_No");

                entity.Property(e => e.ProcessNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Process_No");

                entity.Property(e => e.RecNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Rec_No");

                entity.Property(e => e.ShiftNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("Shift_No");

                entity.Property(e => e.StartDate).HasColumnType("datetime");

                entity.Property(e => e.SysDate).HasColumnType("datetime");

                entity.Property(e => e.TranNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Tran_No");

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Usr)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UsrName)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.WoNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("WO_NO");
            });

            modelBuilder.Entity<PcUsrLogin>(entity =>
            {
                entity.ToTable("PC_UsrLogin");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.LoginTime).HasColumnType("datetime");

                entity.Property(e => e.LogoutTime).HasColumnType("datetime");

                entity.Property(e => e.ShiftNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Shift_No");

                entity.Property(e => e.StationNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Station_No");

                entity.Property(e => e.SysDate).HasColumnType("datetime");

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Usr)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UsrLogin)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Usr_Login");

                entity.Property(e => e.UsrName)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UsrNameLogin)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("UsrName_Login");

                entity.Property(e => e.WkCenterNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("WkCenter_No");
            });

            modelBuilder.Entity<PcWorkStationDeviceMapping>(entity =>
            {
                entity.ToTable("PC_WorkStationDeviceMapping");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.DeviceCode).HasMaxLength(50);

                entity.Property(e => e.DeviceName).HasMaxLength(100);

                entity.Property(e => e.FactoryNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Factory_NO");

                entity.Property(e => e.WorkStationCode).HasMaxLength(50);

                entity.Property(e => e.WorkStationName).HasMaxLength(100);
            });

            modelBuilder.Entity<PdHandover>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("pd_Handover");

                entity.Property(e => e.BanNo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("BAN_NO");

                entity.Property(e => e.Dep)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("DEP");

                entity.Property(e => e.Handover)
                    .HasMaxLength(1000)
                    .IsUnicode(false);

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Sysdate)
                    .HasColumnType("datetime")
                    .HasColumnName("SYSDATE");

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Usr)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UsrName)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ZcNo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ZC_NO");
            });

            modelBuilder.Entity<PerfLosstimeT>(entity =>
            {
                entity.ToTable("PERF_LOSSTIME_T");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BanGroup)
                    .HasMaxLength(20)
                    .HasColumnName("BAN_GROUP");

                entity.Property(e => e.BanNo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .HasColumnName("BAN_NO");

                entity.Property(e => e.Bcjfgs).HasColumnName("BCJFGS");

                entity.Property(e => e.Bhgs).HasColumnName("BHGS");

                entity.Property(e => e.Createtime)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATETIME");

                entity.Property(e => e.EndDate)
                    .HasColumnType("datetime")
                    .HasColumnName("END_DATE");

                entity.Property(e => e.Fbcjfgs).HasColumnName("FBCJFGS");

                entity.Property(e => e.Fgcjname)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("FGCJNAME");

                entity.Property(e => e.Fgworkshop)
                    .HasMaxLength(100)
                    .HasColumnName("FGWORKSHOP");

                entity.Property(e => e.Fps).HasColumnName("FPS");

                entity.Property(e => e.Fpworkshop)
                    .HasMaxLength(100)
                    .HasColumnName("FPWORKSHOP");

                entity.Property(e => e.Handletype).HasColumnName("HANDLETYPE");

                entity.Property(e => e.Hgs).HasColumnName("HGS");

                entity.Property(e => e.Lossproperty)
                    .HasMaxLength(400)
                    .HasColumnName("LOSSPROPERTY");

                entity.Property(e => e.Lossreason)
                    .HasMaxLength(400)
                    .HasColumnName("LOSSREASON");

                entity.Property(e => e.Losstime).HasColumnName("LOSSTIME");

                entity.Property(e => e.Losstype)
                    .HasMaxLength(400)
                    .HasColumnName("LOSSTYPE");

                entity.Property(e => e.ModNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("MOD_NO");

                entity.Property(e => e.PrdName)
                    .HasMaxLength(400)
                    .HasColumnName("PRD_NAME");

                entity.Property(e => e.PrdNo)
                    .HasMaxLength(100)
                    .HasColumnName("PRD_NO");

                entity.Property(e => e.SebNo)
                    .IsRequired()
                    .HasMaxLength(100)
                    .HasColumnName("SEB_NO");

                entity.Property(e => e.Sebname)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SEBNAME");

                entity.Property(e => e.SourceId).HasColumnName("SOURCE_ID");

                entity.Property(e => e.Spec)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("SPEC");

                entity.Property(e => e.StaDate)
                    .HasColumnType("datetime")
                    .HasColumnName("STA_DATE");

                entity.Property(e => e.SysDate)
                    .HasColumnType("datetime")
                    .HasColumnName("SYS_DATE");

                entity.Property(e => e.Workshop)
                    .IsRequired()
                    .HasMaxLength(100)
                    .HasColumnName("WORKSHOP");

                entity.Property(e => e.Workshopname)
                    .HasMaxLength(100)
                    .HasColumnName("WORKSHOPNAME");

                entity.Property(e => e.ZcNo)
                    .IsRequired()
                    .HasMaxLength(100)
                    .HasColumnName("ZC_NO");

                entity.Property(e => e.Zcname)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ZCNAME");
            });

            modelBuilder.Entity<PerfOeeT>(entity =>
            {
                entity.ToTable("PERF_OEE_T");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Availratio)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("AVAILRATIO");

                entity.Property(e => e.BanGroup)
                    .HasMaxLength(100)
                    .HasColumnName("BAN_GROUP");

                entity.Property(e => e.BanNo)
                    .HasMaxLength(100)
                    .HasColumnName("BAN_NO");

                entity.Property(e => e.LossOther).HasColumnName("LOSS_OTHER");

                entity.Property(e => e.LossPlan).HasColumnName("LOSS_PLAN");

                entity.Property(e => e.LossStop).HasColumnName("LOSS_STOP");

                entity.Property(e => e.LossSwitch)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("LOSS_SWITCH");

                entity.Property(e => e.ModNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("MOD_NO");

                entity.Property(e => e.Oee)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("OEE");

                entity.Property(e => e.Outputtime).HasColumnName("OUTPUTTIME");

                entity.Property(e => e.Passratio)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("PASSRATIO");

                entity.Property(e => e.Performratio)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("PERFORMRATIO");

                entity.Property(e => e.PrdNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("PRD_NO");

                entity.Property(e => e.QtyLost).HasColumnName("QTY_LOST");

                entity.Property(e => e.QtyLostHt).HasColumnName("QTY_LOST_HT");

                entity.Property(e => e.Qualified).HasColumnName("QUALIFIED");

                entity.Property(e => e.SebNo)
                    .HasMaxLength(100)
                    .HasColumnName("SEB_NO");

                entity.Property(e => e.SysDate)
                    .HasMaxLength(20)
                    .HasColumnName("SYS_DATE");

                entity.Property(e => e.Totalcount).HasColumnName("TOTALCOUNT");

                entity.Property(e => e.Totaltime)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("TOTALTIME");

                entity.Property(e => e.Unqualified).HasColumnName("UNQUALIFIED");

                entity.Property(e => e.Workshop)
                    .HasMaxLength(100)
                    .HasColumnName("WORKSHOP");

                entity.Property(e => e.ZcNo)
                    .HasMaxLength(100)
                    .HasColumnName("ZC_NO");
            });

            modelBuilder.Entity<PerfOutputT>(entity =>
            {
                entity.ToTable("PERF_OUTPUT_T");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Backoff).HasColumnName("BACKOFF");

                entity.Property(e => e.BanGroup)
                    .HasMaxLength(20)
                    .HasColumnName("BAN_GROUP");

                entity.Property(e => e.BanNo)
                    .HasMaxLength(20)
                    .HasColumnName("BAN_NO");

                entity.Property(e => e.Handletype).HasColumnName("HANDLETYPE");

                entity.Property(e => e.ModNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("MOD_NO");

                entity.Property(e => e.PrdName)
                    .HasMaxLength(400)
                    .HasColumnName("PRD_NAME");

                entity.Property(e => e.PrdNo)
                    .HasMaxLength(100)
                    .HasColumnName("PRD_NO");

                entity.Property(e => e.Qualified).HasColumnName("QUALIFIED");

                entity.Property(e => e.Scrap).HasColumnName("SCRAP");

                entity.Property(e => e.SebNo)
                    .HasMaxLength(100)
                    .HasColumnName("SEB_NO");

                entity.Property(e => e.SysDate)
                    .HasMaxLength(20)
                    .HasColumnName("SYS_DATE");

                entity.Property(e => e.Totalcount).HasColumnName("TOTALCOUNT");

                entity.Property(e => e.Unqualified).HasColumnName("UNQUALIFIED");

                entity.Property(e => e.Workshop)
                    .HasMaxLength(100)
                    .HasColumnName("WORKSHOP");

                entity.Property(e => e.ZcNo)
                    .HasMaxLength(100)
                    .HasColumnName("ZC_NO");
            });

            modelBuilder.Entity<PhotoTemp>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("PHOTO_TEMP");

                entity.Property(e => e.Data).HasColumnName("DATA");
            });

            modelBuilder.Entity<PidsTemp>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("PIDS_TEMP");

                entity.Property(e => e.PrdNo)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("PRD_NO");
            });

            modelBuilder.Entity<Post>(entity =>
            {
                entity.ToTable("POST");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.ChkDate).HasColumnType("datetime");

                entity.Property(e => e.ChkMan)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.ChkManName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.ChkMob)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Enabled).HasDefaultValueSql("((1))");

                entity.Property(e => e.IsPrint).HasDefaultValueSql("((0))");

                entity.Property(e => e.Name)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("NAME");

                entity.Property(e => e.No)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NO");

                entity.Property(e => e.Rem)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.SysDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Usr)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.UsrName)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");
            });

            modelBuilder.Entity<PpMoschedTemp>(entity =>
            {
                entity.ToTable("PP_MOSched_Temp");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.EndDate).HasColumnType("datetime");

                entity.Property(e => e.LayoutNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.LineNos)
                    .HasMaxLength(1000)
                    .IsUnicode(false);

                entity.Property(e => e.MoNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("MO_NO");

                entity.Property(e => e.ProdName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Prod_Name");

                entity.Property(e => e.ProdNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Prod_No");

                entity.Property(e => e.SchedInfo)
                    .HasMaxLength(2000)
                    .IsUnicode(false)
                    .HasColumnName("Sched_Info");

                entity.Property(e => e.StartDate).HasColumnType("datetime");

                entity.Property(e => e.SysDate).HasColumnType("datetime");

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Usr)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UsrName)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<PpPlanOrder>(entity =>
            {
                entity.ToTable("PP_Plan_Order");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BilType)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.BilTypeName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.BusiNo)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkDate).HasColumnType("datetime");

                entity.Property(e => e.ChkMan)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkManName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkMob)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.ClsDate).HasColumnType("datetime");

                entity.Property(e => e.ClsUsr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ClsUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.CustName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Cust_Name");

                entity.Property(e => e.CustNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("Cust_No");

                entity.Property(e => e.DeptName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Dept_Name");

                entity.Property(e => e.DeptNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("Dept_No");

                entity.Property(e => e.LayoutName)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.LayoutNo)
                    .IsRequired()
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("Layout_No");

                entity.Property(e => e.PlanDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Plan_Date");

                entity.Property(e => e.PlanNo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("Plan_No");

                entity.Property(e => e.Rem)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.ReqDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Req_Date");

                entity.Property(e => e.SrcNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Src_No");

                entity.Property(e => e.SysDate).HasColumnType("datetime");

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Usr)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UsrExec)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("Usr_Exec");

                entity.Property(e => e.UsrName)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UsrNameExec)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Usr_Name_Exec");
            });

            modelBuilder.Entity<PpPlanOrders>(entity =>
            {
                entity.ToTable("PP_Plan_Orders");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BomNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Bom_No");

                entity.Property(e => e.EndDate).HasColumnType("datetime");

                entity.Property(e => e.Mid).HasColumnName("MID");

                entity.Property(e => e.OrderNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("Order_No");

                entity.Property(e => e.OrderNoCust)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("Order_No_Cust");

                entity.Property(e => e.PlanNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Plan_No");

                entity.Property(e => e.ProdMark)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("Prod_Mark");

                entity.Property(e => e.ProdName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Prod_Name");

                entity.Property(e => e.ProdNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Prod_No");

                entity.Property(e => e.ProdNoSup)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("Prod_No_Sup");

                entity.Property(e => e.ProdSpec)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Prod_Spec");

                entity.Property(e => e.Qty).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.ReqDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Req_Date");

                entity.Property(e => e.StartDate).HasColumnType("datetime");

                entity.Property(e => e.StopDate).HasColumnType("datetime");

                entity.Property(e => e.Unit)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.VerNo)
                    .HasMaxLength(38)
                    .IsUnicode(false)
                    .HasColumnName("Ver_No");

                entity.Property(e => e.WhseNo)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("Whse_No");

                entity.HasOne(d => d.MidNavigation)
                    .WithMany(p => p.PpPlanOrders)
                    .HasForeignKey(d => d.Mid)
                    .HasConstraintName("FK_PP_Plan_Orders_PP_Plan_Order");
            });

            modelBuilder.Entity<PpProductionOrder>(entity =>
            {
                entity.ToTable("PP_Production_Order");

                entity.HasIndex(e => e.MoNo).HasName("IX_PP_Production_Order1")
                    .IsUnique();

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BatchNo)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("Batch_No");

                entity.Property(e => e.BilType)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.BilTypeName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.BomNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("BOM_NO");

                entity.Property(e => e.BusiNo)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkDate).HasColumnType("datetime");

                entity.Property(e => e.ChkMan)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkManName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkMob)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.ClsDate).HasColumnType("datetime");

                entity.Property(e => e.ClsUsr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ClsUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.CustNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("Cust_No");

                entity.Property(e => e.DeptNo)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("Dept_No");

                entity.Property(e => e.EndDate).HasColumnType("datetime");

                entity.Property(e => e.EndDateAct)
                    .HasColumnType("datetime")
                    .HasColumnName("EndDate_Act");

                entity.Property(e => e.LayoutName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.LayoutNo)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("Layout_No");

                entity.Property(e => e.MoDate)
                    .HasColumnType("datetime")
                    .HasColumnName("MO_Date");

                entity.Property(e => e.MoNo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("MO_No");

                entity.Property(e => e.MoNoParent)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Mo_No_Parent");

                entity.Property(e => e.MoState)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("MO_State");

                entity.Property(e => e.PlanNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("Plan_No");

                entity.Property(e => e.ProdName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Prod_Name");

                entity.Property(e => e.ProdNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Prod_No");

                entity.Property(e => e.ProdNoParent)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Prod_No_Parent");

                entity.Property(e => e.ProdNoSup)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Prod_No_Sup");

                entity.Property(e => e.ProdSpec)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Prod_Spec");

                entity.Property(e => e.Qty).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.Rem)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.ReqDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Req_Date");

                entity.Property(e => e.SchedSrcMo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Sched_Src_MO");

                entity.Property(e => e.SchedStatus)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("Sched_Status");

                entity.Property(e => e.SrcCat)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("Src_Cat");

                entity.Property(e => e.SrcItemId).HasColumnName("Src_ItemID");

                entity.Property(e => e.SrcNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Src_No");

                entity.Property(e => e.StartDate).HasColumnType("datetime");

                entity.Property(e => e.StartDateAct)
                    .HasColumnType("datetime")
                    .HasColumnName("StartDate_Act");

                entity.Property(e => e.SysDate).HasColumnType("datetime");

                entity.Property(e => e.Unit)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Usr)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UsrName)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.VerNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Ver_No");

                entity.Property(e => e.WhseNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("Whse_No");
            });

            modelBuilder.Entity<PpProductionOrders>(entity =>
            {
                entity.ToTable("PP_Production_Orders");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BatchNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Batch_No");

                entity.Property(e => e.Mid).HasColumnName("MID");

                entity.Property(e => e.ProcessName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Process_Name");

                entity.Property(e => e.ProcessNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Process_No");

                entity.Property(e => e.ProdMark)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Prod_Mark");

                entity.Property(e => e.ProdName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Prod_Name");

                entity.Property(e => e.ProdNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Prod_No");

                entity.Property(e => e.ProdSpec)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Prod_Spec");

                entity.Property(e => e.Qty).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.QtyBase)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("Qty_Base");

                entity.Property(e => e.QtyStd)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("Qty_Std");

                entity.Property(e => e.Rem)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.SrcItemId).HasColumnName("Src_ItemID");

                entity.Property(e => e.Unit)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.VerNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Ver_No");

                entity.Property(e => e.WhseNo)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("Whse_No");

                entity.HasOne(d => d.MidNavigation)
                    .WithMany(p => p.PpProductionOrders)
                    .HasForeignKey(d => d.Mid)
                    .HasConstraintName("FK_PP_Production_Orders_PP_Production_Order");
            });

            modelBuilder.Entity<PpWorkCalendar>(entity =>
            {
                entity.ToTable("PP_Work_Calendar");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.EffectiveHours)
                    .HasColumnType("decimal(12, 8)")
                    .HasColumnName("Effective_Hours");

                entity.Property(e => e.EndTime).HasColumnType("datetime");

                entity.Property(e => e.EndTimeType)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("EndTime_Type");

                entity.Property(e => e.LayoutName)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Layout_Name");

                entity.Property(e => e.LayoutNo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("Layout_No");

                entity.Property(e => e.ShiftName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Shift_Name");

                entity.Property(e => e.ShiftNo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("Shift_No");

                entity.Property(e => e.StartTime).HasColumnType("datetime");

                entity.Property(e => e.StartTimeType)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("StartTime_Type");

                entity.Property(e => e.SysDate).HasColumnType("datetime");

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Usr)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UsrName)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.WorkDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Work_Date");

                entity.Property(e => e.WorkGroup)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.WorkGroupName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("WorkGroup_Name");
            });

            modelBuilder.Entity<PpWorkOrder>(entity =>
            {
                entity.ToTable("PP_WorkOrder");

                entity.HasIndex(e => new { e.WoNo, e.MoNo }).HasName("IX_PP_WorkOrder")
                    .IsUnique();

                entity.HasIndex(e => e.UniqueCode).HasName("IX_PP_WorkOrder_1");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.AddInfo)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Add_Info");

                entity.Property(e => e.BatchNo)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("Batch_No");

                entity.Property(e => e.BilType)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.BilTypeName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.BusiNo)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkDate).HasColumnType("datetime");

                entity.Property(e => e.ChkMan)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkManName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkMob)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.ClsDate).HasColumnType("datetime");

                entity.Property(e => e.ClsUsr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ClsUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Dept)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.EndDate).HasColumnType("datetime");

                entity.Property(e => e.EndDateAct)
                    .HasColumnType("datetime")
                    .HasColumnName("EndDate_Act");

                entity.Property(e => e.EndWhse)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("End_Whse");

                entity.Property(e => e.LayoutNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("Layout_No");

                entity.Property(e => e.MoNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("MO_No");

                entity.Property(e => e.MoState)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("MO_State");

                entity.Property(e => e.PlanNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("Plan_No");

                entity.Property(e => e.ProdMark)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("Prod_Mark");

                entity.Property(e => e.ProdName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Prod_Name");

                entity.Property(e => e.ProdNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Prod_No");

                entity.Property(e => e.ProdSpec)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("Prod_Spec");

                entity.Property(e => e.Qty).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.QtyFin)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("Qty_Fin");

                entity.Property(e => e.Rem)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.ShiftDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Shift_Date");

                entity.Property(e => e.ShiftNo)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("Shift_No");

                entity.Property(e => e.SrcBusiNo)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("Src_BusiNo");

                entity.Property(e => e.SrcItemId).HasColumnName("Src_ItemID");

                entity.Property(e => e.SrcNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("Src_No");

                entity.Property(e => e.StartDate).HasColumnType("datetime");

                entity.Property(e => e.StartDateAct)
                    .HasColumnType("datetime")
                    .HasColumnName("StartDate_Act");

                entity.Property(e => e.SysDate).HasColumnType("datetime");

                entity.Property(e => e.UniqueCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Unit)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Usr)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UsrExec)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Usr_Exec");

                entity.Property(e => e.UsrName)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.VerNo)
                    .HasMaxLength(38)
                    .IsUnicode(false)
                    .HasColumnName("Ver_No");

                entity.Property(e => e.WkCenterNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("WkCenter_No");

                entity.Property(e => e.WoDate)
                    .HasColumnType("datetime")
                    .HasColumnName("WO_Date");

                entity.Property(e => e.WoMode)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("WO_Mode");

                entity.Property(e => e.WoNo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("WO_No");

                entity.Property(e => e.WoType)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("WO_Type");
            });

            modelBuilder.Entity<PpWorkOrderMats>(entity =>
            {
                entity.ToTable("PP_WorkOrder_Mats");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BatchNo)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("Batch_No");

                entity.Property(e => e.Mid).HasColumnName("MID");

                entity.Property(e => e.ProcessNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Process_No");

                entity.Property(e => e.ProdMark)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Prod_Mark");

                entity.Property(e => e.ProdName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Prod_Name");

                entity.Property(e => e.ProdNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Prod_No");

                entity.Property(e => e.ProdSpec)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Prod_Spec");

                entity.Property(e => e.Qty).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.Rem)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.Unit)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.VerNo)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("Ver_No");

                entity.Property(e => e.WhseNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("Whse_No");

                entity.Property(e => e.WoNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("WO_No");

                entity.HasOne(d => d.MidNavigation)
                    .WithMany(p => p.PpWorkOrderMats)
                    .HasForeignKey(d => d.Mid)
                    .HasConstraintName("FK_PP_WorkOrder_Mats_PP_WorkOrder");
            });

            modelBuilder.Entity<PpWorkOrderProcs>(entity =>
            {
                entity.ToTable("PP_WorkOrder_Procs");

                entity.HasIndex(e => new { e.MoNo, e.WoNo }).HasName("IX_PP_WorkOrder_Procs");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Mid).HasColumnName("MID");

                entity.Property(e => e.MoNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("MO_No");

                entity.Property(e => e.ProcessNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Process_No");

                entity.Property(e => e.QtyFin)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("Qty_Fin");

                entity.Property(e => e.QtyLost)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("Qty_Lost");

                entity.Property(e => e.QtyPass)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("Qty_Pass");

                entity.Property(e => e.QtyScrap)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("Qty_Scrap");

                entity.Property(e => e.WkCenterNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("Wk_Center_No");

                entity.Property(e => e.WoNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("WO_No");

                entity.HasOne(d => d.MidNavigation)
                    .WithMany(p => p.PpWorkOrderProcs)
                    .HasForeignKey(d => d.Mid)
                    .HasConstraintName("FK_PP_WorkOrder_Procs_PP_WorkOrder");
            });

            modelBuilder.Entity<PpWorkOrderStation>(entity =>
            {
                entity.ToTable("PP_WorkOrder_Station");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Mid).HasColumnName("MID");

                entity.Property(e => e.MoNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("MO_No");

                entity.Property(e => e.ProcessNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Process_No");

                entity.Property(e => e.Qty).HasColumnType("decimal(12, 8)");

                entity.Property(e => e.QtyFin)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("Qty_Fin");

                entity.Property(e => e.QtyLost)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("Qty_Lost");

                entity.Property(e => e.QtyPass)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("Qty_Pass");

                entity.Property(e => e.QtyScrap)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("Qty_Scrap");

                entity.Property(e => e.StationNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("Station_No");

                entity.Property(e => e.WkCenterNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("Wk_Center_No");

                entity.Property(e => e.WoNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("WO_NO");

                entity.HasOne(d => d.MidNavigation)
                    .WithMany(p => p.PpWorkOrderStation)
                    .HasForeignKey(d => d.Mid)
                    .HasConstraintName("FK_PP_WorkOrder_Station_PP_WorkOrder_Procs");
            });

            modelBuilder.Entity<PpWorkPlan>(entity =>
            {
                entity.ToTable("PP_WorkPlan");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.CreateUser)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.DocStatus)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("DocSTatus");

                entity.Property(e => e.FactoryCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.FactoryName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.IsDelete)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.No)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.PartNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PlanStartDate)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.PlanType)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PlanTypeDesc)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.PlannEndDate)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.Quantity).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.Unit)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.UnitDesc)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.UpdateTime)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.UserName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.WarehouseCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.WarehouseName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.WorkShop)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.WorkShopCode)
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<PrdParainfo>(entity =>
            {
                entity.ToTable("PRD_PARAINFO");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.ChkDate).HasColumnType("datetime");

                entity.Property(e => e.ChkMan)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkManName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkMob)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.ParaName)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Para_Name");

                entity.Property(e => e.ParaNo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Para_NO");

                entity.Property(e => e.ParaType)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("Para_Type");

                entity.Property(e => e.SysDate).HasColumnType("datetime");

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Usr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<PrdParatype>(entity =>
            {
                entity.ToTable("PRD_PARATYPE");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.ChkDate).HasColumnType("datetime");

                entity.Property(e => e.ChkMan)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkManName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkMob)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Name)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("NAME");

                entity.Property(e => e.No)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("NO");

                entity.Property(e => e.Rem)
                    .IsRequired()
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.StopId).HasColumnName("STOP_ID");

                entity.Property(e => e.SysDate).HasColumnType("datetime");

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Usr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<PrdSpc>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("PRD_SPC");

                entity.Property(e => e.QtyBox)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_BOX");

                entity.Property(e => e.QtyBoxP).HasColumnName("QTY_BOX_P");

                entity.Property(e => e.QtyTier).HasColumnName("QTY_TIER");

                entity.Property(e => e.SpcId)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("SPC_ID");

                entity.Property(e => e.SpcName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SPC_NAME");

                entity.Property(e => e.WgUnit)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("WG_UNIT");
            });

            modelBuilder.Entity<PrdStandard>(entity =>
            {
                entity.ToTable("PRD_STANDARD");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.ChkDate).HasColumnType("datetime");

                entity.Property(e => e.ChkMan)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.ChkManName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.ChkMob)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.IsPrint).HasDefaultValueSql("((0))");

                entity.Property(e => e.IsUse).HasColumnName("IS_USE");

                entity.Property(e => e.Name)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NAME");

                entity.Property(e => e.No)
                    .IsRequired()
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("NO");

                entity.Property(e => e.Rem)
                    .IsRequired()
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("REM");

                entity.Property(e => e.SysDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Usr)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.UsrName)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");
            });

            modelBuilder.Entity<PrdStation>(entity =>
            {
                entity.ToTable("PRD_STATION");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.ChkDate).HasColumnType("datetime");

                entity.Property(e => e.ChkMan)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkManName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkMob)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.FactoryNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Factory_NO");

                entity.Property(e => e.Name)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.No)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.PdLineName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PdLineNo)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.StopId).HasColumnName("STOP_ID");

                entity.Property(e => e.SysDate).HasColumnType("datetime");

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Usr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ZcName)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ZC_Name");

                entity.Property(e => e.ZcNo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ZC_NO");
            });

            modelBuilder.Entity<PrdStationPara>(entity =>
            {
                entity.ToTable("PRD_STATION_PARA");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.ChkDate).HasColumnType("datetime");

                entity.Property(e => e.ChkMan)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkManName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkMob)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.LowLimit)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Low_Limit");

                entity.Property(e => e.ParaName)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Para_Name");

                entity.Property(e => e.ParaNo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Para_NO");

                entity.Property(e => e.ParaType)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Para_Type");

                entity.Property(e => e.PdLineNo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PrdNo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("PRD_NO");

                entity.Property(e => e.StationNo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Station_NO");

                entity.Property(e => e.SysDate).HasColumnType("datetime");

                entity.Property(e => e.UpLimit)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Up_Limit");

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Usr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ZcNo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ZC_NO");
            });

            modelBuilder.Entity<PrdTools>(entity =>
            {
                entity.ToTable("PRD_TOOLS");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.ChkDate).HasColumnType("datetime");

                entity.Property(e => e.ChkMan)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.ChkManName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.ChkMob)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.IsPrint).HasDefaultValueSql("((0))");

                entity.Property(e => e.IsUse).HasColumnName("IS_USE");

                entity.Property(e => e.Name)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NAME");

                entity.Property(e => e.No)
                    .IsRequired()
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("NO");

                entity.Property(e => e.Rem)
                    .IsRequired()
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("REM");

                entity.Property(e => e.SysDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Usr)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.UsrName)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");
            });

            modelBuilder.Entity<Prdandwh>(entity =>
            {
                entity.ToTable("PRDANDWH");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.ChkDate).HasColumnType("datetime");

                entity.Property(e => e.ChkMan)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkManName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkMob)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Dep)
                    .IsRequired()
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("DEP");

                entity.Property(e => e.IdxNo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDX_NO");

                entity.Property(e => e.PrdMark)
                    .IsRequired()
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("PRD_MARK")
                    .HasDefaultValueSql("(space((0)))");

                entity.Property(e => e.PrdNo)
                    .IsRequired()
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("PRD_NO");

                entity.Property(e => e.Qty)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY");

                entity.Property(e => e.Rem)
                    .HasColumnType("text")
                    .HasColumnName("REM");

                entity.Property(e => e.SysDate).HasColumnType("datetime");

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Usr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Wh)
                    .IsRequired()
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("WH");
            });

            modelBuilder.Entity<Prdt>(entity =>
            {
                entity.ToTable("PRDT");

                entity.HasIndex(e => new { e.PrdNo, e.Name }).HasName("IX_PRDT")
                    .IsUnique();

                entity.HasIndex(e => new { e.Snm, e.PrdNo }).HasName("IX_PRDT_1");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Abc)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ABC");

                entity.Property(e => e.BilMl)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("BIL_ML");

                entity.Property(e => e.BomId).HasColumnName("BOM_ID");

                entity.Property(e => e.Cadname)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("CADNAME");

                entity.Property(e => e.ChkDate).HasColumnType("datetime");

                entity.Property(e => e.ChkM2)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CHK_M2");

                entity.Property(e => e.ChkMan)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkManName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkMl)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CHK_ML");

                entity.Property(e => e.ChkMm)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CHK_MM");

                entity.Property(e => e.ChkMob)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.ChkMtn)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CHK_MTN");

                entity.Property(e => e.ChkPc)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CHK_PC");

                entity.Property(e => e.ChkSa)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CHK_SA");

                entity.Property(e => e.ChkSb)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CHK_SB");

                entity.Property(e => e.ChkTax)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CHK_TAX");

                entity.Property(e => e.ChkTw)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CHK_TW");

                entity.Property(e => e.DeliveryLead).HasColumnType("decimal(18, 0)");

                entity.Property(e => e.Dep)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("DEP");

                entity.Property(e => e.Ditype).HasColumnName("DIType");

                entity.Property(e => e.DrawNoHis)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("DrawNo_His");

                entity.Property(e => e.DzDd)
                    .HasColumnType("datetime")
                    .HasColumnName("DZ_DD");

                entity.Property(e => e.EffectiveDate)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.FigureNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Formula)
                    .HasMaxLength(210)
                    .IsUnicode(false)
                    .HasColumnName("FORMULA");

                entity.Property(e => e.Idx1)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDX1");

                entity.Property(e => e.Iitype).HasColumnName("IIType");

                entity.Property(e => e.IsBarcodeMng).HasColumnName("IsBarcode_Mng");

                entity.Property(e => e.IsBatchMng).HasColumnName("IsBatch_Mng");

                entity.Property(e => e.IsBom)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("IsBOM");

                entity.Property(e => e.IsPieceMng).HasColumnName("IsPiece_Mng");

                entity.Property(e => e.Knd)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("KND");

                entity.Property(e => e.MaterialType)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.MinRequestQuantity).HasColumnType("decimal(18, 0)");

                entity.Property(e => e.MlByMm)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ML_BY_MM");

                entity.Property(e => e.MlUt)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ML_UT");

                entity.Property(e => e.MtnLtime).HasColumnName("MTN_LTIME");

                entity.Property(e => e.Multiple).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.Name)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("NAME");

                entity.Property(e => e.NameEng)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("NAME_ENG");

                entity.Property(e => e.NamePy)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("NAME_PY");

                entity.Property(e => e.NeedDays)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("NEED_DAYS");

                entity.Property(e => e.NeedDd).HasColumnName("NEED_DD");

                entity.Property(e => e.NotRtn).HasColumnName("NOT_RTN");

                entity.Property(e => e.NouseDd)
                    .HasColumnType("datetime")
                    .HasColumnName("NOUSE_DD");

                entity.Property(e => e.Oitype).HasColumnName("OIType");

                entity.Property(e => e.OldCode)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("OLD_CODE");

                entity.Property(e => e.Olefield)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("OLEFIELD");

                entity.Property(e => e.OnTrayQty).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.PakExc)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("PAK_EXC");

                entity.Property(e => e.PakGw)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("PAK_GW");

                entity.Property(e => e.PakMeast)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("PAK_MEAST");

                entity.Property(e => e.PakMeastUnit)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("PAK_MEAST_UNIT");

                entity.Property(e => e.PakNw)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("PAK_NW");

                entity.Property(e => e.PakUnit)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("PAK_UNIT");

                entity.Property(e => e.PakWeightUnit)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("PAK_WEIGHT_UNIT");

                entity.Property(e => e.Pk2Qty)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("PK2_QTY");

                entity.Property(e => e.Pk2Ut)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("PK2_UT");

                entity.Property(e => e.Pk3Qty)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("PK3_QTY");

                entity.Property(e => e.Pk3Ut)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("PK3_UT");

                entity.Property(e => e.PlanLead).HasColumnType("decimal(12, 3)");

                entity.Property(e => e.PrdLevel)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("PRD_LEVEL");

                entity.Property(e => e.PrdNo)
                    .IsRequired()
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("PRD_NO");

                entity.Property(e => e.PrdNoExc)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("PRD_NO_EXC");

                entity.Property(e => e.PrdPack)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("PRD_PACK");

                entity.Property(e => e.QtyLostFix)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_LOST_FIX");

                entity.Property(e => e.QtyLow)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_LOW");

                entity.Property(e => e.QtyMax)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_MAX");

                entity.Property(e => e.QtyMin)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_MIN");

                entity.Property(e => e.QtyMin1)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_MIN1");

                entity.Property(e => e.Rem)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("REM");

                entity.Property(e => e.RequestAdvance).HasColumnType("decimal(18, 0)");

                entity.Property(e => e.Rmitype).HasColumnName("RMIType");

                entity.Property(e => e.RtoCl)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("RTO_CL");

                entity.Property(e => e.RtoId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("RTO_ID");

                entity.Property(e => e.RtoMm)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("RTO_MM");

                entity.Property(e => e.RtoPc)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("RTO_PC");

                entity.Property(e => e.RtoRtn).HasColumnName("RTO_RTN");

                entity.Property(e => e.RtoSa)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("RTO_SA");

                entity.Property(e => e.RtoTb)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("RTO_TB");

                entity.Property(e => e.SalNo)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("SAL_NO");

                entity.Property(e => e.SelfMadePartsType)
                    .HasMaxLength(55)
                    .IsUnicode(false);

                entity.Property(e => e.SmallestPackage).HasColumnType("decimal(18, 0)");

                entity.Property(e => e.Smallpic)
                    .HasColumnType("image")
                    .HasColumnName("SMALLPIC");

                entity.Property(e => e.Snm)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SNM");

                entity.Property(e => e.Spc)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("SPC");

                entity.Property(e => e.SpcTax)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("SPC_TAX");

                entity.Property(e => e.StopId).HasColumnName("STOP_ID");

                entity.Property(e => e.StorageType)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Sup1)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("SUP1");

                entity.Property(e => e.Sup2)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("SUP2");

                entity.Property(e => e.SysDate).HasColumnType("datetime");

                entity.Property(e => e.TimeUnit)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIME_UNIT");

                entity.Property(e => e.TlId).HasColumnName("TL_ID");

                entity.Property(e => e.TwId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TW_ID");

                entity.Property(e => e.UnitConv)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Unit_Conv");

                entity.Property(e => e.UpMax)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("UP_MAX");

                entity.Property(e => e.UpMin)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("UP_MIN");

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Usr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Ut)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("UT");

                entity.Property(e => e.Ut1)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("UT1");

                entity.Property(e => e.UtTime)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("UT_TIME");

                entity.Property(e => e.Utno)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("UTNO");

                entity.Property(e => e.ValidDays).HasColumnName("VALID_DAYS");

                entity.Property(e => e.ValidUnit)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("VALID_UNIT");

                entity.Property(e => e.WcMonth).HasColumnName("WC_MONTH");

                entity.Property(e => e.Weight)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("WEIGHT");

                entity.Property(e => e.Wh)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("WH");

                entity.Property(e => e.WhLc)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("WH_LC");

                entity.Property(e => e.XnNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("XN_NO");
            });

            modelBuilder.Entity<Prdt1>(entity =>
            {
                entity.ToTable("PRDT1");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.AmtCst)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("AMT_CST");

                entity.Property(e => e.ChkDate).HasColumnType("datetime");

                entity.Property(e => e.ChkMan)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkManName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkMob)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.ChqcDd)
                    .HasColumnType("datetime")
                    .HasColumnName("CHQC_DD");

                entity.Property(e => e.CstBx)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("CST_BX");

                entity.Property(e => e.CstInt)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("CST_INT");

                entity.Property(e => e.CstPo)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("CST_PO");

                entity.Property(e => e.CstSal)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("CST_SAL");

                entity.Property(e => e.CstStd)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("CST_STD");

                entity.Property(e => e.LstInd)
                    .HasColumnType("datetime")
                    .HasColumnName("LST_IND");

                entity.Property(e => e.LstIndQc)
                    .HasColumnType("datetime")
                    .HasColumnName("LST_IND_QC");

                entity.Property(e => e.LstOtd)
                    .HasColumnType("datetime")
                    .HasColumnName("LST_OTD");

                entity.Property(e => e.LstOtdQc)
                    .HasColumnType("datetime")
                    .HasColumnName("LST_OTD_QC");

                entity.Property(e => e.LstSfd)
                    .HasColumnType("datetime")
                    .HasColumnName("LST_SFD");

                entity.Property(e => e.PrdMark)
                    .IsRequired()
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("PRD_MARK")
                    .HasDefaultValueSql("(space((0)))");

                entity.Property(e => e.PrdNo)
                    .IsRequired()
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("PRD_NO");

                entity.Property(e => e.Qty)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY");

                entity.Property(e => e.Qty1)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY1");

                entity.Property(e => e.Qty1Brw)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY1_BRW");

                entity.Property(e => e.Qty1Lock)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY1_LOCK");

                entity.Property(e => e.Qty1Lrn)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY1_LRN");

                entity.Property(e => e.QtyBrw)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_BRW");

                entity.Property(e => e.QtyCk)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_CK");

                entity.Property(e => e.QtyInt)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_INT");

                entity.Property(e => e.QtyJh)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_JH");

                entity.Property(e => e.QtyLock)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_LOCK");

                entity.Property(e => e.QtyLrn)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_LRN");

                entity.Property(e => e.QtyMax)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_MAX");

                entity.Property(e => e.QtyMin)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_MIN");

                entity.Property(e => e.QtyOnOdr)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_ON_ODR");

                entity.Property(e => e.QtyOnPrc)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_ON_PRC");

                entity.Property(e => e.QtyOnRsv)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_ON_RSV");

                entity.Property(e => e.QtyOnWay)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_ON_WAY");

                entity.Property(e => e.QtyQ2)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_Q2");

                entity.Property(e => e.QtyQ2Yl)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_Q2_YL");

                entity.Property(e => e.QtyQ3)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_Q3");

                entity.Property(e => e.QtyQl)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_QL");

                entity.Property(e => e.QtyRk)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_RK");

                entity.Property(e => e.QtySa)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_SA");

                entity.Property(e => e.QtySq)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_SQ");

                entity.Property(e => e.QtySqc)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_SQC");

                entity.Property(e => e.QtySqr)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_SQR");

                entity.Property(e => e.QtySw)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_SW");

                entity.Property(e => e.QtyWs)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_WS");

                entity.Property(e => e.QtyWsKc)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_WS_KC");

                entity.Property(e => e.QtyWx)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_WX");

                entity.Property(e => e.QtyZg)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_ZG");

                entity.Property(e => e.Rem)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("REM");

                entity.Property(e => e.ScDd)
                    .HasColumnType("datetime")
                    .HasColumnName("SC_DD");

                entity.Property(e => e.SysDate).HasColumnType("datetime");

                entity.Property(e => e.UpDd).HasColumnName("UP_DD");

                entity.Property(e => e.UpInt)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("UP_INT");

                entity.Property(e => e.UpPo)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("UP_PO");

                entity.Property(e => e.UpSal)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("UP_SAL");

                entity.Property(e => e.UpStd)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("UP_STD");

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Usr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Wh)
                    .IsRequired()
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("WH");
            });

            modelBuilder.Entity<Prdt1Info>(entity =>
            {
                entity.ToTable("PRDT1_INFO");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.PrdName)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("PRD_NAME");

                entity.Property(e => e.PrdNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("PRD_NO");

                entity.Property(e => e.PrdSpc)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("PRD_SPC");

                entity.Property(e => e.Qty)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY");

                entity.Property(e => e.SysDate).HasColumnType("datetime");

                entity.Property(e => e.Unit)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Wh)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("WH");
            });

            modelBuilder.Entity<PrdtChangeInfos>(entity =>
            {
                entity.ToTable("PRDT_CHANGE_INFOS");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.EndTime)
                    .HasColumnType("datetime")
                    .HasColumnName("END_TIME");

                entity.Property(e => e.PrdNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("PRD_NO");

                entity.Property(e => e.SebNo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SEB_NO");

                entity.Property(e => e.StaTime)
                    .HasColumnType("datetime")
                    .HasColumnName("STA_TIME");

                entity.Property(e => e.Sysdate)
                    .HasColumnType("datetime")
                    .HasColumnName("SYSDATE");

                entity.Property(e => e.Upddate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDDATE");

                entity.Property(e => e.Updusr)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("UPDUSR");

                entity.Property(e => e.Updusrname)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("UPDUSRNAME");

                entity.Property(e => e.Usr)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("USR");

                entity.Property(e => e.Usrname)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("USRNAME");
            });

            modelBuilder.Entity<PrdtCus1>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("PRDT_CUS1");

                entity.Property(e => e.AreaNo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("AREA_NO");

                entity.Property(e => e.BzKnd)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("BZ_KND");

                entity.Property(e => e.CpySw)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CPY_SW");

                entity.Property(e => e.CusNo)
                    .IsRequired()
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("CUS_NO");

                entity.Property(e => e.Idx1)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDX1");

                entity.Property(e => e.LenCus)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("LEN_CUS");

                entity.Property(e => e.PrdMark)
                    .IsRequired()
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("PRD_MARK")
                    .HasDefaultValueSql("(space((0)))");

                entity.Property(e => e.PrdNo)
                    .IsRequired()
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("PRD_NO");

                entity.Property(e => e.QtyLow)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_LOW");

                entity.Property(e => e.Rem)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("REM");

                entity.Property(e => e.RemCus)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("REM_CUS");

                entity.Property(e => e.Spc)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("SPC");

                entity.Property(e => e.StopDd)
                    .HasColumnType("datetime")
                    .HasColumnName("STOP_DD");

                entity.Property(e => e.SupPrdMark)
                    .IsRequired()
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("SUP_PRD_MARK");

                entity.Property(e => e.SupPrdName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("SUP_PRD_NAME");

                entity.Property(e => e.SupPrdNo)
                    .IsRequired()
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("SUP_PRD_NO");

                entity.Property(e => e.SysDate)
                    .HasColumnType("datetime")
                    .HasColumnName("SYS_DATE");

                entity.Property(e => e.TypeCus)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("TYPE_CUS");

                entity.Property(e => e.Up)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("UP");

                entity.Property(e => e.ZcType)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ZC_TYPE");
            });

            modelBuilder.Entity<PrdtCus2>(entity =>
            {
                entity.ToTable("PRDT_CUS2");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.CusNo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("CUS_NO");

                entity.Property(e => e.PakGw)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("PAK_GW");

                entity.Property(e => e.PrdNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("PRD_NO");

                entity.Property(e => e.Rem)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("REM");

                entity.Property(e => e.SmallPackageQty)
                    .HasColumnType("decimal(18, 0)")
                    .HasColumnName("SmallPackageQTY");

                entity.Property(e => e.SupPrdName)
                    .IsRequired()
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("SUP_PRD_NAME");

                entity.Property(e => e.SupPrdNo)
                    .IsRequired()
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("SUP_PRD_NO");
            });

            modelBuilder.Entity<PrdtUt>(entity =>
            {
                entity.ToTable("PRDT_UT");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.No)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Ut)
                    .IsRequired()
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("UT");

                entity.Property(e => e.UtId)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("UT_ID");
            });

            modelBuilder.Entity<Predefreason>(entity =>
            {
                entity.ToTable("PREDEFREASON");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.CallTypeNo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Name)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.No)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ZcNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ZC_NO");
            });

            modelBuilder.Entity<Processinfo>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("PROCESSINFO");

                entity.Property(e => e.Barcode)
                    .HasMaxLength(200)
                    .HasColumnName("BARCODE");

                entity.Property(e => e.DepNo)
                    .HasMaxLength(100)
                    .HasColumnName("DEP_NO");

                entity.Property(e => e.Department)
                    .HasMaxLength(100)
                    .HasColumnName("DEPARTMENT");

                entity.Property(e => e.Equipment)
                    .HasMaxLength(200)
                    .HasColumnName("EQUIPMENT");

                entity.Property(e => e.LsbNo)
                    .HasMaxLength(100)
                    .HasColumnName("LSB_NO");

                entity.Property(e => e.LuNo)
                    .HasMaxLength(100)
                    .HasColumnName("LU_NO");

                entity.Property(e => e.Person)
                    .HasMaxLength(100)
                    .HasColumnName("PERSON");

                entity.Property(e => e.Prdno)
                    .HasMaxLength(100)
                    .HasColumnName("PRDNO");

                entity.Property(e => e.Process)
                    .IsRequired()
                    .HasMaxLength(100)
                    .HasColumnName("PROCESS");

                entity.Property(e => e.SalNo)
                    .HasMaxLength(100)
                    .HasColumnName("SAL_NO");

                entity.Property(e => e.SebNo)
                    .HasMaxLength(100)
                    .HasColumnName("SEB_NO");

                entity.Property(e => e.Sfhg)
                    .HasMaxLength(100)
                    .HasColumnName("SFHG");

                entity.Property(e => e.Shift)
                    .HasMaxLength(100)
                    .HasColumnName("SHIFT");

                entity.Property(e => e.Starttime)
                    .HasMaxLength(100)
                    .HasColumnName("STARTTIME");

                entity.Property(e => e.TzNo)
                    .HasMaxLength(100)
                    .HasColumnName("TZ_NO");

                entity.Property(e => e.ZcNo)
                    .HasMaxLength(100)
                    .HasColumnName("ZC_NO");

                entity.Property(e => e.ZcNum).HasColumnName("ZC_NUM");

                entity.Property(e => e.ZybNo)
                    .HasMaxLength(100)
                    .HasColumnName("ZYB_NO");
            });

            modelBuilder.Entity<QcBarcode>(entity =>
            {
                entity.ToTable("QC_BARCODE");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Barcode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("BARCODE");

                entity.Property(e => e.Flag).HasColumnName("FLAG");

                entity.Property(e => e.Sysdate)
                    .HasColumnType("datetime")
                    .HasColumnName("SYSDATE")
                    .HasDefaultValueSql("(getdate())");
            });

            modelBuilder.Entity<QcDefectType>(entity =>
            {
                entity.ToTable("QC_DefectType");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BilType)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.BilTypeName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.BusiNo)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkDate).HasColumnType("datetime");

                entity.Property(e => e.ChkMan)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkManName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkMob)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.ClsDate).HasColumnType("datetime");

                entity.Property(e => e.ClsUsr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ClsUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Name)
                    .HasMaxLength(60)
                    .IsUnicode(false);

                entity.Property(e => e.No)
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.Property(e => e.Rem)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.SysDate).HasColumnType("datetime");

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Usr)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UsrName)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<QcFinished>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("qc_finished");

                entity.Property(e => e.Comment)
                    .HasMaxLength(500)
                    .HasComment("备注");

                entity.Property(e => e.Cycle).HasComment("周期");

                entity.Property(e => e.CycleType).HasComment("周期类别 10.首件 20.末件 30.件数 40.分钟 50.小时 60.天");

                entity.Property(e => e.FromDate)
                    .HasColumnType("datetime")
                    .HasComment("起始日期");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.PfaNo)
                    .HasMaxLength(50)
                    .HasColumnName("PFA_NO")
                    .HasComment("表单");

                entity.Property(e => e.PrdNo)
                    .HasMaxLength(50)
                    .HasColumnName("PRD_NO")
                    .HasComment("产品");

                entity.Property(e => e.Qty)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY")
                    .HasComment("送检数量");

                entity.Property(e => e.SysDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())")
                    .HasComment("创建时间");

                entity.Property(e => e.ToDate)
                    .HasColumnType("datetime")
                    .HasComment("结束日期");

                entity.Property(e => e.UpdDate)
                    .HasColumnType("datetime")
                    .HasComment("修改时间");

                entity.Property(e => e.Usr)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasComment("用户编号");

                entity.Property(e => e.UsrName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasComment("用户名");
            });

            modelBuilder.Entity<QcInspFreq>(entity =>
            {
                entity.ToTable("QC_INSP_FREQ");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.FreqName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("FREQ_NAME");

                entity.Property(e => e.RreqValue).HasColumnName("RREQ_VALUE");

                entity.Property(e => e.Sysdate)
                    .HasColumnType("datetime")
                    .HasColumnName("SYSDATE");

                entity.Property(e => e.Unit)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("UNIT");
            });

            modelBuilder.Entity<QcItem>(entity =>
            {
                entity.ToTable("QC_ITEM");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.ChkDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.ChkMan)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.ChkManName)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.ChkMob)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("ChkMOB")
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.IsPrint).HasDefaultValueSql("((0))");

                entity.Property(e => e.Name)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("NAME");

                entity.Property(e => e.ParameterCode).HasMaxLength(50);

                entity.Property(e => e.PrjType)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("PRJ_TYPE");

                entity.Property(e => e.QcItm)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("QC_ITM");

                entity.Property(e => e.SysDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Unit)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UpdDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Usr)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.UsrName)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");
            });

            modelBuilder.Entity<QcPrdInspectSchemes>(entity =>
            {
                entity.ToTable("QC_PRD_INSPECT_SCHEMES");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATE_DATE");

                entity.Property(e => e.DeviceNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("DEVICE_NO");

                entity.Property(e => e.EffDate)
                    .HasColumnType("datetime")
                    .HasColumnName("EFF_DATE");

                entity.Property(e => e.InspectProjectName)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("INSPECT_PROJECT_NAME");

                entity.Property(e => e.InspectProjectNo)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("INSPECT_PROJECT_NO");

                entity.Property(e => e.InspectType)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("INSPECT_TYPE");

                entity.Property(e => e.IsQcFirstInspect)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("IS_QC_FIRST_INSPECT");

                entity.Property(e => e.IsQcInspect)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("IS_QC_INSPECT");

                entity.Property(e => e.IsQcLastInspect)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("IS_QC_LAST_INSPECT");

                entity.Property(e => e.IsWsFirstInspect)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("IS_WS_FIRST_INSPECT");

                entity.Property(e => e.IsWsInspect)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("IS_WS_INSPECT");

                entity.Property(e => e.IsWsLastInspect)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("IS_WS_LAST_INSPECT");

                entity.Property(e => e.MaxScope1)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("MAX_SCOPE_1");

                entity.Property(e => e.MaxScope2)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("MAX_SCOPE_2");

                entity.Property(e => e.MaxTolerance1)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("MAX_TOLERANCE_1");

                entity.Property(e => e.MaxTolerance2)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("MAX_TOLERANCE_2");

                entity.Property(e => e.MinScope1)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("MIN_SCOPE_1");

                entity.Property(e => e.MinScope2)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("MIN_SCOPE_2");

                entity.Property(e => e.MinTolerance1)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("MIN_TOLERANCE_1");

                entity.Property(e => e.MinTolerance2)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("MIN_TOLERANCE_2");

                entity.Property(e => e.MonthCondition)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("MONTH_CONDITION");

                entity.Property(e => e.Mould)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("MOULD");

                entity.Property(e => e.PrdNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("PRD_NO");

                entity.Property(e => e.QcCollectMethod)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("QC_COLLECT_METHOD");

                entity.Property(e => e.QcInspectCnt)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("QC_INSPECT_CNT");

                entity.Property(e => e.QcInspectHz)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("QC_INSPECT_HZ");

                entity.Property(e => e.QcInspectType)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("QC_INSPECT_TYPE");

                entity.Property(e => e.QcSpc)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("QC_SPC");

                entity.Property(e => e.Sort).HasColumnName("SORT");

                entity.Property(e => e.StandardScopeValue)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("STANDARD_SCOPE_VALUE");

                entity.Property(e => e.WeatherCondition)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("WEATHER_CONDITION");

                entity.Property(e => e.WsCollectMethod)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("WS_COLLECT_METHOD");

                entity.Property(e => e.WsInspectCnt)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("WS_INSPECT_CNT");

                entity.Property(e => e.WsInspectHz)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("WS_INSPECT_HZ");

                entity.Property(e => e.WsInspectType)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("WS_INSPECT_TYPE");

                entity.Property(e => e.WsSpc)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("WS_SPC");

                entity.Property(e => e.ZcName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("ZC_NAME");

                entity.Property(e => e.ZcNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ZC_NO");
            });

            modelBuilder.Entity<QcPrdMeasureRecord>(entity =>
            {
                entity.ToTable("QC_PRD_MEASURE_RECORD");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATE_DATE");

                entity.Property(e => e.Ddate)
                    .HasColumnType("datetime")
                    .HasColumnName("DDATE");

                entity.Property(e => e.Dtime)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("DTIME");

                entity.Property(e => e.PartName)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("PART_NAME");

                entity.Property(e => e.Revisionnumber)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("REVISIONNUMBER");

                entity.Property(e => e.Serialnumber)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SERIALNUMBER");
            });

            modelBuilder.Entity<QcPrdMeasureRecordItem>(entity =>
            {
                entity.ToTable("QC_PRD_MEASURE_RECORD_ITEM");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Axis)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("AXIS");

                entity.Property(e => e.Description)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("DESCRIPTION");

                entity.Property(e => e.Dimension)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("DIMENSION");

                entity.Property(e => e.Meas)
                    .HasColumnType("decimal(18, 4)")
                    .HasColumnName("MEAS");

                entity.Property(e => e.Mid).HasColumnName("MID");
            });

            modelBuilder.Entity<QcPrdMeasureSchemes>(entity =>
            {
                entity.ToTable("QC_PRD_MEASURE_SCHEMES");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATE_DATE");

                entity.Property(e => e.Ddate)
                    .HasColumnType("datetime")
                    .HasColumnName("DDATE");

                entity.Property(e => e.Dtime)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("DTIME");

                entity.Property(e => e.PartName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("PART_NAME");

                entity.Property(e => e.Revisionnumber)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("REVISIONNUMBER");

                entity.Property(e => e.Serialnumber)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SERIALNUMBER");
            });

            modelBuilder.Entity<QcPrdMeasureSchemesItem>(entity =>
            {
                entity.ToTable("QC_PRD_MEASURE_SCHEMES_ITEM");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Axis)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("AXIS");

                entity.Property(e => e.Description)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("DESCRIPTION");

                entity.Property(e => e.Dimension)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("DIMENSION");

                entity.Property(e => e.Mid).HasColumnName("MID");

                entity.Property(e => e.NumMaxIn)
                    .HasColumnType("decimal(18, 4)")
                    .HasColumnName("NUM_MAX_IN");

                entity.Property(e => e.NumMinIn)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("NUM_MIN_IN");
            });

            modelBuilder.Entity<QcPrdSqc>(entity =>
            {
                entity.ToTable("QC_PRD_SQC");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Aql)
                    .HasColumnType("numeric(18, 5)")
                    .HasColumnName("AQL");

                entity.Property(e => e.ChkDate).HasColumnType("datetime");

                entity.Property(e => e.ChkMan)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkManName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ChkMob)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("ChkMOB");

                entity.Property(e => e.ChkModel).HasColumnName("CHK_MODEL");

                entity.Property(e => e.ChkQty).HasColumnName("CHK_QTY");

                entity.Property(e => e.EffDate)
                    .HasColumnType("datetime")
                    .HasColumnName("EFF_DATE");

                entity.Property(e => e.Efi).HasColumnName("EFI");

                entity.Property(e => e.EndDate).HasColumnType("datetime");

                entity.Property(e => e.FileNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("FILE_NO");

                entity.Property(e => e.FrequencyType)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.GraphNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("GRAPH_NO");

                entity.Property(e => e.ImpBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("IMP_BY");

                entity.Property(e => e.MaterialType)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PfaName)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("PFA_NAME");

                entity.Property(e => e.PfaNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("PFA_NO");

                entity.Property(e => e.PhotoZc)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("PHOTO_ZC");

                entity.Property(e => e.PrdMark)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("PRD_MARK");

                entity.Property(e => e.PrdNo)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("PRD_NO");

                entity.Property(e => e.PrintTpName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PrjCategory)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("PRJ_CATEGORY");

                entity.Property(e => e.PrjFeature)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("PRJ_FEATURE");

                entity.Property(e => e.PrjNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("PRJ_NO");

                entity.Property(e => e.PrjType)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("PRJ_TYPE");

                entity.Property(e => e.Rem)
                    .HasColumnType("text")
                    .HasColumnName("REM");

                entity.Property(e => e.SampleQty).HasColumnType("decimal(18, 4)");

                entity.Property(e => e.SuppCode).HasMaxLength(50);

                entity.Property(e => e.SysDate).HasColumnType("datetime");

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Usr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UsrName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Version)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ZcNo)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ZC_NO");
            });

            modelBuilder.Entity<QcPrdSqcItem>(entity =>
            {
                entity.ToTable("QC_PRD_SQC_ITEM");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.ErfFile)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("ERF_FILE");

                entity.Property(e => e.FrequencyType)
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.ItemId).HasColumnName("ItemID");

                entity.Property(e => e.Itm).HasColumnName("ITM");

                entity.Property(e => e.LowDesignScope)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.LowDesignTolerance)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.LowSybol)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.LowTechScope)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Mid).HasColumnName("MID");

                entity.Property(e => e.NumMax)
                    .HasColumnType("decimal(18, 4)")
                    .HasColumnName("NUM_MAX");

                entity.Property(e => e.NumMaxIn)
                    .HasColumnType("decimal(18, 4)")
                    .HasColumnName("NUM_MAX_IN");

                entity.Property(e => e.NumMin)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("NUM_MIN");

                entity.Property(e => e.NumMinIn)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("NUM_MIN_IN");

                entity.Property(e => e.ParameterType)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.QcEnumBusiNo)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("QC_Enum_BusiNo");

                entity.Property(e => e.QcItm)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("QC_ITM");

                entity.Property(e => e.QcModel).HasColumnName("QC_MODEL");

                entity.Property(e => e.QcMth)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("QC_MTH");

                entity.Property(e => e.QcSpc)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("QC_SPC");

                entity.Property(e => e.QcStandard)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("QC_STANDARD");

                entity.Property(e => e.QcTools)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("QC_TOOLS");

                entity.Property(e => e.QtyAqlcr)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_AQLCR");

                entity.Property(e => e.QtyAqlmaj)
                    .HasColumnType("decimal(18, 4)")
                    .HasColumnName("QTY_AQLMAJ");

                entity.Property(e => e.QtyAqlmin)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_AQLMIN");

                entity.Property(e => e.Rem)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("REM");

                entity.Property(e => e.SampLevel)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("SAMP_LEVEL");

                entity.Property(e => e.StandardValue).HasColumnType("numeric(18, 4)");

                entity.Property(e => e.Unit)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("UNIT");

                entity.Property(e => e.UpDesignScope)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.UpDesignTolerance)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.UpSybol)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.UpTechScope)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<QcPrj>(entity =>
            {
                entity.ToTable("QC_PRJ");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.ChkDate).HasColumnType("datetime");

                entity.Property(e => e.ChkMan)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkManName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ChkMob)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("ChkMOB");

                entity.Property(e => e.ChkModel).HasColumnName("CHK_MODEL");

                entity.Property(e => e.PrjCategory)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("PRJ_CATEGORY");

                entity.Property(e => e.PrjName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("PRJ_NAME");

                entity.Property(e => e.PrjNo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("PRJ_NO");

                entity.Property(e => e.PrjType)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("PRJ_TYPE");

                entity.Property(e => e.PrjVer).HasColumnName("PRJ_VER");

                entity.Property(e => e.Rem)
                    .HasColumnType("text")
                    .HasColumnName("REM");

                entity.Property(e => e.SysDate).HasColumnType("datetime");

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Usr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UsrName)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<QcPrjItem>(entity =>
            {
                entity.ToTable("QC_PRJ_ITEM");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.ErfFile)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("ERF_FILE");

                entity.Property(e => e.Itm).HasColumnName("ITM");

                entity.Property(e => e.LowSybol)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Mid).HasColumnName("MID");

                entity.Property(e => e.MsNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("MS_NO");

                entity.Property(e => e.NumMax)
                    .HasColumnType("decimal(18, 4)")
                    .HasColumnName("NUM_MAX");

                entity.Property(e => e.NumMaxIn)
                    .HasColumnType("decimal(18, 4)")
                    .HasColumnName("NUM_MAX_IN");

                entity.Property(e => e.NumMin)
                    .HasColumnType("decimal(18, 4)")
                    .HasColumnName("NUM_MIN");

                entity.Property(e => e.NumMinIn)
                    .HasColumnType("decimal(18, 4)")
                    .HasColumnName("NUM_MIN_IN");

                entity.Property(e => e.QcItm)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("QC_ITM");

                entity.Property(e => e.QcModel).HasColumnName("QC_MODEL");

                entity.Property(e => e.QcMth)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("QC_MTH");

                entity.Property(e => e.QcSpc)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("QC_SPC");

                entity.Property(e => e.QtyAqlcr)
                    .HasColumnType("decimal(18, 4)")
                    .HasColumnName("QTY_AQLCR");

                entity.Property(e => e.QtyAqlmaj)
                    .HasColumnType("decimal(18, 4)")
                    .HasColumnName("QTY_AQLMAJ");

                entity.Property(e => e.QtyAqlmin)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_AQLMIN");

                entity.Property(e => e.Rem)
                    .HasColumnType("text")
                    .HasColumnName("REM");

                entity.Property(e => e.SampLevel)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("SAMP_LEVEL");

                entity.Property(e => e.UpSybol)
                    .HasMaxLength(2)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<QcPrjType>(entity =>
            {
                entity.ToTable("QC_PRJ_TYPE");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.ChkDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.ChkMan)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.ChkManName)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.ChkMob)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("ChkMOB")
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.IsPrint).HasDefaultValueSql("((0))");

                entity.Property(e => e.Rem)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("REM");

                entity.Property(e => e.SysDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.TypeName)
                    .HasMaxLength(300)
                    .IsUnicode(false)
                    .HasColumnName("TYPE_NAME");

                entity.Property(e => e.TypeNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TYPE_NO");

                entity.Property(e => e.UpdDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Usr)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.UsrName)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");
            });

            modelBuilder.Entity<QcRecord>(entity =>
            {
                entity.ToTable("QC_RECORD");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Aql)
                    .HasColumnType("numeric(18, 5)")
                    .HasColumnName("AQL");

                entity.Property(e => e.Attachment)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.BanNo)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("BAN_NO");

                entity.Property(e => e.Barcode)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("BARCODE");

                entity.Property(e => e.BatchNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.BilType)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.BilTypeName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.BillDate).HasColumnType("datetime");

                entity.Property(e => e.BusiNo)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkDate).HasColumnType("datetime");

                entity.Property(e => e.ChkMan)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkManName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkMob)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.ClsDate).HasColumnType("datetime");

                entity.Property(e => e.ClsUsr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ClsUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.DepNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("DEP_NO");

                entity.Property(e => e.FileNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("FILE_NO");

                entity.Property(e => e.FurBatNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("FUR_BAT_NO");

                entity.Property(e => e.FurNumber)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("FUR_Number");

                entity.Property(e => e.GraphNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("GRAPH_NO");

                entity.Property(e => e.ImpBy)
                    .HasMaxLength(3500)
                    .IsUnicode(false)
                    .HasColumnName("IMP_BY");

                entity.Property(e => e.ImpStd)
                    .HasMaxLength(3500)
                    .IsUnicode(false)
                    .HasColumnName("IMP_STD");

                entity.Property(e => e.InspectTc).HasColumnName("InspectTC");

                entity.Property(e => e.InspectionType)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.No)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PfaNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("PFA_NO");

                entity.Property(e => e.Photo).HasColumnName("PHOTO");

                entity.Property(e => e.PrdNo)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("PRD_NO");

                entity.Property(e => e.Priority)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.PrjCategory)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("PRJ_CATEGORY");

                entity.Property(e => e.PrjType)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("PRJ_TYPE");

                entity.Property(e => e.QcDate)
                    .HasColumnType("datetime")
                    .HasColumnName("QC_Date");

                entity.Property(e => e.QcDev)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("QC_DEV");

                entity.Property(e => e.QcNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("QC_NO");

                entity.Property(e => e.QcPosition)
                    .HasMaxLength(3500)
                    .IsUnicode(false)
                    .HasColumnName("QC_POSITION");

                entity.Property(e => e.QcQty)
                    .HasColumnType("decimal(18, 4)")
                    .HasColumnName("QC_QTY");

                entity.Property(e => e.QcResult)
                    .HasMaxLength(50)
                    .HasColumnName("QC_Result");

                entity.Property(e => e.RecordQty).HasColumnType("decimal(18, 4)");

                entity.Property(e => e.RelationId).HasColumnName("RelationID");

                entity.Property(e => e.Rem)
                    .HasMaxLength(3500)
                    .IsUnicode(false);

                entity.Property(e => e.SampleQty).HasColumnType("decimal(18, 4)");

                entity.Property(e => e.SchemeId).HasColumnName("SchemeID");

                entity.Property(e => e.SebNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("SEB_NO");

                entity.Property(e => e.SourceBillNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SourceType)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SuDate)
                    .HasColumnType("datetime")
                    .HasColumnName("SU_Date");

                entity.Property(e => e.SuppCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SyNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SY_NO");

                entity.Property(e => e.SysDate).HasColumnType("datetime");

                entity.Property(e => e.TzNo)
                    .HasMaxLength(50)
                    .HasColumnName("TZ_NO");

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Usr)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UsrName)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ZcNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ZC_NO");
            });

            modelBuilder.Entity<QcRecordvalue>(entity =>
            {
                entity.ToTable("QC_RECORDVALUE");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Descp)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("DESCP");

                entity.Property(e => e.FirstValueId).HasColumnName("FirstValueID");

                entity.Property(e => e.InspectionFunc)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.InspectionQty).HasColumnType("decimal(18, 4)");

                entity.Property(e => e.ItemNo)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Lowsybol)
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("LOWSYBOL");

                entity.Property(e => e.Mid).HasColumnName("MID");

                entity.Property(e => e.NumMax)
                    .HasColumnType("decimal(18, 4)")
                    .HasColumnName("NUM_MAX");

                entity.Property(e => e.NumMin)
                    .HasColumnType("decimal(18, 4)")
                    .HasColumnName("NUM_MIN");

                entity.Property(e => e.ParamType)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.QcEnumBusiNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("QC_Enum_BusiNo");

                entity.Property(e => e.QcItm)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("QC_ITM");

                entity.Property(e => e.QcModel)
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("QC_MODEL");

                entity.Property(e => e.QcResult)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("QC_Result");

                entity.Property(e => e.QcUnit)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("QC_Unit");

                entity.Property(e => e.QcValue)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("QC_VALUE");

                entity.Property(e => e.SalNo)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("SAL_NO");

                entity.Property(e => e.SpId).HasColumnName("SP_ID");

                entity.Property(e => e.SpcNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SPC_NO");

                entity.Property(e => e.StandardValue).HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Upsybol)
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("UPSYBOL");

                entity.HasOne(d => d.MidNavigation)
                    .WithMany(p => p.QcRecordvalue)
                    .HasForeignKey(d => d.Mid)
                    .HasConstraintName("FK_QC_RECORDVALUE_QC_RECORD");
            });

            modelBuilder.Entity<QcTool>(entity =>
            {
                entity.ToTable("QC_TOOL");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Name)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("NAME");

                entity.Property(e => e.ToolNo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TOOL_NO");
            });

            modelBuilder.Entity<Qcinterfacerecordd>(entity =>
            {
                entity.ToTable("QCINTERFACERECORDD");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BatNo)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("batNo");

                entity.Property(e => e.BillTime).HasColumnType("datetime");

                entity.Property(e => e.ChkDate).HasColumnType("datetime");

                entity.Property(e => e.ChkUser)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.DInputDate)
                    .HasColumnType("datetime")
                    .HasColumnName("dInputDate");

                entity.Property(e => e.DepId).HasColumnName("depID");

                entity.Property(e => e.IFlag).HasColumnName("iFlag");

                entity.Property(e => e.LockUser)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Mid).HasColumnName("MID");

                entity.Property(e => e.PrdId).HasColumnName("prdID");

                entity.Property(e => e.PrintDate).HasColumnType("datetime");

                entity.Property(e => e.PrintUser)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Qty).HasColumnName("qty");

                entity.Property(e => e.QtyLost).HasColumnName("qtyLost");

                entity.Property(e => e.QtyOk).HasColumnName("qtyOK");

                entity.Property(e => e.Rem)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("REM");

                entity.Property(e => e.SUserId)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("sUserID");
            });

            modelBuilder.Entity<Qcinterfacerecordm>(entity =>
            {
                entity.ToTable("QCINTERFACERECORDM");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BillDate).HasColumnType("datetime");

                entity.Property(e => e.BillNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ChkDate).HasColumnType("datetime");

                entity.Property(e => e.ChkUser)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.DInputDate)
                    .HasColumnType("datetime")
                    .HasColumnName("dInputDate");

                entity.Property(e => e.EmpId).HasColumnName("empID");

                entity.Property(e => e.IFlag).HasColumnName("iFlag");

                entity.Property(e => e.LockUser)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.PrintDate).HasColumnType("datetime");

                entity.Property(e => e.PrintUser)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.QcTypeId).HasColumnName("qcTypeID");

                entity.Property(e => e.Rem)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("REM");

                entity.Property(e => e.SUserId)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("sUserID");
            });

            modelBuilder.Entity<Qcinterfacerecordv>(entity =>
            {
                entity.ToTable("QCINTERFACERECORDV");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.ChkDate).HasColumnType("datetime");

                entity.Property(e => e.ChkUser)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.DInputDate)
                    .HasColumnType("datetime")
                    .HasColumnName("dInputDate");

                entity.Property(e => e.IFlag).HasColumnName("iFlag");

                entity.Property(e => e.LockUser)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Mid).HasColumnName("MID");

                entity.Property(e => e.PrintDate).HasColumnType("datetime");

                entity.Property(e => e.PrintUser)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.QcItemId).HasColumnName("qcItemID");

                entity.Property(e => e.SUserId)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("sUserID");

                entity.Property(e => e.Value).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.ValueMax).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.ValueMin).HasColumnType("decimal(18, 4)");
            });

            modelBuilder.Entity<Qciteminterface>(entity =>
            {
                entity.ToTable("QCITEMINTERFACE");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.ChkDate).HasColumnType("datetime");

                entity.Property(e => e.ChkUser)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.DInputDate)
                    .HasColumnType("datetime")
                    .HasColumnName("dInputDate");

                entity.Property(e => e.IFlag).HasColumnName("iFlag");

                entity.Property(e => e.LockUser)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.PrintDate).HasColumnType("datetime");

                entity.Property(e => e.PrintUser)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.QcItemInterfaceName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("qcItemInterfaceName");

                entity.Property(e => e.QcItemInterfaceNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("qcItemInterfaceNo");

                entity.Property(e => e.Rem)
                    .HasMaxLength(4000)
                    .IsUnicode(false)
                    .HasColumnName("REM");

                entity.Property(e => e.SUserId)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("sUserID");
            });

            modelBuilder.Entity<QmInspectBill>(entity =>
            {
                entity.ToTable("QM_InspectBill");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Attachment)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.BanNo)
                    .HasMaxLength(55)
                    .IsUnicode(false)
                    .HasColumnName("BAN_NO");

                entity.Property(e => e.BillNo)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasComment("检验单据号");

                entity.Property(e => e.BillStatus)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasComment("状态");

                entity.Property(e => e.Comment)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.Dept)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InspectDate)
                    .HasColumnType("datetime")
                    .HasComment("样本送检时间");

                entity.Property(e => e.InspectNum)
                    .HasColumnType("numeric(18, 2)")
                    .HasComment("送检数量");

                entity.Property(e => e.InspectTc).HasColumnName("InspectTC");

                entity.Property(e => e.InspectUser)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasComment("送检人");

                entity.Property(e => e.InspectionMode).HasMaxLength(10);

                entity.Property(e => e.ManualSubmitUser)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ManualsubmitTime).HasColumnType("datetime");

                entity.Property(e => e.Pid)
                    .HasColumnName("PID")
                    .HasComment("检验计划ID");

                entity.Property(e => e.PlanDate).HasColumnType("datetime");

                entity.Property(e => e.ProcedureCode)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasComment("工序代码");

                entity.Property(e => e.Result)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.SamplingTime).HasColumnType("datetime");

                entity.Property(e => e.SourceBillNo)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.SourceType)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SuppCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SysDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())")
                    .HasComment("创建日期");

                entity.Property(e => e.Tid)
                    .HasColumnName("TID")
                    .HasComment("检验单模板ID");

                entity.Property(e => e.Usr)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasComment("创建人");
            });

            modelBuilder.Entity<QmInspectPlan>(entity =>
            {
                entity.ToTable("QM_InspectPlan");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Cycle).HasComment("检验周期");

                entity.Property(e => e.CycleUnit)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasComment("检验周期单位[秒、分钟、日、周]");

                entity.Property(e => e.EffectiveDate)
                    .HasColumnType("datetime")
                    .HasComment("计划生效日期");

                entity.Property(e => e.InspectPlanNum)
                    .HasColumnType("numeric(18, 2)")
                    .HasComment("计划送检数量");

                entity.Property(e => e.InspectType)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.JobType)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasComment("计划任务类型【自动、手动】");

                entity.Property(e => e.PlanName)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PlanNo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PlanStatus)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasComment("计划状态");

                entity.Property(e => e.Priority)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasComment("优先级【可选、必检】");

                entity.Property(e => e.ProcedureCode)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasComment("工序代码");

                entity.Property(e => e.TemplateId).HasComment("检验表单模板");
            });

            modelBuilder.Entity<QmInspectS>(entity =>
            {
                entity.ToTable("QM_InspectS");

                entity.Property(e => e.Id)
                    .ValueGeneratedNever()
                    .HasColumnName("ID");

                entity.Property(e => e.AcceptOnDeviationQty).HasColumnType("decimal(18, 4)");

                entity.Property(e => e.AdvanceSampleNo)
                    .HasMaxLength(55)
                    .IsUnicode(false)
                    .HasColumnName("AdvanceSampleNO");

                entity.Property(e => e.BatchNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Comment)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.DeptNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.DeviceNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasComment("设备号");

                entity.Property(e => e.EnterFormItemId).HasColumnName("EnterFormItemID");

                entity.Property(e => e.HandlingSuggestion)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.InspectDevice)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InspectQty).HasColumnType("decimal(18, 4)");

                entity.Property(e => e.InspectType)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Inspectdate)
                    .HasColumnType("datetime")
                    .HasColumnName("INSPECTDATE");

                entity.Property(e => e.Mid).HasColumnName("MID");

                entity.Property(e => e.ProducedDate).HasColumnType("datetime");

                entity.Property(e => e.ProductNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasComment("产品编码");

                entity.Property(e => e.QualifiedQty).HasColumnType("decimal(18, 4)");

                entity.Property(e => e.RawMaterialBatch)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ReceiveQty).HasColumnType("decimal(18, 4)");

                entity.Property(e => e.Result)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasComment("是否合格");

                entity.Property(e => e.ReturnQty).HasColumnType("decimal(18, 4)");

                entity.Property(e => e.ReturnedQty).HasColumnType("decimal(18, 4)");

                entity.Property(e => e.ReworkQty).HasColumnType("decimal(18, 4)");

                entity.Property(e => e.SampleNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasComment("样本号");

                entity.Property(e => e.ScrapQty).HasColumnType("decimal(18, 4)");

                entity.Property(e => e.ScrapQtySupp).HasColumnType("decimal(18, 4)");

                entity.Property(e => e.ScrapedQty).HasColumnType("decimal(18, 4)");

                entity.Property(e => e.SourceBillNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SourceLocation)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TargetWareHouse)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TfedQty)
                    .HasColumnType("decimal(18, 4)")
                    .HasColumnName("TFedQty");

                entity.Property(e => e.TraceNo)
                    .HasMaxLength(55)
                    .IsUnicode(false);

                entity.Property(e => e.TzNo)
                    .HasMaxLength(55)
                    .IsUnicode(false)
                    .HasColumnName("TZ_NO");

                entity.Property(e => e.UndisposedQty).HasColumnType("decimal(18, 4)");

                entity.HasOne(d => d.MidNavigation)
                    .WithMany(p => p.QmInspectS)
                    .HasForeignKey(d => d.Mid)
                    .HasConstraintName("FK_QM_InspectS_QM_InspectBill");
            });

            modelBuilder.Entity<QmInspectSd>(entity =>
            {
                entity.ToTable("QM_InspectSD");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BarCode)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.CastingBatchNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("castingBatchNo");

                entity.Property(e => e.DeviceNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasComment("设备号");

                entity.Property(e => e.InputDate).HasColumnType("datetime");

                entity.Property(e => e.InspectCode)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasComment("检测项代码");

                entity.Property(e => e.InspectDate)
                    .HasColumnType("datetime")
                    .HasComment("检测时间");

                entity.Property(e => e.InspectName)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasComment("检查项中文名");

                entity.Property(e => e.InspectType)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.LowerLimit)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasComment("检测值下限");

                entity.Property(e => e.Mid)
                    .HasColumnName("MID")
                    .HasComment("检验样本ID");

                entity.Property(e => e.ProductNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasComment("产品编码");

                entity.Property(e => e.RealValue)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasComment("实测值");

                entity.Property(e => e.Remark)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasComment("备注");

                entity.Property(e => e.Result)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasComment("是否合格");

                entity.Property(e => e.StandardValue)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasComment("检测标准值");

                entity.Property(e => e.StoveNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Sysdate)
                    .HasColumnType("datetime")
                    .HasColumnName("SYSDATE");

                entity.Property(e => e.Unit)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasComment("单位");

                entity.Property(e => e.UpdateStamp)
                    .IsRequired()
                    .IsRowVersion()
                    .IsConcurrencyToken()
                    .HasComment("更新时间戳");

                entity.Property(e => e.UpperLimit)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasComment("检测值上限");
            });

            modelBuilder.Entity<QmInspectT>(entity =>
            {
                entity.ToTable("QM_InspectT");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.InspectType)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Name)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Pdline)
                    .HasMaxLength(55)
                    .IsUnicode(false);

                entity.Property(e => e.ProcedureCode)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ProductNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Remark)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SysDate).HasColumnType("datetime");

                entity.Property(e => e.Usr)
                    .HasMaxLength(20)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<QmInspectTd>(entity =>
            {
                entity.ToTable("QM_InspectTD");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.InspectCode)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.LowerLimit)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Mid).HasColumnName("MID");

                entity.Property(e => e.Name)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.StandardValue)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Unit)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UpperLimit)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.HasOne(d => d.MidNavigation)
                    .WithMany(p => p.QmInspectTd)
                    .HasForeignKey(d => d.Mid)
                    .HasConstraintName("FK_QM_InspectTD_QM_InspectT");
            });

            modelBuilder.Entity<QmInspectingOrder>(entity =>
            {
                entity.ToTable("QM_InspectingOrder");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Attachment)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.BatchNo)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.BillNoSource)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.BillStatus)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.BizNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.DeptNo)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.InspectingDevice)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.InspectingInstructor)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InspectingNo)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.InspectingSchemesNo)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.InspectingType)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.PartnerNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PrdName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PrdNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Priority)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.ProducedDate).HasColumnType("datetime");

                entity.Property(e => e.Result)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.SampleRule)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.SysDate).HasColumnType("datetime");

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Usr)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UsrName)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<QmInspectingRecord>(entity =>
            {
                entity.ToTable("QM_InspectingRecord");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.InspectingNo)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ItemNo)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.LowSymbols)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.LowValue).HasColumnType("numeric(18, 4)");

                entity.Property(e => e.Mid).HasColumnName("MID");

                entity.Property(e => e.PrdNo)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.SolutionNo)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.StandardValue).HasColumnType("numeric(18, 4)");

                entity.Property(e => e.SysDate).HasColumnType("datetime");

                entity.Property(e => e.UpSymbols)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.UpValue).HasColumnType("numeric(18, 4)");

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Usr)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UsrName)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.HasOne(d => d.MidNavigation)
                    .WithMany(p => p.QmInspectingRecord)
                    .HasForeignKey(d => d.Mid)
                    .HasConstraintName("FK_QM_InspectingRecord_QM_InspectingOrder");
            });

            modelBuilder.Entity<QmInspectionTypeDevice>(entity =>
            {
                entity.ToTable("QM_InspectionTypeDevice");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.DeviceNo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InspectionType)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SysDate).HasColumnType("datetime");

                entity.Property(e => e.Usr)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<QmMfQcXj>(entity =>
            {
                entity.ToTable("QM_MF_QC_XJ");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BanNo)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("BAN_NO");

                entity.Property(e => e.BatNo)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("BAT_NO");

                entity.Property(e => e.BilType)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.BilTypeName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.BillDate).HasColumnType("datetime");

                entity.Property(e => e.BusiNo)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkDate).HasColumnType("datetime");

                entity.Property(e => e.ChkMan)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkManName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkMob)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.ClsDate).HasColumnType("datetime");

                entity.Property(e => e.ClsUsr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ClsUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Dep)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("DEP")
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.MoNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("MO_NO")
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.No)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("NO")
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.PgNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("PG_NO")
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.PrdNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("PRD_NO")
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Rem)
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.SalNo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SAL_NO")
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.SysDate).HasColumnType("datetime");

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Usr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<QmProcessInspection>(entity =>
            {
                entity.ToTable("QM_ProcessInspection");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Attachment)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.No)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ProcessNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ProdName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("PROD_NAME");

                entity.Property(e => e.ProdNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("PROD_NO");

                entity.Property(e => e.ProdSpc)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("PROD_SPC");

                entity.Property(e => e.StartDate).HasColumnType("datetime");

                entity.Property(e => e.WkCenterNo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("WkCenter_No");

                entity.Property(e => e.WoNo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("WO_NO");
            });

            modelBuilder.Entity<QmSendInspectingOrder>(entity =>
            {
                entity.ToTable("QM_SendInspectingOrder");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.AccomplishDate).HasColumnType("datetime");

                entity.Property(e => e.BatchNo)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.BillNoSource)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.BillSourceLineNo)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.BillStatus)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.BizNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.DeptNo)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.DeviceNo)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.PartnerNo)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.PrdName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PrdNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ProcessNo)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ProducedDate).HasColumnType("datetime");

                entity.Property(e => e.RawMaterialBatch)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.SendInspectingOrderNo)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ShiftNo)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.StationNo)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.SysDate).HasColumnType("datetime");

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Usr)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UsrName)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<QmSioBci>(entity =>
            {
                entity.ToTable("QM_SIO_BCI");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BarCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Comment).HasMaxLength(500);

                entity.Property(e => e.HandleDate).HasColumnType("datetime");

                entity.Property(e => e.HandleUser)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Mid).HasColumnName("MID");

                entity.Property(e => e.ProcessNo)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Qty).HasColumnType("decimal(18, 4)");

                entity.Property(e => e.RelationId).HasColumnName("RelationID");

                entity.HasOne(d => d.MidNavigation)
                    .WithMany(p => p.QmSioBci)
                    .HasForeignKey(d => d.Mid)
                    .HasConstraintName("FK_QM_SIO_BCI_MID");
            });

            modelBuilder.Entity<QmTfQcXj>(entity =>
            {
                entity.ToTable("QM_TF_QC_XJ");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BatNo)
                    .IsRequired()
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("BAT_NO");

                entity.Property(e => e.Dep)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("DEP")
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Mid).HasColumnName("MID");

                entity.Property(e => e.MoNo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("MO_NO")
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.PgNo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("PG_NO")
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.PrcId).HasColumnName("PRC_ID");

                entity.Property(e => e.PrdNo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("PRD_NO")
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Qty)
                    .HasColumnType("decimal(18, 4)")
                    .HasColumnName("QTY");

                entity.Property(e => e.Rem1)
                    .IsRequired()
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("REM1")
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.SMemo)
                    .IsRequired()
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("sMEMO")
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.SalNo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SAL_NO")
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.SpcNo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SPC_NO")
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.ZcNo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ZC_NO")
                    .HasDefaultValueSql("('')");
            });

            modelBuilder.Entity<QmTi>(entity =>
            {
                entity.ToTable("qmTI");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Attachment)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.BilType)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.BilTypeName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.BillNo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.BillStatus)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.BusiNo)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkDate).HasColumnType("datetime");

                entity.Property(e => e.ChkMan)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkManName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkMob)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.ClsDate).HasColumnType("datetime");

                entity.Property(e => e.ClsUsr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ClsUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.DeptNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InspectTc).HasColumnName("InspectTC");

                entity.Property(e => e.IsEfi).HasColumnName("IsEFI");

                entity.Property(e => e.Rem)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.SendInspectorId).HasColumnName("SendInspectorID");

                entity.Property(e => e.SourceBillNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SuppCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SysDate).HasColumnType("datetime");

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Usr)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UsrName)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<QmTibarcode>(entity =>
            {
                entity.ToTable("qmTIBarcode");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Barcode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Comment)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.HandleDate).HasColumnType("datetime");

                entity.Property(e => e.HandleUser)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Mid).HasColumnName("MID");

                entity.Property(e => e.Qty).HasColumnType("decimal(18, 4)");

                entity.HasOne(d => d.MidNavigation)
                    .WithMany(p => p.QmTibarcode)
                    .HasForeignKey(d => d.Mid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("FK_qmTIBarcode_qmTISub");
            });

            modelBuilder.Entity<QmTisub>(entity =>
            {
                entity.ToTable("qmTISub");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BatchNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Comment)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.InspectionDate).HasColumnType("datetime");

                entity.Property(e => e.Mid).HasColumnName("MID");

                entity.Property(e => e.ProducedDate).HasColumnType("datetime");

                entity.Property(e => e.ProductionNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.QtyPs)
                    .HasColumnType("decimal(18, 4)")
                    .HasColumnName("QTY_PS");

                entity.Property(e => e.QtyRck)
                    .HasColumnType("decimal(18, 4)")
                    .HasColumnName("QTY_RCK");

                entity.Property(e => e.QtyRtn)
                    .HasColumnType("decimal(18, 4)")
                    .HasColumnName("QTY_RTN");

                entity.Property(e => e.RawMaterialBatch)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.RbillNo)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("RBillNo");

                entity.Property(e => e.RbillSid).HasColumnName("RBillSID");

                entity.Property(e => e.RbusiName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("RBusiName");

                entity.Property(e => e.RbusiNo)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("RBusiNo");

                entity.Property(e => e.Siqty)
                    .HasColumnType("decimal(18, 4)")
                    .HasColumnName("SIQty");

                entity.Property(e => e.SourceLocation)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.StorageLocation)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TargetWareHouse)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.WhId).HasColumnName("WhID");

                entity.HasOne(d => d.MidNavigation)
                    .WithMany(p => p.QmTisub)
                    .HasForeignKey(d => d.Mid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("FK_qmTISub_qmTI");
            });

            modelBuilder.Entity<QmTy>(entity =>
            {
                entity.ToTable("qmTY");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BilType)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.BilTypeName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.BillNo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.BillStatus)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.BusiNo)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkDate).HasColumnType("datetime");

                entity.Property(e => e.ChkKnd).HasColumnName("CHK_KND");

                entity.Property(e => e.ChkMan)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkManName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkMob)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.ClsDate).HasColumnType("datetime");

                entity.Property(e => e.ClsUsr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ClsUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.DeptNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InspectorId).HasColumnName("InspectorID");

                entity.Property(e => e.Rem)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.SourceBillNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SuppCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SysDate).HasColumnType("datetime");

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Usr)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UsrName)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<QmTybarcode>(entity =>
            {
                entity.ToTable("qmTYBarcode");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Barcode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Comment)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.HandleDate).HasColumnType("datetime");

                entity.Property(e => e.HandleUser)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Mid).HasColumnName("MID");

                entity.Property(e => e.Qty).HasColumnType("decimal(18, 4)");

                entity.HasOne(d => d.MidNavigation)
                    .WithMany(p => p.QmTybarcode)
                    .HasForeignKey(d => d.Mid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("FK_qmTYBarcode_qmTYSub");
            });

            modelBuilder.Entity<QmTysub>(entity =>
            {
                entity.ToTable("qmTYSub");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BatchNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Comment)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.InspectionDate).HasColumnType("datetime");

                entity.Property(e => e.Mid).HasColumnName("MID");

                entity.Property(e => e.PrcId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("PRC_ID");

                entity.Property(e => e.ProducedDate).HasColumnType("datetime");

                entity.Property(e => e.ProductionNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Qty).HasColumnType("decimal(18, 4)");

                entity.Property(e => e.QtyChk)
                    .HasColumnType("decimal(18, 4)")
                    .HasColumnName("QTY_CHK");

                entity.Property(e => e.QtyChkLost)
                    .HasColumnType("decimal(18, 4)")
                    .HasColumnName("QTY_CHK_LOST");

                entity.Property(e => e.QtyChkOk)
                    .HasColumnType("decimal(18, 4)")
                    .HasColumnName("QTY_CHK_OK");

                entity.Property(e => e.QtyLostRtn)
                    .HasColumnType("decimal(18, 4)")
                    .HasColumnName("QTY_LOST_RTN");

                entity.Property(e => e.QtyOkRtn)
                    .HasColumnType("decimal(18, 4)")
                    .HasColumnName("QTY_OK_RTN");

                entity.Property(e => e.QtyRbill)
                    .HasColumnType("decimal(18, 4)")
                    .HasColumnName("qtyRBill");

                entity.Property(e => e.QtyRtn)
                    .HasColumnType("decimal(18, 4)")
                    .HasColumnName("QTY_RTN");

                entity.Property(e => e.RbillNo)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("RBillNo");

                entity.Property(e => e.RbillSid).HasColumnName("RBillSID");

                entity.Property(e => e.RbusiName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("RBusiName");

                entity.Property(e => e.RbusiNo)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("RBusiNo");

                entity.Property(e => e.SourceLocation)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SpcNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SPC_NO");

                entity.Property(e => e.TargetWareHouse)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.UnqulifiedType)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.WhId).HasColumnName("WhID");

                entity.HasOne(d => d.MidNavigation)
                    .WithMany(p => p.QmTysub)
                    .HasForeignKey(d => d.Mid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("FK_qmTYSub_qmTY");
            });

            modelBuilder.Entity<QpisPicMap>(entity =>
            {
                entity.ToTable("QPIS_PIC_MAP");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.EffDate)
                    .HasColumnType("datetime")
                    .HasColumnName("EFF_DATE");

                entity.Property(e => e.InspectType)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("INSPECT_TYPE");

                entity.Property(e => e.Picid).HasColumnName("PICID");

                entity.Property(e => e.PrdNo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("PRD_NO");

                entity.Property(e => e.ZcNo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ZC_NO");
            });

            modelBuilder.Entity<QueryInspectionResult>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("QueryInspectionResult");

                entity.Property(e => e.Descp)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("DESCP");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.InspectionFunc)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.Lowsybol)
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("LOWSYBOL");

                entity.Property(e => e.No)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.NumMax)
                    .HasColumnType("decimal(18, 4)")
                    .HasColumnName("NUM_MAX");

                entity.Property(e => e.NumMin)
                    .HasColumnType("decimal(18, 4)")
                    .HasColumnName("NUM_MIN");

                entity.Property(e => e.PrdNo)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("PRD_NO");

                entity.Property(e => e.ProductionName)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.QcItm)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("QC_ITM");

                entity.Property(e => e.QcResult)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("QC_Result");

                entity.Property(e => e.QcValue)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("QC_VALUE");

                entity.Property(e => e.RecordQty).HasColumnType("decimal(18, 4)");

                entity.Property(e => e.SampleQty).HasColumnType("decimal(18, 4)");

                entity.Property(e => e.SourceBillNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Spc)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("SPC");

                entity.Property(e => e.SuppCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SuppName)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.TypeName)
                    .HasMaxLength(300)
                    .IsUnicode(false)
                    .HasColumnName("TYPE_NAME");

                entity.Property(e => e.Upsybol)
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("UPSYBOL");
            });

            modelBuilder.Entity<RespInfo>(entity =>
            {
                entity.ToTable("RESP_INFO");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BusiNo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.FcName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("FC_NAME");

                entity.Property(e => e.FcNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("FC_NO");

                entity.Property(e => e.Mid).HasColumnName("MID");

                entity.Property(e => e.Rem)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.ResetDate)
                    .HasColumnType("datetime")
                    .HasColumnName("RESET_DATE");

                entity.Property(e => e.ResetSalNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("RESET_SAL_NO");

                entity.Property(e => e.RespComment)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Resp_Comment");

                entity.Property(e => e.RespDate)
                    .HasColumnType("datetime")
                    .HasColumnName("RESP_DATE");

                entity.Property(e => e.RespSalNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("RESP_SAL_NO");

                entity.Property(e => e.SourceNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Source_No");

                entity.Property(e => e.SysDate).HasColumnType("datetime");

                entity.Property(e => e.ToBillNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TO_BillNo");

                entity.Property(e => e.Usr)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UsrName)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<RjgTzMap>(entity =>
            {
                entity.ToTable("RJG_TZ_MAP");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BanNo)
                    .HasMaxLength(50)
                    .HasColumnName("BAN_NO")
                    .IsFixedLength(true);

                entity.Property(e => e.JlId).HasColumnName("JL_ID");

                entity.Property(e => e.JlTz)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("JL_TZ");

                entity.Property(e => e.JljSebNo)
                    .HasMaxLength(50)
                    .HasColumnName("JLJ_SEB_NO");

                entity.Property(e => e.LsbSebNo)
                    .HasMaxLength(50)
                    .HasColumnName("LSB_SEB_NO");

                entity.Property(e => e.LsbTz)
                    .HasMaxLength(100)
                    .HasColumnName("LSB_TZ");

                entity.Property(e => e.MoNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("MO_NO");

                entity.Property(e => e.MrpNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("MRP_NO");

                entity.Property(e => e.RlId).HasColumnName("RL_ID");

                entity.Property(e => e.RlTz)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("RL_TZ");

                entity.Property(e => e.SebNo)
                    .HasMaxLength(50)
                    .HasColumnName("SEB_NO");

                entity.Property(e => e.SysDate)
                    .HasColumnType("datetime")
                    .HasColumnName("SYS_DATE");

                entity.Property(e => e.Temperature)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("TEMPERATURE");

                entity.Property(e => e.Unit)
                    .HasMaxLength(20)
                    .HasColumnName("UNIT");

                entity.Property(e => e.ZcNo)
                    .HasMaxLength(50)
                    .HasColumnName("ZC_NO");

                entity.Property(e => e.ZyCapacity)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("ZY_CAPACITY")
                    .HasComment("转运容量");

                entity.Property(e => e.ZySurplus)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("ZY_Surplus");
            });

            modelBuilder.Entity<RlSbei>(entity =>
            {
                entity.ToTable("RL_SBEI");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BanNo)
                    .HasMaxLength(50)
                    .HasColumnName("BAN_NO");

                entity.Property(e => e.BeginDate)
                    .HasColumnType("datetime")
                    .HasColumnName("BEGIN_DATE");

                entity.Property(e => e.CreateUserid).HasColumnName("CREATE_USERID");

                entity.Property(e => e.CreateUsername)
                    .HasMaxLength(20)
                    .HasColumnName("CREATE_USERNAME")
                    .IsFixedLength(true);

                entity.Property(e => e.EndDate)
                    .HasColumnType("datetime")
                    .HasColumnName("END_DATE");

                entity.Property(e => e.EndUserid).HasColumnName("END_USERID");

                entity.Property(e => e.EndUsername)
                    .HasMaxLength(20)
                    .HasColumnName("END_USERNAME")
                    .IsFixedLength(true);

                entity.Property(e => e.Mid).HasColumnName("MID");

                entity.Property(e => e.RlTz)
                    .HasMaxLength(100)
                    .HasColumnName("RL_TZ");

                entity.Property(e => e.SebNo)
                    .HasMaxLength(100)
                    .HasColumnName("SEB_NO");

                entity.Property(e => e.State).HasColumnName("STATE");

                entity.Property(e => e.Sysdate)
                    .HasColumnType("datetime")
                    .HasColumnName("SYSDATE");

                entity.Property(e => e.ZcNo)
                    .HasMaxLength(50)
                    .HasColumnName("ZC_NO");
            });

            modelBuilder.Entity<RmCutterProdectMapping>(entity =>
            {
                entity.ToTable("RM_CutterProdectMapping");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.CutterCode)
                    .HasMaxLength(50)
                    .IsFixedLength(true);

                entity.Property(e => e.CutterName)
                    .HasMaxLength(100)
                    .IsFixedLength(true);

                entity.Property(e => e.Name)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.ProdectCode)
                    .HasMaxLength(50)
                    .IsFixedLength(true);

                entity.Property(e => e.ProdectName)
                    .HasMaxLength(100)
                    .IsFixedLength(true);

                entity.Property(e => e.TypeCode)
                    .HasMaxLength(50)
                    .IsFixedLength(true);

                entity.Property(e => e.TypeName)
                    .HasMaxLength(100)
                    .IsFixedLength(true);

                entity.Property(e => e.TypeNature)
                    .HasMaxLength(50)
                    .IsFixedLength(true);
            });

            modelBuilder.Entity<RmCuttersCode>(entity =>
            {
                entity.ToTable("RM_Cutters_Code");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.CutterDesc)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("Cutter_Desc");

                entity.Property(e => e.CutterName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Cutter_Name");

                entity.Property(e => e.CutterNo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Cutter_No");

                entity.Property(e => e.FactorMax)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("Factor_Max");

                entity.Property(e => e.FactorWarn)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("Factor_Warn");

                entity.Property(e => e.QtyStandard)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("Qty_Standard");

                entity.Property(e => e.SysDate).HasColumnType("datetime");

                entity.Property(e => e.TypeNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Usr)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UsrName)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<RmCuttersLoss>(entity =>
            {
                entity.ToTable("RM_Cutters_Loss");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.CutterSize)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.LossFactor).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.SysDate).HasColumnType("datetime");

                entity.Property(e => e.TypeNo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Usr)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UsrName)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<RmCuttersProdMap>(entity =>
            {
                entity.ToTable("RM_CuttersProd_Map");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.CutterName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Cutter_Name");

                entity.Property(e => e.CutterNo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Cutter_No");

                entity.Property(e => e.PrdName)
                    .IsRequired()
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("PRD_NAME");

                entity.Property(e => e.PrdNo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("PRD_NO");

                entity.Property(e => e.SysDate).HasColumnType("datetime");

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Usr)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UsrName)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ZcGroup)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("ZC_GROUP");

                entity.Property(e => e.ZcName)
                    .IsRequired()
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("ZC_NAME");

                entity.Property(e => e.ZcNo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ZC_NO");

                entity.Property(e => e.ZcStep)
                    .IsRequired()
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("ZC_STEP");

                entity.Property(e => e.ZcType)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ZC_Type");
            });

            modelBuilder.Entity<RmCuttersSerialNumber>(entity =>
            {
                entity.ToTable("RM_Cutters_SerialNumber");

                entity.HasIndex(e => e.SerialNo).HasName("IX_RM_Cutters_SerialNumber")
                    .IsUnique();

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.CutterName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Cutter_Name");

                entity.Property(e => e.CutterNo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Cutter_No");

                entity.Property(e => e.QtyMachining).HasColumnName("Qty_Machining");

                entity.Property(e => e.QtyMax).HasColumnName("Qty_Max");

                entity.Property(e => e.QtyStandard).HasColumnName("Qty_Standard");

                entity.Property(e => e.QtyWarn).HasColumnName("Qty_Warn");

                entity.Property(e => e.ScrapedDate).HasColumnType("datetime");

                entity.Property(e => e.SerialNo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.State)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("STATE");

                entity.Property(e => e.StorageLoc)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Storage_Loc");

                entity.Property(e => e.SupNo)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Sup_No");

                entity.Property(e => e.SysDate).HasColumnType("datetime");

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Usr)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UsrName)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.WhseDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Whse_Date");
            });

            modelBuilder.Entity<RmCuttersTrace>(entity =>
            {
                entity.ToTable("RM_Cutters_Trace");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.CutterNo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Cutter_No");

                entity.Property(e => e.CutterSn)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Cutter_SN");

                entity.Property(e => e.InstallSite)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("INSTALL_SITE");

                entity.Property(e => e.Optype)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("OPType");

                entity.Property(e => e.SebNo)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("SEB_NO");

                entity.Property(e => e.StationNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SysDate).HasColumnType("datetime");

                entity.Property(e => e.Usr)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.WoNo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("WO_NO");

                entity.Property(e => e.ZcStep)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ZC_STEP");
            });

            modelBuilder.Entity<RmCuttersUse>(entity =>
            {
                entity.ToTable("RM_Cutters_Use");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.CutterName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("CUTTER_NAME");

                entity.Property(e => e.CutterNo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("CUTTER_NO");

                entity.Property(e => e.CutterSn)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("CUTTER_SN");

                entity.Property(e => e.InstallSite)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("INSTALL_SITE");

                entity.Property(e => e.PrdNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("PRD_NO");

                entity.Property(e => e.SebNo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SEB_NO");

                entity.Property(e => e.StationNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Sysdate)
                    .HasColumnType("datetime")
                    .HasColumnName("SYSDATE");

                entity.Property(e => e.Usr)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("USR");

                entity.Property(e => e.WoNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("WO_NO");

                entity.Property(e => e.ZcNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ZC_NO");

                entity.Property(e => e.ZcStep)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("ZC_STEP");
            });

            modelBuilder.Entity<RmFixtrueHis>(entity =>
            {
                entity.ToTable("RM_Fixtrue_His");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.FixtureCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.FixtureName)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.FixtureSn)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Fixture_SN");

                entity.Property(e => e.OpType)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("OP_Type");

                entity.Property(e => e.OpUsr)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("OP_Usr");

                entity.Property(e => e.ProcessNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Process_No");

                entity.Property(e => e.StationNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Station_No");

                entity.Property(e => e.SysDate).HasColumnType("datetime");

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Usr)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UsrName)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<RmFixtrueUse>(entity =>
            {
                entity.ToTable("RM_Fixtrue_Use");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.FixtureCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.FixtureName)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.FixtureSn)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Fixture_SN");

                entity.Property(e => e.ProcessNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Process_No");

                entity.Property(e => e.StationNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Station_No");

                entity.Property(e => e.SysDate).HasColumnType("datetime");

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Usr)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UsrName)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<RmFixtureLedger>(entity =>
            {
                entity.ToTable("RM_FixtureLedger");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Customers)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Factory)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.FixtureCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.FixtureName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.FixtureType)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Supplier)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<RmFixtureProdectMapping>(entity =>
            {
                entity.ToTable("RM_FixtureProdectMapping");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.FixtureCode)
                    .HasMaxLength(50)
                    .IsFixedLength(true);

                entity.Property(e => e.FixtureName)
                    .HasMaxLength(100)
                    .IsFixedLength(true);

                entity.Property(e => e.Name)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.ProdectCode)
                    .HasMaxLength(50)
                    .IsFixedLength(true);

                entity.Property(e => e.ProdectName)
                    .HasMaxLength(100)
                    .IsFixedLength(true);

                entity.Property(e => e.TypeCode)
                    .HasMaxLength(50)
                    .IsFixedLength(true);

                entity.Property(e => e.TypeName)
                    .HasMaxLength(100)
                    .IsFixedLength(true);

                entity.Property(e => e.TypeNature)
                    .HasMaxLength(50)
                    .IsFixedLength(true);
            });

            modelBuilder.Entity<RmFixtureSerialNumber>(entity =>
            {
                entity.ToTable("RM_FixtureSerialNumber");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.EndDate).HasColumnType("datetime");

                entity.Property(e => e.FixtureCode).HasMaxLength(55);

                entity.Property(e => e.FixturelNo).HasMaxLength(55);

                entity.Property(e => e.LastCheckDate).HasColumnType("datetime");

                entity.Property(e => e.Location).HasMaxLength(55);

                entity.Property(e => e.LossDate).HasColumnType("datetime");

                entity.Property(e => e.NextCheckDate).HasColumnType("datetime");

                entity.Property(e => e.Quantity).HasColumnType("decimal(18, 0)");

                entity.Property(e => e.StartDate).HasColumnType("datetime");

                entity.Property(e => e.Status).HasMaxLength(55);

                entity.Property(e => e.UsingStatus).HasMaxLength(55);
            });

            modelBuilder.Entity<RmMeasuringLedger>(entity =>
            {
                entity.ToTable("RM_MeasuringLedger");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Createtime)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATETIME");

                entity.Property(e => e.Createuser)
                    .HasMaxLength(55)
                    .HasColumnName("CREATEUSER");

                entity.Property(e => e.Customers).HasMaxLength(50);

                entity.Property(e => e.Factory).HasMaxLength(50);

                entity.Property(e => e.Isdelete).HasColumnName("ISDELETE");

                entity.Property(e => e.MeasuringCode).HasMaxLength(50);

                entity.Property(e => e.MeasuringName).HasMaxLength(100);

                entity.Property(e => e.MeasuringType).HasMaxLength(50);

                entity.Property(e => e.Parent).HasMaxLength(50);

                entity.Property(e => e.Supplier).HasMaxLength(50);

                entity.Property(e => e.Updatetime)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATETIME");

                entity.Property(e => e.Updateuser)
                    .HasMaxLength(55)
                    .HasColumnName("UPDATEUSER");
            });

            modelBuilder.Entity<RmMeasuringProdectMapping>(entity =>
            {
                entity.ToTable("RM_MeasuringProdectMapping");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.MeasuringCode)
                    .HasMaxLength(50)
                    .IsFixedLength(true);

                entity.Property(e => e.MeasuringName)
                    .HasMaxLength(100)
                    .IsFixedLength(true);

                entity.Property(e => e.Name)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.ProdectCode)
                    .HasMaxLength(50)
                    .IsFixedLength(true);

                entity.Property(e => e.ProdectName)
                    .HasMaxLength(100)
                    .IsFixedLength(true);

                entity.Property(e => e.TypeCode)
                    .HasMaxLength(50)
                    .IsFixedLength(true);

                entity.Property(e => e.TypeName)
                    .HasMaxLength(100)
                    .IsFixedLength(true);

                entity.Property(e => e.TypeNature)
                    .HasMaxLength(50)
                    .IsFixedLength(true);
            });

            modelBuilder.Entity<RmMeasuringSerialNumber>(entity =>
            {
                entity.ToTable("RM_MeasuringSerialNumber");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.CheckResult).HasMaxLength(55);

                entity.Property(e => e.CreateTime).HasColumnType("datetime");

                entity.Property(e => e.CreateUser).HasMaxLength(55);

                entity.Property(e => e.EffectiveDate).HasColumnType("datetime");

                entity.Property(e => e.EndDate).HasColumnType("datetime");

                entity.Property(e => e.ExpiredDate).HasColumnType("datetime");

                entity.Property(e => e.Isdelete).HasColumnName("ISDELETE");

                entity.Property(e => e.LastCheckDate).HasColumnType("datetime");

                entity.Property(e => e.Location).HasMaxLength(55);

                entity.Property(e => e.LossDate).HasColumnType("datetime");

                entity.Property(e => e.MeasuringCode).HasMaxLength(55);

                entity.Property(e => e.MeasuringSerialNo).HasMaxLength(55);

                entity.Property(e => e.MeasuringType).HasMaxLength(55);

                entity.Property(e => e.Quantity).HasColumnType("decimal(18, 0)");

                entity.Property(e => e.SealingDate).HasColumnType("datetime");

                entity.Property(e => e.StartDate).HasColumnType("datetime");

                entity.Property(e => e.Status).HasMaxLength(55);

                entity.Property(e => e.Supplier)
                    .HasMaxLength(55)
                    .HasColumnName("supplier");

                entity.Property(e => e.UpdateTime).HasColumnType("datetime");

                entity.Property(e => e.UpdateUser).HasMaxLength(55);

                entity.Property(e => e.UsingStatus).HasMaxLength(55);
            });

            modelBuilder.Entity<RmMoldFaultDef>(entity =>
            {
                entity.ToTable("RM_Mold_FaultDef");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Name)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("NAME");

                entity.Property(e => e.No)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("NO");

                entity.Property(e => e.SysDate).HasColumnType("datetime");

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Usr)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UsrName)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<RmMoldFaultReason>(entity =>
            {
                entity.ToTable("RM_Mold_FaultReason");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Name)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("NAME");

                entity.Property(e => e.No)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("NO");

                entity.Property(e => e.SysDate).HasColumnType("datetime");

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Usr)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UsrName)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<RmMoldHis>(entity =>
            {
                entity.ToTable("RM_Mold_His");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.ModNo)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("MOD_NO");

                entity.Property(e => e.ModSn)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("MOD_SN");

                entity.Property(e => e.SrcItemId).HasColumnName("Src_ItemID");

                entity.Property(e => e.SrcNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Src_No");

                entity.Property(e => e.Status)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.StatusNew)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Status_New");

                entity.Property(e => e.SysDate).HasColumnType("datetime");

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Usr)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UsrName)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<RmMoldInspItems>(entity =>
            {
                entity.ToTable("RM_Mold_Insp_Items");

                entity.HasIndex(e => e.Mid).HasName("RM_Mold_Insp_Items_MID");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Attachment)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Content)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.DataType)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.EnumNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("Enum_No");

                entity.Property(e => e.InspTypeNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Insp_TypeNo");

                entity.Property(e => e.LowLimit)
                    .HasColumnType("decimal(16, 3)")
                    .HasColumnName("Low_Limit");

                entity.Property(e => e.LowSybol)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Method)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.Mid).HasColumnName("MID");

                entity.Property(e => e.PartNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Rem)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.Standard)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Unit)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UpLimit)
                    .HasColumnType("decimal(16, 3)")
                    .HasColumnName("Up_Limit");

                entity.Property(e => e.UpSybol)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.HasOne(d => d.MidNavigation)
                    .WithMany(p => p.RmMoldInspItems)
                    .HasForeignKey(d => d.Mid)
                    .HasConstraintName("FK_RM_Mold_Insp_Items_RM_Mold_Insp_Program");
            });

            modelBuilder.Entity<RmMoldInspProgram>(entity =>
            {
                entity.ToTable("RM_Mold_Insp_Program");

                entity.HasIndex(e => e.BusiNo).HasName("BUSINO_RMMoldInspProgram");

                entity.HasIndex(e => e.BusiNo).HasName("RM_Mold_Insp_Program_BusiNo");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Attachment)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.BilType)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.BilTypeName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.BusiNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ChkDate).HasColumnType("datetime");

                entity.Property(e => e.ChkMan)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkManName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkMob)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.ClsDate).HasColumnType("datetime");

                entity.Property(e => e.ClsUsr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ClsUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.CycelInfo).HasMaxLength(1);

                entity.Property(e => e.CycleUnit)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.EndDate)
                    .HasColumnType("datetime")
                    .HasColumnName("End_Date");

                entity.Property(e => e.ModNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("MOD_NO");

                entity.Property(e => e.ModType)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("MOD_Type");

                entity.Property(e => e.Name)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("NAME");

                entity.Property(e => e.No)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("NO");

                entity.Property(e => e.QtyCycle)
                    .HasColumnType("decimal(16, 8)")
                    .HasColumnName("QTY_Cycle");

                entity.Property(e => e.Rem)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.StartDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Start_Date");

                entity.Property(e => e.SysDate).HasColumnType("datetime");

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Usr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.VerNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("Ver_NO");
            });

            modelBuilder.Entity<RmMoldInspTask>(entity =>
            {
                entity.ToTable("RM_Mold_Insp_Task");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BilType)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.BilTypeName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.BillDate).HasColumnType("datetime");

                entity.Property(e => e.BusiNo)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkDate).HasColumnType("datetime");

                entity.Property(e => e.ChkMan)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkManName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkMob)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.ClsDate).HasColumnType("datetime");

                entity.Property(e => e.ClsUsr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ClsUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.DateExec)
                    .HasColumnType("datetime")
                    .HasColumnName("Date_Exec");

                entity.Property(e => e.DateFinish)
                    .HasColumnType("datetime")
                    .HasColumnName("Date_Finish");

                entity.Property(e => e.Dept)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ModNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("MOD_NO");

                entity.Property(e => e.ModSn)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("MOD_SN");

                entity.Property(e => e.No)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("NO");

                entity.Property(e => e.QtyTest).HasColumnName("Qty_Test");

                entity.Property(e => e.Rem)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.Source)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SrcNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Src_No");

                entity.Property(e => e.SrcType)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Src_Type");

                entity.Property(e => e.Status)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.SysDate).HasColumnType("datetime");

                entity.Property(e => e.Target)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TestDevNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Test_DevNo");

                entity.Property(e => e.TestResult)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Usr)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UsrExec)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Usr_Exec");

                entity.Property(e => e.UsrName)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<RmMoldInspTaskItems>(entity =>
            {
                entity.ToTable("RM_Mold_InspTask_Items");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Content)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.DataType)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.EnumNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("Enum_No");

                entity.Property(e => e.LowLimit)
                    .HasColumnType("decimal(16, 3)")
                    .HasColumnName("Low_Limit");

                entity.Property(e => e.LowSybol)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Method)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.Mid).HasColumnName("MID");

                entity.Property(e => e.PartNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Result)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SrcItemId).HasColumnName("Src_ItemID");

                entity.Property(e => e.Standard)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Unit)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UpLimit)
                    .HasColumnType("decimal(16, 3)")
                    .HasColumnName("Up_Limit");

                entity.Property(e => e.UpSybol)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.HasOne(d => d.MidNavigation)
                    .WithMany(p => p.RmMoldInspTaskItems)
                    .HasForeignKey(d => d.Mid)
                    .HasConstraintName("FK_RM_Mold_InspTask_Items_RM_Mold_Insp_Task");
            });

            modelBuilder.Entity<RmMoldParts>(entity =>
            {
                entity.ToTable("RM_Mold_Parts");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Dept)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ModNo)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("MOD_NO");

                entity.Property(e => e.Name)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("NAME");

                entity.Property(e => e.No)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("NO");

                entity.Property(e => e.ParentNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SysDate).HasColumnType("datetime");

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Usr)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UsrName)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<RmMoldProdectMapping>(entity =>
            {
                entity.ToTable("RM_MoldProdectMapping");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.MoldCode)
                    .HasMaxLength(50)
                    .IsFixedLength(true);

                entity.Property(e => e.MoldName)
                    .HasMaxLength(100)
                    .IsFixedLength(true);

                entity.Property(e => e.Name)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.ProdectCode)
                    .HasMaxLength(50)
                    .IsFixedLength(true);

                entity.Property(e => e.ProdectName)
                    .HasMaxLength(100)
                    .IsFixedLength(true);

                entity.Property(e => e.TypeCode)
                    .HasMaxLength(50)
                    .IsFixedLength(true);

                entity.Property(e => e.TypeName)
                    .HasMaxLength(100)
                    .IsFixedLength(true);

                entity.Property(e => e.TypeNature)
                    .HasMaxLength(50)
                    .IsFixedLength(true);
            });

            modelBuilder.Entity<RmMoldRepairRecord>(entity =>
            {
                entity.ToTable("RM_Mold_RepairRecord");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.AppDate)
                    .HasColumnType("datetime")
                    .HasColumnName("App_Date");

                entity.Property(e => e.BilType)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.BilTypeName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.BusiNo)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkDate).HasColumnType("datetime");

                entity.Property(e => e.ChkMan)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkManName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkMob)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.ClsDate).HasColumnType("datetime");

                entity.Property(e => e.ClsUsr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ClsUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Dept)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.DispDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Disp_Date");

                entity.Property(e => e.ModName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("MOD_Name");

                entity.Property(e => e.ModNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("MOD_NO");

                entity.Property(e => e.ModSn)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("MOD_SN");

                entity.Property(e => e.ModType)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("MOD_TYPE");

                entity.Property(e => e.Name)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("NAME");

                entity.Property(e => e.No)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("NO");

                entity.Property(e => e.Rem)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.RepairType)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ShiftNo)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.SrcItemId).HasColumnName("Src_ItemID");

                entity.Property(e => e.SrcNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Src_No");

                entity.Property(e => e.SrcType)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("Src_Type");

                entity.Property(e => e.Status)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.SysDate).HasColumnType("datetime");

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Usr)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UsrExec)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Usr_Exec");

                entity.Property(e => e.UsrName)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<RmMoldRepairRecordItem>(entity =>
            {
                entity.ToTable("RM_Mold_RepairRecord_Item");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.CancelReason)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.EndDate).HasColumnType("datetime");

                entity.Property(e => e.Mid).HasColumnName("MID");

                entity.Property(e => e.ModNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("MOD_NO");

                entity.Property(e => e.ModSn)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("MOD_SN");

                entity.Property(e => e.ModType)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("MOD_Type");

                entity.Property(e => e.PartNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Qty).HasColumnType("decimal(16, 8)");

                entity.Property(e => e.RepCode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Rep_Code");

                entity.Property(e => e.RepContent)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("Rep_Content");

                entity.Property(e => e.SrcItemId).HasColumnName("Src_ItemID");

                entity.Property(e => e.StartDate).HasColumnType("datetime");

                entity.Property(e => e.Status)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UsrCancel)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Usr_Cancel");

                entity.Property(e => e.UsrRep)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Usr_Rep");

                entity.Property(e => e.UsrValid)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Usr_Valid");

                entity.HasOne(d => d.MidNavigation)
                    .WithMany(p => p.RmMoldRepairRecordItem)
                    .HasForeignKey(d => d.Mid)
                    .HasConstraintName("FK_RM_Mold_RepairRecord_Item_RM_Mold_RepairRecord");
            });

            modelBuilder.Entity<RmMoldRepairRecordReason>(entity =>
            {
                entity.ToTable("RM_Mold_RepairRecord_Reason");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.FaultCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.FaultDesc)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.Mid).HasColumnName("MID");

                entity.Property(e => e.ModNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("MOD_NO");

                entity.Property(e => e.ModSn)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("MOD_SN");

                entity.Property(e => e.PartNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ReasonCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ReasonDesc)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.HasOne(d => d.MidNavigation)
                    .WithMany(p => p.RmMoldRepairRecordReason)
                    .HasForeignKey(d => d.Mid)
                    .HasConstraintName("FK_RM_Mold_RepairRecord_Reason_RM_Mold_RepairRecord_Item");
            });

            modelBuilder.Entity<RmMoldRepairRequest>(entity =>
            {
                entity.ToTable("RM_Mold_RepairRequest");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.AppDate)
                    .HasColumnType("datetime")
                    .HasColumnName("App_Date");

                entity.Property(e => e.BilType)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.BilTypeName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.BusiNo)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkDate).HasColumnType("datetime");

                entity.Property(e => e.ChkMan)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkManName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkMob)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.ClsDate).HasColumnType("datetime");

                entity.Property(e => e.ClsUsr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ClsUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Dept)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Name)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("NAME");

                entity.Property(e => e.No)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("NO");

                entity.Property(e => e.Rem)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.RepairType)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.SrcNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Src_No");

                entity.Property(e => e.SrcType)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("Src_Type");

                entity.Property(e => e.Status)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.SysDate).HasColumnType("datetime");

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Usr)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UsrExec)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Usr_Exec");

                entity.Property(e => e.UsrName)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<RmMoldRepairRequestFault>(entity =>
            {
                entity.ToTable("RM_Mold_RepairRequest_Fault");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.FaultCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.FaultDesc)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.Mid).HasColumnName("MID");

                entity.Property(e => e.ModNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("MOD_NO");

                entity.Property(e => e.ModSn)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("MOD_SN");

                entity.Property(e => e.PartNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.HasOne(d => d.MidNavigation)
                    .WithMany(p => p.RmMoldRepairRequestFault)
                    .HasForeignKey(d => d.Mid)
                    .HasConstraintName("FK_RM_Mold_RepairRequest_Fault_RM_Mold_RepairRequest_Item");
            });

            modelBuilder.Entity<RmMoldRepairRequestItem>(entity =>
            {
                entity.ToTable("RM_Mold_RepairRequest_Item");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.ItemStatus)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Mid).HasColumnName("MID");

                entity.Property(e => e.ModNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("MOD_NO");

                entity.Property(e => e.ModSn)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("MOD_SN");

                entity.Property(e => e.PartNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Qty).HasColumnType("decimal(16, 8)");

                entity.HasOne(d => d.MidNavigation)
                    .WithMany(p => p.RmMoldRepairRequestItem)
                    .HasForeignKey(d => d.Mid)
                    .HasConstraintName("FK_RM_Mold_RepairRequest_Item_RM_Mold_RepairRequest");
            });

            modelBuilder.Entity<RmMoldSparePartInfo>(entity =>
            {
                entity.ToTable("RM_MoldSparePart_Info");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.CycleUnit)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Mid).HasColumnName("MID");

                entity.Property(e => e.PartNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Qty).HasColumnType("decimal(12, 8)");

                entity.Property(e => e.Rem)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.RepCycle).HasColumnName("Rep_Cycle");

                entity.Property(e => e.SpName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("SP_Name");

                entity.Property(e => e.SpNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SP_NO");

                entity.HasOne(d => d.MidNavigation)
                    .WithMany(p => p.RmMoldSparePartInfo)
                    .HasForeignKey(d => d.Mid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("FK_RM_MoldSparePart_Info_RM_Mold_Parts");
            });

            modelBuilder.Entity<RmMoldWhse>(entity =>
            {
                entity.ToTable("RM_Mold_Whse");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.CustNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Cust_No");

                entity.Property(e => e.EndDate).HasColumnType("datetime");

                entity.Property(e => e.LastMaintDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Last_Maint_Date");

                entity.Property(e => e.Location)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.MaintTimes).HasColumnName("Maint_Times");

                entity.Property(e => e.ModNo)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("MOD_NO");

                entity.Property(e => e.ModSn)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("MOD_SN");

                entity.Property(e => e.ModType)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("MOD_TYPE");

                entity.Property(e => e.ScrapDate).HasColumnType("datetime");

                entity.Property(e => e.StartDate).HasColumnType("datetime");

                entity.Property(e => e.Status)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.SysDate).HasColumnType("datetime");

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UseAct).HasColumnName("USE_ACT");

                entity.Property(e => e.UseExt).HasColumnName("USE_EXT");

                entity.Property(e => e.UseExtAct).HasColumnName("USE_EXT_ACT");

                entity.Property(e => e.UseNum).HasColumnName("USE_NUM");

                entity.Property(e => e.Usr)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UsrName)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.VenderNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Vender_No");
            });

            modelBuilder.Entity<RmToolType>(entity =>
            {
                entity.ToTable("RM_ToolType");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Code)
                    .IsRequired()
                    .HasMaxLength(55);

                entity.Property(e => e.CreateTime).HasColumnType("datetime");

                entity.Property(e => e.CreateUser).HasMaxLength(55);

                entity.Property(e => e.Isdelete).HasColumnName("ISDELETE");

                entity.Property(e => e.Name)
                    .IsRequired()
                    .HasMaxLength(55);

                entity.Property(e => e.Type).HasMaxLength(55);

                entity.Property(e => e.UpdateTime).HasColumnType("datetime");

                entity.Property(e => e.UpdateUser).HasMaxLength(55);
            });

            modelBuilder.Entity<Salm>(entity =>
            {
                entity.ToTable("SALM");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BType)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("B_TYPE");

                entity.Property(e => e.BnkNo)
                    .HasMaxLength(7)
                    .IsUnicode(false)
                    .HasColumnName("BNK_NO");

                entity.Property(e => e.BrdNum).HasColumnName("BRD_NUM");

                entity.Property(e => e.Bth)
                    .HasColumnType("datetime")
                    .HasColumnName("BTH");

                entity.Property(e => e.CardNo)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasColumnName("CARD_NO");

                entity.Property(e => e.ChkDate).HasColumnType("datetime");

                entity.Property(e => e.ChkMan)
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.ChkManName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkMob)
                    .HasColumnType("datetime")
                    .HasColumnName("ChkMOB");

                entity.Property(e => e.ConAdr)
                    .HasMaxLength(120)
                    .IsUnicode(false)
                    .HasColumnName("CON_ADR");

                entity.Property(e => e.Dep)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("DEP");

                entity.Property(e => e.DeproNo)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("DEPRO_NO");

                entity.Property(e => e.Drv)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("DRV");

                entity.Property(e => e.DutInD)
                    .HasColumnType("datetime")
                    .HasColumnName("DUT_IN_D");

                entity.Property(e => e.DutOtD)
                    .HasColumnType("datetime")
                    .HasColumnName("DUT_OT_D");

                entity.Property(e => e.EMail)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("E_MAIL");

                entity.Property(e => e.Edu)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("EDU");

                entity.Property(e => e.EngName)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("ENG_NAME");

                entity.Property(e => e.Forn)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("FORN");

                entity.Property(e => e.Grd)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("GRD");

                entity.Property(e => e.GroupJj)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("GROUP_JJ");

                entity.Property(e => e.HomAdr)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("HOM_ADR");

                entity.Property(e => e.Ic)
                    .HasMaxLength(400)
                    .IsUnicode(false)
                    .HasColumnName("IC");

                entity.Property(e => e.IdCode)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("ID_CODE");

                entity.Property(e => e.IdNum)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ID_NUM");

                entity.Property(e => e.Logon).HasColumnName("LOGON");

                entity.Property(e => e.Mar)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("MAR");

                entity.Property(e => e.Name)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("NAME");

                entity.Property(e => e.NamePy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("NAME_PY");

                entity.Property(e => e.NatPlc)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("NAT_PLC");

                entity.Property(e => e.PhotoPic)
                    .HasColumnType("image")
                    .HasColumnName("PHOTO_PIC");

                entity.Property(e => e.Pos)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("POS");

                entity.Property(e => e.PostNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("POST_NO");

                entity.Property(e => e.Rem)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("REM");

                entity.Property(e => e.Res)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("RES");

                entity.Property(e => e.SalNo)
                    .IsRequired()
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("SAL_NO");

                entity.Property(e => e.Sex)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SEX");

                entity.Property(e => e.Spc)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("SPC");

                entity.Property(e => e.SysDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Sys_Date");

                entity.Property(e => e.SysDate1)
                    .HasColumnType("datetime")
                    .HasColumnName("SysDate");

                entity.Property(e => e.SysUsr)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SYS_USR");

                entity.Property(e => e.Tel1)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("TEL1");

                entity.Property(e => e.Tel2)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("TEL2");

                entity.Property(e => e.TriedDd)
                    .HasColumnType("datetime")
                    .HasColumnName("TRIED_DD");

                entity.Property(e => e.UpSalNo)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("UP_SAL_NO");

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Usr)
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.UsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Wechat)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("WECHAT");
            });

            modelBuilder.Entity<SbChangeList>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("SB_CHANGE_LIST");

                entity.Property(e => e.BilNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("BIL_NO");

                entity.Property(e => e.ChangeDd)
                    .HasColumnType("datetime")
                    .HasColumnName("CHANGE_DD");

                entity.Property(e => e.ChangeReason)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CHANGE_REASON");

                entity.Property(e => e.Name)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("NAME");

                entity.Property(e => e.No)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("NO");

                entity.Property(e => e.Qty)
                    .HasColumnType("decimal(22, 4)")
                    .HasColumnName("QTY");

                entity.Property(e => e.Rem)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("REM");

                entity.Property(e => e.SalNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SAL_NO");
            });

            modelBuilder.Entity<SbChangeListView>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("sb_change_list_view");

                entity.Property(e => e.Name)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("NAME");

                entity.Property(e => e.No)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("NO");

                entity.Property(e => e.TotalQty)
                    .HasColumnType("decimal(38, 4)")
                    .HasColumnName("totalQTY");
            });

            modelBuilder.Entity<SbDisqualreason>(entity =>
            {
                entity.ToTable("SB_DISQUALREASON");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.ChkDate).HasColumnType("datetime");

                entity.Property(e => e.ChkMan)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.ChkManName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.ChkMob)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.IsPrint).HasDefaultValueSql("((0))");

                entity.Property(e => e.Name)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.No)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NO");

                entity.Property(e => e.SysDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Usr)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.UsrName)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");
            });

            modelBuilder.Entity<SbFaultMeasure>(entity =>
            {
                entity.ToTable("SB_FAULT_MEASURE");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.ChkDate).HasColumnType("datetime");

                entity.Property(e => e.ChkMan)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.ChkManName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.ChkMob)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.ExcMeasure).HasColumnName("EXC_Measure");

                entity.Property(e => e.FaultRem)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("Fault_Rem");

                entity.Property(e => e.IsPrint).HasDefaultValueSql("((0))");

                entity.Property(e => e.SebNo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("SEB_NO");

                entity.Property(e => e.SebPartNo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("SEB_PartNo");

                entity.Property(e => e.SysDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Usr)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.UsrName)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");
            });

            modelBuilder.Entity<SbLhjl>(entity =>
            {
                entity.ToTable("SB_LHJL");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BatNo)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("BAT_NO");

                entity.Property(e => e.Isclose).HasColumnName("ISCLOSE");

                entity.Property(e => e.TzDd)
                    .HasColumnType("datetime")
                    .HasColumnName("TZ_DD");
            });

            modelBuilder.Entity<SbMaintainPlan>(entity =>
            {
                entity.ToTable("SB_MAINTAIN_PLAN");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.ActQtyCycle)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("ActQTY_Cycle");

                entity.Property(e => e.BilType)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.BilTypeName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.BillDate).HasColumnType("datetime");

                entity.Property(e => e.BusiNo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.ChkDate).HasColumnType("datetime");

                entity.Property(e => e.ChkMan)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.ChkManName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.ChkMob)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.ClsDate).HasColumnType("datetime");

                entity.Property(e => e.ClsUsr)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.ClsUsrName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Dep)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("DEP");

                entity.Property(e => e.IsClose).HasDefaultValueSql("((0))");

                entity.Property(e => e.IsPrint).HasDefaultValueSql("((0))");

                entity.Property(e => e.IsallRelease).HasColumnName("ISALL_RELEASE");

                entity.Property(e => e.JhSpec)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("JH_Spec");

                entity.Property(e => e.JhStatus)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("JH_Status");

                entity.Property(e => e.LastReleaseTime)
                    .HasColumnType("datetime")
                    .HasColumnName("LAST_RELEASE_TIME");

                entity.Property(e => e.Name)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.No)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NO");

                entity.Property(e => e.QtyCycle).HasColumnName("QTY_Cycle");

                entity.Property(e => e.Rem)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.SalNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("SAL_NO");

                entity.Property(e => e.SebCycleUnit)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("SEB_CycleUnit");

                entity.Property(e => e.SebNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("SEB_NO");

                entity.Property(e => e.Standard)
                    .HasColumnType("numeric(18, 0)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.StationNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("Station_NO");

                entity.Property(e => e.SysDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Usr)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.UsrName)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");
            });

            modelBuilder.Entity<SbMaintainRunRecord>(entity =>
            {
                entity.ToTable("SB_MAINTAIN_RUN_RECORD");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BilType)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.BilTypeName)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.BillDate).HasColumnType("datetime");

                entity.Property(e => e.BusiNo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.ChkDate).HasColumnType("datetime");

                entity.Property(e => e.ChkMan)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.ChkManName)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.ChkMob)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.ClsDate).HasColumnType("datetime");

                entity.Property(e => e.ClsUsr)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.ClsUsrName)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Dep)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("DEP");

                entity.Property(e => e.MtType).HasColumnName("MT_Type");

                entity.Property(e => e.No)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NO");

                entity.Property(e => e.PostNo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("POST_NO");

                entity.Property(e => e.RecordDate).HasColumnType("datetime");

                entity.Property(e => e.Rem)
                    .IsRequired()
                    .HasMaxLength(4000)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.SalNo)
                    .IsRequired()
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("SAL_NO");

                entity.Property(e => e.SebName)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SEB_Name");

                entity.Property(e => e.SebNo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("SEB_NO");

                entity.Property(e => e.SysDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.UpdDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.UpdUsr)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.UpdUsrName)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Usr)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.UsrName)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");
            });

            modelBuilder.Entity<SbMaintainSpec>(entity =>
            {
                entity.ToTable("SB_MAINTAIN_SPEC");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BilType)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.BilTypeName)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.BillDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.BusiNo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.ChkDate).HasColumnType("datetime");

                entity.Property(e => e.ChkMan)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.ChkManName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.ChkMob)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.ClsDate).HasColumnType("datetime");

                entity.Property(e => e.ClsUsr)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.ClsUsrName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Dep)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("DEP");

                entity.Property(e => e.Guide)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("guide");

                entity.Property(e => e.IsClose).HasDefaultValueSql("((0))");

                entity.Property(e => e.IsPrint).HasDefaultValueSql("((0))");

                entity.Property(e => e.Name)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.No)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NO");

                entity.Property(e => e.PostNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("POST_NO");

                entity.Property(e => e.QtyCycle).HasColumnName("QTY_Cycle");

                entity.Property(e => e.Rem)
                    .HasMaxLength(4000)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.SebCycleUnit)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SEB_CycleUnit");

                entity.Property(e => e.SebName)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SEB_Name");

                entity.Property(e => e.SebNo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SEB_NO");

                entity.Property(e => e.Standard)
                    .HasColumnType("numeric(18, 0)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.SysDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.UpdDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Usr)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.UsrName)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Version)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<SbMtOrder>(entity =>
            {
                entity.ToTable("SB_MT_ORDER");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BanNo)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("BAN_NO");

                entity.Property(e => e.BilNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("BIL_NO");

                entity.Property(e => e.BilType)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.BilTypeName)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.BillDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.BusiNo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.ChkDate).HasColumnType("datetime");

                entity.Property(e => e.ChkMan)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.ChkManName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.ChkMob)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.ClsDate).HasColumnType("datetime");

                entity.Property(e => e.ClsUsr)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.ClsUsrName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.EndDd)
                    .HasColumnType("datetime")
                    .HasColumnName("END_DD");

                entity.Property(e => e.GdSource)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("GD_Source");

                entity.Property(e => e.IsClose).HasDefaultValueSql("((0))");

                entity.Property(e => e.IsPrint).HasDefaultValueSql("((0))");

                entity.Property(e => e.JhDd)
                    .HasColumnType("datetime")
                    .HasColumnName("JH_DD");

                entity.Property(e => e.Name).HasMaxLength(120);

                entity.Property(e => e.No)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NO");

                entity.Property(e => e.Rem)
                    .HasMaxLength(1000)
                    .IsUnicode(false);

                entity.Property(e => e.SalNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("SAL_NO");

                entity.Property(e => e.SebNo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SEB_NO");

                entity.Property(e => e.SpecNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("Spec_NO");

                entity.Property(e => e.Standard)
                    .HasColumnType("numeric(18, 0)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.StationNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("Station_NO");

                entity.Property(e => e.Status)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.SysDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.UpdDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Usr)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.UsrName)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");
            });

            modelBuilder.Entity<SbMtRuntime>(entity =>
            {
                entity.ToTable("SB_MT_RUNTIME");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.QtyCycle).HasColumnName("QTY_Cycle");

                entity.Property(e => e.SebNo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SEB_NO");

                entity.Property(e => e.SpecNo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Spec_No");

                entity.Property(e => e.SpecType)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("Spec_Type");

                entity.Property(e => e.StaNo)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("Sta_No");

                entity.Property(e => e.SysDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.TimeFromLatestMt)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("TimeFromLatestMT");

                entity.Property(e => e.TotalRunTime).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Usr)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.UsrName)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");
            });

            modelBuilder.Entity<SbMtorderInfo>(entity =>
            {
                entity.ToTable("SB_MTORDER_INFO");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.ActualAddAmount)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Content)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.ExcStatus)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.Itm).HasColumnName("ITM");

                entity.Property(e => e.Method)
                    .HasMaxLength(600)
                    .IsUnicode(false);

                entity.Property(e => e.Mid).HasColumnName("MID");

                entity.Property(e => e.OilsName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PartNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("Part_NO");

                entity.Property(e => e.Recorder)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Rem).HasMaxLength(2000);

                entity.Property(e => e.Result)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SparePartsNo)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("SpareParts_NO");

                entity.Property(e => e.SpecImage).HasColumnType("image");

                entity.Property(e => e.SpecNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Spec_NO");

                entity.Property(e => e.Standard)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.StandardAddAmount)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Unit)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.HasOne(d => d.MidNavigation)
                    .WithMany(p => p.SbMtorderInfo)
                    .HasForeignKey(d => d.Mid)
                    .HasConstraintName("FK_SB_MTORDER_INFO_SB_MT_ORDER");
            });

            modelBuilder.Entity<SbMtspecInfo>(entity =>
            {
                entity.ToTable("SB_MTSPEC_INFO");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.ChkEnumBusino)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("CHK_ENUM_BUSINO");

                entity.Property(e => e.ChkModel)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("CHK_MODEL");

                entity.Property(e => e.Content).HasMaxLength(2000);

                entity.Property(e => e.FaultHandle)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.Itm).HasColumnName("ITM");

                entity.Property(e => e.Lubrication)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Method).HasMaxLength(2000);

                entity.Property(e => e.Mid).HasColumnName("MID");

                entity.Property(e => e.No)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("NO");

                entity.Property(e => e.OilsName).HasMaxLength(200);

                entity.Property(e => e.Opportunity)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.Optype)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OPType");

                entity.Property(e => e.PartNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Part_NO");

                entity.Property(e => e.Rhpoints).HasColumnName("RHPoints");

                entity.Property(e => e.Rhtype)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("RHType");

                entity.Property(e => e.Standard)
                    .HasMaxLength(1000)
                    .IsUnicode(false);

                entity.Property(e => e.Unit)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.HasOne(d => d.MidNavigation)
                    .WithMany(p => p.SbMtspecInfo)
                    .HasForeignKey(d => d.Mid)
                    .HasConstraintName("FK_SB_MTSPEC_INFO_SB_MAINTAIN_SPEC");
            });

            modelBuilder.Entity<SbOpMapping>(entity =>
            {
                entity.ToTable("SB_OP_MAPPING");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.ChkDate).HasColumnType("datetime");

                entity.Property(e => e.ChkMan)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.ChkManName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.ChkMob)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Dep)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("DEP");

                entity.Property(e => e.IsPrint).HasDefaultValueSql("((0))");

                entity.Property(e => e.SalNo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("SAL_NO");

                entity.Property(e => e.SebNo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("SEB_NO");

                entity.Property(e => e.SysDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Usr)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.UsrName)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");
            });

            modelBuilder.Entity<SbParaBase>(entity =>
            {
                entity.ToTable("SB_PARA_BASE");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.ChkDate).HasColumnType("datetime");

                entity.Property(e => e.ChkMan)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkManName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkMob)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.No)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("NO");

                entity.Property(e => e.SebNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("SEB_NO");

                entity.Property(e => e.SysDate).HasColumnType("datetime");

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Usr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Value)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("VALUE");
            });

            modelBuilder.Entity<SbParaRecord>(entity =>
            {
                entity.ToTable("SB_PARA_RECORD");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BanNo)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("BAN_NO");

                entity.Property(e => e.BatNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("BAT_NO");

                entity.Property(e => e.ClId).HasColumnName("CL_ID");

                entity.Property(e => e.ClTb)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("CL_TB");

                entity.Property(e => e.IsPrint).HasDefaultValueSql("((0))");

                entity.Property(e => e.LowLimit)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("Low_Limit");

                entity.Property(e => e.LowSybol)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.MoNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("MO_NO");

                entity.Property(e => e.No)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.PaName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("PA_Name");

                entity.Property(e => e.PaNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("PA_NO");

                entity.Property(e => e.ParaName)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("Para_Name");

                entity.Property(e => e.ParaNo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Para_NO");

                entity.Property(e => e.ParaValue)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Para_Value");

                entity.Property(e => e.PrdName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("PRD_Name");

                entity.Property(e => e.PrdNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("PRD_NO");

                entity.Property(e => e.Ptype)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("PType");

                entity.Property(e => e.Rem)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.SebName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SEB_Name");

                entity.Property(e => e.SebNo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("SEB_NO");

                entity.Property(e => e.Standard).HasColumnType("decimal(18, 4)");

                entity.Property(e => e.SysDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.TzNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TZ_NO");

                entity.Property(e => e.UpLimit)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("Up_Limit");

                entity.Property(e => e.UpSybol)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Usr)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.UsrName)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Ut)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("UT");

                entity.Property(e => e.ZcNo)
                    .HasMaxLength(100)
                    .HasColumnName("ZC_NO");
            });

            modelBuilder.Entity<SbParaSet>(entity =>
            {
                entity.ToTable("SB_PARA_SET");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.ChkDate).HasColumnType("datetime");

                entity.Property(e => e.ChkMan)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.ChkManName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.ChkMob)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Dbname)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("DBName");

                entity.Property(e => e.DefaultVal)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.FieldName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Formula)
                    .HasMaxLength(2000)
                    .IsUnicode(false);

                entity.Property(e => e.Interval).HasColumnType("numeric(12, 0)");

                entity.Property(e => e.IsPrint).HasDefaultValueSql("((0))");

                entity.Property(e => e.Manner)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.Name)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.No)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.OffsetTime).HasColumnName("OFFSET_TIME");

                entity.Property(e => e.Ptype)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("PType");

                entity.Property(e => e.Rem)
                    .HasMaxLength(1000)
                    .IsUnicode(false);

                entity.Property(e => e.SebName)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SEB_NAME");

                entity.Property(e => e.SebNo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("SEB_NO");

                entity.Property(e => e.SysDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.TableName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TimeScope).HasColumnName("TIME_SCOPE");

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Usr)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.UsrName)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Ut)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("UT");

                entity.Property(e => e.UtId)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("UT_ID");
            });

            modelBuilder.Entity<SbPartchangeRecord>(entity =>
            {
                entity.ToTable("SB_PARTCHANGE_RECORD");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Itm).HasColumnName("ITM");

                entity.Property(e => e.Mid).HasColumnName("MID");

                entity.Property(e => e.PartName)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Part_Name");

                entity.Property(e => e.PartNo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Part_No");

                entity.Property(e => e.Qty)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY");

                entity.Property(e => e.Rem)
                    .HasMaxLength(1000)
                    .IsUnicode(false);

                entity.Property(e => e.SalNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("SAL_NO");

                entity.Property(e => e.Sysdate)
                    .HasColumnType("datetime")
                    .HasColumnName("SYSDATE");
            });

            modelBuilder.Entity<SbPartinfo>(entity =>
            {
                entity.ToTable("SB_PARTINFO");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.ChkDate).HasColumnType("datetime");

                entity.Property(e => e.ChkMan)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.ChkManName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.ChkMob)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.IsPrint).HasDefaultValueSql("((0))");

                entity.Property(e => e.Name)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.No)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NO");

                entity.Property(e => e.SysDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Usr)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.UsrName)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");
            });

            modelBuilder.Entity<SbPrdtPara>(entity =>
            {
                entity.ToTable("SB_PRDT_PARA");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BilType)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.BilTypeName)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.BillDate).HasColumnType("datetime");

                entity.Property(e => e.BusiNo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.ChkDate).HasColumnType("datetime");

                entity.Property(e => e.ChkMan)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.ChkManName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.ChkMob)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.ClsDate).HasColumnType("datetime");

                entity.Property(e => e.ClsUsr)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.ClsUsrName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.CoolMode)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("COOL_MODE");

                entity.Property(e => e.DataModel)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.EffDate)
                    .HasColumnType("datetime")
                    .HasColumnName("EFF_DATE");

                entity.Property(e => e.ExpiryDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Expiry_Date");

                entity.Property(e => e.FrequencyType)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.IsClose).HasDefaultValueSql("((0))");

                entity.Property(e => e.IsPrint).HasDefaultValueSql("((0))");

                entity.Property(e => e.Months)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("MONTHS");

                entity.Property(e => e.MouldName)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("MOULD_NAME");

                entity.Property(e => e.MouldNo)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("MOULD_NO");

                entity.Property(e => e.Name)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.No)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.PrdName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("PRD_Name");

                entity.Property(e => e.PrdNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("PRD_NO");

                entity.Property(e => e.Rem)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.SebName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SEB_Name");

                entity.Property(e => e.SebNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("SEB_NO");

                entity.Property(e => e.SysDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Temperature)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TEMPERATURE");

                entity.Property(e => e.TimeStamp)
                    .IsRowVersion()
                    .IsConcurrencyToken();

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Usr)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.UsrName)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Version)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ZcNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ZC_NO");
            });

            modelBuilder.Entity<SbPrdtParas>(entity =>
            {
                entity.ToTable("SB_PRDT_PARAS");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.DefaultVal)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Formula)
                    .HasMaxLength(1000)
                    .IsUnicode(false);

                entity.Property(e => e.Itm)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ITM");

                entity.Property(e => e.LowLimit)
                    .HasColumnType("decimal(18, 4)")
                    .HasColumnName("Low_Limit");

                entity.Property(e => e.LowSybol)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Manner)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.Mid).HasColumnName("MID");

                entity.Property(e => e.ParaName)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Para_Name");

                entity.Property(e => e.ParaNo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Para_NO");

                entity.Property(e => e.Ptype)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("PType");

                entity.Property(e => e.Standard).HasColumnType("decimal(18, 4)");

                entity.Property(e => e.TimeStamp)
                    .IsRowVersion()
                    .IsConcurrencyToken();

                entity.Property(e => e.UpLimit)
                    .HasColumnType("decimal(18, 4)")
                    .HasColumnName("Up_Limit");

                entity.Property(e => e.UpSybol)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Ut)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("UT");

                entity.Property(e => e.UtId)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("UT_ID");

                entity.HasOne(d => d.MidNavigation)
                    .WithMany(p => p.SbPrdtParas)
                    .HasForeignKey(d => d.Mid)
                    .HasConstraintName("FK_SB_PRDT_PARAS_SB_PRDT_PARA");
            });

            modelBuilder.Entity<SbQrcoderecord>(entity =>
            {
                entity.ToTable("SB_QRCODERECORD");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Ip)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("IP");

                entity.Property(e => e.Ismatch).HasColumnName("ISMATCH");

                entity.Property(e => e.Qrcode)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("QRCODE");

                entity.Property(e => e.SysDate)
                    .HasColumnType("datetime")
                    .HasColumnName("SYS_DATE");
            });

            modelBuilder.Entity<SbRecord>(entity =>
            {
                entity.ToTable("SB_RECORD");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Barcode)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("BARCODE");

                entity.Property(e => e.CastingBatchNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("castingBatchNo");

                entity.Property(e => e.Inputdate)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("INPUTDATE");

                entity.Property(e => e.Itm).HasColumnName("ITM");

                entity.Property(e => e.Maxlimit)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("MAXLIMIT");

                entity.Property(e => e.Minlimit)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("MINLIMIT");

                entity.Property(e => e.No)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("NO");

                entity.Property(e => e.SebNo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("SEB_NO");

                entity.Property(e => e.StoveNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SysDate)
                    .HasColumnType("datetime")
                    .HasColumnName("SYS_DATE");

                entity.Property(e => e.Type)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("TYPE");

                entity.Property(e => e.Value)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("VALUE");
            });

            modelBuilder.Entity<SbRunRecord>(entity =>
            {
                entity.ToTable("SB_RUN_RECORD");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.ChkDate).HasColumnType("datetime");

                entity.Property(e => e.ChkMan)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.ChkManName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.ChkMob)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.EndTime)
                    .HasColumnType("datetime")
                    .HasColumnName("END_Time");

                entity.Property(e => e.IsPrint).HasDefaultValueSql("((0))");

                entity.Property(e => e.Rem)
                    .HasMaxLength(1000)
                    .IsUnicode(false);

                entity.Property(e => e.SebName)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SEB_Name");

                entity.Property(e => e.SebNo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("SEB_NO");

                entity.Property(e => e.StaNo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("Sta_No");

                entity.Property(e => e.StaProp)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("Sta_Prop");

                entity.Property(e => e.StdTime)
                    .HasColumnType("datetime")
                    .HasColumnName("STD_Time");

                entity.Property(e => e.SysDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.TimeDiff)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("Time_Diff");

                entity.Property(e => e.TimeUnit)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("Time_Unit");

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Usr)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.UsrName)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");
            });

            modelBuilder.Entity<SbRunRecordInfo>(entity =>
            {
                entity.ToTable("SB_RUN_RECORD_INFO");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.ActualAddAmount).HasColumnType("decimal(18, 4)");

                entity.Property(e => e.BilNo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("BIL_NO");

                entity.Property(e => e.Content)
                    .IsRequired()
                    .HasMaxLength(1000)
                    .IsUnicode(false);

                entity.Property(e => e.Itm).HasColumnName("ITM");

                entity.Property(e => e.Method)
                    .IsRequired()
                    .HasMaxLength(2000)
                    .IsUnicode(false);

                entity.Property(e => e.Mid).HasColumnName("MID");

                entity.Property(e => e.OilsName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.OrdNo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("Ord_NO");

                entity.Property(e => e.PartNo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("Part_NO");

                entity.Property(e => e.Standard)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.StandardAddAmount).HasColumnType("decimal(18, 4)");
            });

            modelBuilder.Entity<SbRunStatus>(entity =>
            {
                entity.ToTable("SB_RUN_STATUS");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.ChkDate).HasColumnType("datetime");

                entity.Property(e => e.ChkMan)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.ChkManName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.ChkMob)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.IsPrint).HasDefaultValueSql("((0))");

                entity.Property(e => e.Name)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.No)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NO");

                entity.Property(e => e.Rem)
                    .HasMaxLength(2000)
                    .IsUnicode(false);

                entity.Property(e => e.RunStatus)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.SysDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Usr)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.UsrName)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");
            });

            modelBuilder.Entity<SbSpRecord>(entity =>
            {
                entity.ToTable("SB_SP_RECORD");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Itm).HasColumnName("ITM");

                entity.Property(e => e.Mid).HasColumnName("MID");

                entity.Property(e => e.Name)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("NAME");

                entity.Property(e => e.Qty)
                    .HasColumnType("decimal(18, 4)")
                    .HasColumnName("QTY");

                entity.Property(e => e.Rem)
                    .HasMaxLength(1000)
                    .IsUnicode(false);

                entity.Property(e => e.SpNo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("SP_NO");
            });

            modelBuilder.Entity<SbSparePart>(entity =>
            {
                entity.ToTable("SB_SPARE_PART");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Mid).HasColumnName("MID");

                entity.Property(e => e.Mitm).HasColumnName("MITM");

                entity.Property(e => e.Name)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("NAME");

                entity.Property(e => e.Qty)
                    .HasColumnType("decimal(18, 4)")
                    .HasColumnName("QTY");

                entity.Property(e => e.Rem)
                    .HasMaxLength(2000)
                    .IsUnicode(false);

                entity.Property(e => e.SpNo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("SP_NO");

                entity.Property(e => e.SpecNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Spec_NO");

                entity.HasOne(d => d.MidNavigation)
                    .WithMany(p => p.SbSparePart)
                    .HasForeignKey(d => d.Mid)
                    .HasConstraintName("FK_SB_SPARE_PART_SB_MAINTAIN_SPEC");
            });

            modelBuilder.Entity<SbSpareparts>(entity =>
            {
                entity.ToTable("SB_SPAREPARTS");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.ChkDate).HasColumnType("datetime");

                entity.Property(e => e.ChkMan)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.ChkManName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.ChkMob)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.IsPrint).HasDefaultValueSql("((0))");

                entity.Property(e => e.QtyCycle).HasColumnName("QTY_Cycle");

                entity.Property(e => e.SebCycleUnit)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SEB_CycleUnit")
                    .HasDefaultValueSql("('0')");

                entity.Property(e => e.SebName)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SEB_Name");

                entity.Property(e => e.SebNo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("SEB_NO");

                entity.Property(e => e.SebPartNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("SEB_PartNo");

                entity.Property(e => e.SpNo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("SP_NO");

                entity.Property(e => e.SysDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Usr)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.UsrName)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");
            });

            modelBuilder.Entity<SbStatusChange>(entity =>
            {
                entity.ToTable("SB_STATUS_CHANGE");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BilType)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.BilTypeName)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.BillDate).HasColumnType("datetime");

                entity.Property(e => e.BusiNo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.ChkDate).HasColumnType("datetime");

                entity.Property(e => e.ChkMan)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.ChkManName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.ChkMob)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.ClsDate).HasColumnType("datetime");

                entity.Property(e => e.ClsUsr)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.ClsUsrName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.IsClose).HasDefaultValueSql("((0))");

                entity.Property(e => e.IsPrint).HasDefaultValueSql("((0))");

                entity.Property(e => e.No)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Rem)
                    .HasMaxLength(2000)
                    .IsUnicode(false);

                entity.Property(e => e.SysDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Usr)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.UsrName)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");
            });

            modelBuilder.Entity<SbStatusChanges>(entity =>
            {
                entity.ToTable("SB_STATUS_CHANGES");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BgProperty)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("BG_Property");

                entity.Property(e => e.Bgtype)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("BGType");

                entity.Property(e => e.Dep)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("DEP");

                entity.Property(e => e.ExpDd)
                    .HasColumnType("datetime")
                    .HasColumnName("EXP_DD");

                entity.Property(e => e.Mid).HasColumnName("MID");

                entity.Property(e => e.Oec)
                    .HasColumnType("decimal(18, 4)")
                    .HasColumnName("OEC");

                entity.Property(e => e.PreDep)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("PRE_DEP");

                entity.Property(e => e.PreExpDd)
                    .HasColumnType("datetime")
                    .HasColumnName("PRE_EXP_DD");

                entity.Property(e => e.PreOec)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("PRE_OEC");

                entity.Property(e => e.PreState)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("PRE_STATE");

                entity.Property(e => e.Rem)
                    .HasMaxLength(2000)
                    .IsUnicode(false);

                entity.Property(e => e.SebName)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SEB_Name");

                entity.Property(e => e.SebNo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("SEB_NO");

                entity.Property(e => e.State)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("STATE");

                entity.HasOne(d => d.MidNavigation)
                    .WithMany(p => p.SbStatusChanges)
                    .HasForeignKey(d => d.Mid)
                    .HasConstraintName("FK_SB_STATUS_CHANGES_SB_STATUS_CHANGE");
            });

            modelBuilder.Entity<SbTypeinfo>(entity =>
            {
                entity.ToTable("SB_TYPEINFO");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BusiNo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkDate).HasColumnType("datetime");

                entity.Property(e => e.ChkMan)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.ChkManName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.ChkMob)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.IsPrint).HasDefaultValueSql("((0))");

                entity.Property(e => e.Name)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.No)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("NO");

                entity.Property(e => e.Rem)
                    .HasMaxLength(2000)
                    .IsUnicode(false);

                entity.Property(e => e.Status)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.SysDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Usr)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.UsrName)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");
            });

            modelBuilder.Entity<Sbb>(entity =>
            {
                entity.ToTable("SBB");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BatNo)
                    .IsRequired()
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("BAT_NO");

                entity.Property(e => e.Isclose).HasColumnName("ISCLOSE");

                entity.Property(e => e.TzDd)
                    .IsRequired()
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("TZ_DD");

                entity.Property(e => e.TzTime)
                    .IsRequired()
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("TZ_TIME");
            });

            modelBuilder.Entity<Sbby>(entity =>
            {
                entity.ToTable("SBBY");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BydjNo)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("BYDJ_NO");

                entity.Property(e => e.BynrNo)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("BYNR_NO");

                entity.Property(e => e.ChkDate).HasColumnType("datetime");

                entity.Property(e => e.ChkMan)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkManName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkMob)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Itm).HasColumnName("ITM");

                entity.Property(e => e.Mid).HasColumnName("MID");

                entity.Property(e => e.SebNo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("SEB_NO");

                entity.Property(e => e.SysDate).HasColumnType("datetime");

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Usr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<SbbyDj>(entity =>
            {
                entity.ToTable("SBBY_DJ");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BydjName)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("BYDJ_NAME");

                entity.Property(e => e.BydjNo)
                    .IsRequired()
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("BYDJ_NO");

                entity.Property(e => e.ChkDate).HasColumnType("datetime");

                entity.Property(e => e.ChkMan)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkManName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkMob)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.SysDate).HasColumnType("datetime");

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Usr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<SbbyNr>(entity =>
            {
                entity.ToTable("SBBY_NR");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BynrName)
                    .HasColumnType("text")
                    .HasColumnName("BYNR_NAME");

                entity.Property(e => e.BynrNo)
                    .IsRequired()
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("BYNR_NO");

                entity.Property(e => e.ChkDate).HasColumnType("datetime");

                entity.Property(e => e.ChkMan)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkManName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkMob)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.SysDate).HasColumnType("datetime");

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Usr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<SbbyPlan>(entity =>
            {
                entity.ToTable("SBBY_PLAN");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BilType)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.BilTypeName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.BillDate).HasColumnType("datetime");

                entity.Property(e => e.BusiNo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.ChkDate).HasColumnType("datetime");

                entity.Property(e => e.ChkMan)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.ChkManName)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.ChkMob)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.ClsDate).HasColumnType("datetime");

                entity.Property(e => e.ClsUsr)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.ClsUsrName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.FxKnd)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("FX_KND");

                entity.Property(e => e.ItmSb).HasColumnName("ITM_SB");

                entity.Property(e => e.No)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Rem)
                    .IsRequired()
                    .HasMaxLength(4000)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.SebName)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("SEB_Name");

                entity.Property(e => e.SebNo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("SEB_NO");

                entity.Property(e => e.SysDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.UpdDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.UpdUsr)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.UpdUsrName)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Usr)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.UsrName)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Yy).HasColumnName("YY");
            });

            modelBuilder.Entity<SbbyPlanInfo>(entity =>
            {
                entity.ToTable("SBBY_PLAN_INFO");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.D1)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.D10)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.D11)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.D12)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.D13)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.D14)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.D15)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.D16)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.D17)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.D18)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.D19)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.D2)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.D20)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.D21)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.D22)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.D23)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.D24)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.D25)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.D26)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.D27)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.D28)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.D29)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.D3)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.D30)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.D31)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.D4)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.D5)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.D6)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.D7)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.D8)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.D9)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Mid).HasColumnName("MID");

                entity.Property(e => e.Mm).HasColumnName("MM");

                entity.Property(e => e.PlanExc)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Plan_EXC");

                entity.HasOne(d => d.MidNavigation)
                    .WithMany(p => p.SbbyPlanInfo)
                    .HasForeignKey(d => d.Mid)
                    .HasConstraintName("FK_SBBY_PLAN_INFO_SBBY_PLAN");
            });

            modelBuilder.Entity<SbbyPrj>(entity =>
            {
                entity.ToTable("SBBY_PRJ");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BydjNo)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("BYDJ_NO");

                entity.Property(e => e.Dd).HasColumnName("DD");

                entity.Property(e => e.Mid).HasColumnName("MID");

                entity.Property(e => e.Mm).HasColumnName("MM");

                entity.Property(e => e.RunFlag)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("RUN_FLAG");

                entity.Property(e => e.Yy).HasColumnName("YY");
            });

            modelBuilder.Entity<ScSbxxb>(entity =>
            {
                entity.ToTable("SC_SBXXB");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Csbh)
                    .IsRequired()
                    .HasMaxLength(200)
                    .HasColumnName("CSBH");

                entity.Property(e => e.Cslx).HasColumnName("CSLX");

                entity.Property(e => e.Csmc)
                    .HasMaxLength(200)
                    .HasColumnName("CSMC");

                entity.Property(e => e.Sbbh)
                    .IsRequired()
                    .HasMaxLength(200)
                    .HasColumnName("SBBH");

                entity.Property(e => e.Sbmc)
                    .IsRequired()
                    .HasMaxLength(200)
                    .HasColumnName("SBMC");

                entity.Property(e => e.Xsw)
                    .HasMaxLength(20)
                    .HasColumnName("XSW");
            });

            modelBuilder.Entity<SeasonDef>(entity =>
            {
                entity.ToTable("SEASON_DEF");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.EndDd)
                    .HasColumnType("datetime")
                    .HasColumnName("END_DD");

                entity.Property(e => e.Scode)
                    .HasMaxLength(50)
                    .HasColumnName("SCode");

                entity.Property(e => e.Sname)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SNAME");

                entity.Property(e => e.StaDd)
                    .HasColumnType("datetime")
                    .HasColumnName("STA_DD");

                entity.Property(e => e.Sysdate)
                    .HasColumnType("datetime")
                    .HasColumnName("SYSDATE");

                entity.Property(e => e.Upddate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDDATE");

                entity.Property(e => e.Updusr)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("UPDUSR");

                entity.Property(e => e.Updusrname)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("UPDUSRNAME");

                entity.Property(e => e.Usr)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("USR");

                entity.Property(e => e.Usrname)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("USRNAME");
            });

            modelBuilder.Entity<SebIdx2>(entity =>
            {
                entity.ToTable("SEB_IDX2");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.ChkDate).HasColumnType("datetime");

                entity.Property(e => e.ChkMan)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkManName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkMob)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Idx2No)
                    .IsRequired()
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("IDX2_NO");

                entity.Property(e => e.Idx2Rem)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("IDX2_REM");

                entity.Property(e => e.SysDate).HasColumnType("datetime");

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Usr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<SebMojPw>(entity =>
            {
                entity.ToTable("SEB_MOJ_PW");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.ChkDate).HasColumnType("datetime");

                entity.Property(e => e.ChkMan)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkManName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkMob)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.DjNo)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("DJ_NO");

                entity.Property(e => e.Energy)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("ENERGY");

                entity.Property(e => e.LinesHigh)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("LINES_HIGH");

                entity.Property(e => e.MdId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("MD_ID");

                entity.Property(e => e.ModNo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("MOD_NO");

                entity.Property(e => e.Qty).HasColumnName("QTY");

                entity.Property(e => e.Rem)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("REM");

                entity.Property(e => e.SebNo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("SEB_NO");

                entity.Property(e => e.SpcId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SPC_ID");

                entity.Property(e => e.SysDate).HasColumnType("datetime");

                entity.Property(e => e.TimeUnit)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIME_UNIT");

                entity.Property(e => e.TimeUse)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("TIME_USE");

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Usr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UtTime)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("UT_TIME");
            });

            modelBuilder.Entity<SebScope>(entity =>
            {
                entity.ToTable("SEB_SCOPE");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.ChkDate).HasColumnType("datetime");

                entity.Property(e => e.ChkMan)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkManName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkMob)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Hight1)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("HIGHT1");

                entity.Property(e => e.Hight2)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("HIGHT2");

                entity.Property(e => e.Rem)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("REM");

                entity.Property(e => e.SebNo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("SEB_NO");

                entity.Property(e => e.SysDate).HasColumnType("datetime");

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Usr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Width1)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("WIDTH1");

                entity.Property(e => e.Width2)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("WIDTH2");
            });

            modelBuilder.Entity<SebState>(entity =>
            {
                entity.ToTable("SEB_STATE");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.ChkDate).HasColumnType("datetime");

                entity.Property(e => e.ChkMan)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkManName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkMob)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Cst)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("CST");

                entity.Property(e => e.CusNo)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("CUS_NO");

                entity.Property(e => e.Dep)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("DEP");

                entity.Property(e => e.GrDd)
                    .HasColumnType("datetime")
                    .HasColumnName("GR_DD");

                entity.Property(e => e.InvalidDd)
                    .HasColumnType("datetime")
                    .HasColumnName("INVALID_DD");

                entity.Property(e => e.ItmSb).HasColumnName("ITM_SB");

                entity.Property(e => e.Name)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("NAME");

                entity.Property(e => e.OldState)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("OLD_STATE");

                entity.Property(e => e.OpnDd)
                    .HasColumnType("datetime")
                    .HasColumnName("OPN_DD");

                entity.Property(e => e.Rem)
                    .HasColumnType("text")
                    .HasColumnName("REM");

                entity.Property(e => e.SalNoBg)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("SAL_NO_BG");

                entity.Property(e => e.SebId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SEB_ID");

                entity.Property(e => e.SebNo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("SEB_NO");

                entity.Property(e => e.Spc)
                    .HasColumnType("text")
                    .HasColumnName("SPC");

                entity.Property(e => e.StateId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("STATE_ID");

                entity.Property(e => e.SysDate).HasColumnType("datetime");

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Usr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.WxDdL)
                    .HasColumnType("datetime")
                    .HasColumnName("WX_DD_L");
            });

            modelBuilder.Entity<SebWr>(entity =>
            {
                entity.ToTable("SEB_WR");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.ChkDate).HasColumnType("datetime");

                entity.Property(e => e.ChkMan)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkManName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkMob)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Itm).HasColumnName("ITM");

                entity.Property(e => e.QtyTimeCnt)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_TIME_CNT");

                entity.Property(e => e.SebNo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("SEB_NO");

                entity.Property(e => e.SysDate).HasColumnType("datetime");

                entity.Property(e => e.TimeBeg)
                    .HasColumnType("datetime")
                    .HasColumnName("TIME_BEG");

                entity.Property(e => e.TimeEnd)
                    .HasColumnType("datetime")
                    .HasColumnName("TIME_END");

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Usr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.WorkDd)
                    .HasColumnType("datetime")
                    .HasColumnName("WORK_DD");
            });

            modelBuilder.Entity<Sebei>(entity =>
            {
                entity.ToTable("SEBEI");

                entity.HasIndex(e => e.SebNo).HasName("IX_SEBEI_SEB_NO")
                    .IsUnique();

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.AbbName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("ABB_NAME");

                entity.Property(e => e.Abctype)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("ABCType");

                entity.Property(e => e.AmtnNet)
                    .HasColumnType("decimal(18, 4)")
                    .HasColumnName("AMTN_NET");

                entity.Property(e => e.AtcContent)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ATC_CONTENT");

                entity.Property(e => e.BfDd)
                    .HasColumnType("datetime")
                    .HasColumnName("BF_DD");

                entity.Property(e => e.ChkDate).HasColumnType("datetime");

                entity.Property(e => e.ChkMan)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkManName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkMob)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.CirIn)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("CIR_IN");

                entity.Property(e => e.ContourSize)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("CONTOUR_SIZE");

                entity.Property(e => e.CostCenter)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CusNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CUS_NO");

                entity.Property(e => e.Dep)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("DEP");

                entity.Property(e => e.Ecuse)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ECUse");

                entity.Property(e => e.EqptPowC)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("EQPT_POW_C");

                entity.Property(e => e.EqptWeight)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("EQPT_WEIGHT");

                entity.Property(e => e.FxKnd)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("FX_KND");

                entity.Property(e => e.FxNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("FX_NO");

                entity.Property(e => e.GrDd)
                    .HasColumnType("datetime")
                    .HasColumnName("GR_DD");

                entity.Property(e => e.Height)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("HEIGHT");

                entity.Property(e => e.InstallSite)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.LenB)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("LEN_B");

                entity.Property(e => e.LenE)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("LEN_E");

                entity.Property(e => e.MesaLoad)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("MESA_LOAD");

                entity.Property(e => e.Mfno)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("MFNO");

                entity.Property(e => e.MinDistance)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("MIN_DISTANCE");

                entity.Property(e => e.Model)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("MODEL");

                entity.Property(e => e.MtTimes).HasDefaultValueSql("((0))");

                entity.Property(e => e.Name)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("NAME");

                entity.Property(e => e.Oec)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("OEC");

                entity.Property(e => e.OpnDd)
                    .HasColumnType("datetime")
                    .HasColumnName("OPN_DD");

                entity.Property(e => e.PdLine)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Power)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("POWER");

                entity.Property(e => e.QtyDay)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_DAY");

                entity.Property(e => e.RelDd)
                    .HasColumnType("datetime")
                    .HasColumnName("REL_DD");

                entity.Property(e => e.Rem)
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.Responsible)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Sbimage)
                    .HasColumnType("image")
                    .HasColumnName("SBImage");

                entity.Property(e => e.SebNo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("SEB_NO");

                entity.Property(e => e.SerialNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SetDd)
                    .HasColumnType("datetime")
                    .HasColumnName("SET_DD");

                entity.Property(e => e.Spc)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SPC");

                entity.Property(e => e.Speed)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SPEED");

                entity.Property(e => e.SpindlePower)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SPINDLE_POWER");

                entity.Property(e => e.State)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("STATE");

                entity.Property(e => e.SysDate).HasColumnType("datetime");

                entity.Property(e => e.TableSize)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TABLE_SIZE");

                entity.Property(e => e.Tax)
                    .HasColumnType("decimal(18, 4)")
                    .HasColumnName("TAX");

                entity.Property(e => e.TimeFromLatestMt)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("TimeFromLatestMT")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.TotalRunTime)
                    .HasColumnType("numeric(18, 0)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.UpNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("UP_NO");

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Usr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Ut)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("UT");

                entity.Property(e => e.Weight)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("WEIGHT");

                entity.Property(e => e.XyzStroke)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("XYZ_STROKE");
            });

            modelBuilder.Entity<SebeiRecord>(entity =>
            {
                entity.ToTable("SEBEI_RECORD");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.ActualCycle)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.ActualProcessDate).HasColumnType("datetime");

                entity.Property(e => e.ChkDate).HasColumnType("datetime");

                entity.Property(e => e.ChkMan)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkManName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkMob)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.CostCenter)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Dep)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("DEP");

                entity.Property(e => e.Describe)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Enabled).HasDefaultValueSql("((0))");

                entity.Property(e => e.Header)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.MaintainDurationTime).HasColumnType("decimal(18, 4)");

                entity.Property(e => e.MaintainType).HasDefaultValueSql("((0))");

                entity.Property(e => e.MaintainUsrId).HasColumnName("MaintainUsrID");

                entity.Property(e => e.Measures)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Name)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.NextDate).HasColumnType("datetime");

                entity.Property(e => e.OrderId)
                    .HasColumnName("OrderID")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.PersonalId)
                    .HasColumnName("PersonalID")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.PlanProcessDate).HasColumnType("datetime");

                entity.Property(e => e.ProcessId)
                    .HasColumnName("ProcessID")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.ProductId)
                    .HasColumnName("ProductID")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.RecordDd)
                    .HasColumnType("datetime")
                    .HasColumnName("Record_DD")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.SebNo)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("SEB_NO");

                entity.Property(e => e.SolveDate).HasColumnType("datetime");

                entity.Property(e => e.StateReason)
                    .IsRequired()
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.SurName)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.SysDate).HasColumnType("datetime");

                entity.Property(e => e.Tabs)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.TargetCycle)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Usr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Setdefvalues>(entity =>
            {
                entity.ToTable("SETDEFVALUES");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BusiId)
                    .IsRequired()
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("BusiID");

                entity.Property(e => e.BusiNo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Content)
                    .HasColumnType("image")
                    .HasColumnName("CONTENT");

                entity.Property(e => e.Flag)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("FLAG");

                entity.Property(e => e.Itm).HasColumnName("ITM");

                entity.Property(e => e.Rem)
                    .IsRequired()
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.Usr)
                    .IsRequired()
                    .HasMaxLength(12)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<ShDj>(entity =>
            {
                entity.ToTable("SH_DJ");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BatNo)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("BAT_NO");

                entity.Property(e => e.BilItm).HasColumnName("BIL_ITM");

                entity.Property(e => e.BilNo)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("BIL_NO");

                entity.Property(e => e.BilNoFieldName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.BilType)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.BillDate).HasColumnType("datetime");

                entity.Property(e => e.BusiNo)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Busi_No");

                entity.Property(e => e.ChkDd)
                    .HasColumnType("datetime")
                    .HasColumnName("CHK_DD");

                entity.Property(e => e.ChkMob)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.CusNo)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("CUS_NO");

                entity.Property(e => e.CusOsNo)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("CUS_OS_NO");

                entity.Property(e => e.Dep)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("DEP");

                entity.Property(e => e.DepBil)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("DEP_BIL");

                entity.Property(e => e.DtshNo)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("DTSH_NO");

                entity.Property(e => e.DtshSw)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("DTSH_SW")
                    .HasDefaultValueSql("('N')");

                entity.Property(e => e.EipSts)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("EIP_STS");

                entity.Property(e => e.IsRemodify).HasColumnName("IS_REMODIFY");

                entity.Property(e => e.LastDd)
                    .HasColumnType("datetime")
                    .HasColumnName("LAST_DD");

                entity.Property(e => e.NotReturn)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("NOT_RETURN");

                entity.Property(e => e.OtId)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("OT_ID");

                entity.Property(e => e.OtId2)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("OT_ID2");

                entity.Property(e => e.OtNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("OT_NO");

                entity.Property(e => e.OtNo2)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("OT_NO2");

                entity.Property(e => e.Othusr)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("OTHUSR");

                entity.Property(e => e.PreChkMan)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("PRE_CHK_MAN");

                entity.Property(e => e.PrePreShItm).HasColumnName("PRE_PRE_SH_ITM");

                entity.Property(e => e.PreShItm).HasColumnName("PRE_SH_ITM");

                entity.Property(e => e.Rem)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("REM");

                entity.Property(e => e.RemBil)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("REM_BIL");

                entity.Property(e => e.SalNo)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("SAL_NO");

                entity.Property(e => e.ShDd)
                    .HasColumnType("datetime")
                    .HasColumnName("SH_DD");

                entity.Property(e => e.ShItm).HasColumnName("SH_ITM");

                entity.Property(e => e.StartDd)
                    .HasColumnType("datetime")
                    .HasColumnName("START_DD");

                entity.Property(e => e.SysDate)
                    .HasColumnType("datetime")
                    .HasColumnName("SYS_DATE");

                entity.Property(e => e.TypeNo)
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("TYPE_NO");

                entity.Property(e => e.Unsubmit)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("UNSUBMIT");

                entity.Property(e => e.UsrCheck)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("USR_CHECK");

                entity.Property(e => e.UsrCheckMain)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("USR_CHECK_MAIN");

                entity.Property(e => e.UsrClose)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("USR_CLOSE");

                entity.Property(e => e.UsrMake)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("USR_MAKE");

                entity.Property(e => e.UsrN)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("USR_N");

                entity.Property(e => e.UsrRejigger)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("USR_REJIGGER");

                entity.Property(e => e.VerNo)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("VER_NO");

                entity.Property(e => e.Yn)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("YN");
            });

            modelBuilder.Entity<ShList>(entity =>
            {
                entity.ToTable("SH_LIST");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BilItm).HasColumnName("BIL_ITM");

                entity.Property(e => e.BilNo)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("BIL_NO");

                entity.Property(e => e.BusiNo)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Busi_No");

                entity.Property(e => e.ChkDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CHK_DATE");

                entity.Property(e => e.ChkMan)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("CHK_MAN");

                entity.Property(e => e.ChkMan1)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("CHK_MAN1");

                entity.Property(e => e.ChkManMain)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("CHK_MAN_MAIN");

                entity.Property(e => e.ChkManMain1)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("CHK_MAN_MAIN1");

                entity.Property(e => e.Itm).HasColumnName("ITM");

                entity.Property(e => e.PreTag)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("PRE_TAG");

                entity.Property(e => e.Rem)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("REM");

                entity.Property(e => e.ShItm).HasColumnName("SH_ITM");

                entity.Property(e => e.Yn)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("YN");

                entity.Property(e => e.Yn1)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("YN1");
            });

            modelBuilder.Entity<ShiftScheduling>(entity =>
            {
                entity.ToTable("SHIFT_SCHEDULING");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Chkdate)
                    .HasColumnType("datetime")
                    .HasColumnName("CHKDATE");

                entity.Property(e => e.Chkman)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CHKMAN");

                entity.Property(e => e.Chkmanname)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CHKMANNAME");

                entity.Property(e => e.Chkmob)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("CHKMOB");

                entity.Property(e => e.Deptno)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("DEPTNO");

                entity.Property(e => e.Isprint).HasColumnName("ISPRINT");

                entity.Property(e => e.Name)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("NAME");

                entity.Property(e => e.No)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("NO");

                entity.Property(e => e.ShiftNo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ShiftNO");

                entity.Property(e => e.Ssdate)
                    .HasColumnType("datetime")
                    .HasColumnName("SSDATE");

                entity.Property(e => e.Sysdate)
                    .HasColumnType("datetime")
                    .HasColumnName("SYSDATE");

                entity.Property(e => e.TeamNo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TeamNO");

                entity.Property(e => e.Upddate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDDATE");

                entity.Property(e => e.Updusr)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("UPDUSR");

                entity.Property(e => e.Updusrname)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("UPDUSRNAME");

                entity.Property(e => e.Usr)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("USR");

                entity.Property(e => e.Usrname)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("USRNAME");
            });

            modelBuilder.Entity<Sifilter>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("SIFILTER");

                entity.Property(e => e.Asn)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ASN");

                entity.Property(e => e.BatchNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.BillNo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.BillStatus)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.BusiNo)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Comment)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.CreateAi)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CreateAI");

                entity.Property(e => e.CreateInspectionOrder)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.DeptNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.InspectTc).HasColumnName("InspectTC");

                entity.Property(e => e.InspectionDate).HasColumnType("datetime");

                entity.Property(e => e.InspectionType)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.IsEfi).HasColumnName("IsEFI");

                entity.Property(e => e.ProducedDate).HasColumnType("datetime");

                entity.Property(e => e.ProductionName)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.ProductionNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.QtyPs)
                    .HasColumnType("decimal(18, 4)")
                    .HasColumnName("QTY_PS");

                entity.Property(e => e.QtyRck)
                    .HasColumnType("decimal(18, 4)")
                    .HasColumnName("QTY_RCK");

                entity.Property(e => e.QtyRtn)
                    .HasColumnType("decimal(18, 4)")
                    .HasColumnName("QTY_RTN");

                entity.Property(e => e.RawMaterialBatch)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SendInspectorId).HasColumnName("SendInspectorID");

                entity.Property(e => e.Siqty)
                    .HasColumnType("decimal(18, 4)")
                    .HasColumnName("SIQty");

                entity.Property(e => e.Snm)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SNM");

                entity.Property(e => e.SourceBillNo)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.SourceLocation)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SourceLocationName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Spc)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("SPC");

                entity.Property(e => e.StorageLocation)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Subid).HasColumnName("SUBID");

                entity.Property(e => e.SuppCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SuppName)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.SuppSnm)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("SuppSNM");

                entity.Property(e => e.SysDate).HasColumnType("datetime");

                entity.Property(e => e.TargetWareHouse)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TargetWareHouseName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Unit)
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.UsrName)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ViewDetail)
                    .IsRequired()
                    .HasMaxLength(12)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<SourceInfo>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("SourceInfo");

                entity.Property(e => e.Asn)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ASN");

                entity.Property(e => e.BatchNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Batch_No");

                entity.Property(e => e.Ef)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("EF");

                entity.Property(e => e.ProdNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Prod_No");

                entity.Property(e => e.ProductionDate).HasColumnType("datetime");

                entity.Property(e => e.Remark)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<SpcLst>(entity =>
            {
                entity.ToTable("SPC_LST");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.ChkDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.ChkMan)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.ChkManName)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.ChkMob)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("ChkMOB")
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Comment).HasMaxLength(100);

                entity.Property(e => e.DefectGrade)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.DutyDept).HasMaxLength(50);

                entity.Property(e => e.IsPrint).HasDefaultValueSql("((0))");

                entity.Property(e => e.Iscollect).HasColumnName("ISCOLLECT");

                entity.Property(e => e.Name)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("NAME");

                entity.Property(e => e.PrjType)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("PRJ_TYPE");

                entity.Property(e => e.QcItm)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("QC_ITM");

                entity.Property(e => e.RespZcno)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("RESP_ZCNO");

                entity.Property(e => e.SpcGrade)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("SPC_GRADE");

                entity.Property(e => e.SpcNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SPC_NO");

                entity.Property(e => e.SpcType)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("SPC_TYPE");

                entity.Property(e => e.SysDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.UpdDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Usr)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.UsrName)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.ZcNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ZC_NO");
            });

            modelBuilder.Entity<SpectrumTemp>(entity =>
            {
                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Barcode)
                    .HasMaxLength(55)
                    .IsUnicode(false)
                    .HasColumnName("BARCODE");

                entity.Property(e => e.Castingbatchno)
                    .HasMaxLength(55)
                    .IsUnicode(false)
                    .HasColumnName("CASTINGBATCHNO");

                entity.Property(e => e.Inputdate)
                    .HasMaxLength(55)
                    .IsUnicode(false)
                    .HasColumnName("INPUTDATE");

                entity.Property(e => e.Itm)
                    .HasMaxLength(55)
                    .IsUnicode(false)
                    .HasColumnName("ITM");

                entity.Property(e => e.Maxlimit)
                    .HasMaxLength(55)
                    .IsUnicode(false)
                    .HasColumnName("MAXLIMIT");

                entity.Property(e => e.Minlimit)
                    .HasMaxLength(55)
                    .IsUnicode(false)
                    .HasColumnName("MINLIMIT");

                entity.Property(e => e.No)
                    .HasMaxLength(55)
                    .IsUnicode(false)
                    .HasColumnName("NO");

                entity.Property(e => e.SebNo)
                    .HasMaxLength(55)
                    .IsUnicode(false)
                    .HasColumnName("SEB_NO");

                entity.Property(e => e.Stoveno)
                    .HasMaxLength(55)
                    .IsUnicode(false)
                    .HasColumnName("STOVENO");

                entity.Property(e => e.SysDate)
                    .HasMaxLength(55)
                    .IsUnicode(false)
                    .HasColumnName("SYS_DATE");

                entity.Property(e => e.Type)
                    .HasMaxLength(55)
                    .IsUnicode(false)
                    .HasColumnName("TYPE");

                entity.Property(e => e.Value)
                    .HasMaxLength(55)
                    .IsUnicode(false)
                    .HasColumnName("VALUE");
            });

            modelBuilder.Entity<Sprd>(entity =>
            {
                entity.ToTable("SPRD");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.ChkDate).HasColumnType("datetime");

                entity.Property(e => e.ChkMan)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkManName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkMob)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Cst)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("CST");

                entity.Property(e => e.CstIfrs)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("CST_IFRS");

                entity.Property(e => e.CstStd)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("CST_STD");

                entity.Property(e => e.CstStdIfrs)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("CST_STD_IFRS");

                entity.Property(e => e.Mm).HasColumnName("MM");

                entity.Property(e => e.PrdMark)
                    .IsRequired()
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("PRD_MARK")
                    .HasDefaultValueSql("(space((0)))");

                entity.Property(e => e.PrdNo)
                    .IsRequired()
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("PRD_NO");

                entity.Property(e => e.Qty)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY");

                entity.Property(e => e.Qty1)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY1");

                entity.Property(e => e.Qty1Br)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY1_BR");

                entity.Property(e => e.Qty1Ln)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY1_LN");

                entity.Property(e => e.QtyBoxItm)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_BOX_ITM");

                entity.Property(e => e.QtyBr)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_BR");

                entity.Property(e => e.QtyLn)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_LN");

                entity.Property(e => e.Rem)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("REM");

                entity.Property(e => e.SysDate).HasColumnType("datetime");

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Usr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Uup)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("UUP");

                entity.Property(e => e.UupIfrs)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("UUP_IFRS");

                entity.Property(e => e.Wh)
                    .IsRequired()
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("WH");

                entity.Property(e => e.Yy).HasColumnName("YY");
            });

            modelBuilder.Entity<Sprd1>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("SPRD1");

                entity.Property(e => e.BatNo)
                    .IsRequired()
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("BAT_NO");

                entity.Property(e => e.Cst)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("CST");

                entity.Property(e => e.CstIfrs)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("CST_IFRS");

                entity.Property(e => e.CstStd)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("CST_STD");

                entity.Property(e => e.CstStdIfrs)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("CST_STD_IFRS");

                entity.Property(e => e.Mm).HasColumnName("MM");

                entity.Property(e => e.PrdMark)
                    .IsRequired()
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("PRD_MARK")
                    .HasDefaultValueSql("(space((0)))");

                entity.Property(e => e.PrdNo)
                    .IsRequired()
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("PRD_NO");

                entity.Property(e => e.Qty)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY");

                entity.Property(e => e.Qty1)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY1");

                entity.Property(e => e.Qty1Br)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY1_BR");

                entity.Property(e => e.Qty1Ln)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY1_LN");

                entity.Property(e => e.QtyBr)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_BR");

                entity.Property(e => e.QtyLn)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_LN");

                entity.Property(e => e.Rem)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("REM");

                entity.Property(e => e.Uup)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("UUP");

                entity.Property(e => e.UupIfrs)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("UUP_IFRS");

                entity.Property(e => e.ValidDd)
                    .HasColumnType("datetime")
                    .HasColumnName("VALID_DD");

                entity.Property(e => e.Wh)
                    .IsRequired()
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("WH");

                entity.Property(e => e.Yy).HasColumnName("YY");
            });

            modelBuilder.Entity<StBarcodechange>(entity =>
            {
                entity.ToTable("ST_BARCODECHANGE");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BarcodeNo)
                    .IsRequired()
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("BarcodeNO")
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.BatNo)
                    .IsRequired()
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("BAT_NO")
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.BilType)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.BilTypeName)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.BillDate).HasColumnType("datetime");

                entity.Property(e => e.BillNo)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.BusiNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.ChkDate).HasColumnType("datetime");

                entity.Property(e => e.ChkMan)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.ChkManName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.ChkMob)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.ClsDate).HasColumnType("datetime");

                entity.Property(e => e.ClsUsr)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.ClsUsrName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.DepName)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("DEP_NAME");

                entity.Property(e => e.DepNo)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("DEP_NO");

                entity.Property(e => e.IsClose).HasDefaultValueSql("((0))");

                entity.Property(e => e.IsPrint).HasDefaultValueSql("((0))");

                entity.Property(e => e.Itm).HasColumnName("ITM");

                entity.Property(e => e.No)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.PrdName)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("PRD_NAME")
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.PrdNo)
                    .IsRequired()
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("PRD_NO")
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.PrdSpc)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("PRD_SPC")
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Qty)
                    .HasColumnType("decimal(18, 4)")
                    .HasColumnName("QTY");

                entity.Property(e => e.Qty1)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY1")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.RbillNo)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("RBILL_NO")
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.RbillType)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("RBILL_TYPE");

                entity.Property(e => e.Rem)
                    .HasMaxLength(4000)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.SysDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Unit)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("UNIT")
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.UpdDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Usr)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.UsrName)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Yqty)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("YQTY");

                entity.Property(e => e.Yqty1)
                    .HasColumnType("decimal(18, 4)")
                    .HasColumnName("YQTY1")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.ZcName)
                    .IsRequired()
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("ZC_NAME")
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.ZcNo)
                    .IsRequired()
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("ZC_NO")
                    .HasDefaultValueSql("('')");
            });

            modelBuilder.Entity<StBarcodeinfo>(entity =>
            {
                entity.ToTable("ST_BARCODEINFO");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.AuNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("auNo");

                entity.Property(e => e.BillDate).HasColumnType("datetime");

                entity.Property(e => e.BillclsId).HasColumnName("billclsID");

                entity.Property(e => e.BusiNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("BusiNO");

                entity.Property(e => e.ChkDate).HasColumnType("datetime");

                entity.Property(e => e.ChkUserId).HasColumnName("ChkUserID");

                entity.Property(e => e.CloseDate).HasColumnType("datetime");

                entity.Property(e => e.CloseUserId).HasColumnName("CloseUserID");

                entity.Property(e => e.InputDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Memo)
                    .HasMaxLength(3500)
                    .IsUnicode(false);

                entity.Property(e => e.No)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("NO");

                entity.Property(e => e.UserId).HasColumnName("userID");
            });

            modelBuilder.Entity<StBarcodeinfos>(entity =>
            {
                entity.ToTable("ST_BARCODEINFOS");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Barcode)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("BARCODE");

                entity.Property(e => e.BatNo)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("BAT_NO");

                entity.Property(e => e.BillDate)
                    .HasColumnType("datetime")
                    .HasColumnName("BILL_DATE");

                entity.Property(e => e.CodeDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CODE_DATE");

                entity.Property(e => e.CusName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("CUS_NAME");

                entity.Property(e => e.CusNo)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("CUS_NO");

                entity.Property(e => e.CylNo)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("CYL_NO");

                entity.Property(e => e.EstItm).HasColumnName("EST_ITM");

                entity.Property(e => e.Isprint).HasColumnName("ISPRINT");

                entity.Property(e => e.Itm).HasColumnName("ITM");

                entity.Property(e => e.MakeDate)
                    .HasColumnType("datetime")
                    .HasColumnName("MAKE_DATE");

                entity.Property(e => e.Memo)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("MEMO");

                entity.Property(e => e.Mid).HasColumnName("MID");

                entity.Property(e => e.PrdName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("PRD_NAME");

                entity.Property(e => e.PrdNo)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("PRD_NO");

                entity.Property(e => e.PrdSnm)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("PRD_SNM");

                entity.Property(e => e.PrdSpc)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("PRD_SPC");

                entity.Property(e => e.PrintDate)
                    .HasColumnType("datetime")
                    .HasColumnName("PRINT_DATE");

                entity.Property(e => e.Qty)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY");

                entity.Property(e => e.Qty1)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY1");

                entity.Property(e => e.Ran)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("RAN");

                entity.Property(e => e.RbillNo)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("RBILL_NO");

                entity.Property(e => e.RbillType)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("RBILL_TYPE");

                entity.Property(e => e.Resbarcode)
                    .HasMaxLength(300)
                    .IsUnicode(false)
                    .HasColumnName("RESBARCODE");

                entity.Property(e => e.ShipNo)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("SHIP_NO");

                entity.Property(e => e.TrayNo)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("TRAY_NO");

                entity.Property(e => e.Unit)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("UNIT");

                entity.Property(e => e.Unit1)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("UNIT1");

                entity.Property(e => e.ValidDate)
                    .HasColumnType("datetime")
                    .HasColumnName("VALID_DATE");

                entity.Property(e => e.ValidDays).HasColumnName("VALID_DAYS");

                entity.HasOne(d => d.MidNavigation)
                    .WithMany(p => p.StBarcodeinfos)
                    .HasForeignKey(d => d.Mid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("FK_ST_BARCODEINFOS_ST_BARCODEINFO");
            });

            modelBuilder.Entity<StBarcodemergeinfo>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ST_BARCODEMERGEINFO");

                entity.Property(e => e.BarcodeNew)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("BARCODE_NEW");

                entity.Property(e => e.BarcodeOld)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("BARCODE_OLD");

                entity.Property(e => e.Createtime)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATETIME");
            });

            modelBuilder.Entity<StBarcoderes>(entity =>
            {
                entity.ToTable("ST_BARCODERES");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BatNo)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("BAT_NO");

                entity.Property(e => e.BillDate)
                    .HasColumnType("datetime")
                    .HasColumnName("BILL_DATE");

                entity.Property(e => e.BusiNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("BusiNO");

                entity.Property(e => e.CusNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("CUS_NO");

                entity.Property(e => e.Dep)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("DEP");

                entity.Property(e => e.EstItm).HasColumnName("EST_ITM");

                entity.Property(e => e.Itm).HasColumnName("ITM");

                entity.Property(e => e.Memo)
                    .HasMaxLength(3500)
                    .IsUnicode(false);

                entity.Property(e => e.Mid).HasColumnName("MID");

                entity.Property(e => e.PrdNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("PRD_NO");

                entity.Property(e => e.Qty)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY");

                entity.Property(e => e.Qty1)
                    .HasColumnType("decimal(18, 4)")
                    .HasColumnName("QTY1");

                entity.Property(e => e.Qtypak)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTYPAK");

                entity.Property(e => e.Qtypk2)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTYPK2");

                entity.Property(e => e.RbillNo)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("RBILL_NO");

                entity.Property(e => e.RbillType)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("RBILL_TYPE");

                entity.Property(e => e.SalNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SAL_NO");

                entity.Property(e => e.Unit)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("UNIT");

                entity.Property(e => e.Unit1)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("UNIT1");

                entity.Property(e => e.Unitpk2)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("UNITPK2");
            });

            modelBuilder.Entity<StBarcodesplit>(entity =>
            {
                entity.ToTable("ST_BARCODESPLIT");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.PrdNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("PRD_NO");

                entity.Property(e => e.SourceBarcode)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.SysDate).HasColumnType("datetime");

                entity.Property(e => e.ToBarcode)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<StPalletcodeInfo>(entity =>
            {
                entity.ToTable("ST_PALLETCODE_INFO");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BanNo)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("BAN_NO");

                entity.Property(e => e.Barcode)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("BARCODE");

                entity.Property(e => e.ChkNum)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CHK_NUM")
                    .IsFixedLength(true);

                entity.Property(e => e.IdNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ID_NO");

                entity.Property(e => e.Location)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("LOCATION");

                entity.Property(e => e.MoNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("MO_NO");

                entity.Property(e => e.Noloadingqty).HasColumnName("NOLOADINGQTY");

                entity.Property(e => e.PrdNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("PRD_NO");

                entity.Property(e => e.Qty).HasColumnName("QTY");

                entity.Property(e => e.SalNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("SAL_NO");

                entity.Property(e => e.SebNo)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("SEB_NO");

                entity.Property(e => e.Status)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("STATUS")
                    .IsFixedLength(true);

                entity.Property(e => e.Sysdate)
                    .HasColumnType("datetime")
                    .HasColumnName("SYSDATE");

                entity.Property(e => e.TzNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("TZ_NO");

                entity.Property(e => e.WrNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("WR_NO");

                entity.Property(e => e.ZcNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ZC_NO");
            });

            modelBuilder.Entity<StTdcodeBusi>(entity =>
            {
                entity.ToTable("ST_TDCODE_BUSI");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BanNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("BAN_NO");

                entity.Property(e => e.Barcode)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("BARCODE");

                entity.Property(e => e.CodeStatus)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CODE_STATUS");

                entity.Property(e => e.PrdNo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("PRD_NO");

                entity.Property(e => e.SalNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("SAL_NO");

                entity.Property(e => e.SebNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SEB_NO");

                entity.Property(e => e.StaTime)
                    .HasColumnType("datetime")
                    .HasColumnName("STA_TIME");

                entity.Property(e => e.TzNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("TZ_NO");

                entity.Property(e => e.WrNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("WR_NO");

                entity.Property(e => e.ZcNo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ZC_NO");
            });

            modelBuilder.Entity<StTdcodeBusiRecord>(entity =>
            {
                entity.ToTable("ST_TDCODE_BUSI_Record");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.ChDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CH_DATE");

                entity.Property(e => e.CodeStatus)
                    .HasMaxLength(50)
                    .HasColumnName("CODE_STATUS");

                entity.Property(e => e.Mid).HasColumnName("MID");

                entity.Property(e => e.OldCodeStatus)
                    .HasMaxLength(50)
                    .HasColumnName("OLD_CODE_STATUS");
            });

            modelBuilder.Entity<StTdcodeInfo>(entity =>
            {
                entity.ToTable("ST_TDCODE_INFO");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Barcode)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("BARCODE");

                entity.Property(e => e.CodeStatus)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CODE_STATUS");

                entity.Property(e => e.Dcno)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("DCNO");

                entity.Property(e => e.EffTime)
                    .HasColumnType("datetime")
                    .HasColumnName("EFF_TIME");

                entity.Property(e => e.IdNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ID_NO");

                entity.Property(e => e.MakerNo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("MAKER_NO");

                entity.Property(e => e.ModNoOri)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("MOD_NO_ORI");

                entity.Property(e => e.PrdNo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("PRD_NO");

                entity.Property(e => e.PrdNoOri)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("PRD_NO_ORI");

                entity.Property(e => e.Sysdate)
                    .HasColumnType("datetime")
                    .HasColumnName("SYSDATE");
            });

            modelBuilder.Entity<StTdcodePallet>(entity =>
            {
                entity.ToTable("ST_TDCODE_PALLET");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Mid).HasColumnName("MID");

                entity.Property(e => e.Pcode)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("PCODE");

                entity.Property(e => e.Sysdate)
                    .HasColumnType("datetime")
                    .HasColumnName("SYSDATE");

                entity.Property(e => e.Tdcode)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("TDCODE");

                entity.HasOne(d => d.MidNavigation)
                    .WithMany(p => p.StTdcodePallet)
                    .HasForeignKey(d => d.Mid)
                    .HasConstraintName("FK_ST_TDCODE_PALLET_ST_PALLETCODE_INFO");
            });

            modelBuilder.Entity<StTdcodeTemp>(entity =>
            {
                entity.ToTable("ST_TDCODE_TEMP");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BanNo)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("BAN_NO");

                entity.Property(e => e.Barcode)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("BARCODE");

                entity.Property(e => e.CodeStatus)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CODE_STATUS");

                entity.Property(e => e.Entryid)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ENTRYID");

                entity.Property(e => e.MoNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("MO_NO");

                entity.Property(e => e.ScanTime)
                    .HasColumnType("datetime")
                    .HasColumnName("SCAN_TIME");

                entity.Property(e => e.SebNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SEB_NO");

                entity.Property(e => e.SpcNo)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("SPC_NO");

                entity.Property(e => e.StationNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("Station_No");

                entity.Property(e => e.TzNo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("TZ_NO");

                entity.Property(e => e.Usrno)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("USRNO");

                entity.Property(e => e.ZcNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ZC_NO");
            });

            modelBuilder.Entity<StationSeb>(entity =>
            {
                entity.ToTable("STATION_SEB");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.ChkDate).HasColumnType("datetime");

                entity.Property(e => e.ChkMan)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkManName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkMob)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Name)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.No)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Rem)
                    .IsRequired()
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.SebName)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SEB_NAME");

                entity.Property(e => e.SebNo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("SEB_NO");

                entity.Property(e => e.StopId).HasColumnName("STOP_ID");

                entity.Property(e => e.SysDate).HasColumnType("datetime");

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Usr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Student>(entity =>
            {
                entity.Property(e => e.StudentId)
                    .HasMaxLength(50)
                    .HasColumnName("StudentID");

                entity.Property(e => e.MajorId).HasColumnName("MajorID");

                entity.Property(e => e.Name)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.HasOne(d => d.Major)
                    .WithMany(p => p.Student)
                    .HasForeignKey(d => d.MajorId)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("FK_STUDENT_REFERENCE_MAJOR");
            });

            modelBuilder.Entity<SysAccountClose>(entity =>
            {
                entity.ToTable("SYS_Account_Close");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BilType)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.BilTypeName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.BillDate).HasColumnType("datetime");

                entity.Property(e => e.BusiNo)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkDate).HasColumnType("datetime");

                entity.Property(e => e.ChkMan)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkManName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkMob)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.CloseDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Close_Date");

                entity.Property(e => e.ClsDate).HasColumnType("datetime");

                entity.Property(e => e.ClsUsr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ClsUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.No)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Rem)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.SysDate).HasColumnType("datetime");

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Usr)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UsrName)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<SysAccountCloseItem>(entity =>
            {
                entity.ToTable("SYS_AccountClose_Item");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BillType)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.CloseDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Close_Date");

                entity.Property(e => e.Mid).HasColumnName("MID");

                entity.Property(e => e.Rem)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.HasOne(d => d.MidNavigation)
                    .WithMany(p => p.SysAccountCloseItem)
                    .HasForeignKey(d => d.Mid)
                    .HasConstraintName("FK_SYS_AccountClose_Item_SYS_Account_Close");
            });

            modelBuilder.Entity<SysAttachment>(entity =>
            {
                entity.ToTable("SYS_ATTACHMENT");

                entity.HasIndex(e => new { e.Busino, e.BillId }).HasName("IX_SYS_ATTACHMENT");

                entity.HasIndex(e => e.FileId).HasName("IX_SYS_ATTACHMENT_1");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BillId).HasColumnName("BillID");

                entity.Property(e => e.Busino)
                    .IsRequired()
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("BUSINO");

                entity.Property(e => e.FileId).HasColumnName("FileID");

                entity.Property(e => e.MenuNo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<SysAudBillInfo>(entity =>
            {
                entity.ToTable("sys_AudBill_Info");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.AudDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Aud_Date");

                entity.Property(e => e.AudNo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Aud_No");

                entity.Property(e => e.AudState)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("Aud_State");

                entity.Property(e => e.BillCreateUser)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("Bill_CreateUser");

                entity.Property(e => e.BillDate).HasColumnType("datetime");

                entity.Property(e => e.BillId).HasColumnName("Bill_ID");

                entity.Property(e => e.BillNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.BillRemark)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("Bill_Remark");

                entity.Property(e => e.BillType)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.BillUsrDept)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("Bill_Usr_Dept");

                entity.Property(e => e.BusiNo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CustNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Cust_No");

                entity.Property(e => e.MenuNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Result)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.SubMitDate)
                    .HasColumnType("datetime")
                    .HasColumnName("SubMit_Date");

                entity.Property(e => e.SysDate).HasColumnType("datetime");

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Usr)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UsrClose)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Usr_Close");

                entity.Property(e => e.UsrCur)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("Usr_Cur");

                entity.Property(e => e.UsrCurAgent)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Usr_Cur_Agent");

                entity.Property(e => e.UsrExec)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("Usr_Exec");

                entity.Property(e => e.UsrExecDept)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("Usr_Exec_Dept");

                entity.Property(e => e.UsrName)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UsrOther)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Usr_Other");

                entity.Property(e => e.UsrPre)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Usr_Pre");
            });

            modelBuilder.Entity<SysAudBillItem>(entity =>
            {
                entity.ToTable("sys_AudBill_Item");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.AudDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Aud_Date");

                entity.Property(e => e.Mid).HasColumnName("MID");

                entity.Property(e => e.Rem)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.Result)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UsrAud)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("Usr_Aud");

                entity.Property(e => e.UsrMain)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("Usr_Main");

                entity.HasOne(d => d.MidNavigation)
                    .WithMany(p => p.SysAudBillItem)
                    .HasForeignKey(d => d.Mid)
                    .HasConstraintName("FK_sys_AudBill_Item_sys_AudBill_Info");
            });

            modelBuilder.Entity<SysAuditFlow>(entity =>
            {
                entity.ToTable("sys_Audit_Flow");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BilType)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.BusiName)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.BusiNameNext)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("BusiName_Next");

                entity.Property(e => e.BusiNo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.BusiNoNext)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("BusiNo_Next");

                entity.Property(e => e.CdtSql)
                    .HasMaxLength(4000)
                    .IsUnicode(false)
                    .HasColumnName("CDT_SQL");

                entity.Property(e => e.ChkMob)
                    .IsRequired()
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.FactoryNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Factory_No");

                entity.Property(e => e.FormId)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("FORM_ID");

                entity.Property(e => e.MenuNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.NoFieldName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("NoField_Name");

                entity.Property(e => e.Rem)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.SubmitManual).HasColumnName("SUBMIT_Manual");

                entity.Property(e => e.SysDate).HasColumnType("datetime");

                entity.Property(e => e.TypeNo)
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("Type_No");

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Usr)
                    .HasMaxLength(20)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<SysAuditFlowDetails>(entity =>
            {
                entity.ToTable("sys_AuditFlow_Details");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Agent)
                    .HasMaxLength(250)
                    .IsUnicode(false);

                entity.Property(e => e.BusiNo)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.CdtSql)
                    .HasMaxLength(4000)
                    .IsUnicode(false)
                    .HasColumnName("CDT_SQL");

                entity.Property(e => e.ChkMob)
                    .IsRequired()
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.DelayTime).HasColumnName("DELAY_TIME");

                entity.Property(e => e.IsTitle).HasColumnName("IS_TITLE");

                entity.Property(e => e.Mid).HasColumnName("MID");

                entity.Property(e => e.Rem)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.Signer)
                    .HasMaxLength(250)
                    .IsUnicode(false);

                entity.Property(e => e.SigningAgent)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("Signing_Agent");

                entity.Property(e => e.Tonext)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TONEXT");

                entity.Property(e => e.Usr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UsrName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ValidTime).HasColumnName("VALID_TIME");

                entity.HasOne(d => d.MidNavigation)
                    .WithMany(p => p.SysAuditFlowDetails)
                    .HasForeignKey(d => d.Mid)
                    .HasConstraintName("FK_TF_SHLC_MF_SHLC");
            });

            modelBuilder.Entity<SysAuditFlowUsr>(entity =>
            {
                entity.ToTable("sys_AuditFlow_Usr");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BilType)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.BusiNo)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.ChkMob)
                    .IsRequired()
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.Dep)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("DEP")
                    .HasDefaultValueSql("(space((0)))");

                entity.Property(e => e.FactoryNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Factory_No");

                entity.Property(e => e.IsdefaultMob).HasColumnName("ISDEFAULT_MOB");

                entity.Property(e => e.Mid).HasColumnName("MID");

                entity.Property(e => e.Usr)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("USR");

                entity.HasOne(d => d.MidNavigation)
                    .WithMany(p => p.SysAuditFlowUsr)
                    .HasForeignKey(d => d.Mid)
                    .HasConstraintName("FK_sys_AuditFlow_Usr_sys_Audit_Flow");
            });

            modelBuilder.Entity<SysBarcodeInfo>(entity =>
            {
                entity.ToTable("SYS_BARCODE_INFO");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.MaxSn).HasColumnName("MaxSN");

                entity.Property(e => e.PrevDate)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.RuleId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("RuleID");

                entity.Property(e => e.Variable)
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<SysBarcodeRule>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("SYS_BARCODE_RULE");

                entity.Property(e => e.Align)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CombiId)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("CombiID");

                entity.Property(e => e.CombiType)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CoverChar)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.FixChar)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Format)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ItemType)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.RuleId)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("RuleID");

                entity.Property(e => e.UpdateTime)
                    .HasMaxLength(20)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<SysBillnoInfo>(entity =>
            {
                entity.HasKey(e => e.BillId);

                entity.ToTable("SYS_BILLNO_INFO");

                entity.Property(e => e.BillId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("BillID");

                entity.Property(e => e.MaxSn).HasColumnName("MaxSN");

                entity.Property(e => e.PrevDate)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SelfId)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("SelfID");
            });

            modelBuilder.Entity<SysBillnoInfoDel>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("SYS_BILLNO_INFO_DEL");

                entity.Property(e => e.BillId)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("BillID");

                entity.Property(e => e.BillNo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("BillNO");

                entity.Property(e => e.Deldate)
                    .HasColumnType("datetime")
                    .HasColumnName("DELDate");

                entity.Property(e => e.Usr)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("USR");
            });

            modelBuilder.Entity<SysBillnoRule>(entity =>
            {
                entity.ToTable("SYS_BILLNO_RULE");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BillDesc).HasMaxLength(200);

                entity.Property(e => e.BillId)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("BillID");

                entity.Property(e => e.BillModifiable)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.DateFormat)
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.Db).HasColumnName("DB");

                entity.Property(e => e.GetDelBill)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.IsSelfIdCode)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.SelfIdCode)
                    .HasMaxLength(10)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<SysBillnoRuleSet>(entity =>
            {
                entity.ToTable("SYS_BILLNO_RULE_SET");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BitsSet)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.DataType)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.EncodeType).HasMaxLength(400);

                entity.Property(e => e.Encoded)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.MaxBits)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.MinBits)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<SysBillnoTemp>(entity =>
            {
                entity.HasKey(e => e.Entryid);

                entity.ToTable("SYS_BILLNO_TEMP");

                entity.HasIndex(e => e.Billid).HasName("IX_SYS_BILLNO_TEMP");

                entity.Property(e => e.Entryid)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ENTRYID");

                entity.Property(e => e.Billid)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("BILLID");

                entity.Property(e => e.Createdate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATEDATE");

                entity.Property(e => e.No)
                    .IsRequired()
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("NO");
            });

            modelBuilder.Entity<SysBillsource>(entity =>
            {
                entity.ToTable("SYS_BILLSOURCE");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.InputDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.MenuNo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.QueryNo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<SysBusino>(entity =>
            {
                entity.ToTable("SYS_BUSINO");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BusiKnd)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("BusiKND");

                entity.Property(e => e.BusiNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<SysCodenoRule>(entity =>
            {
                entity.ToTable("SYS_CODENO_RULE");

                entity.HasIndex(e => e.RuleId).HasName("u_ruleid")
                    .IsUnique();

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.LastUpdate).HasColumnType("datetime");

                entity.Property(e => e.RuleId)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("RuleID");
            });

            modelBuilder.Entity<SysCodenoRules>(entity =>
            {
                entity.ToTable("SYS_CODENO_RULES");

                entity.HasIndex(e => e.CombiId).HasName("CK_CombiID")
                    .IsUnique();

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Align)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CombiId)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("CombiID");

                entity.Property(e => e.CombiType)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CoverChar)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.FixChar)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Format)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ItemType)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Mid).HasColumnName("MID");

                entity.Property(e => e.UpdateTime)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.VarField)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.HasOne(d => d.MidNavigation)
                    .WithMany(p => p.SysCodenoRules)
                    .HasForeignKey(d => d.Mid)
                    .HasConstraintName("FK_SYS_CODENO_RULES_SYS_CODENO_RULE");
            });

            modelBuilder.Entity<SysDataRules>(entity =>
            {
                entity.ToTable("sys_Data_Rules");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BusiNo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.MenuNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Rules)
                    .HasMaxLength(8000)
                    .IsUnicode(false);

                entity.Property(e => e.SysDate).HasColumnType("datetime");

                entity.Property(e => e.TableName)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.Usr)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UsrName)
                    .IsRequired()
                    .HasMaxLength(30)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<SysFile>(entity =>
            {
                entity.ToTable("SYS_FILE");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.CreateTime).HasColumnType("datetime");

                entity.Property(e => e.FileBytes)
                    .IsRequired()
                    .HasColumnType("image");

                entity.Property(e => e.FileName)
                    .IsRequired()
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.FilePath)
                    .IsRequired()
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.FileSize)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.LastEditTime).HasColumnType("datetime");

                entity.Property(e => e.Remark)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.SrcBusiNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.UploadTime)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Userno)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("USERNO");
            });

            modelBuilder.Entity<SysFlow>(entity =>
            {
                entity.ToTable("SYS_FLOW");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.InputDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Memo)
                    .IsRequired()
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Name)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.No)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.UserId).HasColumnName("UserID");
            });

            modelBuilder.Entity<SysFlowchart>(entity =>
            {
                entity.ToTable("SYS_FLOWCHART");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BackImgLayOut)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.BomNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("BOM_NO");

                entity.Property(e => e.ChkDate).HasColumnType("datetime");

                entity.Property(e => e.ChkMan)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkManName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkMob)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.FlowType)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.MenuNo)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Name)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.No)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ShowTipType)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.SysDate).HasColumnType("datetime");

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Usr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<SysFlowchartauthset>(entity =>
            {
                entity.ToTable("SYS_FLOWCHARTAUTHSET");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Fcid).HasColumnName("FCID");

                entity.Property(e => e.Jid).HasColumnName("JID");
            });

            modelBuilder.Entity<SysFormnoInfo>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("SYS_FORMNO_INFO");

                entity.Property(e => e.DateValue).HasMaxLength(120);

                entity.Property(e => e.Dtformat)
                    .HasMaxLength(120)
                    .HasColumnName("DTFormat");

                entity.Property(e => e.FormNo)
                    .IsRequired()
                    .HasMaxLength(120)
                    .HasColumnName("FormNO");

                entity.Property(e => e.MaxFormNo)
                    .HasMaxLength(800)
                    .HasColumnName("MaxFormNO");

                entity.Property(e => e.MaxSn).HasColumnName("MaxSN");

                entity.Property(e => e.PostfixNo)
                    .HasMaxLength(120)
                    .HasColumnName("PostfixNO");

                entity.Property(e => e.PrefixNo)
                    .HasMaxLength(120)
                    .HasColumnName("PrefixNO");

                entity.Property(e => e.Remark).HasMaxLength(800);

                entity.Property(e => e.Snlength).HasColumnName("SNLength");
            });

            modelBuilder.Entity<SysInterfaceLog>(entity =>
            {
                entity.ToTable("SYS_InterfaceLog");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.CreateTime)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.FunctionName)
                    .HasMaxLength(80)
                    .IsUnicode(false);

                entity.Property(e => e.InterfaceCode)
                    .IsRequired()
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.InterfaceName).HasMaxLength(200);

                entity.Property(e => e.LogTime).HasColumnType("datetime");

                entity.Property(e => e.RequestBody).IsRequired();

                entity.Property(e => e.ResponseBody).IsRequired();

                entity.Property(e => e.ResponseCode)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ResponseMessage).IsRequired();

                entity.Property(e => e.SerialNo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Uc01).HasMaxLength(500);

                entity.Property(e => e.Uc02).HasMaxLength(500);

                entity.Property(e => e.Uc03).HasMaxLength(500);

                entity.Property(e => e.Uc04).HasMaxLength(500);

                entity.Property(e => e.Uc05).HasMaxLength(500);

                entity.Property(e => e.UpdateTime).HasColumnType("datetime");
            });

            modelBuilder.Entity<SysInterfaceQueue>(entity =>
            {
                entity.ToTable("SYS_InterfaceQueue");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.CreateTime).HasColumnType("datetime");

                entity.Property(e => e.CreateUserNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.FunctionName)
                    .HasMaxLength(80)
                    .IsUnicode(false);

                entity.Property(e => e.InterfaceCode)
                    .IsRequired()
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.ObjectId).HasColumnName("ObjectID");

                entity.Property(e => e.ResponseCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SerialNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.UpdateTime).HasColumnType("datetime");

                entity.Property(e => e.UpdateUserNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<SysInterfaceUrl>(entity =>
            {
                entity.ToTable("SYS_InterfaceURL");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Account)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CreateTime).HasColumnType("datetime");

                entity.Property(e => e.CreateUserNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("CreateUserNO");

                entity.Property(e => e.ErpFormTyoe)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ErpFormType)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InterfaceCode)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InterfaceName)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Password)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Uc01).HasMaxLength(1000);

                entity.Property(e => e.Uc02).HasMaxLength(1000);

                entity.Property(e => e.Uc03).HasMaxLength(1000);

                entity.Property(e => e.Uc04).HasMaxLength(1000);

                entity.Property(e => e.Uc05).HasMaxLength(1000);

                entity.Property(e => e.UpdateTime).HasColumnType("datetime");

                entity.Property(e => e.UpdateUserId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("UpdateUserID");

                entity.Property(e => e.Url)
                    .IsRequired()
                    .HasMaxLength(500)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<SysLangData>(entity =>
            {
                entity.ToTable("sys_Lang_Data");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.ItemName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.ItemNo)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Korean)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.L0)
                    .IsRequired()
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.L1)
                    .IsRequired()
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.L2)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.L3)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.TableName)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");
            });

            modelBuilder.Entity<SysMenuLocalSet>(entity =>
            {
                entity.ToTable("sys_Menu_LocalSet");

                entity.HasIndex(e => e.MenuNo).HasName("IX_sys_Menu_LocalSet")
                    .IsUnique();

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.MenuNo)
                    .IsRequired()
                    .HasMaxLength(60)
                    .IsUnicode(false);

                entity.Property(e => e.SysDate).HasColumnType("datetime");

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Usr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UsrName)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<SysMenuZc>(entity =>
            {
                entity.HasKey(e => new { e.MenuNo, e.ZcNo });

                entity.ToTable("sys_menu_zc");

                entity.Property(e => e.MenuNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ZcNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ZC_NO");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Sysdate)
                    .HasColumnType("datetime")
                    .HasColumnName("SYSDATE");

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Usr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UsrName)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<SysOuterDbConnString>(entity =>
            {
                entity.ToTable("sys_OuterDB_ConnString");

                entity.HasIndex(e => e.No).HasName("IX_sys_OuterDB_ConnString")
                    .IsUnique();

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.ConnString)
                    .IsRequired()
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.DataBaseType).HasColumnName("DataBase_Type");

                entity.Property(e => e.Name)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.No)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Remark)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.SysDate).HasColumnType("datetime");

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Usr)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UsrName)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<SysParamGroups>(entity =>
            {
                entity.ToTable("SYS_ParamGroups");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Isavailable).HasColumnName("ISAVAILABLE");

                entity.Property(e => e.Paramgroupcode)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("PARAMGROUPCODE");

                entity.Property(e => e.Paramgroupdesc)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("PARAMGROUPDESC");

                entity.Property(e => e.Sysdate)
                    .HasColumnType("datetime")
                    .HasColumnName("SYSDATE");

                entity.Property(e => e.Upddate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDDATE");

                entity.Property(e => e.Updusr)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("UPDUSR");

                entity.Property(e => e.Updusrname)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("UPDUSRNAME");

                entity.Property(e => e.Usr)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("USR");

                entity.Property(e => e.Usrname)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("USRNAME");
            });

            modelBuilder.Entity<SysParams>(entity =>
            {
                entity.ToTable("SYS_Params");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Isavailable).HasColumnName("ISAVAILABLE");

                entity.Property(e => e.Paramcode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("PARAMCODE");

                entity.Property(e => e.Paramdesc)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("PARAMDESC");

                entity.Property(e => e.Paramgroupcode)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("PARAMGROUPCODE");

                entity.Property(e => e.Paramgroupdesc)
                    .IsRequired()
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("PARAMGROUPDESC");

                entity.Property(e => e.Paramvalue)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("PARAMVALUE");

                entity.Property(e => e.Sysdate)
                    .HasColumnType("datetime")
                    .HasColumnName("SYSDATE");

                entity.Property(e => e.Upddate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDDATE");

                entity.Property(e => e.Updusr)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("UPDUSR");

                entity.Property(e => e.Updusrname)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("UPDUSRNAME");

                entity.Property(e => e.Usr)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("USR");

                entity.Property(e => e.Usrname)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("USRNAME");
            });

            modelBuilder.Entity<SysProperty>(entity =>
            {
                entity.ToTable("SYS_PROPERTY");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.EditField)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("edit_Field")
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.EditNo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("edit_No");

                entity.Property(e => e.EditType).HasColumnName("edit_Type");

                entity.Property(e => e.ItemName)
                    .IsRequired()
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.ItemNo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ItemSort).HasDefaultValueSql("((1))");

                entity.Property(e => e.ItemValue)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ItemValueType)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.MenuNo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Rem)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.SysDate).HasColumnType("datetime");

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(20)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<SysPropertySet>(entity =>
            {
                entity.ToTable("SYS_PROPERTY_SET");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.IUserId).HasColumnName("iUserID");

                entity.Property(e => e.PropertyId).HasColumnName("PropertyID");

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Usr)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("USR");

                entity.Property(e => e.Value)
                    .IsRequired()
                    .HasMaxLength(500)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<SysRole>(entity =>
            {
                entity.ToTable("SYS_ROLE");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.CusNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("CUS_NO");

                entity.Property(e => e.Name)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.No)
                    .IsRequired()
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.ParentId).HasColumnName("ParentID");

                entity.Property(e => e.Remark)
                    .HasMaxLength(200)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<SysRoleData>(entity =>
            {
                entity.ToTable("SYS_ROLE_DATA");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BusiNo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Mid).HasColumnName("MID");

                entity.Property(e => e.ObjectId).HasColumnName("ObjectID");

                entity.Property(e => e.ObjectName)
                    .IsRequired()
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.ObjectNo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.HasOne(d => d.MidNavigation)
                    .WithMany(p => p.SysRoleData)
                    .HasForeignKey(d => d.Mid)
                    .HasConstraintName("FK_SYS_ROLE_DATA_SYS_ROLE");
            });

            modelBuilder.Entity<SysRoleDataBusi>(entity =>
            {
                entity.ToTable("SYS_ROLE_DATA_BUSI");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BusiNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.FieldName)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.FieldNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<SysRoleField>(entity =>
            {
                entity.ToTable("SYS_ROLE_FIELD");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BusiNo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.FieldName)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Mid).HasColumnName("MID");

                entity.HasOne(d => d.MidNavigation)
                    .WithMany(p => p.SysRoleField)
                    .HasForeignKey(d => d.Mid)
                    .HasConstraintName("FK_SYS_ROLE_FIELD_SYS_ROLE");
            });

            modelBuilder.Entity<SysRoleMenu>(entity =>
            {
                entity.ToTable("SYS_ROLE_MENU");

                entity.HasIndex(e => new { e.Mid, e.MenuNo }).HasName("IX_SYS_ROLE_MENU")
                    .IsUnique();

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.IAdd).HasColumnName("iAdd");

                entity.Property(e => e.IAudit).HasColumnName("iAudit");

                entity.Property(e => e.IClose).HasColumnName("iClose");

                entity.Property(e => e.IDelete).HasColumnName("iDelete");

                entity.Property(e => e.IEdit).HasColumnName("iEdit");

                entity.Property(e => e.IExport).HasColumnName("iExport");

                entity.Property(e => e.IPrint).HasColumnName("iPrint");

                entity.Property(e => e.IProperty).HasColumnName("iProperty");

                entity.Property(e => e.ISubmit).HasColumnName("iSubmit");

                entity.Property(e => e.IView).HasColumnName("iView");

                entity.Property(e => e.IViewAudit).HasColumnName("iViewAudit");

                entity.Property(e => e.IunAudit).HasColumnName("iunAudit");

                entity.Property(e => e.IunClose).HasColumnName("iunClose");

                entity.Property(e => e.IunSubmit).HasColumnName("iunSubmit");

                entity.Property(e => e.MenuNo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Mid).HasColumnName("MID");

                entity.HasOne(d => d.MidNavigation)
                    .WithMany(p => p.SysRoleMenu)
                    .HasForeignKey(d => d.Mid)
                    .HasConstraintName("FK_SYS_ROLE_MENU_SYS_ROLE");
            });

            modelBuilder.Entity<SysRoleMenuActions>(entity =>
            {
                entity.ToTable("SYS_ROLE_MENU_ACTIONS");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Actionname)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ACTIONNAME");

                entity.Property(e => e.Actionvalue).HasColumnName("ACTIONVALUE");

                entity.Property(e => e.Mid).HasColumnName("MID");

                entity.HasOne(d => d.MidNavigation)
                    .WithMany(p => p.SysRoleMenuActions)
                    .HasForeignKey(d => d.Mid)
                    .HasConstraintName("FK_SYS_ROLE_MENU_ACTIONS_SYS_ROLE_MENU");
            });

            modelBuilder.Entity<SysRoleUser>(entity =>
            {
                entity.ToTable("SYS_ROLE_USER");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Mid).HasColumnName("MID");

                entity.Property(e => e.UserId).HasColumnName("UserID");

                entity.HasOne(d => d.MidNavigation)
                    .WithMany(p => p.SysRoleUser)
                    .HasForeignKey(d => d.Mid)
                    .HasConstraintName("FK_SYS_ROLE_USER_SYS_ROLE");

                entity.HasOne(d => d.User)
                    .WithMany(p => p.SysRoleUser)
                    .HasForeignKey(d => d.UserId)
                    .HasConstraintName("FK_SYS_ROLE_USER_SYS_USER");
            });

            modelBuilder.Entity<SysSummary>(entity =>
            {
                entity.ToTable("SYS_SUMMARY");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BusiNo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.InputDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.MenuNo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");
            });

            modelBuilder.Entity<SysSummaryReporttemplate>(entity =>
            {
                entity.ToTable("SYS_SUMMARY_REPORTTEMPLATE");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BusiNo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Category)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Remark)
                    .IsRequired()
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.UserId).HasColumnName("UserID");
            });

            modelBuilder.Entity<SysSummarySet>(entity =>
            {
                entity.ToTable("SYS_SUMMARY_SET");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BusiNo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.InputDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.SummaryObject).HasColumnType("image");

                entity.Property(e => e.UserId)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("UserID")
                    .HasDefaultValueSql("('')");
            });

            modelBuilder.Entity<SysTerminal>(entity =>
            {
                entity.ToTable("SYS_Terminal");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Ipadd)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IPAdd");

                entity.Property(e => e.Local)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("LOCAL");

                entity.Property(e => e.Name)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("NAME");

                entity.Property(e => e.No)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NO");

                entity.Property(e => e.Password)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Rem)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.SysDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Tmtype)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TMType");

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Usr)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.UsrName)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");
            });

            modelBuilder.Entity<SysTerminalItems>(entity =>
            {
                entity.ToTable("SYS_Terminal_Items");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Mid).HasColumnName("MID");

                entity.Property(e => e.Rem)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.StationName)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Station_Name");

                entity.Property(e => e.StationNo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("Station_NO");

                entity.Property(e => e.TmName)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("TM_NAME");

                entity.Property(e => e.TmNo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("TM_NO");

                entity.HasOne(d => d.MidNavigation)
                    .WithMany(p => p.SysTerminalItems)
                    .HasForeignKey(d => d.Mid)
                    .HasConstraintName("FK_SYS_Terminal_Items_SYS_Terminal");
            });

            modelBuilder.Entity<SysUniqueset>(entity =>
            {
                entity.ToTable("SYS_UNIQUESET");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BusiNo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.FieldName)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.GroupNo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Memo)
                    .HasMaxLength(4000)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");
            });

            modelBuilder.Entity<SysUpdateLog>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("SYS_UPDATE_LOG");

                entity.Property(e => e.Busino)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("BUSINO");

                entity.Property(e => e.Delid).HasColumnName("DELID");

                entity.Property(e => e.Id)
                    .IsRequired()
                    .HasMaxLength(36)
                    .IsUnicode(false)
                    .HasColumnName("ID")
                    .IsFixedLength(true);

                entity.Property(e => e.Insid).HasColumnName("INSID");

                entity.Property(e => e.Tablename)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TABLENAME");

                entity.Property(e => e.Time)
                    .HasColumnType("datetime")
                    .HasColumnName("TIME");

                entity.Property(e => e.Updid).HasColumnName("UPDID");
            });

            modelBuilder.Entity<SysUser>(entity =>
            {
                entity.ToTable("SYS_USER");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.CardNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("CARD_NO");

                entity.Property(e => e.DInputDate)
                    .HasColumnType("datetime")
                    .HasColumnName("dInputDate")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Dep)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("DEP");

                entity.Property(e => e.DeptId)
                    .HasColumnName("DeptID")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.EMail)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("E_MAIL");

                entity.Property(e => e.EmpId)
                    .HasColumnName("EmpID")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.EngName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ENG_NAME");

                entity.Property(e => e.Logon).HasColumnName("LOGON");

                entity.Property(e => e.Name)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.No)
                    .IsRequired()
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.ParentId).HasColumnName("ParentID");

                entity.Property(e => e.PhoneNumber)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("Phone_Number");

                entity.Property(e => e.Pwd)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Remark)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Sex)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SEX");

                entity.Property(e => e.Superior)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Wechat)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("WECHAT");

                entity.Property(e => e.WorkGroup)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<SysWarning>(entity =>
            {
                entity.ToTable("SYS_WARNING");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.InputDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Knd).HasColumnName("KND");

                entity.Property(e => e.Memo)
                    .IsRequired()
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Name)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.No)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.UserId).HasColumnName("UserID");

                entity.Property(e => e.WarningSql)
                    .IsRequired()
                    .HasMaxLength(4000)
                    .IsUnicode(false)
                    .HasColumnName("WarningSQL")
                    .HasDefaultValueSql("('')");
            });

            modelBuilder.Entity<SysauditField>(entity =>
            {
                entity.ToTable("SYSAUDIT_FIELD");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Amtn)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("AMTN")
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Amtntax)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("AMTNtax")
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.BilinputDate)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("BILInputDate")
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.BillDate)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.BillDid)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("BillDID")
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.BillId)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("BillID")
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.BillNo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.BusiNo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.CusId)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("CusID")
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Did)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("DID")
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.EmpId)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("EmpID")
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.SubmitDate)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.UserId)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("userID")
                    .HasDefaultValueSql("('')");
            });

            modelBuilder.Entity<Sysbillnoset>(entity =>
            {
                entity.ToTable("SYSBILLNOSET");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BusiNo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.DateFormat)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.InputDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Memo)
                    .IsRequired()
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Pattern)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.PreFix)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");
            });

            modelBuilder.Entity<Sysmsg>(entity =>
            {
                entity.ToTable("SYSMSG");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BillNo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Bill_No");

                entity.Property(e => e.Caption)
                    .IsRequired()
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Content)
                    .HasMaxLength(3500)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.DelFlag).HasDefaultValueSql("((0))");

                entity.Property(e => e.FromUsr)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.MsgBillType)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.MsgBusiNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Rem)
                    .HasMaxLength(4000)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Respond)
                    .HasMaxLength(4000)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.RespondDate).HasColumnType("datetime");

                entity.Property(e => e.SendDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.ToUsr)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasDefaultValueSql("((0))");
            });

            modelBuilder.Entity<Sysmsgconfig>(entity =>
            {
                entity.ToTable("SYSMSGCONFIG");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BillType)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.BillTypeName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.BusiNo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.CaptionFormat)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.ContentFormat)
                    .HasMaxLength(3500)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.DInputDate)
                    .HasColumnType("datetime")
                    .HasColumnName("dInputDate")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.FromUsr)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Rem)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.ToMails)
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.ToUsrs)
                    .HasMaxLength(2000)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Usr)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");
            });

            modelBuilder.Entity<Sysmsgsetup>(entity =>
            {
                entity.ToTable("SYSMSGSETUP");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BillTypeName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CaptionFormat)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.ContentFormat)
                    .HasMaxLength(3500)
                    .IsUnicode(false);

                entity.Property(e => e.MsgBillType)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.MsgBusiNo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Rem)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.SysDate).HasColumnType("datetime");

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Usr)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UsrName)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Sysmsgsetupinfo>(entity =>
            {
                entity.ToTable("SYSMSGSETUPINFO");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.DelayTime).HasColumnName("DELAY_TIME");

                entity.Property(e => e.Mid).HasColumnName("MID");

                entity.Property(e => e.ToMails)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.ToUsrs)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.Tonext)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("TONEXT");

                entity.Property(e => e.ValidTime).HasColumnName("VALID_TIME");
            });

            modelBuilder.Entity<SzbDeleteBak20181019>(entity =>
            {
                entity.ToTable("SZB_DELETE_BAK_20181019");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BanNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("BAN_NO");

                entity.Property(e => e.Beyondcount).HasColumnName("BEYONDCOUNT");

                entity.Property(e => e.Createtime)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATETIME");

                entity.Property(e => e.Csbh)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("CSBH");

                entity.Property(e => e.EndTime)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("END_TIME");

                entity.Property(e => e.Endvalue).HasColumnName("ENDVALUE");

                entity.Property(e => e.Handletype).HasColumnName("HANDLETYPE");

                entity.Property(e => e.PrdNo)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("PRD_NO");

                entity.Property(e => e.PrdTime).HasColumnName("PRD_TIME");

                entity.Property(e => e.SebNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SEB_NO");

                entity.Property(e => e.StaTime)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("STA_TIME");

                entity.Property(e => e.Startvalue).HasColumnName("STARTVALUE");

                entity.Property(e => e.StatDate)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("STAT_DATE");

                entity.Property(e => e.Value).HasColumnName("VALUE");
            });

            modelBuilder.Entity<T1>(entity =>
            {
                entity.HasNoKey();

                entity.Property(e => e.Csbh)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("CSBH")
                    .IsFixedLength(true);

                entity.Property(e => e.Cssz)
                    .HasMaxLength(127)
                    .IsUnicode(false)
                    .HasColumnName("CSSZ")
                    .IsFixedLength(true);

                entity.Property(e => e.Cszt).HasColumnName("CSZT");

                entity.Property(e => e.Sbbh)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SBBH")
                    .IsFixedLength(true);

                entity.Property(e => e.Sj)
                    .HasMaxLength(19)
                    .IsUnicode(false)
                    .HasColumnName("SJ")
                    .IsFixedLength(true);
            });

            modelBuilder.Entity<TBaseuserDevice>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("T_BASEUSER_DEVICE");

                entity.Property(e => e.CreateTime)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.DeviceId).HasColumnName("DeviceID");

                entity.Property(e => e.DeviceType)
                    .IsRequired()
                    .HasMaxLength(200)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.ModifyTime)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.RegistrationId)
                    .IsRequired()
                    .HasMaxLength(200);

                entity.Property(e => e.UserNo)
                    .IsRequired()
                    .HasMaxLength(200);
            });

            modelBuilder.Entity<TDevicebindlog>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("T_DEVICEBINDLOG");

                entity.Property(e => e.CreateTime)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.DeviceType)
                    .IsRequired()
                    .HasMaxLength(200)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.LogId).HasColumnName("LogID");

                entity.Property(e => e.ModifyTime)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.RegistrationId)
                    .IsRequired()
                    .HasMaxLength(200);

                entity.Property(e => e.UserNo)
                    .IsRequired()
                    .HasMaxLength(200);
            });

            modelBuilder.Entity<TTest>(entity =>
            {
                entity.ToTable("T_TEST");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.OrderNo)
                    .HasMaxLength(200)
                    .HasColumnName("Order_No");
            });

            modelBuilder.Entity<TUser>(entity =>
            {
                entity.ToTable("T_USER");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Isdisable).HasColumnName("ISDISABLE");

                entity.Property(e => e.Loginpassword)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("LOGINPASSWORD");

                entity.Property(e => e.Userid)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("USERID");
            });

            modelBuilder.Entity<Table1>(entity =>
            {
                entity.ToTable("Table_1");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.InspectCode)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.LowerLimit)
                    .HasMaxLength(10)
                    .IsFixedLength(true);

                entity.Property(e => e.Mid).HasColumnName("MID");

                entity.Property(e => e.Name)
                    .HasMaxLength(10)
                    .IsFixedLength(true);

                entity.Property(e => e.StandardValue)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Unit)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UpperLimit)
                    .HasMaxLength(20)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Tasks>(entity =>
            {
                entity.ToTable("TASK");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.AmtnActYr)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("AMTN_ACT_YR");

                entity.Property(e => e.BizRtoYr)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("BIZ_RTO_YR");

                entity.Property(e => e.CasNo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CAS_NO");

                entity.Property(e => e.ChkFl)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CHK_FL");

                entity.Property(e => e.ChkMan)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("CHK_MAN");

                entity.Property(e => e.ClsDate)
                    .HasColumnType("datetime")
                    .HasColumnName("CLS_DATE");

                entity.Property(e => e.ClsId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CLS_ID");

                entity.Property(e => e.ClsMan)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("CLS_MAN");

                entity.Property(e => e.CusNo)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("CUS_NO");

                entity.Property(e => e.DelegateId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("DELEGATE_ID");

                entity.Property(e => e.DenyId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("DENY_ID")
                    .HasDefaultValueSql("('F')");

                entity.Property(e => e.Dep)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("DEP");

                entity.Property(e => e.DoneDd)
                    .HasColumnType("datetime")
                    .HasColumnName("DONE_DD");

                entity.Property(e => e.DurInput)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("DUR_INPUT");

                entity.Property(e => e.DurKey)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("DUR_KEY");

                entity.Property(e => e.Duration)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("DURATION");

                entity.Property(e => e.EndDd)
                    .HasColumnType("datetime")
                    .HasColumnName("END_DD");

                entity.Property(e => e.EpNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("EP_NO");

                entity.Property(e => e.GanttId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("GANTT_ID")
                    .HasDefaultValueSql("('T')");

                entity.Property(e => e.IdxNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDX_NO");

                entity.Property(e => e.LayerNum).HasColumnName("LAYER_NUM");

                entity.Property(e => e.LockDate)
                    .HasColumnType("datetime")
                    .HasColumnName("LOCK_DATE");

                entity.Property(e => e.LockMan)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("LOCK_MAN");

                entity.Property(e => e.MileId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("MILE_ID")
                    .HasDefaultValueSql("('F')");

                entity.Property(e => e.MobId)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("MOB_ID");

                entity.Property(e => e.Name)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("NAME");

                entity.Property(e => e.OsName)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("OS_NAME");

                entity.Property(e => e.PayRtoYr)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("PAY_RTO_YR");

                entity.Property(e => e.PeriodId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("PERIOD_ID")
                    .HasDefaultValueSql("('F')");

                entity.Property(e => e.Pgm)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("PGM");

                entity.Property(e => e.PmtIdYr)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("PMT_ID_YR");

                entity.Property(e => e.PrStatus)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("PR_STATUS");

                entity.Property(e => e.PrdNo)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("PRD_NO");

                entity.Property(e => e.Priority)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("PRIORITY");

                entity.Property(e => e.PrtSw)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("PRT_SW");

                entity.Property(e => e.QcUsr)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("QC_USR");

                entity.Property(e => e.Rem)
                    .HasColumnType("text")
                    .HasColumnName("REM");

                entity.Property(e => e.RestrictDd)
                    .HasColumnType("datetime")
                    .HasColumnName("RESTRICT_DD");

                entity.Property(e => e.RtnRtoYr)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("RTN_RTO_YR");

                entity.Property(e => e.RunUsr)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("RUN_USR");

                entity.Property(e => e.SalNo)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("SAL_NO");

                entity.Property(e => e.SqItm).HasColumnName("SQ_ITM");

                entity.Property(e => e.StartDd)
                    .HasColumnType("datetime")
                    .HasColumnName("START_DD");

                entity.Property(e => e.Status)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("STATUS");

                entity.Property(e => e.SumId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SUM_ID");

                entity.Property(e => e.SysDate)
                    .HasColumnType("datetime")
                    .HasColumnName("SYS_DATE");

                entity.Property(e => e.TaskDd)
                    .HasColumnType("datetime")
                    .HasColumnName("TASK_DD");

                entity.Property(e => e.TaskId).HasColumnName("TASK_ID");

                entity.Property(e => e.TaskNo)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("TASK_NO");

                entity.Property(e => e.TaskNoCopy)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("TASK_NO_COPY");

                entity.Property(e => e.Type)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TYPE")
                    .HasDefaultValueSql("('0')");

                entity.Property(e => e.Up).HasColumnName("UP");

                entity.Property(e => e.UpDefChk)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("UP_DEF_CHK");

                entity.Property(e => e.UpPeriod).HasColumnName("UP_PERIOD");

                entity.Property(e => e.UpdatingId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("UPDATING_ID");

                entity.Property(e => e.Usr)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("USR");

                entity.Property(e => e.Wbs)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("WBS");

                entity.Property(e => e.WorkCnt).HasColumnName("WORK_CNT");
            });

            modelBuilder.Entity<TbBl>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("TB_BL");

                entity.Property(e => e.Rn).HasColumnName("RN");

                entity.Property(e => e.Rq)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("RQ");
            });

            modelBuilder.Entity<TbCpmxrb>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("TB_CPMXRB");

                entity.Property(e => e.BType).HasColumnName("B_TYPE");

                entity.Property(e => e.Cj)
                    .HasMaxLength(200)
                    .HasColumnName("CJ");

                entity.Property(e => e.CurWaste).HasColumnName("CUR_WASTE");

                entity.Property(e => e.Headinnum).HasColumnName("HEADINNUM");

                entity.Property(e => e.Initnum).HasColumnName("INITNUM");

                entity.Property(e => e.Innum).HasColumnName("INNUM");

                entity.Property(e => e.Inputdate)
                    .HasColumnType("datetime")
                    .HasColumnName("INPUTDATE");

                entity.Property(e => e.JjgSuminitnum).HasColumnName("JJG_SUMINITNUM");

                entity.Property(e => e.Otherwaste).HasColumnName("OTHERWASTE");

                entity.Property(e => e.Outnum).HasColumnName("OUTNUM");

                entity.Property(e => e.PostWaste).HasColumnName("POST_WASTE");

                entity.Property(e => e.PrdName)
                    .HasMaxLength(200)
                    .HasColumnName("PRD_NAME");

                entity.Property(e => e.PrdNo)
                    .HasMaxLength(200)
                    .HasColumnName("PRD_NO");

                entity.Property(e => e.PrdSnm)
                    .HasMaxLength(200)
                    .HasColumnName("PRD_SNM");

                entity.Property(e => e.PrdSpc)
                    .HasMaxLength(200)
                    .HasColumnName("PRD_SPC");

                entity.Property(e => e.PreWaste).HasColumnName("PRE_WASTE");

                entity.Property(e => e.RjgSuminitnum).HasColumnName("RJG_SUMINITNUM");

                entity.Property(e => e.Rn).HasColumnName("RN");

                entity.Property(e => e.RzhtWaste).HasColumnName("RZHT_WASTE");

                entity.Property(e => e.Trailwaste).HasColumnName("TRAILWASTE");

                entity.Property(e => e.TzSuminitnum).HasColumnName("TZ_SUMINITNUM");
            });

            modelBuilder.Entity<TbInitwip>(entity =>
            {
                entity.ToTable("TB_INITWIP");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.DepName)
                    .HasMaxLength(200)
                    .HasColumnName("DEP_NAME");

                entity.Property(e => e.DepNo)
                    .HasMaxLength(200)
                    .HasColumnName("DEP_NO");

                entity.Property(e => e.Initnum).HasColumnName("INITNUM");

                entity.Property(e => e.Inputdate)
                    .HasColumnType("datetime")
                    .HasColumnName("INPUTDATE");

                entity.Property(e => e.PrdName)
                    .HasMaxLength(200)
                    .HasColumnName("PRD_NAME");

                entity.Property(e => e.PrdNo)
                    .HasMaxLength(200)
                    .HasColumnName("PRD_NO");

                entity.Property(e => e.PrdSnm)
                    .HasMaxLength(200)
                    .HasColumnName("PRD_SNM");

                entity.Property(e => e.PrdSpc)
                    .HasMaxLength(200)
                    .HasColumnName("PRD_SPC");

                entity.Property(e => e.Producestatus)
                    .HasMaxLength(200)
                    .HasColumnName("PRODUCESTATUS");
            });

            modelBuilder.Entity<TbJobbooking>(entity =>
            {
                entity.ToTable("TB_JOBBOOKING");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Ban)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("BAN")
                    .IsFixedLength(true);

                entity.Property(e => e.BanNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("BAN_NO")
                    .IsFixedLength(true);

                entity.Property(e => e.Bangroup)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("BANGROUP")
                    .IsFixedLength(true);

                entity.Property(e => e.Createdate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATEDATE");

                entity.Property(e => e.Creator)
                    .HasMaxLength(200)
                    .HasColumnName("CREATOR");

                entity.Property(e => e.Datasource).HasColumnName("DATASOURCE");

                entity.Property(e => e.Diecastnumber).HasColumnName("DIECASTNUMBER");

                entity.Property(e => e.Downnumber).HasColumnName("DOWNNUMBER");

                entity.Property(e => e.Equipmentcode)
                    .HasMaxLength(200)
                    .HasColumnName("EQUIPMENTCODE");

                entity.Property(e => e.Equipmentname)
                    .HasMaxLength(200)
                    .HasColumnName("EQUIPMENTNAME");

                entity.Property(e => e.Inputdate)
                    .HasColumnType("datetime")
                    .HasColumnName("INPUTDATE");

                entity.Property(e => e.Modifydate)
                    .HasColumnType("datetime")
                    .HasColumnName("MODIFYDATE");

                entity.Property(e => e.Modifyuser)
                    .HasMaxLength(200)
                    .HasColumnName("MODIFYUSER");

                entity.Property(e => e.Mould)
                    .HasMaxLength(200)
                    .HasColumnName("MOULD");

                entity.Property(e => e.Noqualifiednumber).HasColumnName("NOQUALIFIEDNUMBER");

                entity.Property(e => e.Producestatus)
                    .HasMaxLength(200)
                    .HasColumnName("PRODUCESTATUS");

                entity.Property(e => e.Productcode)
                    .HasMaxLength(200)
                    .HasColumnName("PRODUCTCODE");

                entity.Property(e => e.Productname)
                    .HasMaxLength(200)
                    .HasColumnName("PRODUCTNAME");

                entity.Property(e => e.Qualifiednumber).HasColumnName("QUALIFIEDNUMBER");

                entity.Property(e => e.Spec)
                    .HasMaxLength(200)
                    .HasColumnName("SPEC");

                entity.Property(e => e.Totalnumber).HasColumnName("TOTALNUMBER");

                entity.Property(e => e.Upnumber).HasColumnName("UPNUMBER");

                entity.Property(e => e.Wastenumber).HasColumnName("WASTENUMBER");

                entity.Property(e => e.Workshop)
                    .HasMaxLength(200)
                    .HasColumnName("WORKSHOP");

                entity.Property(e => e.Workshopno)
                    .HasMaxLength(200)
                    .HasColumnName("WORKSHOPNO");

                entity.Property(e => e.Zcname)
                    .HasMaxLength(200)
                    .HasColumnName("ZCNAME");

                entity.Property(e => e.Zcno)
                    .HasMaxLength(200)
                    .HasColumnName("ZCNO");
            });

            modelBuilder.Entity<TbOeeCq>(entity =>
            {
                entity.ToTable("TB_OEE_CQ");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BanNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("BAN_NO");

                entity.Property(e => e.Createtime)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATETIME");

                entity.Property(e => e.Handletype).HasColumnName("HANDLETYPE");

                entity.Property(e => e.Item1)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("ITEM_1");

                entity.Property(e => e.Item2)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("ITEM_2");

                entity.Property(e => e.Item3)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("ITEM_3");

                entity.Property(e => e.Item4)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("ITEM_4");

                entity.Property(e => e.Item5)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("ITEM_5");

                entity.Property(e => e.Item6)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("ITEM_6");

                entity.Property(e => e.Item7)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("ITEM_7");

                entity.Property(e => e.Item8)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("ITEM_8");

                entity.Property(e => e.Jxname)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("JXNAME");

                entity.Property(e => e.Losstime).HasColumnName("LOSSTIME");

                entity.Property(e => e.Oee)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("OEE");

                entity.Property(e => e.SebNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("SEB_NO");

                entity.Property(e => e.StatDate)
                    .HasColumnType("datetime")
                    .HasColumnName("STAT_DATE");

                entity.Property(e => e.Totaltime).HasColumnName("TOTALTIME");

                entity.Property(e => e.Value)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("VALUE");
            });

            modelBuilder.Entity<TbPaintentry>(entity =>
            {
                entity.ToTable("TB_PAINTENTRY");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Ban)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("BAN")
                    .IsFixedLength(true);

                entity.Property(e => e.BanNo)
                    .HasMaxLength(200)
                    .HasColumnName("BAN_NO");

                entity.Property(e => e.Bangroup)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("BANGROUP")
                    .IsFixedLength(true);

                entity.Property(e => e.Entrynumber).HasColumnName("ENTRYNUMBER");

                entity.Property(e => e.Inputdate)
                    .HasColumnType("datetime")
                    .HasColumnName("INPUTDATE");

                entity.Property(e => e.Productcode)
                    .HasMaxLength(200)
                    .HasColumnName("PRODUCTCODE");

                entity.Property(e => e.Productname)
                    .HasMaxLength(200)
                    .HasColumnName("PRODUCTNAME");

                entity.Property(e => e.Productspec)
                    .HasMaxLength(200)
                    .HasColumnName("PRODUCTSPEC");

                entity.Property(e => e.Productstatus)
                    .HasMaxLength(200)
                    .HasColumnName("PRODUCTSTATUS");

                entity.Property(e => e.Workshop)
                    .HasMaxLength(200)
                    .HasColumnName("WORKSHOP");

                entity.Property(e => e.Workshopno)
                    .HasMaxLength(200)
                    .HasColumnName("WORKSHOPNO");
            });

            modelBuilder.Entity<TbPerfTimeservicelog>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("TB_PERF_TIMESERVICELOG");

                entity.Property(e => e.BanNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("BAN_NO");

                entity.Property(e => e.Createtime)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATETIME");

                entity.Property(e => e.Enddate)
                    .HasColumnType("datetime")
                    .HasColumnName("ENDDATE");

                entity.Property(e => e.Startdate)
                    .HasColumnType("datetime")
                    .HasColumnName("STARTDATE");
            });

            modelBuilder.Entity<TbQuota>(entity =>
            {
                entity.ToTable("TB_QUOTA");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BanNo)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("BAN_NO");

                entity.Property(e => e.BilDd)
                    .HasColumnType("datetime")
                    .HasColumnName("BIL_DD");

                entity.Property(e => e.Denominator)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("DENOMINATOR");

                entity.Property(e => e.Mid).HasColumnName("MID");

                entity.Property(e => e.Numerator)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("NUMERATOR");

                entity.Property(e => e.QuotaName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("QUOTA_NAME");

                entity.Property(e => e.Rate)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("RATE");

                entity.Property(e => e.SebNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("SEB_NO");

                entity.Property(e => e.SebType)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("SEB_TYPE");

                entity.Property(e => e.SysDate)
                    .HasColumnType("datetime")
                    .HasColumnName("SYS_DATE");

                entity.Property(e => e.Theorycount)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("THEORYCOUNT");
            });

            modelBuilder.Entity<TbRate>(entity =>
            {
                entity.ToTable("TB_RATE");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BanNo)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("BAN_NO");

                entity.Property(e => e.Rate)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("RATE");

                entity.Property(e => e.SebNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("SEB_NO");

                entity.Property(e => e.SysDate)
                    .HasColumnType("datetime")
                    .HasColumnName("SYS_DATE");

                entity.Property(e => e.Type)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("TYPE");
            });

            modelBuilder.Entity<TbRbHz>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("TB_RB_HZ");

                entity.Property(e => e.CurWaste).HasColumnName("CUR_WASTE");

                entity.Property(e => e.Headinnum).HasColumnName("HEADINNUM");

                entity.Property(e => e.Initnum).HasColumnName("INITNUM");

                entity.Property(e => e.Innum).HasColumnName("INNUM");

                entity.Property(e => e.Inputdate)
                    .HasColumnType("datetime")
                    .HasColumnName("INPUTDATE");

                entity.Property(e => e.Otherwaste).HasColumnName("OTHERWASTE");

                entity.Property(e => e.Outnum).HasColumnName("OUTNUM");

                entity.Property(e => e.PostWaste).HasColumnName("POST_WASTE");

                entity.Property(e => e.PrdName)
                    .HasMaxLength(200)
                    .HasColumnName("PRD_NAME");

                entity.Property(e => e.PrdNo)
                    .HasMaxLength(200)
                    .HasColumnName("PRD_NO");

                entity.Property(e => e.PrdSnm)
                    .HasMaxLength(200)
                    .HasColumnName("PRD_SNM");

                entity.Property(e => e.PrdSpc)
                    .HasMaxLength(200)
                    .HasColumnName("PRD_SPC");

                entity.Property(e => e.PreWaste).HasColumnName("PRE_WASTE");

                entity.Property(e => e.Rn).HasColumnName("RN");

                entity.Property(e => e.RzhtWaste).HasColumnName("RZHT_WASTE");

                entity.Property(e => e.Trailwaste).HasColumnName("TRAILWASTE");
            });

            modelBuilder.Entity<TbRbMx>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("TB_RB_MX");

                entity.Property(e => e.CurWaste).HasColumnName("CUR_WASTE");

                entity.Property(e => e.Headinnum).HasColumnName("HEADINNUM");

                entity.Property(e => e.Initnum).HasColumnName("INITNUM");

                entity.Property(e => e.Innum).HasColumnName("INNUM");

                entity.Property(e => e.Inputdate)
                    .HasColumnType("datetime")
                    .HasColumnName("INPUTDATE");

                entity.Property(e => e.Otherwaste).HasColumnName("OTHERWASTE");

                entity.Property(e => e.Outnum).HasColumnName("OUTNUM");

                entity.Property(e => e.PostWaste).HasColumnName("POST_WASTE");

                entity.Property(e => e.PrdName)
                    .HasMaxLength(200)
                    .HasColumnName("PRD_NAME");

                entity.Property(e => e.PrdNo)
                    .HasMaxLength(200)
                    .HasColumnName("PRD_NO");

                entity.Property(e => e.PrdSnm)
                    .HasMaxLength(200)
                    .HasColumnName("PRD_SNM");

                entity.Property(e => e.PrdSpc)
                    .HasMaxLength(200)
                    .HasColumnName("PRD_SPC");

                entity.Property(e => e.PreWaste).HasColumnName("PRE_WASTE");

                entity.Property(e => e.RzhtWaste).HasColumnName("RZHT_WASTE");

                entity.Property(e => e.Trailwaste).HasColumnName("TRAILWASTE");
            });

            modelBuilder.Entity<TbRbMxMonth>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("TB_RB_MX_MONTH");

                entity.Property(e => e.CurWaste).HasColumnName("CUR_WASTE");

                entity.Property(e => e.Headinnum).HasColumnName("HEADINNUM");

                entity.Property(e => e.Initnum).HasColumnName("INITNUM");

                entity.Property(e => e.Innum).HasColumnName("INNUM");

                entity.Property(e => e.Inputdate)
                    .HasColumnType("datetime")
                    .HasColumnName("INPUTDATE");

                entity.Property(e => e.Otherwaste).HasColumnName("OTHERWASTE");

                entity.Property(e => e.Outnum).HasColumnName("OUTNUM");

                entity.Property(e => e.PostWaste).HasColumnName("POST_WASTE");

                entity.Property(e => e.PrdName)
                    .HasMaxLength(200)
                    .HasColumnName("PRD_NAME");

                entity.Property(e => e.PrdNo)
                    .HasMaxLength(200)
                    .HasColumnName("PRD_NO");

                entity.Property(e => e.PrdSnm)
                    .HasMaxLength(200)
                    .HasColumnName("PRD_SNM");

                entity.Property(e => e.PrdSpc)
                    .HasMaxLength(200)
                    .HasColumnName("PRD_SPC");

                entity.Property(e => e.PreWaste).HasColumnName("PRE_WASTE");

                entity.Property(e => e.Rn).HasColumnName("RN");

                entity.Property(e => e.RzhtWaste).HasColumnName("RZHT_WASTE");

                entity.Property(e => e.Trailwaste).HasColumnName("TRAILWASTE");
            });

            modelBuilder.Entity<TbReworkdayhz>(entity =>
            {
                entity.ToTable("TB_REWORKDAYHZ");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Defecttype)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("DEFECTTYPE");

                entity.Property(e => e.Inputdate)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("INPUTDATE");

                entity.Property(e => e.Ljreworknumber).HasColumnName("LJREWORKNUMBER");

                entity.Property(e => e.PrdName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("PRD_NAME");

                entity.Property(e => e.PrdNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("PRD_NO");

                entity.Property(e => e.PrdSpc)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("PRD_SPC");

                entity.Property(e => e.Responshop)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("RESPONSHOP");
            });

            modelBuilder.Entity<TbSbrecordCameraMap>(entity =>
            {
                entity.ToTable("TB_SBRECORD_CAMERA_MAP");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.CameraQrcode).HasColumnName("CAMERA_QRCODE");

                entity.Property(e => e.CameraSbbh)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("CAMERA_SBBH");

                entity.Property(e => e.CameraSj)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CAMERA_SJ");

                entity.Property(e => e.SbrecordId).HasColumnName("SBRECORD_ID");
            });

            modelBuilder.Entity<TbSzbDaystatisticlog>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("TB_SZB_DAYSTATISTICLOG");

                entity.Property(e => e.Executebegin)
                    .HasColumnType("datetime")
                    .HasColumnName("EXECUTEBEGIN");

                entity.Property(e => e.Executeend)
                    .HasColumnType("datetime")
                    .HasColumnName("EXECUTEEND");

                entity.Property(e => e.Logid)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("LOGID");

                entity.Property(e => e.Phase)
                    .HasMaxLength(200)
                    .HasColumnName("PHASE");
            });

            modelBuilder.Entity<TbSzbhzCq>(entity =>
            {
                entity.ToTable("TB_SZBHZ_CQ");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BanNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("BAN_NO");

                entity.Property(e => e.Beyondcount).HasColumnName("BEYONDCOUNT");

                entity.Property(e => e.Createtime)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATETIME");

                entity.Property(e => e.Csbh)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("CSBH");

                entity.Property(e => e.EndTime)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("END_TIME");

                entity.Property(e => e.Endvalue).HasColumnName("ENDVALUE");

                entity.Property(e => e.Handletype).HasColumnName("HANDLETYPE");

                entity.Property(e => e.PrdNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("PRD_NO");

                entity.Property(e => e.PrdTime).HasColumnName("PRD_TIME");

                entity.Property(e => e.SebNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SEB_NO");

                entity.Property(e => e.StaTime)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("STA_TIME");

                entity.Property(e => e.Startvalue).HasColumnName("STARTVALUE");

                entity.Property(e => e.StatDate)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("STAT_DATE");

                entity.Property(e => e.Value).HasColumnName("VALUE");
            });

            modelBuilder.Entity<TbSzdata>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("TB_SZDATA");

                entity.Property(e => e.BanNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("BAN_NO");

                entity.Property(e => e.Cjbh)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CJBH");

                entity.Property(e => e.Cjmc)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CJMC");

                entity.Property(e => e.Hgs).HasColumnName("HGS");

                entity.Property(e => e.PrdName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("PRD_NAME");

                entity.Property(e => e.PrdNo)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("PRD_NO");

                entity.Property(e => e.SebName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("SEB_NAME");

                entity.Property(e => e.SebNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("SEB_NO");

                entity.Property(e => e.Sjs).HasColumnName("SJS");

                entity.Property(e => e.StatDate)
                    .HasColumnType("datetime")
                    .HasColumnName("STAT_DATE");

                entity.Property(e => e.Xjfps).HasColumnName("XJFPS");

                entity.Property(e => e.Xjs).HasColumnName("XJS");

                entity.Property(e => e.Zgs).HasColumnName("ZGS");

                entity.Property(e => e.Zjzs).HasColumnName("ZJZS");
            });

            modelBuilder.Entity<TbTransferinout>(entity =>
            {
                entity.ToTable("TB_TRANSFERINOUT");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Datasource)
                    .HasMaxLength(200)
                    .HasColumnName("DATASOURCE");

                entity.Property(e => e.Datatype)
                    .HasMaxLength(200)
                    .HasColumnName("DATATYPE");

                entity.Property(e => e.DepName)
                    .HasMaxLength(200)
                    .HasColumnName("DEP_NAME");

                entity.Property(e => e.DepNo)
                    .HasMaxLength(200)
                    .HasColumnName("DEP_NO");

                entity.Property(e => e.Inputdate)
                    .HasColumnType("datetime")
                    .HasColumnName("INPUTDATE");

                entity.Property(e => e.Num).HasColumnName("NUM");

                entity.Property(e => e.PrdName)
                    .HasMaxLength(200)
                    .HasColumnName("PRD_NAME");

                entity.Property(e => e.PrdNo)
                    .HasMaxLength(200)
                    .HasColumnName("PRD_NO");

                entity.Property(e => e.PrdSnm)
                    .HasMaxLength(200)
                    .HasColumnName("PRD_SNM");

                entity.Property(e => e.PrdSpc)
                    .HasMaxLength(200)
                    .HasColumnName("PRD_SPC");

                entity.Property(e => e.Producestatus)
                    .HasMaxLength(200)
                    .HasColumnName("PRODUCESTATUS");
            });

            modelBuilder.Entity<TbTzrbHz>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("TB_TZRB_HZ");

                entity.Property(e => e.CurWaste).HasColumnName("CUR_WASTE");

                entity.Property(e => e.Initnum).HasColumnName("INITNUM");

                entity.Property(e => e.Innum).HasColumnName("INNUM");

                entity.Property(e => e.Inputdate)
                    .HasColumnType("datetime")
                    .HasColumnName("INPUTDATE");

                entity.Property(e => e.Otherwaste).HasColumnName("OTHERWASTE");

                entity.Property(e => e.Outnum).HasColumnName("OUTNUM");

                entity.Property(e => e.PrdName)
                    .HasMaxLength(200)
                    .HasColumnName("PRD_NAME");

                entity.Property(e => e.PrdNo)
                    .HasMaxLength(200)
                    .HasColumnName("PRD_NO");

                entity.Property(e => e.PrdSnm)
                    .HasMaxLength(200)
                    .HasColumnName("PRD_SNM");

                entity.Property(e => e.PrdSpc)
                    .HasMaxLength(200)
                    .HasColumnName("PRD_SPC");

                entity.Property(e => e.PreWaste).HasColumnName("PRE_WASTE");

                entity.Property(e => e.Rn).HasColumnName("RN");

                entity.Property(e => e.Trailwaste).HasColumnName("TRAILWASTE");
            });

            modelBuilder.Entity<TbTzrbMx>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("TB_TZRB_MX");

                entity.Property(e => e.CurWaste).HasColumnName("CUR_WASTE");

                entity.Property(e => e.Initnum).HasColumnName("INITNUM");

                entity.Property(e => e.Innum).HasColumnName("INNUM");

                entity.Property(e => e.Inputdate)
                    .HasColumnType("datetime")
                    .HasColumnName("INPUTDATE");

                entity.Property(e => e.Otherwaste).HasColumnName("OTHERWASTE");

                entity.Property(e => e.Outnum).HasColumnName("OUTNUM");

                entity.Property(e => e.PrdName)
                    .HasMaxLength(200)
                    .HasColumnName("PRD_NAME");

                entity.Property(e => e.PrdNo)
                    .HasMaxLength(200)
                    .HasColumnName("PRD_NO");

                entity.Property(e => e.PrdSnm)
                    .HasMaxLength(200)
                    .HasColumnName("PRD_SNM");

                entity.Property(e => e.PrdSpc)
                    .HasMaxLength(200)
                    .HasColumnName("PRD_SPC");

                entity.Property(e => e.PreWaste).HasColumnName("PRE_WASTE");

                entity.Property(e => e.Trailwaste).HasColumnName("TRAILWASTE");
            });

            modelBuilder.Entity<TbTzrbMxMonth>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("TB_TZRB_MX_MONTH");

                entity.Property(e => e.CurWaste).HasColumnName("CUR_WASTE");

                entity.Property(e => e.Initnum).HasColumnName("INITNUM");

                entity.Property(e => e.Innum).HasColumnName("INNUM");

                entity.Property(e => e.Inputdate)
                    .HasColumnType("datetime")
                    .HasColumnName("INPUTDATE");

                entity.Property(e => e.Otherwaste).HasColumnName("OTHERWASTE");

                entity.Property(e => e.Outnum).HasColumnName("OUTNUM");

                entity.Property(e => e.PrdName)
                    .HasMaxLength(200)
                    .HasColumnName("PRD_NAME");

                entity.Property(e => e.PrdNo)
                    .HasMaxLength(200)
                    .HasColumnName("PRD_NO");

                entity.Property(e => e.PrdSnm)
                    .HasMaxLength(200)
                    .HasColumnName("PRD_SNM");

                entity.Property(e => e.PrdSpc)
                    .HasMaxLength(200)
                    .HasColumnName("PRD_SPC");

                entity.Property(e => e.PreWaste).HasColumnName("PRE_WASTE");

                entity.Property(e => e.Rn).HasColumnName("RN");

                entity.Property(e => e.Trailwaste).HasColumnName("TRAILWASTE");
            });

            modelBuilder.Entity<TbWaste>(entity =>
            {
                entity.ToTable("TB_WASTE");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Ban)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("BAN")
                    .IsFixedLength(true);

                entity.Property(e => e.BanNo)
                    .HasMaxLength(200)
                    .HasColumnName("BAN_NO");

                entity.Property(e => e.Bangroup)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("BANGROUP")
                    .IsFixedLength(true);

                entity.Property(e => e.Createdate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATEDATE");

                entity.Property(e => e.Creator)
                    .HasMaxLength(200)
                    .HasColumnName("CREATOR");

                entity.Property(e => e.Defecttype)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("DEFECTTYPE");

                entity.Property(e => e.Deliveryshop)
                    .HasMaxLength(200)
                    .HasColumnName("DELIVERYSHOP");

                entity.Property(e => e.Deliveryshopno)
                    .HasMaxLength(200)
                    .HasColumnName("DELIVERYSHOPNO");

                entity.Property(e => e.Inputdate)
                    .HasColumnType("datetime")
                    .HasColumnName("INPUTDATE");

                entity.Property(e => e.Liablemanno)
                    .HasMaxLength(200)
                    .HasColumnName("LIABLEMANNO");

                entity.Property(e => e.Modifydate)
                    .HasColumnType("datetime")
                    .HasColumnName("MODIFYDATE");

                entity.Property(e => e.Modifyuser)
                    .HasMaxLength(200)
                    .HasColumnName("MODIFYUSER");

                entity.Property(e => e.Productcode)
                    .HasMaxLength(200)
                    .HasColumnName("PRODUCTCODE");

                entity.Property(e => e.Productname)
                    .HasMaxLength(200)
                    .HasColumnName("PRODUCTNAME");

                entity.Property(e => e.Productspec)
                    .HasMaxLength(200)
                    .HasColumnName("PRODUCTSPEC");

                entity.Property(e => e.Productstatus)
                    .HasMaxLength(200)
                    .HasColumnName("PRODUCTSTATUS");

                entity.Property(e => e.Responequipment)
                    .HasMaxLength(200)
                    .HasColumnName("RESPONEQUIPMENT");

                entity.Property(e => e.Responequipmentno)
                    .HasMaxLength(200)
                    .HasColumnName("RESPONEQUIPMENTNO");

                entity.Property(e => e.Responprocess)
                    .HasMaxLength(200)
                    .HasColumnName("RESPONPROCESS");

                entity.Property(e => e.Responprocessno)
                    .HasMaxLength(200)
                    .HasColumnName("RESPONPROCESSNO");

                entity.Property(e => e.Responshop)
                    .HasMaxLength(200)
                    .HasColumnName("RESPONSHOP");

                entity.Property(e => e.Responshopno)
                    .HasMaxLength(200)
                    .HasColumnName("RESPONSHOPNO");

                entity.Property(e => e.Reworknumber).HasColumnName("REWORKNUMBER");

                entity.Property(e => e.Type)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("TYPE")
                    .IsFixedLength(true);

                entity.Property(e => e.Wastenumber).HasColumnName("WASTENUMBER");
            });

            modelBuilder.Entity<TbWastetime>(entity =>
            {
                entity.ToTable("TB_WASTETIME");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Ban)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("BAN")
                    .IsFixedLength(true);

                entity.Property(e => e.Bangroup)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("BANGROUP")
                    .IsFixedLength(true);

                entity.Property(e => e.Createdate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATEDATE");

                entity.Property(e => e.Creator)
                    .HasMaxLength(200)
                    .HasColumnName("CREATOR");

                entity.Property(e => e.Equipment)
                    .HasMaxLength(200)
                    .HasColumnName("EQUIPMENT");

                entity.Property(e => e.Faultstop).HasColumnName("FAULTSTOP");

                entity.Property(e => e.Inputdate)
                    .HasColumnType("datetime")
                    .HasColumnName("INPUTDATE");

                entity.Property(e => e.Modifydate)
                    .HasColumnType("datetime")
                    .HasColumnName("MODIFYDATE");

                entity.Property(e => e.Modifyuser)
                    .HasMaxLength(200)
                    .HasColumnName("MODIFYUSER");

                entity.Property(e => e.Otherstop).HasColumnName("OTHERSTOP");

                entity.Property(e => e.Planstop).HasColumnName("PLANSTOP");

                entity.Property(e => e.Process)
                    .HasMaxLength(200)
                    .HasColumnName("PROCESS");

                entity.Property(e => e.Productcode)
                    .HasMaxLength(200)
                    .HasColumnName("PRODUCTCODE");

                entity.Property(e => e.Productname)
                    .HasMaxLength(200)
                    .HasColumnName("PRODUCTNAME");

                entity.Property(e => e.Switchstop).HasColumnName("SWITCHSTOP");

                entity.Property(e => e.Workshop)
                    .HasMaxLength(200)
                    .HasColumnName("WORKSHOP");
            });

            modelBuilder.Entity<TbXray>(entity =>
            {
                entity.ToTable("TB_XRAY");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Ban)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("BAN")
                    .IsFixedLength(true);

                entity.Property(e => e.BanNo)
                    .HasMaxLength(200)
                    .HasColumnName("BAN_NO");

                entity.Property(e => e.Bangroup)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("BANGROUP")
                    .IsFixedLength(true);

                entity.Property(e => e.Checktotal).HasColumnName("CHECKTOTAL");

                entity.Property(e => e.Createdate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATEDATE");

                entity.Property(e => e.Creator)
                    .HasMaxLength(200)
                    .HasColumnName("CREATOR");

                entity.Property(e => e.Equipment)
                    .HasMaxLength(200)
                    .HasColumnName("EQUIPMENT");

                entity.Property(e => e.Equipmentno)
                    .HasMaxLength(200)
                    .HasColumnName("EQUIPMENTNO");

                entity.Property(e => e.Inputdate)
                    .HasColumnType("datetime")
                    .HasColumnName("INPUTDATE");

                entity.Property(e => e.Midhubdefect).HasColumnName("MIDHUBDEFECT");

                entity.Property(e => e.Modifydate)
                    .HasColumnType("datetime")
                    .HasColumnName("MODIFYDATE");

                entity.Property(e => e.Modifyuser)
                    .HasMaxLength(200)
                    .HasColumnName("MODIFYUSER");

                entity.Property(e => e.Mould)
                    .HasMaxLength(200)
                    .HasColumnName("MOULD");

                entity.Property(e => e.Noqualifiednumber).HasColumnName("NOQUALIFIEDNUMBER");

                entity.Property(e => e.Producestatus)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("PRODUCESTATUS")
                    .IsFixedLength(true);

                entity.Property(e => e.Productcode)
                    .HasMaxLength(200)
                    .HasColumnName("PRODUCTCODE");

                entity.Property(e => e.Productname)
                    .HasMaxLength(200)
                    .HasColumnName("PRODUCTNAME");

                entity.Property(e => e.Productspec)
                    .HasMaxLength(200)
                    .HasColumnName("PRODUCTSPEC");

                entity.Property(e => e.Qualifiednumber).HasColumnName("QUALIFIEDNUMBER");

                entity.Property(e => e.Rimdefect).HasColumnName("RIMDEFECT");

                entity.Property(e => e.Spokedefect).HasColumnName("SPOKEDEFECT");
            });

            modelBuilder.Entity<TbXrayZb>(entity =>
            {
                entity.ToTable("TB_XRAY_ZB");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Defectnumber).HasColumnName("DEFECTNUMBER");

                entity.Property(e => e.Defecttype)
                    .HasMaxLength(200)
                    .HasColumnName("DEFECTTYPE");

                entity.Property(e => e.Mid).HasColumnName("MID");
            });

            modelBuilder.Entity<TbXrayhgl>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("TB_XRAYHGL");

                entity.Property(e => e.Dayno)
                    .HasMaxLength(100)
                    .HasColumnName("DAYNO");

                entity.Property(e => e.Item)
                    .HasMaxLength(100)
                    .HasColumnName("ITEM");

                entity.Property(e => e.Value)
                    .HasMaxLength(100)
                    .HasColumnName("VALUE");
            });

            modelBuilder.Entity<TblBarcode>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("TBL_BARCODE");

                entity.Property(e => e.Barcode)
                    .HasMaxLength(100)
                    .HasColumnName("BARCODE");

                entity.Property(e => e.Rn).HasColumnName("RN");
            });

            modelBuilder.Entity<TblProcessinfo>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("TBL_PROCESSINFO");

                entity.Property(e => e.Barcode)
                    .HasMaxLength(100)
                    .HasColumnName("BARCODE");

                entity.Property(e => e.Dep)
                    .HasMaxLength(100)
                    .HasColumnName("DEP");

                entity.Property(e => e.Department)
                    .HasMaxLength(100)
                    .HasColumnName("DEPARTMENT");

                entity.Property(e => e.Equipment)
                    .HasMaxLength(100)
                    .HasColumnName("EQUIPMENT");

                entity.Property(e => e.Itm).HasColumnName("ITM");

                entity.Property(e => e.Person)
                    .HasMaxLength(100)
                    .HasColumnName("PERSON");

                entity.Property(e => e.PrdNo)
                    .HasMaxLength(100)
                    .HasColumnName("PRD_NO");

                entity.Property(e => e.Process)
                    .HasMaxLength(100)
                    .HasColumnName("PROCESS");

                entity.Property(e => e.SalNo)
                    .HasMaxLength(100)
                    .HasColumnName("SAL_NO");

                entity.Property(e => e.SebNo)
                    .HasMaxLength(100)
                    .HasColumnName("SEB_NO");

                entity.Property(e => e.Sfhg)
                    .HasMaxLength(100)
                    .HasColumnName("SFHG");

                entity.Property(e => e.Shift)
                    .HasMaxLength(100)
                    .HasColumnName("SHIFT");

                entity.Property(e => e.StaTime)
                    .HasMaxLength(100)
                    .HasColumnName("STA_TIME");

                entity.Property(e => e.ZcNo)
                    .HasMaxLength(100)
                    .HasColumnName("ZC_NO");
            });

            modelBuilder.Entity<TerminalAllot>(entity =>
            {
                entity.ToTable("TERMINAL_ALLOT");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.ChkDate).HasColumnType("datetime");

                entity.Property(e => e.ChkMan)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.ChkManName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.ChkMob)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.IsPrint).HasDefaultValueSql("((0))");

                entity.Property(e => e.Rem)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.SebName)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("SEB_NAME");

                entity.Property(e => e.SebNo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("SEB_NO");

                entity.Property(e => e.SysDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.TmName)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("TM_NAME");

                entity.Property(e => e.TmNo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("TM_NO");

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Usr)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.UsrName)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");
            });

            modelBuilder.Entity<TerminalSetup>(entity =>
            {
                entity.ToTable("TERMINAL_SETUP");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.ChkDate).HasColumnType("datetime");

                entity.Property(e => e.ChkMan)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.ChkManName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.ChkMob)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Ipadd)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IPAdd");

                entity.Property(e => e.IsPrint).HasDefaultValueSql("((0))");

                entity.Property(e => e.Local)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("LOCAL");

                entity.Property(e => e.Name)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("NAME");

                entity.Property(e => e.No)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NO");

                entity.Property(e => e.Rem)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.SysDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Tmtype)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TMType");

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Usr)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.UsrName)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");
            });

            modelBuilder.Entity<Testi>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("TESTI");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.No)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("NO");
            });

            modelBuilder.Entity<TfBan>(entity =>
            {
                entity.ToTable("TF_BAN");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BanNo)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("BAN_NO");

                entity.Property(e => e.CardId).HasColumnName("CARD_ID");

                entity.Property(e => e.IoId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("IO_ID");

                entity.Property(e => e.KqId).HasColumnName("KQ_ID");

                entity.Property(e => e.Mid).HasColumnName("MID");

                entity.Property(e => e.OverMin).HasColumnName("OVER_MIN");

                entity.Property(e => e.RngItm).HasColumnName("RNG_ITM");

                entity.Property(e => e.RngName)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("RNG_NAME");

                entity.Property(e => e.StrTime1)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("STR_TIME1");

                entity.Property(e => e.StrTime2)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("STR_TIME2");

                entity.Property(e => e.StrTime3)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("STR_TIME3");

                entity.Property(e => e.StrTime4)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("STR_TIME4");

                entity.Property(e => e.StrTime5)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("STR_TIME5");

                entity.Property(e => e.StrTime6)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("STR_TIME6");

                entity.Property(e => e.StrTime7)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("STR_TIME7");

                entity.Property(e => e.VldMin).HasColumnName("VLD_MIN");

                entity.HasOne(d => d.MidNavigation)
                    .WithMany(p => p.TfBan)
                    .HasForeignKey(d => d.Mid)
                    .HasConstraintName("FK_TF_BAN_MF_BAN");
            });

            modelBuilder.Entity<TfBom>(entity =>
            {
                entity.ToTable("TF_BOM");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.AccuracyTrace)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("Accuracy_Trace");

                entity.Property(e => e.BlRto)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("BL_RTO");

                entity.Property(e => e.BomId)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("BOM_ID");

                entity.Property(e => e.BomNo)
                    .IsRequired()
                    .HasMaxLength(38)
                    .IsUnicode(false)
                    .HasColumnName("BOM_NO");

                entity.Property(e => e.ChgRto)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("CHG_RTO");

                entity.Property(e => e.Cst)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("CST");

                entity.Property(e => e.EndDd)
                    .HasColumnType("datetime")
                    .HasColumnName("END_DD");

                entity.Property(e => e.Feedmode)
                    .HasMaxLength(55)
                    .IsUnicode(false);

                entity.Property(e => e.IdNo)
                    .HasMaxLength(38)
                    .IsUnicode(false)
                    .HasColumnName("ID_NO");

                entity.Property(e => e.IdNoUp)
                    .HasMaxLength(38)
                    .IsUnicode(false)
                    .HasColumnName("ID_NO_UP");

                entity.Property(e => e.Iseffective)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ISEFFECTIVE");

                entity.Property(e => e.Itm).HasColumnName("ITM");

                entity.Property(e => e.LosRto)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("LOS_RTO");

                entity.Property(e => e.LowLimit).HasColumnType("numeric(18, 4)");

                entity.Property(e => e.MateialType)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("Mateial_Type");

                entity.Property(e => e.Mid).HasColumnName("MID");

                entity.Property(e => e.MoId).HasColumnName("MO_ID");

                entity.Property(e => e.Name)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("NAME");

                entity.Property(e => e.PrdMark)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("PRD_MARK")
                    .HasDefaultValueSql("(space((0)))");

                entity.Property(e => e.PrdNo)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("PRD_NO");

                entity.Property(e => e.PrdNoChg)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("PRD_NO_CHG");

                entity.Property(e => e.ProcVerNo)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("Proc_VerNo");

                entity.Property(e => e.ProdAlternate)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Prod_Alternate");

                entity.Property(e => e.PzId)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("PZ_ID");

                entity.Property(e => e.Qty)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("QTY");

                entity.Property(e => e.Qty1)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("QTY1");

                entity.Property(e => e.QtyBas)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("QTY_BAS");

                entity.Property(e => e.QtyBlFix)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_BL_FIX");

                entity.Property(e => e.QtyLostFix)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_LOST_FIX");

                entity.Property(e => e.Rem)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("REM");

                entity.Property(e => e.StartDd)
                    .HasColumnType("datetime")
                    .HasColumnName("START_DD");

                entity.Property(e => e.TwId).HasColumnName("TW_ID");

                entity.Property(e => e.Unit)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("UNIT");

                entity.Property(e => e.UpLimit).HasColumnType("numeric(18, 4)");

                entity.Property(e => e.UpStd)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("UP_STD");

                entity.Property(e => e.UseinNo)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("USEIN_NO");

                entity.Property(e => e.WastageQty)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("Wastage_Qty");

                entity.Property(e => e.WastageRate)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("Wastage_Rate");

                entity.Property(e => e.WhNo)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("WH_NO");

                entity.Property(e => e.ZcNo)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ZC_NO");

                entity.HasOne(d => d.MidNavigation)
                    .WithMany(p => p.TfBom)
                    .HasForeignKey(d => d.Mid)
                    .HasConstraintName("FK_TF_BOM_MF_BOM");
            });

            modelBuilder.Entity<TfBom2>(entity =>
            {
                entity.ToTable("TF_BOM2");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BomNo)
                    .IsRequired()
                    .HasMaxLength(38)
                    .IsUnicode(false)
                    .HasColumnName("BOM_NO");

                entity.Property(e => e.Cst)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("CST");

                entity.Property(e => e.CstMake)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("CST_MAKE");

                entity.Property(e => e.CstOut)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("CST_OUT");

                entity.Property(e => e.CstPrd)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("CST_PRD");

                entity.Property(e => e.Itm).HasColumnName("ITM");

                entity.Property(e => e.Mid).HasColumnName("MID");

                entity.Property(e => e.PrdMark)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("PRD_MARK");

                entity.Property(e => e.PrdName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("PRD_NAME");

                entity.Property(e => e.PrdNo)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("PRD_NO");

                entity.Property(e => e.PreItm).HasColumnName("PRE_ITM");

                entity.Property(e => e.Qty)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY");

                entity.Property(e => e.Qty1)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY1");

                entity.Property(e => e.QtyBas)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_BAS");

                entity.Property(e => e.Rem)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("REM");

                entity.Property(e => e.Unit)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("UNIT");

                entity.Property(e => e.UpStd)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("UP_STD");

                entity.Property(e => e.Wh)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("WH");
            });

            modelBuilder.Entity<TfByjl>(entity =>
            {
                entity.ToTable("TF_BYJL");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.ByDd)
                    .HasColumnType("datetime")
                    .HasColumnName("BY_DD");

                entity.Property(e => e.ByFlag)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("BY_FLAG");

                entity.Property(e => e.ByNo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("BY_NO");

                entity.Property(e => e.BynrName)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("BYNR_NAME");

                entity.Property(e => e.BynrNo)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("BYNR_NO");

                entity.Property(e => e.Itm).HasColumnName("ITM");

                entity.Property(e => e.Mid).HasColumnName("MID");

                entity.Property(e => e.PreItm).HasColumnName("PRE_ITM");

                entity.Property(e => e.Rem)
                    .HasMaxLength(1000)
                    .IsUnicode(false);

                entity.HasOne(d => d.MidNavigation)
                    .WithMany(p => p.TfByjl)
                    .HasForeignKey(d => d.Mid)
                    .HasConstraintName("FK_TF_BYJL_MF_BYJL");
            });

            modelBuilder.Entity<TfCk>(entity =>
            {
                entity.ToTable("TF_CK");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Amt)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("AMT");

                entity.Property(e => e.AmtDisCnt)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("AMT_DIS_CNT");

                entity.Property(e => e.AmtFp)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("AMT_FP");

                entity.Property(e => e.AmtnNet)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("AMTN_NET");

                entity.Property(e => e.AmtnNetFp)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("AMTN_NET_FP");

                entity.Property(e => e.BatNo)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("BAT_NO");

                entity.Property(e => e.BzKnd)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("BZ_KND");

                entity.Property(e => e.CfId)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CF_ID");

                entity.Property(e => e.ChkTax)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CHK_TAX");

                entity.Property(e => e.CkDd)
                    .HasColumnType("datetime")
                    .HasColumnName("CK_DD");

                entity.Property(e => e.CkId)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("CK_ID");

                entity.Property(e => e.CkNo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CK_NO");

                entity.Property(e => e.CnttNo)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("CNTT_NO");

                entity.Property(e => e.ComposeIdno)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("COMPOSE_IDNO");

                entity.Property(e => e.CstStd)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("CST_STD");

                entity.Property(e => e.CstnSal)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("CSTN_SAL");

                entity.Property(e => e.CusOsNo)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("CUS_OS_NO");

                entity.Property(e => e.DepRk)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("DEP_RK");

                entity.Property(e => e.DisCnt)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("DIS_CNT");

                entity.Property(e => e.EstDd)
                    .HasColumnType("datetime")
                    .HasColumnName("EST_DD");

                entity.Property(e => e.EstItm).HasColumnName("EST_ITM");

                entity.Property(e => e.FhNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("FH_NO");

                entity.Property(e => e.FreeId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("FREE_ID");

                entity.Property(e => e.FreeIdDef)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("FREE_ID_DEF");

                entity.Property(e => e.IdNo)
                    .HasMaxLength(38)
                    .IsUnicode(false)
                    .HasColumnName("ID_NO");

                entity.Property(e => e.Itm).HasColumnName("ITM");

                entity.Property(e => e.MaiNo)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("MAI_NO");

                entity.Property(e => e.Mid).HasColumnName("MID");

                entity.Property(e => e.OsId)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("OS_ID");

                entity.Property(e => e.OsNo)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("OS_NO");

                entity.Property(e => e.OthItm).HasColumnName("OTH_ITM");

                entity.Property(e => e.PakExc)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("PAK_EXC");

                entity.Property(e => e.PakGw)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("PAK_GW");

                entity.Property(e => e.PakMeast)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("PAK_MEAST");

                entity.Property(e => e.PakMeastUnit)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("PAK_MEAST_UNIT");

                entity.Property(e => e.PakNw)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("PAK_NW");

                entity.Property(e => e.PakUnit)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("PAK_UNIT");

                entity.Property(e => e.PakWeightUnit)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("PAK_WEIGHT_UNIT");

                entity.Property(e => e.PrdMark)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("PRD_MARK")
                    .HasDefaultValueSql("(space((0)))");

                entity.Property(e => e.PrdName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("PRD_NAME");

                entity.Property(e => e.PrdNo)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("PRD_NO");

                entity.Property(e => e.PreItm).HasColumnName("PRE_ITM");

                entity.Property(e => e.PriceId)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("PRICE_ID");

                entity.Property(e => e.PrmNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("PRM_NO");

                entity.Property(e => e.PwItm).HasColumnName("PW_ITM");

                entity.Property(e => e.Qty)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY");

                entity.Property(e => e.Qty1)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY1");

                entity.Property(e => e.Qty1Fp)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY1_FP");

                entity.Property(e => e.Qty1Pre)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY1_PRE");

                entity.Property(e => e.Qty1PreUnsh)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY1_PRE_UNSH");

                entity.Property(e => e.QtyArk)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_ARK");

                entity.Property(e => e.QtyFp)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_FP");

                entity.Property(e => e.QtyOs)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_OS");

                entity.Property(e => e.QtyPre)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_PRE");

                entity.Property(e => e.QtyPreUnsh)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_PRE_UNSH");

                entity.Property(e => e.QtyPs)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_PS");

                entity.Property(e => e.QtyPsUnsh)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_PS_UNSH");

                entity.Property(e => e.QtyRk)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_RK");

                entity.Property(e => e.QtyRkUnsh)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_RK_UNSH");

                entity.Property(e => e.Rem)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("REM");

                entity.Property(e => e.Rem2)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("REM2");

                entity.Property(e => e.RkDd)
                    .HasColumnType("datetime")
                    .HasColumnName("RK_DD");

                entity.Property(e => e.SupPrdMark)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("SUP_PRD_MARK");

                entity.Property(e => e.SupPrdNo)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("SUP_PRD_NO");

                entity.Property(e => e.Tax)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("TAX");

                entity.Property(e => e.TaxFp)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("TAX_FP");

                entity.Property(e => e.TaxRto)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("TAX_RTO");

                entity.Property(e => e.TtRng).HasColumnName("TT_RNG");

                entity.Property(e => e.TtTypeIfrs)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TT_TYPE_IFRS");

                entity.Property(e => e.TtYmE)
                    .HasColumnType("datetime")
                    .HasColumnName("TT_YM_E");

                entity.Property(e => e.Unit)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("UNIT");

                entity.Property(e => e.Up)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("UP");

                entity.Property(e => e.UpQty1)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("UP_QTY1");

                entity.Property(e => e.UpStd)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("UP_STD");

                entity.Property(e => e.ValidDd)
                    .HasColumnType("datetime")
                    .HasColumnName("VALID_DD");

                entity.Property(e => e.Wh)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("WH");

                entity.Property(e => e.WhSend)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("WH_SEND");

                entity.Property(e => e.XpmNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("XPM_NO");

                entity.Property(e => e.XpmNo1)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("XPM_NO1");

                entity.Property(e => e.XpprdItm).HasColumnName("XPPRD_ITM");

                entity.Property(e => e.XpprdItm1).HasColumnName("XPPRD_ITM1");

                entity.Property(e => e.YhItm).HasColumnName("YH_ITM");

                entity.Property(e => e.YhNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("YH_NO");

                entity.Property(e => e.ZhangId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ZHANG_ID");

                entity.HasOne(d => d.MidNavigation)
                    .WithMany(p => p.TfCk)
                    .HasForeignKey(d => d.Mid)
                    .HasConstraintName("FK_TF_CK_MF_CK");
            });

            modelBuilder.Entity<TfCs>(entity =>
            {
                entity.ToTable("TF_CS");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.AddInfo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Add_Info");

                entity.Property(e => e.AddInfoOld)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Add_Info_OLD");

                entity.Property(e => e.BatNo)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("BAT_NO");

                entity.Property(e => e.BatNoNew)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("BAT_NO_NEW");

                entity.Property(e => e.BatNoOld)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("BAT_NO_OLD");

                entity.Property(e => e.BilId)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("BIL_ID");

                entity.Property(e => e.BilIdOld)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("BIL_ID_OLD");

                entity.Property(e => e.BilNoOld)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("BIL_NO_OLD");

                entity.Property(e => e.BilType)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.BillDate).HasColumnType("datetime");

                entity.Property(e => e.CasNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CAS_NO");

                entity.Property(e => e.CasNoOld)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CAS_NO_OLD");

                entity.Property(e => e.ChgId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CHG_ID");

                entity.Property(e => e.ComposeIdno)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("COMPOSE_IDNO");

                entity.Property(e => e.CsNo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CS_NO");

                entity.Property(e => e.CurId)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CUR_ID");

                entity.Property(e => e.CurIdOld)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CUR_ID_OLD");

                entity.Property(e => e.CusDown)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("CUS_DOWN");

                entity.Property(e => e.CusNo)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("CUS_NO");

                entity.Property(e => e.CusNoOld)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("CUS_NO_OLD");

                entity.Property(e => e.CusOsNo)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("CUS_OS_NO");

                entity.Property(e => e.CusOsNoOld)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("CUS_OS_NO_OLD");

                entity.Property(e => e.CusUp)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("CUS_UP");

                entity.Property(e => e.Dep)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("DEP");

                entity.Property(e => e.DepDown)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("DEP_DOWN");

                entity.Property(e => e.DepOld)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("DEP_OLD");

                entity.Property(e => e.DepUp)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("DEP_UP");

                entity.Property(e => e.EndDd)
                    .HasColumnType("datetime")
                    .HasColumnName("END_DD");

                entity.Property(e => e.EndDdOld)
                    .HasColumnType("datetime")
                    .HasColumnName("END_DD_OLD");

                entity.Property(e => e.EstDd)
                    .HasColumnType("datetime")
                    .HasColumnName("EST_DD");

                entity.Property(e => e.EstDdOld)
                    .HasColumnType("datetime")
                    .HasColumnName("EST_DD_OLD");

                entity.Property(e => e.EstItm).HasColumnName("EST_ITM");

                entity.Property(e => e.EstItmOld).HasColumnName("EST_ITM_OLD");

                entity.Property(e => e.FinDd)
                    .HasColumnType("datetime")
                    .HasColumnName("FIN_DD");

                entity.Property(e => e.Itm).HasColumnName("ITM");

                entity.Property(e => e.MdNo)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("MD_NO");

                entity.Property(e => e.Mid).HasColumnName("MID");

                entity.Property(e => e.MoNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("MO_NO");

                entity.Property(e => e.MoNoAdd)
                    .HasMaxLength(38)
                    .IsUnicode(false)
                    .HasColumnName("MO_NO_ADD");

                entity.Property(e => e.MrpNo)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("MRP_NO");

                entity.Property(e => e.PrdMark)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("PRD_MARK")
                    .HasDefaultValueSql("(space((0)))");

                entity.Property(e => e.PreItm).HasColumnName("PRE_ITM");

                entity.Property(e => e.QcYn)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("QC_YN");

                entity.Property(e => e.Qty)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY");

                entity.Property(e => e.Qty1)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY1");

                entity.Property(e => e.Qty1So)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY1_SO");

                entity.Property(e => e.QtyFin)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_FIN");

                entity.Property(e => e.QtySo)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_SO");

                entity.Property(e => e.Reason)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("REASON");

                entity.Property(e => e.Rem)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("REM");

                entity.Property(e => e.RemMo)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("REM_MO");

                entity.Property(e => e.RemMoOld)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("REM_MO_OLD");

                entity.Property(e => e.RtoTax)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("RTO_TAX");

                entity.Property(e => e.RtoTaxOld)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("RTO_TAX_OLD");

                entity.Property(e => e.SebNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SEB_NO");

                entity.Property(e => e.SebNoOld)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SEB_NO_OLD");

                entity.Property(e => e.SoNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("SO_NO");

                entity.Property(e => e.SoNoOld)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("SO_NO_OLD");

                entity.Property(e => e.StaDd)
                    .HasColumnType("datetime")
                    .HasColumnName("STA_DD");

                entity.Property(e => e.StaDdOld)
                    .HasColumnType("datetime")
                    .HasColumnName("STA_DD_OLD");

                entity.Property(e => e.TaskId).HasColumnName("TASK_ID");

                entity.Property(e => e.TaskIdOld).HasColumnName("TASK_ID_OLD");

                entity.Property(e => e.TaxId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TAX_ID");

                entity.Property(e => e.TaxIdOld)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TAX_ID_OLD");

                entity.Property(e => e.TimeCnt)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("TIME_CNT");

                entity.Property(e => e.TwId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TW_ID");

                entity.Property(e => e.Unit)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("UNIT");

                entity.Property(e => e.Up)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("UP");

                entity.Property(e => e.UpOld)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("UP_OLD");

                entity.Property(e => e.UsedTime)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("USED_TIME");

                entity.Property(e => e.Wh)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("WH");

                entity.Property(e => e.WhOld)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("WH_OLD");

                entity.Property(e => e.WkCenterNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("WkCenter_No");

                entity.Property(e => e.WkCenterNoOld)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("WkCenter_No_OLD");

                entity.Property(e => e.WorkOrderOld).HasColumnName("WorkOrder_OLD");

                entity.Property(e => e.ZcNo)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ZC_NO");

                entity.Property(e => e.ZcNoDn)
                    .HasMaxLength(440)
                    .IsUnicode(false)
                    .HasColumnName("ZC_NO_DN");

                entity.Property(e => e.ZcNoUp)
                    .HasMaxLength(440)
                    .IsUnicode(false)
                    .HasColumnName("ZC_NO_UP");

                entity.Property(e => e.ZcRem)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("ZC_REM");

                entity.HasOne(d => d.MidNavigation)
                    .WithMany(p => p.TfCs)
                    .HasForeignKey(d => d.Mid)
                    .HasConstraintName("FK_TF_CS_MF_CS");
            });

            modelBuilder.Entity<TfDs>(entity =>
            {
                entity.ToTable("TF_DS");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Amtn)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("AMTN");

                entity.Property(e => e.BatNo)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("BAT_NO");

                entity.Property(e => e.BatNo2)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("BAT_NO2");

                entity.Property(e => e.BilId)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("BIL_ID");

                entity.Property(e => e.BilNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("BIL_NO");

                entity.Property(e => e.Cst)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("CST");

                entity.Property(e => e.CstStd)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("CST_STD");

                entity.Property(e => e.CusNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("CUS_NO");

                entity.Property(e => e.Dep)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("DEP");

                entity.Property(e => e.DsDd)
                    .HasColumnType("datetime")
                    .HasColumnName("DS_DD");

                entity.Property(e => e.DsId)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("DS_ID");

                entity.Property(e => e.DsNo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("DS_NO");

                entity.Property(e => e.EstItm).HasColumnName("EST_ITM");

                entity.Property(e => e.FixCst)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("FIX_CST");

                entity.Property(e => e.GpId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("GP_ID");

                entity.Property(e => e.IdNo)
                    .HasMaxLength(38)
                    .IsUnicode(false)
                    .HasColumnName("ID_NO");

                entity.Property(e => e.InvoNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("INVO_NO");

                entity.Property(e => e.Itm).HasColumnName("ITM");

                entity.Property(e => e.Mid).HasColumnName("MID");

                entity.Property(e => e.MoNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("MO_NO");

                entity.Property(e => e.MrpNo)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("MRP_NO");

                entity.Property(e => e.PrdMark)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("PRD_MARK")
                    .HasDefaultValueSql("(space((0)))");

                entity.Property(e => e.PrdMark2)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("PRD_MARK2")
                    .HasDefaultValueSql("(space((0)))");

                entity.Property(e => e.PrdName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("PRD_NAME");

                entity.Property(e => e.PrdNo)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("PRD_NO");

                entity.Property(e => e.PreItm).HasColumnName("PRE_ITM");

                entity.Property(e => e.Qty)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY");

                entity.Property(e => e.Qty1)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY1");

                entity.Property(e => e.Qty1Ps)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY1_PS");

                entity.Property(e => e.Qty1PsUnsh)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY1_PS_UNSH");

                entity.Property(e => e.QtyDm)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_DM");

                entity.Property(e => e.QtyFh)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_FH");

                entity.Property(e => e.QtyFhUnsh)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_FH_UNSH");

                entity.Property(e => e.QtyPs)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_PS");

                entity.Property(e => e.QtyPsUnsh)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_PS_UNSH");

                entity.Property(e => e.Rem)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("REM");

                entity.Property(e => e.Rev)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("REV");

                entity.Property(e => e.SoNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("SO_NO");

                entity.Property(e => e.SourceId).HasColumnName("SOURCE_ID");

                entity.Property(e => e.SqNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("SQ_NO");

                entity.Property(e => e.SupPrdNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SUP_PRD_NO");

                entity.Property(e => e.Unit)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("UNIT");

                entity.Property(e => e.Up)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("UP");

                entity.Property(e => e.UpStd)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("UP_STD");

                entity.Property(e => e.Wh1)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("WH1");

                entity.Property(e => e.Wh2)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("WH2");

                entity.Property(e => e.ZkNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ZK_NO");

                entity.HasOne(d => d.MidNavigation)
                    .WithMany(p => p.TfDs)
                    .HasForeignKey(d => d.Mid)
                    .HasConstraintName("FK_TF_DS_MF_DS");
            });

            modelBuilder.Entity<TfGrM>(entity =>
            {
                entity.ToTable("TF_GR_M");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Amt)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("AMT");

                entity.Property(e => e.AmtFp)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("AMT_FP");

                entity.Property(e => e.Amtn)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("AMTN");

                entity.Property(e => e.AmtnNet)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("AMTN_NET");

                entity.Property(e => e.AmtnNetFp)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("AMTN_NET_FP");

                entity.Property(e => e.BackId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("BACK_ID");

                entity.Property(e => e.BilId)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("BIL_ID");

                entity.Property(e => e.BilNo)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("BIL_NO");

                entity.Property(e => e.BilPreItm).HasColumnName("BIL_PRE_ITM");

                entity.Property(e => e.DepUse)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("DEP_USE");

                entity.Property(e => e.EpNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("EP_NO");

                entity.Property(e => e.ExpNo)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("EXP_NO");

                entity.Property(e => e.FtMm).HasColumnName("FT_MM");

                entity.Property(e => e.FtType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("FT_TYPE");

                entity.Property(e => e.GrDd)
                    .HasColumnType("datetime")
                    .HasColumnName("GR_DD");

                entity.Property(e => e.GrId)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("GR_ID");

                entity.Property(e => e.GrNo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("GR_NO");

                entity.Property(e => e.Itm).HasColumnName("ITM");

                entity.Property(e => e.ItmMj).HasColumnName("ITM_MJ");

                entity.Property(e => e.Mid).HasColumnName("MID");

                entity.Property(e => e.ModNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("MOD_NO");

                entity.Property(e => e.Name)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("NAME");

                entity.Property(e => e.OpnDd)
                    .HasColumnType("datetime")
                    .HasColumnName("OPN_DD");

                entity.Property(e => e.PreItm).HasColumnName("PRE_ITM");

                entity.Property(e => e.Qty1Fp)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY1_FP");

                entity.Property(e => e.QtyFp)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_FP");

                entity.Property(e => e.Rem)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("REM");

                entity.Property(e => e.SalNoBg)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("SAL_NO_BG");

                entity.Property(e => e.Spc)
                    .HasColumnType("text")
                    .HasColumnName("SPC");

                entity.Property(e => e.Tax)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("TAX");

                entity.Property(e => e.TaxFp)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("TAX_FP");

                entity.Property(e => e.TaxRto)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("TAX_RTO");

                entity.Property(e => e.ToOth)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TO_OTH");

                entity.Property(e => e.Ut)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("UT");

                entity.Property(e => e.Wh)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("WH");

                entity.HasOne(d => d.MidNavigation)
                    .WithMany(p => p.TfGrM)
                    .HasForeignKey(d => d.Mid)
                    .HasConstraintName("FK_TF_GR_M_MF_GR_M");
            });

            modelBuilder.Entity<TfGrS>(entity =>
            {
                entity.ToTable("TF_GR_S");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Adr)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("ADR");

                entity.Property(e => e.Amt)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("AMT");

                entity.Property(e => e.AmtFp)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("AMT_FP");

                entity.Property(e => e.Amtn)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("AMTN");

                entity.Property(e => e.AmtnNet)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("AMTN_NET");

                entity.Property(e => e.AmtnNetFp)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("AMTN_NET_FP");

                entity.Property(e => e.BackId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("BACK_ID");

                entity.Property(e => e.BilId)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("BIL_ID");

                entity.Property(e => e.BilNo)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("BIL_NO");

                entity.Property(e => e.BilPreItm).HasColumnName("BIL_PRE_ITM");

                entity.Property(e => e.DepUse)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("DEP_USE");

                entity.Property(e => e.EpNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("EP_NO");

                entity.Property(e => e.ExpNo)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("EXP_NO");

                entity.Property(e => e.FxKnd)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("FX_KND");

                entity.Property(e => e.FxName)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("FX_NAME");

                entity.Property(e => e.FxSpc)
                    .HasMaxLength(400)
                    .IsUnicode(false)
                    .HasColumnName("FX_SPC");

                entity.Property(e => e.GrDd)
                    .HasColumnType("datetime")
                    .HasColumnName("GR_DD");

                entity.Property(e => e.GrId)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("GR_ID");

                entity.Property(e => e.GrNo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("GR_NO");

                entity.Property(e => e.Itm).HasColumnName("ITM");

                entity.Property(e => e.ItmSb).HasColumnName("ITM_SB");

                entity.Property(e => e.Mark)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("MARK");

                entity.Property(e => e.Mid).HasColumnName("MID");

                entity.Property(e => e.Name)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("NAME");

                entity.Property(e => e.OpnDd)
                    .HasColumnType("datetime")
                    .HasColumnName("OPN_DD");

                entity.Property(e => e.PreItm).HasColumnName("PRE_ITM");

                entity.Property(e => e.Qty1Fp)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY1_FP");

                entity.Property(e => e.QtyFp)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_FP");

                entity.Property(e => e.Rem)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("REM");

                entity.Property(e => e.SalNoBg)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("SAL_NO_BG");

                entity.Property(e => e.SebNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("SEB_NO");

                entity.Property(e => e.ShareMth)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SHARE_MTH");

                entity.Property(e => e.ShareRest)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("SHARE_REST");

                entity.Property(e => e.Tax)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("TAX");

                entity.Property(e => e.TaxFp)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("TAX_FP");

                entity.Property(e => e.TaxRto)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("TAX_RTO");

                entity.Property(e => e.ToOth)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TO_OTH");

                entity.Property(e => e.UseYears).HasColumnName("USE_YEARS");

                entity.Property(e => e.Ut)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("UT");

                entity.Property(e => e.YtNo)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("YT_NO");

                entity.HasOne(d => d.MidNavigation)
                    .WithMany(p => p.TfGrS)
                    .HasForeignKey(d => d.Mid)
                    .HasConstraintName("FK_TF_GR_S_MF_GR_S");
            });

            modelBuilder.Entity<TfIc>(entity =>
            {
                entity.ToTable("TF_IC");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.AmtFp)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("AMT_FP");

                entity.Property(e => e.AmtFp2)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("AMT_FP2");

                entity.Property(e => e.AmtSo)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("AMT_SO");

                entity.Property(e => e.AmtnEp)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("AMTN_EP");

                entity.Property(e => e.AmtnIc)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("AMTN_IC");

                entity.Property(e => e.AmtnNet)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("AMTN_NET");

                entity.Property(e => e.AmtnNetFp)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("AMTN_NET_FP");

                entity.Property(e => e.AmtnNetFp2)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("AMTN_NET_FP2");

                entity.Property(e => e.AmtnNetIfrs)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("AMTN_NET_IFRS");

                entity.Property(e => e.AmtnNetIn)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("AMTN_NET_IN");

                entity.Property(e => e.BatNo)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("BAT_NO");

                entity.Property(e => e.BatNo2)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("BAT_NO2");

                entity.Property(e => e.BilId)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("BIL_ID");

                entity.Property(e => e.BilItm).HasColumnName("BIL_ITM");

                entity.Property(e => e.BilNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("BIL_NO");

                entity.Property(e => e.BoxItm).HasColumnName("BOX_ITM");

                entity.Property(e => e.BzKnd)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("BZ_KND");

                entity.Property(e => e.ComposeIdno)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("COMPOSE_IDNO");

                entity.Property(e => e.Cst)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("CST");

                entity.Property(e => e.CstIIfrs)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("CST_I_IFRS");

                entity.Property(e => e.CstIfrs)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("CST_IFRS");

                entity.Property(e => e.CstMakI)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("CST_MAK_I");

                entity.Property(e => e.CstMakIIfrs)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("CST_MAK_I_IFRS");

                entity.Property(e => e.CstMakO)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("CST_MAK_O");

                entity.Property(e => e.CstMakOIfrs)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("CST_MAK_O_IFRS");

                entity.Property(e => e.CstManI)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("CST_MAN_I");

                entity.Property(e => e.CstManIIfrs)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("CST_MAN_I_IFRS");

                entity.Property(e => e.CstManO)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("CST_MAN_O");

                entity.Property(e => e.CstManOIfrs)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("CST_MAN_O_IFRS");

                entity.Property(e => e.CstMlI)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("CST_ML_I");

                entity.Property(e => e.CstMlIIfrs)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("CST_ML_I_IFRS");

                entity.Property(e => e.CstMlO)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("CST_ML_O");

                entity.Property(e => e.CstMlOIfrs)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("CST_ML_O_IFRS");

                entity.Property(e => e.CstOIfrs)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("CST_O_IFRS");

                entity.Property(e => e.CstOut)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("CST_OUT");

                entity.Property(e => e.CstOutI)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("CST_OUT_I");

                entity.Property(e => e.CstOutIIfrs)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("CST_OUT_I_IFRS");

                entity.Property(e => e.CstOutO)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("CST_OUT_O");

                entity.Property(e => e.CstOutOIfrs)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("CST_OUT_O_IFRS");

                entity.Property(e => e.CstPrdI)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("CST_PRD_I");

                entity.Property(e => e.CstPrdIIfrs)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("CST_PRD_I_IFRS");

                entity.Property(e => e.CstPrdO)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("CST_PRD_O");

                entity.Property(e => e.CstPrdOIfrs)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("CST_PRD_O_IFRS");

                entity.Property(e => e.CstSmak)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("CST_SMAK");

                entity.Property(e => e.CstSmakIfrs)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("CST_SMAK_IFRS");

                entity.Property(e => e.CstSman)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("CST_SMAN");

                entity.Property(e => e.CstSmanIfrs)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("CST_SMAN_IFRS");

                entity.Property(e => e.CstSout)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("CST_SOUT");

                entity.Property(e => e.CstSoutIfrs)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("CST_SOUT_IFRS");

                entity.Property(e => e.CstSprd)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("CST_SPRD");

                entity.Property(e => e.CstSprdIfrs)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("CST_SPRD_IFRS");

                entity.Property(e => e.CstStd)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("CST_STD");

                entity.Property(e => e.CstStdIfrs)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("CST_STD_IFRS");

                entity.Property(e => e.CstStdMl)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("CST_STD_ML");

                entity.Property(e => e.CstStdMlIfrs)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("CST_STD_ML_IFRS");

                entity.Property(e => e.DefNo)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("DEF_NO");

                entity.Property(e => e.DepRk1)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("DEP_RK1");

                entity.Property(e => e.DepRk2)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("DEP_RK2");

                entity.Property(e => e.DisCnt)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("DIS_CNT");

                entity.Property(e => e.EpId)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("EP_ID");

                entity.Property(e => e.EstDd)
                    .HasColumnType("datetime")
                    .HasColumnName("EST_DD");

                entity.Property(e => e.EstItm).HasColumnName("EST_ITM");

                entity.Property(e => e.FixCst)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("FIX_CST");

                entity.Property(e => e.FixCst1)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("FIX_CST1");

                entity.Property(e => e.FreeId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("FREE_ID");

                entity.Property(e => e.IcDd)
                    .HasColumnType("datetime")
                    .HasColumnName("IC_DD");

                entity.Property(e => e.IcId)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("IC_ID");

                entity.Property(e => e.IcNo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IC_NO");

                entity.Property(e => e.IdNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ID_NO");

                entity.Property(e => e.Itm).HasColumnName("ITM");

                entity.Property(e => e.KeyItm).HasColumnName("KEY_ITM");

                entity.Property(e => e.MatrixItm).HasColumnName("MATRIX_ITM");

                entity.Property(e => e.Mid).HasColumnName("MID");

                entity.Property(e => e.MoNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("MO_NO");

                entity.Property(e => e.Name)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("NAME");

                entity.Property(e => e.OsId)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("OS_ID");

                entity.Property(e => e.PakExc)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("PAK_EXC");

                entity.Property(e => e.PakGw)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("PAK_GW");

                entity.Property(e => e.PakGwN)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("PAK_GW_N");

                entity.Property(e => e.PakMeast)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("PAK_MEAST");

                entity.Property(e => e.PakMeastUnit)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("PAK_MEAST_UNIT");

                entity.Property(e => e.PakNw)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("PAK_NW");

                entity.Property(e => e.PakNwN)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("PAK_NW_N");

                entity.Property(e => e.PakUnit)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("PAK_UNIT");

                entity.Property(e => e.PakWeightUnit)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("PAK_WEIGHT_UNIT");

                entity.Property(e => e.PrdMark)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("PRD_MARK")
                    .HasDefaultValueSql("(space((0)))");

                entity.Property(e => e.PrdMark2)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("PRD_MARK2")
                    .HasDefaultValueSql("(space((0)))");

                entity.Property(e => e.PrdName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("PRD_NAME");

                entity.Property(e => e.PrdNo)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("PRD_NO");

                entity.Property(e => e.PreItm).HasColumnName("PRE_ITM");

                entity.Property(e => e.PrmNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("PRM_NO");

                entity.Property(e => e.PwItm).HasColumnName("PW_ITM");

                entity.Property(e => e.QcFlag)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("QC_FLAG");

                entity.Property(e => e.Qty)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY");

                entity.Property(e => e.Qty1)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY1");

                entity.Property(e => e.Qty1Cfm)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY1_CFM");

                entity.Property(e => e.Qty1Fp)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY1_FP");

                entity.Property(e => e.Qty1Fp2)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY1_FP2");

                entity.Property(e => e.Qty1Lost)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY1_LOST");

                entity.Property(e => e.QtyCfm)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_CFM");

                entity.Property(e => e.QtyCfmUnsh)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_CFM_UNSH");

                entity.Property(e => e.QtyFa)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_FA");

                entity.Property(e => e.QtyFp)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_FP");

                entity.Property(e => e.QtyFp2)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_FP2");

                entity.Property(e => e.QtyLost)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_LOST");

                entity.Property(e => e.QtyLostUnsh)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_LOST_UNSH");

                entity.Property(e => e.Rem)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("REM");

                entity.Property(e => e.RkDd)
                    .HasColumnType("datetime")
                    .HasColumnName("RK_DD");

                entity.Property(e => e.RlRecev)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("RL_RECEV");

                entity.Property(e => e.RtnId)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("RTN_ID");

                entity.Property(e => e.ScDd)
                    .HasColumnType("datetime")
                    .HasColumnName("SC_DD");

                entity.Property(e => e.SupPrdMark)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("SUP_PRD_MARK");

                entity.Property(e => e.SupPrdNo)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("SUP_PRD_NO");

                entity.Property(e => e.TaskNo)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("TASK_NO");

                entity.Property(e => e.TaxFp)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("TAX_FP");

                entity.Property(e => e.TaxFp2)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("TAX_FP2");

                entity.Property(e => e.Unit)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("UNIT");

                entity.Property(e => e.Up)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("UP");

                entity.Property(e => e.UpCst)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("UP_CST");

                entity.Property(e => e.UpCstOut)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("UP_CST_OUT");

                entity.Property(e => e.UpIc)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("UP_IC");

                entity.Property(e => e.UpIn)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("UP_IN");

                entity.Property(e => e.UpMainI)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("UP_MAIN_I");

                entity.Property(e => e.UpMainIIfrs)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("UP_MAIN_I_IFRS");

                entity.Property(e => e.UpMainO)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("UP_MAIN_O");

                entity.Property(e => e.UpMainOIfrs)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("UP_MAIN_O_IFRS");

                entity.Property(e => e.UpQty1)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("UP_QTY1");

                entity.Property(e => e.UpQty1Cst)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("UP_QTY1_CST");

                entity.Property(e => e.UpQty1So)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("UP_QTY1_SO");

                entity.Property(e => e.UpSo)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("UP_SO");

                entity.Property(e => e.UpStd)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("UP_STD");

                entity.Property(e => e.UpStdIfrs)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("UP_STD_IFRS");

                entity.Property(e => e.Upr)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("UPR");

                entity.Property(e => e.Utname)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("UTNAME");

                entity.Property(e => e.ValidDd)
                    .HasColumnType("datetime")
                    .HasColumnName("VALID_DD");

                entity.Property(e => e.Wh1)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("WH1");

                entity.Property(e => e.Wh2)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("WH2");

                entity.HasOne(d => d.MidNavigation)
                    .WithMany(p => p.TfIc)
                    .HasForeignKey(d => d.Mid)
                    .HasConstraintName("FK_TF_IC_MF_IC");
            });

            modelBuilder.Entity<TfIj>(entity =>
            {
                entity.ToTable("TF_IJ");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.AddId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ADD_ID");

                entity.Property(e => e.Amtn)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("AMTN");

                entity.Property(e => e.BatNo)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("BAT_NO");

                entity.Property(e => e.BilId)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("BIL_ID");

                entity.Property(e => e.BilItm).HasColumnName("BIL_ITM");

                entity.Property(e => e.BilNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("BIL_NO");

                entity.Property(e => e.BoxItm).HasColumnName("BOX_ITM");

                entity.Property(e => e.CnttNo)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("CNTT_NO");

                entity.Property(e => e.ComposeIdno)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("COMPOSE_IDNO");

                entity.Property(e => e.Cst)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("CST");

                entity.Property(e => e.CstIfrs)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("CST_IFRS");

                entity.Property(e => e.CstStd)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("CST_STD");

                entity.Property(e => e.CstStdIfrs)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("CST_STD_IFRS");

                entity.Property(e => e.DepRk)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("DEP_RK");

                entity.Property(e => e.EstItm).HasColumnName("EST_ITM");

                entity.Property(e => e.FixCst)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("FIX_CST");

                entity.Property(e => e.GroupHdlDx)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("GROUP_HDL_DX");

                entity.Property(e => e.IdNo)
                    .HasMaxLength(38)
                    .IsUnicode(false)
                    .HasColumnName("ID_NO");

                entity.Property(e => e.IjDd)
                    .HasColumnType("datetime")
                    .HasColumnName("IJ_DD");

                entity.Property(e => e.IjId)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("IJ_ID");

                entity.Property(e => e.IjNo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IJ_NO");

                entity.Property(e => e.Ijid1)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("IJID");

                entity.Property(e => e.InPrice)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("IN_PRICE");

                entity.Property(e => e.Itm).HasColumnName("ITM");

                entity.Property(e => e.KeyItm).HasColumnName("KEY_ITM");

                entity.Property(e => e.MatrixItm).HasColumnName("MATRIX_ITM");

                entity.Property(e => e.Mid).HasColumnName("MID");

                entity.Property(e => e.PakExc)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("PAK_EXC");

                entity.Property(e => e.PakGw)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("PAK_GW");

                entity.Property(e => e.PakGwN)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("PAK_GW_N");

                entity.Property(e => e.PakMeast)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("PAK_MEAST");

                entity.Property(e => e.PakMeastUnit)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("PAK_MEAST_UNIT");

                entity.Property(e => e.PakNw)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("PAK_NW");

                entity.Property(e => e.PakNwN)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("PAK_NW_N");

                entity.Property(e => e.PakUnit)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("PAK_UNIT");

                entity.Property(e => e.PakWeightUnit)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("PAK_WEIGHT_UNIT");

                entity.Property(e => e.PrdMark)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("PRD_MARK")
                    .HasDefaultValueSql("(space((0)))");

                entity.Property(e => e.PrdName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("PRD_NAME");

                entity.Property(e => e.PrdNo)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("PRD_NO");

                entity.Property(e => e.PrdNoSoRes)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("PRD_NO_SO_RES");

                entity.Property(e => e.PreItm).HasColumnName("PRE_ITM");

                entity.Property(e => e.PwItm).HasColumnName("PW_ITM");

                entity.Property(e => e.QcFlag)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("QC_FLAG");

                entity.Property(e => e.Qty)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY");

                entity.Property(e => e.Qty1)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY1");

                entity.Property(e => e.Rem)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("REM");

                entity.Property(e => e.RkDd)
                    .HasColumnType("datetime")
                    .HasColumnName("RK_DD");

                entity.Property(e => e.ScDd)
                    .HasColumnType("datetime")
                    .HasColumnName("SC_DD");

                entity.Property(e => e.SpcNo)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("SPC_NO");

                entity.Property(e => e.SqId)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("SQ_ID");

                entity.Property(e => e.SqItm).HasColumnName("SQ_ITM");

                entity.Property(e => e.SqNo)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("SQ_NO");

                entity.Property(e => e.SupPrdMark)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("SUP_PRD_MARK");

                entity.Property(e => e.SupPrdNo)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("SUP_PRD_NO");

                entity.Property(e => e.Unit)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("UNIT");

                entity.Property(e => e.Up)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("UP");

                entity.Property(e => e.UpMain)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("UP_MAIN");

                entity.Property(e => e.UpMainIfrs)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("UP_MAIN_IFRS");

                entity.Property(e => e.UpStd)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("UP_STD");

                entity.Property(e => e.UpStdIfrs)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("UP_STD_IFRS");

                entity.Property(e => e.ValidDd)
                    .HasColumnType("datetime")
                    .HasColumnName("VALID_DD");

                entity.Property(e => e.Wh)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("WH");

                entity.Property(e => e.ZlLevel)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("ZL_LEVEL");

                entity.HasOne(d => d.MidNavigation)
                    .WithMany(p => p.TfIj)
                    .HasForeignKey(d => d.Mid)
                    .HasConstraintName("FK_TF_IJ_MF_IJ");
            });

            modelBuilder.Entity<TfJh>(entity =>
            {
                entity.ToTable("TF_JH");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BackId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("BACK_ID");

                entity.Property(e => e.BatNo)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("BAT_NO");

                entity.Property(e => e.Bomno)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("BOMNO");

                entity.Property(e => e.ClsMeId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CLS_ME_ID");

                entity.Property(e => e.ComposeIdno)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("COMPOSE_IDNO");

                entity.Property(e => e.CpySw)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CPY_SW");

                entity.Property(e => e.CusOsNo)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("CUS_OS_NO");

                entity.Property(e => e.EstDd)
                    .HasColumnType("datetime")
                    .HasColumnName("EST_DD");

                entity.Property(e => e.EstItm).HasColumnName("EST_ITM");

                entity.Property(e => e.IdNo)
                    .HasMaxLength(38)
                    .IsUnicode(false)
                    .HasColumnName("ID_NO");

                entity.Property(e => e.Itm).HasColumnName("ITM");

                entity.Property(e => e.JhDd)
                    .HasColumnType("datetime")
                    .HasColumnName("JH_DD");

                entity.Property(e => e.JhNo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("JH_NO");

                entity.Property(e => e.MaiNo)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("MAI_NO");

                entity.Property(e => e.Mid).HasColumnName("MID");

                entity.Property(e => e.MpClsId).HasColumnName("MP_CLS_ID");

                entity.Property(e => e.OsId)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("OS_ID");

                entity.Property(e => e.OsNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("OS_NO");

                entity.Property(e => e.PfNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("PF_NO");

                entity.Property(e => e.PlanStartDate).HasColumnType("datetime");

                entity.Property(e => e.PlannEndDate).HasColumnType("datetime");

                entity.Property(e => e.PrdMark)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("PRD_MARK")
                    .HasDefaultValueSql("(space((0)))");

                entity.Property(e => e.PrdName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("PRD_NAME");

                entity.Property(e => e.PrdNo)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("PRD_NO");

                entity.Property(e => e.PreItm).HasColumnName("PRE_ITM");

                entity.Property(e => e.Qty)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY");

                entity.Property(e => e.Qty1)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY1");

                entity.Property(e => e.QtyIc)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_IC");

                entity.Property(e => e.QtyIcUnsh)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_IC_UNSH");

                entity.Property(e => e.QtyIcsq)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_ICSQ");

                entity.Property(e => e.QtyIcsqUnsh)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_ICSQ_UNSH");

                entity.Property(e => e.QtyPo)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_PO");

                entity.Property(e => e.QtyPoUnsh)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_PO_UNSH");

                entity.Property(e => e.QtySo)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_SO");

                entity.Property(e => e.QtySoUnsh)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_SO_UNSH");

                entity.Property(e => e.QtySq)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_SQ");

                entity.Property(e => e.QtySqUnsh)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_SQ_UNSH");

                entity.Property(e => e.QtyUseWh)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_USE_WH");

                entity.Property(e => e.Rem)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("REM");

                entity.Property(e => e.StopDd)
                    .HasColumnType("datetime")
                    .HasColumnName("STOP_DD");

                entity.Property(e => e.StopUsr)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("STOP_USR");

                entity.Property(e => e.SupPrdMark)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("SUP_PRD_MARK");

                entity.Property(e => e.SupPrdNo)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("SUP_PRD_NO");

                entity.Property(e => e.Unit)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("UNIT");

                entity.Property(e => e.Wh)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("WH");

                entity.HasOne(d => d.MidNavigation)
                    .WithMany(p => p.TfJh)
                    .HasForeignKey(d => d.Mid)
                    .HasConstraintName("FK_TF_JH_MF_JH");
            });

            modelBuilder.Entity<TfJj>(entity =>
            {
                entity.ToTable("TF_JJ");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.AmtnBonu)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("AMTN_BONU");

                entity.Property(e => e.AmtnKc)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("AMTN_KC");

                entity.Property(e => e.AmtnUnit)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("AMTN_UNIT");

                entity.Property(e => e.BomNo)
                    .IsRequired()
                    .HasMaxLength(38)
                    .IsUnicode(false)
                    .HasColumnName("BOM_NO");

                entity.Property(e => e.Itm).HasColumnName("ITM");

                entity.Property(e => e.Mid).HasColumnName("MID");

                entity.Property(e => e.PrdMark)
                    .IsRequired()
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("PRD_MARK")
                    .HasDefaultValueSql("(space((0)))");

                entity.Property(e => e.PrdNo)
                    .IsRequired()
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("PRD_NO");

                entity.Property(e => e.Qty)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY");

                entity.Property(e => e.Rem)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.SebNo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("SEB_NO");

                entity.Property(e => e.UpDd)
                    .HasColumnType("datetime")
                    .HasColumnName("UP_DD");

                entity.Property(e => e.UpUnit)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("UP_UNIT");

                entity.Property(e => e.Ygxz)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("YGXZ");

                entity.Property(e => e.ZcNo)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ZC_NO");

                entity.HasOne(d => d.MidNavigation)
                    .WithMany(p => p.TfJj)
                    .HasForeignKey(d => d.Mid)
                    .HasConstraintName("FK_TF_JJ_MF_JJ");
            });

            modelBuilder.Entity<TfJxzbJs>(entity =>
            {
                entity.ToTable("TF_JXZB_JS");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Aimv).HasColumnName("AIMV");

                entity.Property(e => e.Emphazb).HasColumnName("EMPHAZB");

                entity.Property(e => e.Examdep)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("EXAMDEP");

                entity.Property(e => e.JxName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("JX_NAME");

                entity.Property(e => e.Jxv).HasColumnName("JXV");

                entity.Property(e => e.Memo)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("MEMO");

                entity.Property(e => e.Mid).HasColumnName("MID");

                entity.Property(e => e.SbKnd)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SB_KND");

                entity.Property(e => e.Type)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TYPE");

                entity.Property(e => e.Weakzb).HasColumnName("WEAKZB");

                entity.Property(e => e.Workshift)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("WORKSHIFT");

                entity.HasOne(d => d.MidNavigation)
                    .WithMany(p => p.TfJxzbJs)
                    .HasForeignKey(d => d.Mid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("FK_TF_JXZB_JS_MF_JXZB_JS");
            });

            modelBuilder.Entity<TfJxzbSz>(entity =>
            {
                entity.ToTable("TF_JXZB_SZ");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Aimv).HasColumnName("AIMV");

                entity.Property(e => e.Callv).HasColumnName("CALLV");

                entity.Property(e => e.Compformula)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("COMPFORMULA");

                entity.Property(e => e.Emphazb).HasColumnName("EMPHAZB");

                entity.Property(e => e.Examdep)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("EXAMDEP");

                entity.Property(e => e.JxName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("JX_NAME");

                entity.Property(e => e.Jxv).HasColumnName("JXV");

                entity.Property(e => e.Memo)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("MEMO");

                entity.Property(e => e.Mid).HasColumnName("MID");

                entity.Property(e => e.SbKnd)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SB_KND");

                entity.Property(e => e.Stanv).HasColumnName("STANV");

                entity.Property(e => e.Timeunit)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TIMEUNIT");

                entity.Property(e => e.Type)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TYPE");

                entity.Property(e => e.Weakzb).HasColumnName("WEAKZB");

                entity.HasOne(d => d.MidNavigation)
                    .WithMany(p => p.TfJxzbSz)
                    .HasForeignKey(d => d.Mid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("FK_TF_JXZB_SZ_MF_JXZB_SZ");
            });

            modelBuilder.Entity<TfMdInout>(entity =>
            {
                entity.ToTable("TF_MD_INOUT");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Mid).HasColumnName("MID");

                entity.Property(e => e.ModNo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("MOD_NO");

                entity.Property(e => e.ModStgState)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("MOD_STG_STATE");

                entity.Property(e => e.ModUseState)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("MOD_USE_STATE");

                entity.Property(e => e.StorageNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Wh)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("WH");

                entity.HasOne(d => d.MidNavigation)
                    .WithMany(p => p.TfMdInout)
                    .HasForeignKey(d => d.Mid)
                    .HasConstraintName("FK_TF_MD_INOUT_MF_MD_INOUT");
            });

            modelBuilder.Entity<TfMjaa>(entity =>
            {
                entity.ToTable("TF_MJAA");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.AaDd)
                    .HasColumnType("datetime")
                    .HasColumnName("AA_DD");

                entity.Property(e => e.AaNo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("AA_NO");

                entity.Property(e => e.BilId)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("BIL_ID");

                entity.Property(e => e.BilNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("BIL_NO");

                entity.Property(e => e.Cst)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("CST");

                entity.Property(e => e.DepUse)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("DEP_USE");

                entity.Property(e => e.FtMm).HasColumnName("FT_MM");

                entity.Property(e => e.FtType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("FT_TYPE");

                entity.Property(e => e.HoursAll)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("HOURS_ALL");

                entity.Property(e => e.IsUse)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("IS_USE");

                entity.Property(e => e.Itm).HasColumnName("ITM");

                entity.Property(e => e.ItmMj).HasColumnName("ITM_MJ");

                entity.Property(e => e.Mid).HasColumnName("MID");

                entity.Property(e => e.ModId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("MOD_ID");

                entity.Property(e => e.ModNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("MOD_NO");

                entity.Property(e => e.Name)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("NAME");

                entity.Property(e => e.PreItm).HasColumnName("PRE_ITM");

                entity.Property(e => e.QtyCrop)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_CROP");

                entity.Property(e => e.Rem)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("REM");

                entity.Property(e => e.SalNoBg)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("SAL_NO_BG");

                entity.Property(e => e.Spc)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("SPC");

                entity.Property(e => e.StateId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("STATE_ID");

                entity.Property(e => e.TiItm).HasColumnName("TI_ITM");

                entity.Property(e => e.UseNum).HasColumnName("USE_NUM");

                entity.Property(e => e.UseTimes).HasColumnName("USE_TIMES");

                entity.Property(e => e.Ut)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("UT");

                entity.Property(e => e.Wh)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("WH");

                entity.Property(e => e.WxTimes).HasColumnName("WX_TIMES");

                entity.HasOne(d => d.MidNavigation)
                    .WithMany(p => p.TfMjaa)
                    .HasForeignKey(d => d.Mid)
                    .HasConstraintName("FK_TF_MJAA_MF_MJAA");
            });

            modelBuilder.Entity<TfMl>(entity =>
            {
                entity.ToTable("TF_ML");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BatNo)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("BAT_NO");

                entity.Property(e => e.BeginningofPeriod)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("beginningofPeriod");

                entity.Property(e => e.BilItm).HasColumnName("BIL_ITM");

                entity.Property(e => e.BilNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("BIL_NO");

                entity.Property(e => e.EstItm).HasColumnName("EST_ITM");

                entity.Property(e => e.IdNo)
                    .HasMaxLength(38)
                    .IsUnicode(false)
                    .HasColumnName("ID_NO");

                entity.Property(e => e.IsLock)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Itm).HasColumnName("ITM");

                entity.Property(e => e.Mid).HasColumnName("MID");

                entity.Property(e => e.MlDd)
                    .HasColumnType("datetime")
                    .HasColumnName("ML_DD");

                entity.Property(e => e.MlId1)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ML_ID");

                entity.Property(e => e.MlNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ML_NO");

                entity.Property(e => e.Mlid)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("MLID");

                entity.Property(e => e.MoNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("MO_NO");

                entity.Property(e => e.PrdMark)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("PRD_MARK")
                    .HasDefaultValueSql("(space((0)))");

                entity.Property(e => e.PrdName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("PRD_NAME");

                entity.Property(e => e.PrdNo)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("PRD_NO");

                entity.Property(e => e.PreItm).HasColumnName("PRE_ITM");

                entity.Property(e => e.QlNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("QL_NO");

                entity.Property(e => e.Qty)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("QTY");

                entity.Property(e => e.QtyLeft)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_LEFT");

                entity.Property(e => e.QtyMl)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_ML");

                entity.Property(e => e.QtyOver)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_OVER");

                entity.Property(e => e.QtyQlGg)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_QL_GG");

                entity.Property(e => e.QtyRsv)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_RSV");

                entity.Property(e => e.QtyRtn)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_RTN");

                entity.Property(e => e.QtyStd)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_STD");

                entity.Property(e => e.QtyWh)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_WH");

                entity.Property(e => e.Rem)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("REM");

                entity.Property(e => e.RkDd)
                    .HasColumnType("datetime")
                    .HasColumnName("RK_DD");

                entity.Property(e => e.ScDd)
                    .HasColumnType("datetime")
                    .HasColumnName("SC_DD");

                entity.Property(e => e.TzNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("TZ_NO");

                entity.Property(e => e.Unit)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("UNIT");

                entity.Property(e => e.ValidDd)
                    .HasColumnType("datetime")
                    .HasColumnName("VALID_DD");

                entity.Property(e => e.Wh)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("WH");

                entity.Property(e => e.ZcNo)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ZC_NO");

                entity.Property(e => e.ZcPrd)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ZC_PRD");

                entity.HasOne(d => d.MidNavigation)
                    .WithMany(p => p.TfMl)
                    .HasForeignKey(d => d.Mid)
                    .HasConstraintName("FK_TF_ML_MF_ML");
            });

            modelBuilder.Entity<TfMm0>(entity =>
            {
                entity.ToTable("TF_MM0");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.AmtnVal)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("AMTN_VAL");

                entity.Property(e => e.BatNo)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("BAT_NO");

                entity.Property(e => e.BilId)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("BIL_ID");

                entity.Property(e => e.BilItm).HasColumnName("BIL_ITM");

                entity.Property(e => e.BilNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("BIL_NO");

                entity.Property(e => e.CalcId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CALC_ID");

                entity.Property(e => e.CasNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CAS_NO");

                entity.Property(e => e.CnttNo)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("CNTT_NO");

                entity.Property(e => e.Cst)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("CST");

                entity.Property(e => e.CstIfrs)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("CST_IFRS");

                entity.Property(e => e.CstMakIfrs)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("CST_MAK_IFRS");

                entity.Property(e => e.CstMake)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("CST_MAKE");

                entity.Property(e => e.CstMan)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("CST_MAN");

                entity.Property(e => e.CstManIfrs)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("CST_MAN_IFRS");

                entity.Property(e => e.CstOut)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("CST_OUT");

                entity.Property(e => e.CstOutIfrs)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("CST_OUT_IFRS");

                entity.Property(e => e.CstPrd)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("CST_PRD");

                entity.Property(e => e.CstPrdIfrs)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("CST_PRD_IFRS");

                entity.Property(e => e.CstSmakIfrs)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("CST_SMAK_IFRS");

                entity.Property(e => e.CstSmake)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("CST_SMAKE");

                entity.Property(e => e.CstSman)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("CST_SMAN");

                entity.Property(e => e.CstSmanIfrs)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("CST_SMAN_IFRS");

                entity.Property(e => e.CstSout)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("CST_SOUT");

                entity.Property(e => e.CstSoutIfrs)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("CST_SOUT_IFRS");

                entity.Property(e => e.CstSprd)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("CST_SPRD");

                entity.Property(e => e.CstSprdIfrs)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("CST_SPRD_IFRS");

                entity.Property(e => e.CstStd)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("CST_STD");

                entity.Property(e => e.CstStdIfrs)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("CST_STD_IFRS");

                entity.Property(e => e.CusOsNo)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("CUS_OS_NO");

                entity.Property(e => e.DcQtylost)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("DC_QTYLOST");

                entity.Property(e => e.Dep)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("DEP");

                entity.Property(e => e.DepRk)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("DEP_RK");

                entity.Property(e => e.EstItm).HasColumnName("EST_ITM");

                entity.Property(e => e.FcpTypeis1)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("FCP_TYPEIS1");

                entity.Property(e => e.FcpTypeis2)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("FCP_TYPEIS2");

                entity.Property(e => e.FreeId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("FREE_ID");

                entity.Property(e => e.GoWr)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("GO_WR");

                entity.Property(e => e.IdNo)
                    .HasMaxLength(38)
                    .IsUnicode(false)
                    .HasColumnName("ID_NO");

                entity.Property(e => e.Itm).HasColumnName("ITM");

                entity.Property(e => e.Mid).HasColumnName("MID");

                entity.Property(e => e.MlNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ML_NO");

                entity.Property(e => e.MmDd)
                    .HasColumnType("datetime")
                    .HasColumnName("MM_DD");

                entity.Property(e => e.MmId)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("MM_ID");

                entity.Property(e => e.MmItm).HasColumnName("MM_ITM");

                entity.Property(e => e.MmNo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("MM_NO");

                entity.Property(e => e.MoNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("MO_NO");

                entity.Property(e => e.OldMmId)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("OLD_MM_ID");

                entity.Property(e => e.OldMmNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("OLD_MM_NO");

                entity.Property(e => e.PrdMark)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("PRD_MARK");

                entity.Property(e => e.PrdName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("PRD_NAME");

                entity.Property(e => e.PrdNo)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("PRD_NO");

                entity.Property(e => e.PreItm).HasColumnName("PRE_ITM");

                entity.Property(e => e.QcFlag)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("QC_FLAG");

                entity.Property(e => e.Qty)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY");

                entity.Property(e => e.Qty1)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY1");

                entity.Property(e => e.Qty1Lost)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY1_LOST");

                entity.Property(e => e.QtyLost)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_LOST");

                entity.Property(e => e.QtyRtn)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_RTN");

                entity.Property(e => e.QtySa)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_SA");

                entity.Property(e => e.Rem)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("REM");

                entity.Property(e => e.RkDd)
                    .HasColumnType("datetime")
                    .HasColumnName("RK_DD");

                entity.Property(e => e.ScDd)
                    .HasColumnType("datetime")
                    .HasColumnName("SC_DD");

                entity.Property(e => e.SoNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("SO_NO");

                entity.Property(e => e.TaskId).HasColumnName("TASK_ID");

                entity.Property(e => e.TimeCnt)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("TIME_CNT");

                entity.Property(e => e.TimeScnt)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("TIME_SCNT");

                entity.Property(e => e.TwNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("TW_NO");

                entity.Property(e => e.Unit)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("UNIT");

                entity.Property(e => e.UpMain)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("UP_MAIN");

                entity.Property(e => e.UpMainIfrs)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("UP_MAIN_IFRS");

                entity.Property(e => e.UpStd)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("UP_STD");

                entity.Property(e => e.UpStdIfrs)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("UP_STD_IFRS");

                entity.Property(e => e.UsedStime)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("USED_STIME");

                entity.Property(e => e.UsedTime)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("USED_TIME");

                entity.Property(e => e.ValidDd)
                    .HasColumnType("datetime")
                    .HasColumnName("VALID_DD");

                entity.Property(e => e.Wh)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("WH");

                entity.Property(e => e.ZcFlag)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ZC_FLAG");

                entity.HasOne(d => d.MidNavigation)
                    .WithMany(p => p.TfMm0)
                    .HasForeignKey(d => d.Mid)
                    .HasConstraintName("FK_TF_MM0_MF_MM0");
            });

            modelBuilder.Entity<TfMmjh>(entity =>
            {
                entity.ToTable("TF_MMJH");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BatNo)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("BAT_NO");

                entity.Property(e => e.EstDd)
                    .HasColumnType("datetime")
                    .HasColumnName("EST_DD");

                entity.Property(e => e.EstItm).HasColumnName("EST_ITM");

                entity.Property(e => e.IdNo)
                    .HasMaxLength(38)
                    .IsUnicode(false)
                    .HasColumnName("ID_NO");

                entity.Property(e => e.Itm).HasColumnName("ITM");

                entity.Property(e => e.JhDd)
                    .HasColumnType("datetime")
                    .HasColumnName("JH_DD");

                entity.Property(e => e.JhNo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("JH_NO");

                entity.Property(e => e.Mid).HasColumnName("MID");

                entity.Property(e => e.PfNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("PF_NO");

                entity.Property(e => e.PrdMark)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("PRD_MARK")
                    .HasDefaultValueSql("(space((0)))");

                entity.Property(e => e.PrdName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("PRD_NAME");

                entity.Property(e => e.PrdNo)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("PRD_NO");

                entity.Property(e => e.Qty)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY");

                entity.Property(e => e.Qty1)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY1");

                entity.Property(e => e.QtyPt)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_PT");

                entity.Property(e => e.Rem)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.SupPrdNo)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("SUP_PRD_NO");

                entity.Property(e => e.Unit)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("UNIT");

                entity.Property(e => e.Wh)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("WH");

                entity.HasOne(d => d.MidNavigation)
                    .WithMany(p => p.TfMmjh)
                    .HasForeignKey(d => d.Mid)
                    .HasConstraintName("FK_TF_MMJH_MF_MMJH");
            });

            modelBuilder.Entity<TfMo>(entity =>
            {
                entity.ToTable("TF_MO");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BatNo)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("BAT_NO");

                entity.Property(e => e.ChgItm).HasColumnName("CHG_ITM");

                entity.Property(e => e.ChgRto)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("CHG_RTO");

                entity.Property(e => e.Cst)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("CST");

                entity.Property(e => e.CstMak)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("CST_MAK");

                entity.Property(e => e.CstMan)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("CST_MAN");

                entity.Property(e => e.CstMl)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("CST_ML");

                entity.Property(e => e.CstOut)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("CST_OUT");

                entity.Property(e => e.CstPrd)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("CST_PRD");

                entity.Property(e => e.EstItm).HasColumnName("EST_ITM");

                entity.Property(e => e.GrpNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("GRP_NO");

                entity.Property(e => e.IdNo)
                    .HasMaxLength(38)
                    .IsUnicode(false)
                    .HasColumnName("ID_NO");

                entity.Property(e => e.Itm).HasColumnName("ITM");

                entity.Property(e => e.LosRto)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("LOS_RTO");

                entity.Property(e => e.Mid).HasColumnName("MID");

                entity.Property(e => e.MoNo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("MO_NO");

                entity.Property(e => e.PrdMark)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("PRD_MARK")
                    .HasDefaultValueSql("(space((0)))");

                entity.Property(e => e.PrdName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("PRD_NAME");

                entity.Property(e => e.PrdNo)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("PRD_NO");

                entity.Property(e => e.PrdNoChg)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("PRD_NO_CHG");

                entity.Property(e => e.PreItm).HasColumnName("PRE_ITM");

                entity.Property(e => e.QcFlag)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("QC_FLAG");

                entity.Property(e => e.Qty)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY")
                    .HasDefaultValueSql("('0')");

                entity.Property(e => e.Qty1Dm)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY1_DM");

                entity.Property(e => e.Qty1Rsv)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY1_RSV");

                entity.Property(e => e.QtyBas)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_BAS");

                entity.Property(e => e.QtyBl)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_BL");

                entity.Property(e => e.QtyBlUnsh)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_BL_UNSH");

                entity.Property(e => e.QtyBom)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_BOM");

                entity.Property(e => e.QtyChgRto)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_CHG_RTO");

                entity.Property(e => e.QtyDm)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_DM");

                entity.Property(e => e.QtyDmUnsh)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_DM_UNSH");

                entity.Property(e => e.QtyLost)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_LOST");

                entity.Property(e => e.QtyQl)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_QL");

                entity.Property(e => e.QtyQlUnsh)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_QL_UNSH");

                entity.Property(e => e.QtyRsv)
                    .HasColumnType("numeric(22, 0)")
                    .HasColumnName("QTY_RSV");

                entity.Property(e => e.QtyStd)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_STD");

                entity.Property(e => e.QtyTs)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_TS")
                    .HasDefaultValueSql("('0')");

                entity.Property(e => e.QtyTsUnsh)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_TS_UNSH")
                    .HasDefaultValueSql("('0')");

                entity.Property(e => e.Rem)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("REM");

                entity.Property(e => e.SebNo)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("SEB_NO");

                entity.Property(e => e.TsItm).HasColumnName("TS_ITM");

                entity.Property(e => e.TwId).HasColumnName("TW_ID");

                entity.Property(e => e.Unit)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("UNIT");

                entity.Property(e => e.UseinNo)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("USEIN_NO");

                entity.Property(e => e.Wh)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("WH");

                entity.Property(e => e.ZcNo)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ZC_NO");

                entity.Property(e => e.ZcPrd)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ZC_PRD");

                entity.HasOne(d => d.MidNavigation)
                    .WithMany(p => p.TfMo)
                    .HasForeignKey(d => d.Mid)
                    .HasConstraintName("FK_TF_MO_MF_MO");
            });

            modelBuilder.Entity<TfMp1>(entity =>
            {
                entity.ToTable("TF_MP1");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BatNo)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("BAT_NO");

                entity.Property(e => e.BilId)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("BIL_ID");

                entity.Property(e => e.BomNo)
                    .HasMaxLength(38)
                    .IsUnicode(false)
                    .HasColumnName("BOM_NO");

                entity.Property(e => e.BomNoP)
                    .HasMaxLength(38)
                    .IsUnicode(false)
                    .HasColumnName("BOM_NO_P");

                entity.Property(e => e.ChgId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CHG_ID");

                entity.Property(e => e.ChgRto)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("CHG_RTO");

                entity.Property(e => e.ChgRtoStr)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("CHG_RTO_STR");

                entity.Property(e => e.CnttNo)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("CNTT_NO");

                entity.Property(e => e.CpySw)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CPY_SW");

                entity.Property(e => e.CusOsNo)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("CUS_OS_NO");

                entity.Property(e => e.Drc)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("DRC");

                entity.Property(e => e.EcnId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ECN_ID");

                entity.Property(e => e.EstDd)
                    .HasColumnType("datetime")
                    .HasColumnName("EST_DD");

                entity.Property(e => e.EstItm).HasColumnName("EST_ITM");

                entity.Property(e => e.EstItmstr)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("EST_ITMSTR");

                entity.Property(e => e.IdNo)
                    .HasMaxLength(38)
                    .IsUnicode(false)
                    .HasColumnName("ID_NO");

                entity.Property(e => e.Itm).HasColumnName("ITM");

                entity.Property(e => e.Llc).HasColumnName("LLC");

                entity.Property(e => e.Mid).HasColumnName("MID");

                entity.Property(e => e.MpNo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("MP_NO");

                entity.Property(e => e.MrpNo)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("MRP_NO");

                entity.Property(e => e.Number)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("NUMBER");

                entity.Property(e => e.OsItm).HasColumnName("OS_ITM");

                entity.Property(e => e.PoYes)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("PO_YES");

                entity.Property(e => e.PrdMark)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("PRD_MARK")
                    .HasDefaultValueSql("(space((0)))");

                entity.Property(e => e.PrdMark1)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("PRD_MARK1")
                    .HasDefaultValueSql("(space((0)))");

                entity.Property(e => e.PrdName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("PRD_NAME");

                entity.Property(e => e.PrdNo)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("PRD_NO");

                entity.Property(e => e.PrdNo1)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("PRD_NO1");

                entity.Property(e => e.PrdNoChg)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("PRD_NO_CHG");

                entity.Property(e => e.Qty)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY");

                entity.Property(e => e.QtyAdd)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_ADD");

                entity.Property(e => e.QtyBrw)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_BRW");

                entity.Property(e => e.QtyCtl)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_CTL");

                entity.Property(e => e.QtyJh)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_JH");

                entity.Property(e => e.QtyLost)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_LOST");

                entity.Property(e => e.QtyLrn)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_LRN");

                entity.Property(e => e.QtyMaxSo)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_MAX_SO");

                entity.Property(e => e.QtyMin)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_MIN");

                entity.Property(e => e.QtyNon)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_NON");

                entity.Property(e => e.QtyOnOdr)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_ON_ODR");

                entity.Property(e => e.QtyOnPrc)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_ON_PRC");

                entity.Property(e => e.QtyOnRsv)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_ON_RSV");

                entity.Property(e => e.QtyOnWay)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_ON_WAY");

                entity.Property(e => e.QtyPo)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_PO");

                entity.Property(e => e.QtyQ2Yl)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_Q2_YL");

                entity.Property(e => e.QtyQ3)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_Q3");

                entity.Property(e => e.QtySo)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_SO");

                entity.Property(e => e.QtySq)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_SQ");

                entity.Property(e => e.QtySqc)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_SQC");

                entity.Property(e => e.QtySqr)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_SQR");

                entity.Property(e => e.QtyStd)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_STD");

                entity.Property(e => e.QtySw)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_SW");

                entity.Property(e => e.QtyWsKc)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_WS_KC");

                entity.Property(e => e.QtyWx)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_WX");

                entity.Property(e => e.Rem)
                    .HasMaxLength(400)
                    .IsUnicode(false);

                entity.Property(e => e.SoNo)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("SO_NO");

                entity.Property(e => e.StaDd)
                    .HasColumnType("datetime")
                    .HasColumnName("STA_DD");

                entity.Property(e => e.Unit)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("UNIT");

                entity.Property(e => e.Up)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("UP");

                entity.Property(e => e.Wh)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("WH");

                entity.Property(e => e.ZcPrd)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ZC_PRD");
            });

            modelBuilder.Entity<TfMp2>(entity =>
            {
                entity.ToTable("TF_MP2");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.AddId).HasColumnName("ADD_ID");

                entity.Property(e => e.AmtPo)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("AMT_PO");

                entity.Property(e => e.AmtnPo)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("AMTN_PO");

                entity.Property(e => e.AmtnSo)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("AMTN_SO");

                entity.Property(e => e.BatNo)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("BAT_NO");

                entity.Property(e => e.ChgRto)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("CHG_RTO");

                entity.Property(e => e.CnttNo)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("CNTT_NO");

                entity.Property(e => e.CpySw)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CPY_SW");

                entity.Property(e => e.CurId)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CUR_ID");

                entity.Property(e => e.CusNo)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("CUS_NO");

                entity.Property(e => e.CusOsNo)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("CUS_OS_NO");

                entity.Property(e => e.DisCnt)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("DIS_CNT");

                entity.Property(e => e.DzId).HasColumnName("DZ_ID");

                entity.Property(e => e.EndDd)
                    .HasColumnType("datetime")
                    .HasColumnName("END_DD");

                entity.Property(e => e.EstDd)
                    .HasColumnType("datetime")
                    .HasColumnName("EST_DD");

                entity.Property(e => e.EstItm).HasColumnName("EST_ITM");

                entity.Property(e => e.FreeId).HasColumnName("FREE_ID");

                entity.Property(e => e.GroupBy)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("GROUP_BY");

                entity.Property(e => e.Itm).HasColumnName("ITM");

                entity.Property(e => e.KndCl)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("KND_CL");

                entity.Property(e => e.Mid).HasColumnName("MID");

                entity.Property(e => e.MpNo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("MP_NO");

                entity.Property(e => e.MrpNos)
                    .HasMaxLength(800)
                    .IsUnicode(false)
                    .HasColumnName("MRP_NOS");

                entity.Property(e => e.PoId).HasColumnName("PO_ID");

                entity.Property(e => e.PoNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("PO_NO");

                entity.Property(e => e.PrdMark)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("PRD_MARK")
                    .HasDefaultValueSql("(space((0)))");

                entity.Property(e => e.PrdName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("PRD_NAME");

                entity.Property(e => e.PrdNo)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("PRD_NO");

                entity.Property(e => e.PrdNoChg)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("PRD_NO_CHG");

                entity.Property(e => e.PreItm).HasColumnName("PRE_ITM");

                entity.Property(e => e.Qty)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY");

                entity.Property(e => e.Qty1)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY1");

                entity.Property(e => e.Qty1Al)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY1_AL");

                entity.Property(e => e.QtyAd)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_AD");

                entity.Property(e => e.QtyAl)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_AL");

                entity.Property(e => e.QtyLost)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_LOST");

                entity.Property(e => e.QtyMaxSo)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_MAX_SO");

                entity.Property(e => e.QtyNon)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_NON");

                entity.Property(e => e.QtyPo)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_PO");

                entity.Property(e => e.QtySo)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_SO");

                entity.Property(e => e.QtyStd)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_STD");

                entity.Property(e => e.Rem)
                    .HasMaxLength(400)
                    .IsUnicode(false);

                entity.Property(e => e.SalNo)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("SAL_NO");

                entity.Property(e => e.SoId)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("SO_ID");

                entity.Property(e => e.SoNo)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("SO_NO");

                entity.Property(e => e.StaDd)
                    .HasColumnType("datetime")
                    .HasColumnName("STA_DD");

                entity.Property(e => e.SupPrdMark)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("SUP_PRD_MARK");

                entity.Property(e => e.SupPrdNo)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("SUP_PRD_NO");

                entity.Property(e => e.Tflag)
                    .HasColumnName("TFlag")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Unit)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("UNIT");

                entity.Property(e => e.UpPo)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("UP_PO");

                entity.Property(e => e.UpQty1)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("UP_QTY1");

                entity.Property(e => e.UpSo)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("UP_SO");

                entity.Property(e => e.Wh)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("WH");
            });

            modelBuilder.Entity<TfMp3>(entity =>
            {
                entity.ToTable("TF_MP3");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.AmtTw)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("AMT_TW");

                entity.Property(e => e.AmtnSo)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("AMTN_SO");

                entity.Property(e => e.BatNo)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("BAT_NO");

                entity.Property(e => e.BilType)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("BIL_TYPE");

                entity.Property(e => e.BomNo)
                    .HasMaxLength(38)
                    .IsUnicode(false)
                    .HasColumnName("BOM_NO");

                entity.Property(e => e.CfId).HasColumnName("CF_ID");

                entity.Property(e => e.CnttNo)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("CNTT_NO");

                entity.Property(e => e.CpySw)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CPY_SW");

                entity.Property(e => e.Cst)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("CST");

                entity.Property(e => e.CurId)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CUR_ID");

                entity.Property(e => e.CusNo)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("CUS_NO");

                entity.Property(e => e.CusOsNo)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("CUS_OS_NO");

                entity.Property(e => e.DecItm).HasColumnName("DEC_ITM");

                entity.Property(e => e.Dep)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("DEP");

                entity.Property(e => e.DgMoNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("DG_MO_NO");

                entity.Property(e => e.Drc).HasColumnName("DRC");

                entity.Property(e => e.DzId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("DZ_ID");

                entity.Property(e => e.EndDd)
                    .HasColumnType("datetime")
                    .HasColumnName("END_DD");

                entity.Property(e => e.EstDd)
                    .HasColumnType("datetime")
                    .HasColumnName("EST_DD");

                entity.Property(e => e.EstItm).HasColumnName("EST_ITM");

                entity.Property(e => e.HbId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("HB_ID");

                entity.Property(e => e.HbItm).HasColumnName("HB_ITM");

                entity.Property(e => e.IdNo)
                    .HasMaxLength(38)
                    .IsUnicode(false)
                    .HasColumnName("ID_NO");

                entity.Property(e => e.Itm).HasColumnName("ITM");

                entity.Property(e => e.Llc).HasColumnName("LLC");

                entity.Property(e => e.Mid).HasColumnName("MID");

                entity.Property(e => e.MlByMm).HasColumnName("ML_BY_MM");

                entity.Property(e => e.MoNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("MO_NO");

                entity.Property(e => e.MoNoAdd)
                    .HasMaxLength(38)
                    .IsUnicode(false)
                    .HasColumnName("MO_NO_ADD");

                entity.Property(e => e.MpNo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("MP_NO");

                entity.Property(e => e.OsItm).HasColumnName("OS_ITM");

                entity.Property(e => e.PrdMark)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("PRD_MARK")
                    .HasDefaultValueSql("(space((0)))");

                entity.Property(e => e.PrdName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("PRD_NAME");

                entity.Property(e => e.PrdNo)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("PRD_NO");

                entity.Property(e => e.PreItm).HasColumnName("PRE_ITM");

                entity.Property(e => e.Qty)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY");

                entity.Property(e => e.Qty1)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY1");

                entity.Property(e => e.Qty1Am)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY1_AM");

                entity.Property(e => e.QtyAd)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_AD");

                entity.Property(e => e.QtyAm)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_AM");

                entity.Property(e => e.QtyMo)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_MO");

                entity.Property(e => e.QtyStd)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_STD");

                entity.Property(e => e.Rem)
                    .HasMaxLength(400)
                    .IsUnicode(false)
                    .HasColumnName("REM");

                entity.Property(e => e.SoId)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("SO_ID");

                entity.Property(e => e.SoNo)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("SO_NO");

                entity.Property(e => e.StaDd)
                    .HasColumnType("datetime")
                    .HasColumnName("STA_DD");

                entity.Property(e => e.Tflag)
                    .HasColumnName("TFlag")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.TwId).HasColumnName("TW_ID");

                entity.Property(e => e.Unit)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("UNIT");

                entity.Property(e => e.Up)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("UP");

                entity.Property(e => e.UpQty1)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("UP_QTY1");

                entity.Property(e => e.UpSo)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("UP_SO");

                entity.Property(e => e.UpTw)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("UP_TW");

                entity.Property(e => e.Wh)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("WH");
            });

            modelBuilder.Entity<TfMsc>(entity =>
            {
                entity.ToTable("TF_MSC");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.AmtnF)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("AMTN_F");

                entity.Property(e => e.BilId)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("BIL_ID");

                entity.Property(e => e.BilNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("BIL_NO");

                entity.Property(e => e.Cst)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("CST");

                entity.Property(e => e.Dep)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("DEP");

                entity.Property(e => e.Itm).HasColumnName("ITM");

                entity.Property(e => e.ItmMod).HasColumnName("ITM_MOD");

                entity.Property(e => e.Mid).HasColumnName("MID");

                entity.Property(e => e.ModNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("MOD_NO");

                entity.Property(e => e.MscDd)
                    .HasColumnType("datetime")
                    .HasColumnName("MSC_DD");

                entity.Property(e => e.MscNo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("MSC_NO");

                entity.Property(e => e.PreRtnDd)
                    .HasColumnType("datetime")
                    .HasColumnName("PRE_RTN_DD");

                entity.Property(e => e.Rem)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("REM");

                entity.Property(e => e.RtnDd)
                    .HasColumnType("datetime")
                    .HasColumnName("RTN_DD");

                entity.Property(e => e.SebNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("SEB_NO");

                entity.Property(e => e.ToOth)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TO_OTH");

                entity.HasOne(d => d.MidNavigation)
                    .WithMany(p => p.TfMsc)
                    .HasForeignKey(d => d.Mid)
                    .HasConstraintName("FK_TF_MSC_MF_MSC");
            });

            modelBuilder.Entity<TfPos>(entity =>
            {
                entity.ToTable("TF_POS");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Amt)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("AMT");

                entity.Property(e => e.AmtDisCnt)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("AMT_DIS_CNT");

                entity.Property(e => e.AmtLc)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("AMT_LC");

                entity.Property(e => e.Amtn)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("AMTN");

                entity.Property(e => e.AmtnCom)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("AMTN_COM");

                entity.Property(e => e.AmtnSal)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("AMTN_SAL");

                entity.Property(e => e.Attr)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("ATTR");

                entity.Property(e => e.BatNo)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("BAT_NO");

                entity.Property(e => e.BatNoOuter)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("BAT_NO_OUTER");

                entity.Property(e => e.BilId)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("BIL_ID");

                entity.Property(e => e.BoxItm).HasColumnName("BOX_ITM");

                entity.Property(e => e.BzKnd)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("BZ_KND");

                entity.Property(e => e.CfId)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CF_ID");

                entity.Property(e => e.ChkRep)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CHK_REP");

                entity.Property(e => e.ChkRtn)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CHK_RTN");

                entity.Property(e => e.ChkTax)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CHK_TAX");

                entity.Property(e => e.ClsMeId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CLS_ME_ID");

                entity.Property(e => e.ClsMpId).HasColumnName("CLS_MP_ID");

                entity.Property(e => e.CodeNo)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CODE_NO");

                entity.Property(e => e.ComposeIdno)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("COMPOSE_IDNO");

                entity.Property(e => e.CstStd)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("CST_STD");

                entity.Property(e => e.CusKhNo)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("CUS_KH_NO");

                entity.Property(e => e.CusOsNo)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("CUS_OS_NO");

                entity.Property(e => e.CylNo)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("CYL_NO");

                entity.Property(e => e.DateOfMf)
                    .HasColumnType("datetime")
                    .HasColumnName("DateOfMF");

                entity.Property(e => e.DefNo)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("DEF_NO");

                entity.Property(e => e.Detail)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("DETAIL");

                entity.Property(e => e.DisCnt)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("DIS_CNT");

                entity.Property(e => e.EstDd)
                    .HasColumnType("datetime")
                    .HasColumnName("EST_DD");

                entity.Property(e => e.EstItm).HasColumnName("EST_ITM");

                entity.Property(e => e.FhDd)
                    .HasColumnType("datetime")
                    .HasColumnName("FH_DD");

                entity.Property(e => e.FhNo)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("FH_NO");

                entity.Property(e => e.FreeId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("FREE_ID");

                entity.Property(e => e.FreeIdDef)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("FREE_ID_DEF");

                entity.Property(e => e.Frelation)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("FRELATION");

                entity.Property(e => e.GroupDep)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("GROUP_DEP");

                entity.Property(e => e.IdNo)
                    .HasMaxLength(38)
                    .IsUnicode(false)
                    .HasColumnName("ID_NO");

                entity.Property(e => e.IsSp)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("IS_SP");

                entity.Property(e => e.Isvir)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ISVIR");

                entity.Property(e => e.Itm).HasColumnName("ITM");

                entity.Property(e => e.JhId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("JH_ID");

                entity.Property(e => e.KeyItm).HasColumnName("KEY_ITM");

                entity.Property(e => e.KindNo)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("KIND_NO");

                entity.Property(e => e.MaiNo)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("MAI_NO");

                entity.Property(e => e.MatrixItm).HasColumnName("MATRIX_ITM");

                entity.Property(e => e.Mid).HasColumnName("MID");

                entity.Property(e => e.MoId)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("MO_ID");

                entity.Property(e => e.MoNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("MO_NO");

                entity.Property(e => e.MrpNos)
                    .HasMaxLength(800)
                    .IsUnicode(false)
                    .HasColumnName("MRP_NOS");

                entity.Property(e => e.MtnAllId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("MTN_ALL_ID");

                entity.Property(e => e.MtnDd)
                    .HasColumnType("datetime")
                    .HasColumnName("MTN_DD");

                entity.Property(e => e.MtnRem)
                    .HasColumnType("text")
                    .HasColumnName("MTN_REM");

                entity.Property(e => e.MtnType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("MTN_TYPE");

                entity.Property(e => e.No)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.OrItm).HasColumnName("OR_ITM");

                entity.Property(e => e.OsDd)
                    .HasColumnType("datetime")
                    .HasColumnName("OS_DD");

                entity.Property(e => e.OsId)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("OS_ID");

                entity.Property(e => e.OsNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("OS_NO");

                entity.Property(e => e.OthId)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("OTH_ID");

                entity.Property(e => e.OthItm).HasColumnName("OTH_ITM");

                entity.Property(e => e.OthItm1).HasColumnName("OTH_ITM1");

                entity.Property(e => e.OthNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("OTH_NO");

                entity.Property(e => e.PakExc)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("PAK_EXC");

                entity.Property(e => e.PakGw)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("PAK_GW");

                entity.Property(e => e.PakMeast)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("PAK_MEAST");

                entity.Property(e => e.PakMeastUnit)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("PAK_MEAST_UNIT");

                entity.Property(e => e.PakNw)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("PAK_NW");

                entity.Property(e => e.PakUnit)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("PAK_UNIT");

                entity.Property(e => e.PakWeightUnit)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("PAK_WEIGHT_UNIT");

                entity.Property(e => e.Picpath)
                    .HasMaxLength(128)
                    .IsUnicode(false)
                    .HasColumnName("PICPATH");

                entity.Property(e => e.PrdMark)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("PRD_MARK")
                    .HasDefaultValueSql("(space((0)))");

                entity.Property(e => e.PrdName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("PRD_NAME");

                entity.Property(e => e.PrdNameSoRes)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("PRD_NAME_SO_RES");

                entity.Property(e => e.PrdNo)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("PRD_NO");

                entity.Property(e => e.PrdNoSoRes)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("PRD_NO_SO_RES");

                entity.Property(e => e.PreEstDd)
                    .HasColumnType("datetime")
                    .HasColumnName("PRE_EST_DD");

                entity.Property(e => e.PreItm).HasColumnName("PRE_ITM");

                entity.Property(e => e.PriceId)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("PRICE_ID");

                entity.Property(e => e.PrmNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("PRM_NO");

                entity.Property(e => e.PromoId)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("PROMO_ID");

                entity.Property(e => e.QtNo)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("QT_NO");

                entity.Property(e => e.Qty)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY");

                entity.Property(e => e.Qty1)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY1");

                entity.Property(e => e.Qty1Ps)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY1_PS");

                entity.Property(e => e.Qty1PsUnsh)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY1_PS_UNSH");

                entity.Property(e => e.QtyAe)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_AE");

                entity.Property(e => e.QtyArk)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_ARK");

                entity.Property(e => e.QtyBack)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_BACK");

                entity.Property(e => e.QtyCkArk)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_CK_ARK");

                entity.Property(e => e.QtyFh)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_FH");

                entity.Property(e => e.QtyFhUnsh)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_FH_UNSH");

                entity.Property(e => e.QtyFrac1)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_FRAC1");

                entity.Property(e => e.QtyFrac2)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_FRAC2");

                entity.Property(e => e.QtyFrac3)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_FRAC3");

                entity.Property(e => e.QtyFrac4)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_FRAC4");

                entity.Property(e => e.QtyIc)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_IC");

                entity.Property(e => e.QtyIcUnsh)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_IC_UNSH");

                entity.Property(e => e.QtyIo)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_IO");

                entity.Property(e => e.QtyIoUnsh)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_IO_UNSH");

                entity.Property(e => e.QtyLock)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_LOCK");

                entity.Property(e => e.QtyLockCk)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_LOCK_CK");

                entity.Property(e => e.QtyLockCkUnsh)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_LOCK_CK_UNSH");

                entity.Property(e => e.QtyPo)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_PO");

                entity.Property(e => e.QtyPoUnsh)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_PO_UNSH");

                entity.Property(e => e.QtyPre)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_PRE");

                entity.Property(e => e.QtyPreArk)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_PRE_ARK");

                entity.Property(e => e.QtyPreUnsh)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_PRE_UNSH");

                entity.Property(e => e.QtyPs)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_PS");

                entity.Property(e => e.QtyPsArk)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_PS_ARK");

                entity.Property(e => e.QtyPsUnsh)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_PS_UNSH");

                entity.Property(e => e.QtyRk)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_RK");

                entity.Property(e => e.QtyRkUnsh)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_RK_UNSH");

                entity.Property(e => e.QtySl)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_SL");

                entity.Property(e => e.QtySlUnsh)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_SL_UNSH");

                entity.Property(e => e.QtySq)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_SQ");

                entity.Property(e => e.QtySqUnsh)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_SQ_UNSH");

                entity.Property(e => e.QtyUseWh)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_USE_WH");

                entity.Property(e => e.QtyYs)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_YS");

                entity.Property(e => e.QtyYsUnsh)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_YS_UNSH");

                entity.Property(e => e.RecordType).HasColumnName("RECORD_TYPE");

                entity.Property(e => e.Rem)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("REM");

                entity.Property(e => e.RemXp)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("REM_XP");

                entity.Property(e => e.Remark)
                    .HasMaxLength(300)
                    .IsUnicode(false)
                    .HasColumnName("REMARK");

                entity.Property(e => e.RemarkEng)
                    .HasMaxLength(300)
                    .IsUnicode(false)
                    .HasColumnName("REMARK_ENG");

                entity.Property(e => e.RtnDd)
                    .HasColumnType("datetime")
                    .HasColumnName("RTN_DD");

                entity.Property(e => e.ScmDd)
                    .HasColumnType("datetime")
                    .HasColumnName("SCM_DD");

                entity.Property(e => e.ScmUsr)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("SCM_USR");

                entity.Property(e => e.SendWh)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("SEND_WH");

                entity.Property(e => e.ShipNo)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("SHIP_NO");

                entity.Property(e => e.SourceId).HasColumnName("SOURCE_ID");

                entity.Property(e => e.SqId)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("SQ_ID");

                entity.Property(e => e.SqItm).HasColumnName("SQ_ITM");

                entity.Property(e => e.SqNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("SQ_NO");

                entity.Property(e => e.SupPrdMark)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("SUP_PRD_MARK");

                entity.Property(e => e.SupPrdNm)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("SUP_PRD_NM");

                entity.Property(e => e.SupPrdNo)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("SUP_PRD_NO");

                entity.Property(e => e.TaskNo)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("TASK_NO");

                entity.Property(e => e.Tax)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("TAX");

                entity.Property(e => e.TaxRto)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("TAX_RTO");

                entity.Property(e => e.TbOid)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("TB_OID");

                entity.Property(e => e.TrayNo)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("TRAY_NO");

                entity.Property(e => e.TrdId)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TRD_ID");

                entity.Property(e => e.TrdItm).HasColumnName("TRD_ITM");

                entity.Property(e => e.TrdNo)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("TRD_NO");

                entity.Property(e => e.TtRng).HasColumnName("TT_RNG");

                entity.Property(e => e.TtTypeIfrs)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TT_TYPE_IFRS");

                entity.Property(e => e.TtYmE)
                    .HasColumnType("datetime")
                    .HasColumnName("TT_YM_E");

                entity.Property(e => e.Unit)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("UNIT");

                entity.Property(e => e.Up)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("UP");

                entity.Property(e => e.Up1)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("UP1");

                entity.Property(e => e.UpNotax)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("UP_NOTAX");

                entity.Property(e => e.UpPo)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("UP_PO");

                entity.Property(e => e.UpSal)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("UP_SAL");

                entity.Property(e => e.UpStd)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("UP_STD");

                entity.Property(e => e.Ut)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("UT");

                entity.Property(e => e.ValidDd)
                    .HasColumnType("datetime")
                    .HasColumnName("VALID_DD");

                entity.Property(e => e.VerNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Ver_No");

                entity.Property(e => e.WcNo)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("WC_NO");

                entity.Property(e => e.Wh)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("WH");

                entity.Property(e => e.XpmNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("XPM_NO");

                entity.Property(e => e.XpmNo1)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("XPM_NO1");

                entity.Property(e => e.XpprdItm).HasColumnName("XPPRD_ITM");

                entity.Property(e => e.XpprdItm1).HasColumnName("XPPRD_ITM1");

                entity.Property(e => e.ZpBeizsmm)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("ZP_BEIZSMM");

                entity.Property(e => e.ZpChkval)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ZP_CHKVAL");

                entity.HasOne(d => d.MidNavigation)
                    .WithMany(p => p.TfPos)
                    .HasForeignKey(d => d.Mid)
                    .HasConstraintName("FK_TF_POS_MF_POS");
            });

            modelBuilder.Entity<TfPromv>(entity =>
            {
                entity.ToTable("TF_PROMV");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BarcodeNo)
                    .IsRequired()
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("BarcodeNO")
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.BatNo)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("BAT_NO")
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.DepName)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("DEP_NAME");

                entity.Property(e => e.DepNo)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("DEP_NO");

                entity.Property(e => e.Itm).HasColumnName("ITM");

                entity.Property(e => e.Mid).HasColumnName("MID");

                entity.Property(e => e.PrdName)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("PRD_NAME")
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.PrdNo)
                    .IsRequired()
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("PRD_NO")
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.PrdSpc)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("PRD_SPC")
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Qty)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Qty1)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY1")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.RbillNo)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("RBILL_NO")
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.RbillType)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("RBILL_TYPE");

                entity.Property(e => e.Unit)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("UNIT")
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.ZcName)
                    .IsRequired()
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("ZC_NAME")
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.ZcNo)
                    .IsRequired()
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("ZC_NO")
                    .HasDefaultValueSql("('')");

                entity.HasOne(d => d.MidNavigation)
                    .WithMany(p => p.TfPromv)
                    .HasForeignKey(d => d.Mid)
                    .HasConstraintName("FK_TF_PROMV_MF_PROMV");
            });

            modelBuilder.Entity<TfPss>(entity =>
            {
                entity.ToTable("TF_PSS");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.AddRems)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("ADD_REMS");

                entity.Property(e => e.Amt)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("AMT");

                entity.Property(e => e.AmtDisCnt)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("AMT_DIS_CNT");

                entity.Property(e => e.AmtFp)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("AMT_FP");

                entity.Property(e => e.AmtZgFp)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("AMT_ZG_FP");

                entity.Property(e => e.Amtn)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("AMTN");

                entity.Property(e => e.AmtnCom)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("AMTN_COM");

                entity.Property(e => e.AmtnEp)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("AMTN_EP");

                entity.Property(e => e.AmtnEp1)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("AMTN_EP1");

                entity.Property(e => e.AmtnEpIfrs)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("AMTN_EP_IFRS");

                entity.Property(e => e.AmtnFl)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("AMTN_FL");

                entity.Property(e => e.AmtnFt)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("AMTN_FT");

                entity.Property(e => e.AmtnIfrs)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("AMTN_IFRS");

                entity.Property(e => e.AmtnNet)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("AMTN_NET");

                entity.Property(e => e.AmtnNetFp)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("AMTN_NET_FP");

                entity.Property(e => e.AmtnNetIfrs)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("AMTN_NET_IFRS");

                entity.Property(e => e.AmtnNetZgFp)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("AMTN_NET_ZG_FP");

                entity.Property(e => e.AmtnOld)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("AMTN_OLD");

                entity.Property(e => e.AmtnRsv)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("AMTN_RSV");

                entity.Property(e => e.AmtnSale)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("AMTN_SALE");

                entity.Property(e => e.AmtnSnet)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("AMTN_SNET");

                entity.Property(e => e.Attr)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("ATTR");

                entity.Property(e => e.BDd)
                    .HasColumnType("datetime")
                    .HasColumnName("B_DD");

                entity.Property(e => e.BatNo)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("BAT_NO");

                entity.Property(e => e.BilNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("BIL_NO");

                entity.Property(e => e.BlOsId)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("BL_OS_ID");

                entity.Property(e => e.BlOsItm).HasColumnName("BL_OS_ITM");

                entity.Property(e => e.BlOsNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("BL_OS_NO");

                entity.Property(e => e.BoxItm).HasColumnName("BOX_ITM");

                entity.Property(e => e.BzKnd)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("BZ_KND");

                entity.Property(e => e.CfId)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CF_ID");

                entity.Property(e => e.CfmBilId)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("CFM_BIL_ID");

                entity.Property(e => e.CfmBilItm).HasColumnName("CFM_BIL_ITM");

                entity.Property(e => e.CfmBilNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CFM_BIL_NO");

                entity.Property(e => e.CfmDd)
                    .HasColumnType("datetime")
                    .HasColumnName("CFM_DD");

                entity.Property(e => e.CfmMan)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("CFM_MAN");

                entity.Property(e => e.ChkRtn)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CHK_RTN");

                entity.Property(e => e.ChkTax)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CHK_TAX");

                entity.Property(e => e.CkNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CK_NO");

                entity.Property(e => e.ClsId).HasColumnName("CLS_ID");

                entity.Property(e => e.CnttNo)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("CNTT_NO");

                entity.Property(e => e.CodeNo)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CODE_NO");

                entity.Property(e => e.ComposeIdno)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("COMPOSE_IDNO");

                entity.Property(e => e.CstMak)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("CST_MAK");

                entity.Property(e => e.CstMakIfrs)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("CST_MAK_IFRS");

                entity.Property(e => e.CstMan)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("CST_MAN");

                entity.Property(e => e.CstManIfrs)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("CST_MAN_IFRS");

                entity.Property(e => e.CstMl)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("CST_ML");

                entity.Property(e => e.CstMlIfrs)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("CST_ML_IFRS");

                entity.Property(e => e.CstOut)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("CST_OUT");

                entity.Property(e => e.CstOutIfrs)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("CST_OUT_IFRS");

                entity.Property(e => e.CstPrd)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("CST_PRD");

                entity.Property(e => e.CstPrdIfrs)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("CST_PRD_IFRS");

                entity.Property(e => e.CstSal)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("CST_SAL");

                entity.Property(e => e.CstSmak)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("CST_SMAK");

                entity.Property(e => e.CstSmakIfrs)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("CST_SMAK_IFRS");

                entity.Property(e => e.CstSman)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("CST_SMAN");

                entity.Property(e => e.CstSmanIfrs)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("CST_SMAN_IFRS");

                entity.Property(e => e.CstSout)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("CST_SOUT");

                entity.Property(e => e.CstSoutIfrs)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("CST_SOUT_IFRS");

                entity.Property(e => e.CstSprd)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("CST_SPRD");

                entity.Property(e => e.CstSprdIfrs)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("CST_SPRD_IFRS");

                entity.Property(e => e.CstStd)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("CST_STD");

                entity.Property(e => e.CstStdIfrs)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("CST_STD_IFRS");

                entity.Property(e => e.CstStdMl)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("CST_STD_ML");

                entity.Property(e => e.CstStdMlIfrs)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("CST_STD_ML_IFRS");

                entity.Property(e => e.CstnSal)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("CSTN_SAL");

                entity.Property(e => e.CstnSalIfrs)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("CSTN_SAL_IFRS");

                entity.Property(e => e.CusOsNo)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("CUS_OS_NO");

                entity.Property(e => e.DefNo)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("DEF_NO");

                entity.Property(e => e.DepRk)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("DEP_RK");

                entity.Property(e => e.DisCnt)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("DIS_CNT");

                entity.Property(e => e.DzDate)
                    .HasColumnType("datetime")
                    .HasColumnName("DZ_DATE");

                entity.Property(e => e.DzUsr)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("DZ_USR");

                entity.Property(e => e.EDd)
                    .HasColumnType("datetime")
                    .HasColumnName("E_DD");

                entity.Property(e => e.EstDd)
                    .HasColumnType("datetime")
                    .HasColumnName("EST_DD");

                entity.Property(e => e.EstItm).HasColumnName("EST_ITM");

                entity.Property(e => e.FhNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("FH_NO");

                entity.Property(e => e.FreeId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("FREE_ID");

                entity.Property(e => e.FreeIdDef)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("FREE_ID_DEF");

                entity.Property(e => e.FwFlag)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("FW_FLAG");

                entity.Property(e => e.GfNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("GF_NO");

                entity.Property(e => e.GroupCyHdl)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("GROUP_CY_HDL");

                entity.Property(e => e.GroupCyId)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("GROUP_CY_ID");

                entity.Property(e => e.GroupCyItm).HasColumnName("GROUP_CY_ITM");

                entity.Property(e => e.GroupCyNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("GROUP_CY_NO");

                entity.Property(e => e.GroupDxPcid)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("GROUP_DX_PCID");

                entity.Property(e => e.GroupDxPcno)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("GROUP_DX_PCNO");

                entity.Property(e => e.GroupHdlDx)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("GROUP_HDL_DX");

                entity.Property(e => e.IdNo)
                    .HasMaxLength(38)
                    .IsUnicode(false)
                    .HasColumnName("ID_NO");

                entity.Property(e => e.InvB2c)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("INV_B2C");

                entity.Property(e => e.IsSp)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("IS_SP");

                entity.Property(e => e.Itm).HasColumnName("ITM");

                entity.Property(e => e.ItmPosup).HasColumnName("ITM_POSUP");

                entity.Property(e => e.ItmYh).HasColumnName("ITM_YH");

                entity.Property(e => e.MaiNo)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("MAI_NO");

                entity.Property(e => e.MatrixItm).HasColumnName("MATRIX_ITM");

                entity.Property(e => e.MbNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("MB_NO");

                entity.Property(e => e.MbdisId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("MBDIS_ID");

                entity.Property(e => e.MeFlag)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ME_FLAG");

                entity.Property(e => e.Mid).HasColumnName("MID");

                entity.Property(e => e.MmId)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("MM_ID");

                entity.Property(e => e.MmItm).HasColumnName("MM_ITM");

                entity.Property(e => e.MmNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("MM_NO");

                entity.Property(e => e.MoNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("MO_NO");

                entity.Property(e => e.MtnRem)
                    .HasColumnType("text")
                    .HasColumnName("MTN_REM");

                entity.Property(e => e.NbBoxNo)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("NB_BOX_NO");

                entity.Property(e => e.NbZxNo)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("NB_ZX_NO");

                entity.Property(e => e.NojfId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("NOJF_ID");

                entity.Property(e => e.OmId)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("OM_ID");

                entity.Property(e => e.OmItm).HasColumnName("OM_ITM");

                entity.Property(e => e.OmNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("OM_NO");

                entity.Property(e => e.OsId)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("OS_ID");

                entity.Property(e => e.OsNo)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("OS_NO");

                entity.Property(e => e.OthItm).HasColumnName("OTH_ITM");

                entity.Property(e => e.PakExc)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("PAK_EXC");

                entity.Property(e => e.PakGw)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("PAK_GW");

                entity.Property(e => e.PakGwN)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("PAK_GW_N");

                entity.Property(e => e.PakMeast)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("PAK_MEAST");

                entity.Property(e => e.PakMeastUnit)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("PAK_MEAST_UNIT");

                entity.Property(e => e.PakNw)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("PAK_NW");

                entity.Property(e => e.PakNwN)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("PAK_NW_N");

                entity.Property(e => e.PakUnit)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("PAK_UNIT");

                entity.Property(e => e.PakWeightUnit)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("PAK_WEIGHT_UNIT");

                entity.Property(e => e.PkNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("PK_NO");

                entity.Property(e => e.PrdMark)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("PRD_MARK")
                    .HasDefaultValueSql("(space((0)))");

                entity.Property(e => e.PrdName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("PRD_NAME");

                entity.Property(e => e.PrdNo)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("PRD_NO");

                entity.Property(e => e.PrdNoSoRes)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("PRD_NO_SO_RES");

                entity.Property(e => e.PrdmoNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("PRDMO_NO");

                entity.Property(e => e.PreItm).HasColumnName("PRE_ITM");

                entity.Property(e => e.PriceId)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("PRICE_ID");

                entity.Property(e => e.PrmNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("PRM_NO");

                entity.Property(e => e.PromoId)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("PROMO_ID");

                entity.Property(e => e.PsDd)
                    .HasColumnType("datetime")
                    .HasColumnName("PS_DD");

                entity.Property(e => e.PsId)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("PS_ID");

                entity.Property(e => e.PsNo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("PS_NO");

                entity.Property(e => e.PwItm).HasColumnName("PW_ITM");

                entity.Property(e => e.QcFlag)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("QC_FLAG");

                entity.Property(e => e.QcItm).HasColumnName("QC_ITM");

                entity.Property(e => e.Qty)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY");

                entity.Property(e => e.Qty1)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY1");

                entity.Property(e => e.Qty1Fp)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY1_FP");

                entity.Property(e => e.Qty1Loss)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY1_LOSS");

                entity.Property(e => e.QtyArk)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_ARK");

                entity.Property(e => e.QtyCfm)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_CFM");

                entity.Property(e => e.QtyCk)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_CK");

                entity.Property(e => e.QtyCkUnsh)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_CK_UNSH");

                entity.Property(e => e.QtyFp)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_FP");

                entity.Property(e => e.QtyFx)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_FX");

                entity.Property(e => e.QtyFxUnsh)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_FX_UNSH");

                entity.Property(e => e.QtyGroupDxcy)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_GROUP_DXCY");

                entity.Property(e => e.QtyLoss)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_LOSS");

                entity.Property(e => e.QtyLost)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_LOST");

                entity.Property(e => e.QtyOi)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_OI");

                entity.Property(e => e.QtyOut)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_OUT");

                entity.Property(e => e.QtyPosSo)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_POS_SO");

                entity.Property(e => e.QtyPs)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_PS");

                entity.Property(e => e.QtyRtn)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_RTN");

                entity.Property(e => e.QtyRtnArk)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_RTN_ARK");

                entity.Property(e => e.QtyRtnUnsh)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_RTN_UNSH");

                entity.Property(e => e.QtySb)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_SB");

                entity.Property(e => e.QtySbUnsh)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_SB_UNSH");

                entity.Property(e => e.QtySq)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_SQ");

                entity.Property(e => e.QtySqUnsh)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_SQ_UNSH");

                entity.Property(e => e.QtyXb)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_XB");

                entity.Property(e => e.QtyXbUnsh)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_XB_UNSH");

                entity.Property(e => e.QtyZq)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_ZQ");

                entity.Property(e => e.Qtys)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTYS");

                entity.Property(e => e.Rem)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("REM");

                entity.Property(e => e.RemXp)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("REM_XP");

                entity.Property(e => e.RkDd)
                    .HasColumnType("datetime")
                    .HasColumnName("RK_DD");

                entity.Property(e => e.RkNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("RK_NO");

                entity.Property(e => e.RtoEp)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("RTO_EP");

                entity.Property(e => e.SalNo)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("SAL_NO");

                entity.Property(e => e.SalNo1)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("SAL_NO1");

                entity.Property(e => e.SbacChk)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SBAC_CHK");

                entity.Property(e => e.ScDd)
                    .HasColumnType("datetime")
                    .HasColumnName("SC_DD");

                entity.Property(e => e.SendWh)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("SEND_WH");

                entity.Property(e => e.ShNoCus)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("SH_NO_CUS");

                entity.Property(e => e.SlItm).HasColumnName("SL_ITM");

                entity.Property(e => e.SlNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("SL_NO");

                entity.Property(e => e.SourceId).HasColumnName("SOURCE_ID");

                entity.Property(e => e.SpNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("SP_NO");

                entity.Property(e => e.SpcNo)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("SPC_NO");

                entity.Property(e => e.SpcNo1)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("SPC_NO1");

                entity.Property(e => e.SupPrdMark)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("SUP_PRD_MARK");

                entity.Property(e => e.SupPrdNo)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("SUP_PRD_NO");

                entity.Property(e => e.TaskNo)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("TASK_NO");

                entity.Property(e => e.Tax)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("TAX");

                entity.Property(e => e.TaxFp)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("TAX_FP");

                entity.Property(e => e.TaxIfrs)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("TAX_IFRS");

                entity.Property(e => e.TaxRto)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("TAX_RTO");

                entity.Property(e => e.TaxZgFp)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("TAX_ZG_FP");

                entity.Property(e => e.Taxs)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("TAXS");

                entity.Property(e => e.TiItm).HasColumnName("TI_ITM");

                entity.Property(e => e.TrdId)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TRD_ID");

                entity.Property(e => e.TrdItm).HasColumnName("TRD_ITM");

                entity.Property(e => e.TrdNo)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("TRD_NO");

                entity.Property(e => e.TtRng).HasColumnName("TT_RNG");

                entity.Property(e => e.TtTypeIfrs)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TT_TYPE_IFRS");

                entity.Property(e => e.TtYmB)
                    .HasColumnType("datetime")
                    .HasColumnName("TT_YM_B");

                entity.Property(e => e.TtYmE)
                    .HasColumnType("datetime")
                    .HasColumnName("TT_YM_E");

                entity.Property(e => e.TypeSgt)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TYPE_SGT");

                entity.Property(e => e.Unit)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("UNIT");

                entity.Property(e => e.Up)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("UP");

                entity.Property(e => e.UpMain)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("UP_MAIN");

                entity.Property(e => e.UpMainIfrs)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("UP_MAIN_IFRS");

                entity.Property(e => e.UpOld)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("UP_OLD");

                entity.Property(e => e.UpQty1)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("UP_QTY1");

                entity.Property(e => e.UpSale)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("UP_SALE");

                entity.Property(e => e.UpSpSw)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("UP_SP_SW");

                entity.Property(e => e.UpStd)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("UP_STD");

                entity.Property(e => e.UpStdIfrs)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("UP_STD_IFRS");

                entity.Property(e => e.Ut)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("UT");

                entity.Property(e => e.ValidDd)
                    .HasColumnType("datetime")
                    .HasColumnName("VALID_DD");

                entity.Property(e => e.WcDd)
                    .HasColumnType("datetime")
                    .HasColumnName("WC_DD");

                entity.Property(e => e.Wh)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("WH");

                entity.Property(e => e.Wt)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("WT");

                entity.Property(e => e.XpmNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("XPM_NO");

                entity.Property(e => e.XpmNo1)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("XPM_NO1");

                entity.Property(e => e.XpprdItm).HasColumnName("XPPRD_ITM");

                entity.Property(e => e.XpprdItm1).HasColumnName("XPPRD_ITM1");

                entity.Property(e => e.YhId)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("YH_ID");

                entity.Property(e => e.YhNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("YH_NO");

                entity.Property(e => e.YmItm).HasColumnName("YM_ITM");

                entity.Property(e => e.YmNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("YM_NO");

                entity.Property(e => e.Zdzz)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ZDZZ");

                entity.Property(e => e.ZlLevel)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("ZL_LEVEL");

                entity.HasOne(d => d.MidNavigation)
                    .WithMany(p => p.TfPss)
                    .HasForeignKey(d => d.Mid)
                    .HasConstraintName("FK_TF_PSS_MF_PSS");
            });

            modelBuilder.Entity<TfQl>(entity =>
            {
                entity.ToTable("TF_QL");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BatNo)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("BAT_NO");

                entity.Property(e => e.BilId)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("BIL_ID");

                entity.Property(e => e.BilNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("BIL_NO");

                entity.Property(e => e.ChgItm).HasColumnName("CHG_ITM");

                entity.Property(e => e.ChgRto)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("CHG_RTO");

                entity.Property(e => e.CnttNo)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("CNTT_NO");

                entity.Property(e => e.CpySw)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CPY_SW");

                entity.Property(e => e.Cst)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("CST");

                entity.Property(e => e.CstStd)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("CST_STD");

                entity.Property(e => e.Dep)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("DEP");

                entity.Property(e => e.EstItm).HasColumnName("EST_ITM");

                entity.Property(e => e.IdNo)
                    .HasMaxLength(38)
                    .IsUnicode(false)
                    .HasColumnName("ID_NO");

                entity.Property(e => e.Itm).HasColumnName("ITM");

                entity.Property(e => e.LosRto)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("LOS_RTO");

                entity.Property(e => e.Mid).HasColumnName("MID");

                entity.Property(e => e.MoNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("MO_NO");

                entity.Property(e => e.PrdMark)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("PRD_MARK")
                    .HasDefaultValueSql("(space((0)))");

                entity.Property(e => e.PrdName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("PRD_NAME");

                entity.Property(e => e.PrdNo)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("PRD_NO");

                entity.Property(e => e.PrdNoChg)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("PRD_NO_CHG");

                entity.Property(e => e.PrdNoMo)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("PRD_NO_MO");

                entity.Property(e => e.PreItm).HasColumnName("PRE_ITM");

                entity.Property(e => e.PrtNum).HasColumnName("PRT_NUM");

                entity.Property(e => e.QlDd)
                    .HasColumnType("datetime")
                    .HasColumnName("QL_DD");

                entity.Property(e => e.QlId)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("QL_ID");

                entity.Property(e => e.QlNo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("QL_NO");

                entity.Property(e => e.QlType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("QL_TYPE");

                entity.Property(e => e.Qty)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY");

                entity.Property(e => e.Qty1)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY1");

                entity.Property(e => e.Qty1Rk)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY1_RK");

                entity.Property(e => e.Qty1Rtn)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY1_RTN");

                entity.Property(e => e.QtyChgRto)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_CHG_RTO");

                entity.Property(e => e.QtyDiff)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_DIFF");

                entity.Property(e => e.QtyLeft)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_LEFT");

                entity.Property(e => e.QtyLost)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_LOST");

                entity.Property(e => e.QtyLq)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_LQ");

                entity.Property(e => e.QtyQl)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_QL");

                entity.Property(e => e.QtyQlRtn)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_QL_RTN");

                entity.Property(e => e.QtyRk)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_RK");

                entity.Property(e => e.QtyRsv)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_RSV");

                entity.Property(e => e.QtyRtn)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_RTN");

                entity.Property(e => e.QtyRtnUnsh)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_RTN_UNSH");

                entity.Property(e => e.QtyStd)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_STD");

                entity.Property(e => e.Reason)
                    .HasColumnType("text")
                    .HasColumnName("REASON");

                entity.Property(e => e.Rem)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("REM");

                entity.Property(e => e.TzNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("TZ_NO");

                entity.Property(e => e.Unit)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("UNIT");

                entity.Property(e => e.UpStd)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("UP_STD");

                entity.Property(e => e.UseinNo)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("USEIN_NO");

                entity.Property(e => e.Wh)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("WH");

                entity.Property(e => e.ZcNo)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("ZC_NO");

                entity.Property(e => e.ZcPrd)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ZC_PRD");

                entity.HasOne(d => d.MidNavigation)
                    .WithMany(p => p.TfQl)
                    .HasForeignKey(d => d.Mid)
                    .HasConstraintName("FK_TF_QL_MF_QL");
            });

            modelBuilder.Entity<TfQyM>(entity =>
            {
                entity.ToTable("TF_QY_M");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BilId)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("BIL_ID");

                entity.Property(e => e.BilNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("BIL_NO");

                entity.Property(e => e.Itm).HasColumnName("ITM");

                entity.Property(e => e.ItmMj).HasColumnName("ITM_MJ");

                entity.Property(e => e.Mid).HasColumnName("MID");

                entity.Property(e => e.ModNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("MOD_NO");

                entity.Property(e => e.QyDd)
                    .HasColumnType("datetime")
                    .HasColumnName("QY_DD");

                entity.Property(e => e.QyNo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("QY_NO");

                entity.Property(e => e.Rem)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("REM");

                entity.Property(e => e.Wh)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("WH");

                entity.HasOne(d => d.MidNavigation)
                    .WithMany(p => p.TfQyM)
                    .HasForeignKey(d => d.Mid)
                    .HasConstraintName("FK_TF_QY_M_MF_QY_M");
            });

            modelBuilder.Entity<TfQyS>(entity =>
            {
                entity.ToTable("TF_QY_S");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BilId)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("BIL_ID");

                entity.Property(e => e.BilNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("BIL_NO");

                entity.Property(e => e.Itm).HasColumnName("ITM");

                entity.Property(e => e.ItmSb).HasColumnName("ITM_SB");

                entity.Property(e => e.Mid).HasColumnName("MID");

                entity.Property(e => e.QyDd)
                    .HasColumnType("datetime")
                    .HasColumnName("QY_DD");

                entity.Property(e => e.QyNo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("QY_NO");

                entity.Property(e => e.Rem)
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.Property(e => e.SebNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("SEB_NO");

                entity.HasOne(d => d.MidNavigation)
                    .WithMany(p => p.TfQyS)
                    .HasForeignKey(d => d.Mid)
                    .HasConstraintName("FK_TF_QY_S_MF_QY_S");
            });

            modelBuilder.Entity<TfRsc>(entity =>
            {
                entity.ToTable("TF_RSC");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BilId)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("BIL_ID");

                entity.Property(e => e.BilNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("BIL_NO");

                entity.Property(e => e.Itm).HasColumnName("ITM");

                entity.Property(e => e.ItmMod).HasColumnName("ITM_MOD");

                entity.Property(e => e.Mid).HasColumnName("MID");

                entity.Property(e => e.ModNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("MOD_NO");

                entity.Property(e => e.Rem)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("REM");

                entity.Property(e => e.RscDd)
                    .HasColumnType("datetime")
                    .HasColumnName("RSC_DD");

                entity.Property(e => e.RscNo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("RSC_NO");

                entity.Property(e => e.UseHours)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("USE_HOURS");

                entity.Property(e => e.UseNum).HasColumnName("USE_NUM");

                entity.Property(e => e.Wh)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("WH");

                entity.HasOne(d => d.MidNavigation)
                    .WithMany(p => p.TfRsc)
                    .HasForeignKey(d => d.Mid)
                    .HasConstraintName("FK_TF_RSC_MF_RSC");
            });

            modelBuilder.Entity<TfRxM>(entity =>
            {
                entity.ToTable("TF_RX_M");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.AddCrop)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("ADD_CROP");

                entity.Property(e => e.AddTime)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("ADD_TIME");

                entity.Property(e => e.AddYear)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("ADD_YEAR");

                entity.Property(e => e.Amt)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("AMT");

                entity.Property(e => e.AmtnNet)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("AMTN_NET");

                entity.Property(e => e.EpNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("EP_NO");

                entity.Property(e => e.ExpNo)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("EXP_NO");

                entity.Property(e => e.InvBilId)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("INV_BIL_ID");

                entity.Property(e => e.InvBilNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("INV_BIL_NO");

                entity.Property(e => e.InvNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("INV_NO");

                entity.Property(e => e.Itm).HasColumnName("ITM");

                entity.Property(e => e.ItmMj).HasColumnName("ITM_MJ");

                entity.Property(e => e.Mid).HasColumnName("MID");

                entity.Property(e => e.ModNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("MOD_NO");

                entity.Property(e => e.Rem)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("REM");

                entity.Property(e => e.RsDesp)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("RS_DESP");

                entity.Property(e => e.RsNo)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("RS_NO");

                entity.Property(e => e.RxDd)
                    .HasColumnType("datetime")
                    .HasColumnName("RX_DD");

                entity.Property(e => e.RxId)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("RX_ID");

                entity.Property(e => e.RxNo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("RX_NO");

                entity.Property(e => e.RxStatus)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("RX_STATUS");

                entity.Property(e => e.Spc)
                    .HasColumnType("text")
                    .HasColumnName("SPC");

                entity.Property(e => e.Tax)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("TAX");

                entity.Property(e => e.TaxRto)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("TAX_RTO");

                entity.Property(e => e.Wh)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("WH");

                entity.HasOne(d => d.MidNavigation)
                    .WithMany(p => p.TfRxM)
                    .HasForeignKey(d => d.Mid)
                    .HasConstraintName("FK_TF_RX_M_MF_RX_M");
            });

            modelBuilder.Entity<TfRxS>(entity =>
            {
                entity.ToTable("TF_RX_S");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BilId)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("BIL_ID");

                entity.Property(e => e.BilNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("BIL_NO");

                entity.Property(e => e.DepRep)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("DEP_REP");

                entity.Property(e => e.FaAppearance)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("FA_APPEARANCE");

                entity.Property(e => e.FaResson)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("FA_RESSON");

                entity.Property(e => e.FaType)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("FA_TYPE");

                entity.Property(e => e.Itm).HasColumnName("ITM");

                entity.Property(e => e.ItmSb).HasColumnName("ITM_SB");

                entity.Property(e => e.Lessons)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("LESSONS");

                entity.Property(e => e.Mid).HasColumnName("MID");

                entity.Property(e => e.Rem)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("REM");

                entity.Property(e => e.RsDesp)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("RS_DESP");

                entity.Property(e => e.RsNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("RS_NO");

                entity.Property(e => e.RxDd)
                    .HasColumnType("datetime")
                    .HasColumnName("RX_DD");

                entity.Property(e => e.RxId)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("RX_ID");

                entity.Property(e => e.RxNo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("RX_NO");

                entity.Property(e => e.SebName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("SEB_NAME");

                entity.Property(e => e.SebNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("SEB_NO");

                entity.Property(e => e.SebPart)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("SEB_PART");

                entity.Property(e => e.WxjContent)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("WXJ_CONTENT");

                entity.HasOne(d => d.MidNavigation)
                    .WithMany(p => p.TfRxS)
                    .HasForeignKey(d => d.Mid)
                    .HasConstraintName("FK_TF_RX_S_MF_RX_S");
            });

            modelBuilder.Entity<TfSbaa>(entity =>
            {
                entity.ToTable("TF_SBAA");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.AaDd)
                    .HasColumnType("datetime")
                    .HasColumnName("AA_DD");

                entity.Property(e => e.AaNo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("AA_NO");

                entity.Property(e => e.Adr)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("ADR");

                entity.Property(e => e.BilId)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("BIL_ID");

                entity.Property(e => e.BilNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("BIL_NO");

                entity.Property(e => e.Cst)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("CST");

                entity.Property(e => e.DepUse)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("DEP_USE");

                entity.Property(e => e.FxKnd)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("FX_KND");

                entity.Property(e => e.IsUse)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("IS_USE");

                entity.Property(e => e.Itm).HasColumnName("ITM");

                entity.Property(e => e.ItmSb).HasColumnName("ITM_SB");

                entity.Property(e => e.Mid).HasColumnName("MID");

                entity.Property(e => e.ModId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("MOD_ID");

                entity.Property(e => e.Name)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("NAME");

                entity.Property(e => e.PreItm).HasColumnName("PRE_ITM");

                entity.Property(e => e.Rem)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.SalNoBg)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("SAL_NO_BG");

                entity.Property(e => e.SebNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("SEB_NO");

                entity.Property(e => e.StateId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("STATE_ID");

                entity.Property(e => e.TiItm).HasColumnName("TI_ITM");

                entity.Property(e => e.Ut)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("UT");

                entity.HasOne(d => d.MidNavigation)
                    .WithMany(p => p.TfSbaa)
                    .HasForeignKey(d => d.Mid)
                    .HasConstraintName("FK_TF_SBAA_MF_SBAA");
            });

            modelBuilder.Entity<TfSbycbg>(entity =>
            {
                entity.ToTable("TF_SBYCBG");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Itm).HasColumnName("ITM");

                entity.Property(e => e.Mid).HasColumnName("MID");

                entity.Property(e => e.PreItm).HasColumnName("PRE_ITM");

                entity.Property(e => e.Rem)
                    .HasColumnType("text")
                    .HasColumnName("REM");

                entity.Property(e => e.YcDd)
                    .HasColumnType("datetime")
                    .HasColumnName("YC_DD");

                entity.Property(e => e.YcNo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("YC_NO");

                entity.Property(e => e.YcRea)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("YC_REA");

                entity.HasOne(d => d.MidNavigation)
                    .WithMany(p => p.TfSbycbg)
                    .HasForeignKey(d => d.Mid)
                    .HasConstraintName("FK_TF_SBYCBG_MF_SBYCBG");
            });

            modelBuilder.Entity<TfSbycbg1>(entity =>
            {
                entity.ToTable("TF_SBYCBG1");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.GjRea)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("GJ_REA");

                entity.Property(e => e.Itm).HasColumnName("ITM");

                entity.Property(e => e.Mid).HasColumnName("MID");

                entity.Property(e => e.PreItm).HasColumnName("PRE_ITM");

                entity.Property(e => e.Rem)
                    .HasColumnType("text")
                    .HasColumnName("REM");

                entity.Property(e => e.YcDd)
                    .HasColumnType("datetime")
                    .HasColumnName("YC_DD");

                entity.Property(e => e.YcNo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("YC_NO");
            });

            modelBuilder.Entity<TfSojh>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("TF_SOJH");

                entity.Property(e => e.BatNo)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("BAT_NO");

                entity.Property(e => e.BomNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("BOM_NO");

                entity.Property(e => e.CusNo)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("CUS_NO");

                entity.Property(e => e.CusOsNo)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("CUS_OS_NO");

                entity.Property(e => e.EstDd)
                    .HasColumnType("datetime")
                    .HasColumnName("EST_DD");

                entity.Property(e => e.Itm).HasColumnName("ITM");

                entity.Property(e => e.Knd)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("KND");

                entity.Property(e => e.OsDd)
                    .HasColumnType("datetime")
                    .HasColumnName("OS_DD");

                entity.Property(e => e.OsId)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("OS_ID");

                entity.Property(e => e.OsNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("OS_NO");

                entity.Property(e => e.PrdName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("PRD_NAME");

                entity.Property(e => e.PrdNo)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("PRD_NO");

                entity.Property(e => e.Qty)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY");

                entity.Property(e => e.QtyPo)
                    .HasColumnType("numeric(38, 0)")
                    .HasColumnName("QTY_PO");

                entity.Property(e => e.Rem)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("REM");

                entity.Property(e => e.Spc)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("SPC");

                entity.Property(e => e.Sup1)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("SUP1");

                entity.Property(e => e.Ut)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("UT");

                entity.Property(e => e.Wh)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("WH");
            });

            modelBuilder.Entity<TfSq>(entity =>
            {
                entity.ToTable("TF_SQ");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Amt)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("AMT");

                entity.Property(e => e.Amtn)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("AMTN");

                entity.Property(e => e.BatNo)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("BAT_NO");

                entity.Property(e => e.BilId)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("BIL_ID");

                entity.Property(e => e.BilItm).HasColumnName("BIL_ITM");

                entity.Property(e => e.BilNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("BIL_NO");

                entity.Property(e => e.ChkMan)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("CHK_MAN");

                entity.Property(e => e.ComposeIdno)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("COMPOSE_IDNO");

                entity.Property(e => e.CurId)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CUR_ID");

                entity.Property(e => e.CusNo)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("CUS_NO");

                entity.Property(e => e.CusOsNo)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("CUS_OS_NO");

                entity.Property(e => e.Dep)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("DEP");

                entity.Property(e => e.EstDd)
                    .HasColumnType("datetime")
                    .HasColumnName("EST_DD");

                entity.Property(e => e.EstItm).HasColumnName("EST_ITM");

                entity.Property(e => e.EstItmSo).HasColumnName("EST_ITM_SO");

                entity.Property(e => e.ExcRto)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("EXC_RTO");

                entity.Property(e => e.IdNo)
                    .HasMaxLength(38)
                    .IsUnicode(false)
                    .HasColumnName("ID_NO");

                entity.Property(e => e.IdxNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDX_NO");

                entity.Property(e => e.IsSend)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("IS_SEND");

                entity.Property(e => e.IsSp).HasColumnName("IS_SP");

                entity.Property(e => e.Ischeck)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ISCHECK");

                entity.Property(e => e.Itm).HasColumnName("ITM");

                entity.Property(e => e.LyId)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("LY_ID");

                entity.Property(e => e.LyItm).HasColumnName("LY_ITM");

                entity.Property(e => e.LyNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("LY_NO");

                entity.Property(e => e.Mid).HasColumnName("MID");

                entity.Property(e => e.MoId)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("MO_ID");

                entity.Property(e => e.MoNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("MO_NO");

                entity.Property(e => e.MrpNos)
                    .HasMaxLength(800)
                    .IsUnicode(false)
                    .HasColumnName("MRP_NOS");

                entity.Property(e => e.PrdMark)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("PRD_MARK")
                    .HasDefaultValueSql("(space((0)))");

                entity.Property(e => e.PrdName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("PRD_NAME");

                entity.Property(e => e.PrdNo)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("PRD_NO");

                entity.Property(e => e.PrdNoChg)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("PRD_NO_CHG");

                entity.Property(e => e.Qty)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY");

                entity.Property(e => e.Qty1)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY1");

                entity.Property(e => e.QtyHz)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_HZ");

                entity.Property(e => e.QtyHzUnsh)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_HZ_UNSH");

                entity.Property(e => e.QtyId)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_ID");

                entity.Property(e => e.QtyPo)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_PO");

                entity.Property(e => e.QtyPoUnsh)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_PO_UNSH");

                entity.Property(e => e.QtyQs)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_QS");

                entity.Property(e => e.QtyQsUnsh)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_QS_UNSH");

                entity.Property(e => e.Rem)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("REM");

                entity.Property(e => e.Remark)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("REMARK");

                entity.Property(e => e.SoId)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("SO_ID");

                entity.Property(e => e.SoNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("SO_NO");

                entity.Property(e => e.SqNo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("SQ_NO");

                entity.Property(e => e.SupPrdMark)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("SUP_PRD_MARK");

                entity.Property(e => e.SupPrdNo)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("SUP_PRD_NO");

                entity.Property(e => e.Unit)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("UNIT");

                entity.Property(e => e.UnitName)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("UNIT_NAME");

                entity.Property(e => e.Up)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("UP");

                entity.Property(e => e.UpQty1)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("UP_QTY1");

                entity.Property(e => e.Usr)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("USR");

                entity.Property(e => e.Wh)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("WH");

                entity.HasOne(d => d.MidNavigation)
                    .WithMany(p => p.TfSq)
                    .HasForeignKey(d => d.Mid)
                    .HasConstraintName("FK_TF_SQ_MF_SQ");
            });

            modelBuilder.Entity<TfSqd>(entity =>
            {
                entity.ToTable("TF_SQD");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BatNo)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("BAT_NO");

                entity.Property(e => e.EstItm).HasColumnName("EST_ITM");

                entity.Property(e => e.IdNo)
                    .HasMaxLength(38)
                    .IsUnicode(false)
                    .HasColumnName("ID_NO");

                entity.Property(e => e.Itm).HasColumnName("ITM");

                entity.Property(e => e.Mid).HasColumnName("MID");

                entity.Property(e => e.PrdMark)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("PRD_MARK")
                    .HasDefaultValueSql("(space((0)))");

                entity.Property(e => e.PrdNo)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("PRD_NO");

                entity.Property(e => e.PreItm).HasColumnName("PRE_ITM");

                entity.Property(e => e.Qty)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY");

                entity.Property(e => e.Qty1)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY1");

                entity.Property(e => e.QtyMl)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_ML");

                entity.Property(e => e.QtyMlUnsh)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_ML_UNSH");

                entity.Property(e => e.QtyMled)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_MLED");

                entity.Property(e => e.QtyMledUnsh)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_MLED_UNSH");

                entity.Property(e => e.Rem)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("REM");

                entity.Property(e => e.Spc)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("SPC");

                entity.Property(e => e.SpcNo)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("SPC_NO");

                entity.Property(e => e.SqId)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("SQ_ID");

                entity.Property(e => e.SqNo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("SQ_NO");

                entity.Property(e => e.Unit)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("UNIT");

                entity.Property(e => e.Wh)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("WH");

                entity.HasOne(d => d.MidNavigation)
                    .WithMany(p => p.TfSqd)
                    .HasForeignKey(d => d.Mid)
                    .HasConstraintName("FK_TF_SQD_MF_SQD");
            });

            modelBuilder.Entity<TfStM>(entity =>
            {
                entity.ToTable("TF_ST_M");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.AmtnBf)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("AMTN_BF");

                entity.Property(e => e.AmtnFt)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("AMTN_FT");

                entity.Property(e => e.Itm).HasColumnName("ITM");

                entity.Property(e => e.ItmMj).HasColumnName("ITM_MJ");

                entity.Property(e => e.Mid).HasColumnName("MID");

                entity.Property(e => e.ModNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("MOD_NO");

                entity.Property(e => e.OldStateId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("OLD_STATE_ID");

                entity.Property(e => e.OpnDd)
                    .HasColumnType("datetime")
                    .HasColumnName("OPN_DD");

                entity.Property(e => e.Rem)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("REM");

                entity.Property(e => e.RepNo)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("REP_NO");

                entity.Property(e => e.Spc)
                    .HasColumnType("text")
                    .HasColumnName("SPC");

                entity.Property(e => e.StDd)
                    .HasColumnType("datetime")
                    .HasColumnName("ST_DD");

                entity.Property(e => e.StId)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("ST_ID");

                entity.Property(e => e.StNo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ST_NO");

                entity.Property(e => e.ToOth)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TO_OTH");

                entity.HasOne(d => d.MidNavigation)
                    .WithMany(p => p.TfStM)
                    .HasForeignKey(d => d.Mid)
                    .HasConstraintName("FK_TF_ST_M_MF_ST_M");
            });

            modelBuilder.Entity<TfStS>(entity =>
            {
                entity.ToTable("TF_ST_S");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BilId)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("BIL_ID_");

                entity.Property(e => e.BilNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("BIL_NO_");

                entity.Property(e => e.Itm).HasColumnName("ITM");

                entity.Property(e => e.ItmSb).HasColumnName("ITM_SB");

                entity.Property(e => e.Mid).HasColumnName("MID");

                entity.Property(e => e.OpnDd)
                    .HasColumnType("datetime")
                    .HasColumnName("OPN_DD");

                entity.Property(e => e.Rem)
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.Property(e => e.RepNo)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("REP_NO");

                entity.Property(e => e.SebNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("SEB_NO");

                entity.Property(e => e.StDd)
                    .HasColumnType("datetime")
                    .HasColumnName("ST_DD");

                entity.Property(e => e.StNo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ST_NO");

                entity.Property(e => e.ToOth)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TO_OTH");

                entity.HasOne(d => d.MidNavigation)
                    .WithMany(p => p.TfStS)
                    .HasForeignKey(d => d.Mid)
                    .HasConstraintName("FK_TF_ST_S_MF_ST_S");
            });

            modelBuilder.Entity<TfTb>(entity =>
            {
                entity.ToTable("TF_TB");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Amt)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("AMT");

                entity.Property(e => e.AmtDisCnt)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("AMT_DIS_CNT");

                entity.Property(e => e.AmtFp)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("AMT_FP");

                entity.Property(e => e.AmtZgFp)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("AMT_ZG_FP");

                entity.Property(e => e.AmtnEp)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("AMTN_EP");

                entity.Property(e => e.AmtnEp1)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("AMTN_EP1");

                entity.Property(e => e.AmtnEpIfrs)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("AMTN_EP_IFRS");

                entity.Property(e => e.AmtnIfrs)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("AMTN_IFRS");

                entity.Property(e => e.AmtnNet)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("AMTN_NET");

                entity.Property(e => e.AmtnNetFp)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("AMTN_NET_FP");

                entity.Property(e => e.AmtnNetIfrs)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("AMTN_NET_IFRS");

                entity.Property(e => e.AmtnNetZgFp)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("AMTN_NET_ZG_FP");

                entity.Property(e => e.BatNo)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("BAT_NO");

                entity.Property(e => e.BilId)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("BIL_ID");

                entity.Property(e => e.BilItm).HasColumnName("BIL_ITM");

                entity.Property(e => e.BilNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("BIL_NO");

                entity.Property(e => e.ComposeIdno)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("COMPOSE_IDNO");

                entity.Property(e => e.CpySw)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CPY_SW");

                entity.Property(e => e.CstSmakIfrs)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("CST_SMAK_IFRS");

                entity.Property(e => e.CstSmanIfrs)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("CST_SMAN_IFRS");

                entity.Property(e => e.CstSoutIfrs)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("CST_SOUT_IFRS");

                entity.Property(e => e.CstSprdIfrs)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("CST_SPRD_IFRS");

                entity.Property(e => e.CstStd)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("CST_STD");

                entity.Property(e => e.CstStdIfrs)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("CST_STD_IFRS");

                entity.Property(e => e.CstStdMlIfrs)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("CST_STD_ML_IFRS");

                entity.Property(e => e.CusOsNo)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("CUS_OS_NO");

                entity.Property(e => e.DcQtylost)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("DC_QTYLOST");

                entity.Property(e => e.DepRk)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("DEP_RK");

                entity.Property(e => e.DisCnt)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("DIS_CNT");

                entity.Property(e => e.EstItm).HasColumnName("EST_ITM");

                entity.Property(e => e.FreeId).HasColumnName("FREE_ID");

                entity.Property(e => e.IdNo)
                    .HasMaxLength(38)
                    .IsUnicode(false)
                    .HasColumnName("ID_NO");

                entity.Property(e => e.Itm).HasColumnName("ITM");

                entity.Property(e => e.Mid).HasColumnName("MID");

                entity.Property(e => e.MlNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ML_NO");

                entity.Property(e => e.MmNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("MM_NO");

                entity.Property(e => e.MoNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("MO_NO");

                entity.Property(e => e.PakExc)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("PAK_EXC");

                entity.Property(e => e.PakGw)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("PAK_GW");

                entity.Property(e => e.PakGwN)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("PAK_GW_N");

                entity.Property(e => e.PakMeast)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("PAK_MEAST");

                entity.Property(e => e.PakMeastUnit)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("PAK_MEAST_UNIT");

                entity.Property(e => e.PakNw)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("PAK_NW");

                entity.Property(e => e.PakNwN)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("PAK_NW_N");

                entity.Property(e => e.PakUnit)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("PAK_UNIT");

                entity.Property(e => e.PakWeightUnit)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("PAK_WEIGHT_UNIT");

                entity.Property(e => e.PrdMark)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("PRD_MARK")
                    .HasDefaultValueSql("(space((0)))");

                entity.Property(e => e.PrdName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("PRD_NAME");

                entity.Property(e => e.PrdNo)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("PRD_NO");

                entity.Property(e => e.PreItm).HasColumnName("PRE_ITM");

                entity.Property(e => e.QcFlag)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("QC_FLAG");

                entity.Property(e => e.Qty)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY");

                entity.Property(e => e.Qty1)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY1");

                entity.Property(e => e.Qty1Fp)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY1_FP");

                entity.Property(e => e.Qty1Lost)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY1_LOST");

                entity.Property(e => e.QtyFp)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_FP");

                entity.Property(e => e.QtyLost)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_LOST");

                entity.Property(e => e.QtyRtn)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_RTN");

                entity.Property(e => e.QtyRtnUnsh)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_RTN_UNSH");

                entity.Property(e => e.Rem)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("REM");

                entity.Property(e => e.RkDd)
                    .HasColumnType("datetime")
                    .HasColumnName("RK_DD");

                entity.Property(e => e.RtoEp)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("RTO_EP");

                entity.Property(e => e.RtoTax)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("RTO_TAX");

                entity.Property(e => e.ScDd)
                    .HasColumnType("datetime")
                    .HasColumnName("SC_DD");

                entity.Property(e => e.ShNoCus)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("SH_NO_CUS");

                entity.Property(e => e.SlItm).HasColumnName("SL_ITM");

                entity.Property(e => e.SlNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("SL_NO");

                entity.Property(e => e.SupPrdMark)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("SUP_PRD_MARK");

                entity.Property(e => e.SupPrdNo)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("SUP_PRD_NO");

                entity.Property(e => e.TaskId).HasColumnName("TASK_ID");

                entity.Property(e => e.Tax)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("TAX");

                entity.Property(e => e.TaxFp)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("TAX_FP");

                entity.Property(e => e.TaxIfrs)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("TAX_IFRS");

                entity.Property(e => e.TaxZgFp)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("TAX_ZG_FP");

                entity.Property(e => e.TbNo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("TB_NO");

                entity.Property(e => e.TwId)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TW_ID");

                entity.Property(e => e.TwNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("TW_NO");

                entity.Property(e => e.TzNo2)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("TZ_NO2");

                entity.Property(e => e.Unit)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("UNIT");

                entity.Property(e => e.Up)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("UP");

                entity.Property(e => e.UpLost)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("UP_LOST");

                entity.Property(e => e.UpQty1)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("UP_QTY1");

                entity.Property(e => e.UpQty1Lost)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("UP_QTY1_LOST");

                entity.Property(e => e.UpStd)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("UP_STD");

                entity.Property(e => e.UpStdIfrs)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("UP_STD_IFRS");

                entity.Property(e => e.ValidDd)
                    .HasColumnType("datetime")
                    .HasColumnName("VALID_DD");

                entity.Property(e => e.Wh)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("WH");

                entity.HasOne(d => d.MidNavigation)
                    .WithMany(p => p.TfTb)
                    .HasForeignKey(d => d.Mid)
                    .HasConstraintName("FK_TF_TB_MF_TB");
            });

            modelBuilder.Entity<TfTi>(entity =>
            {
                entity.ToTable("TF_TI");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BDd)
                    .HasColumnType("datetime")
                    .HasColumnName("B_DD");

                entity.Property(e => e.BarCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.BatNo)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("BAT_NO");

                entity.Property(e => e.BilId)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("BIL_ID");

                entity.Property(e => e.BilNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("BIL_NO");

                entity.Property(e => e.CasNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CAS_NO");

                entity.Property(e => e.ChkResult)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CHK_RESULT");

                entity.Property(e => e.ChktyId).HasColumnName("CHKTY_ID");

                entity.Property(e => e.CkItm).HasColumnName("CK_ITM");

                entity.Property(e => e.CnttNo)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("CNTT_NO");

                entity.Property(e => e.ComposeIdno)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("COMPOSE_IDNO");

                entity.Property(e => e.CpySw)
                    .HasColumnName("CPY_SW")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.CusNo)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("CUS_NO");

                entity.Property(e => e.CusOsNo)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("CUS_OS_NO");

                entity.Property(e => e.DepRk)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("DEP_RK");

                entity.Property(e => e.EDd)
                    .HasColumnType("datetime")
                    .HasColumnName("E_DD");

                entity.Property(e => e.EstItm).HasColumnName("EST_ITM");

                entity.Property(e => e.FreeId)
                    .HasColumnName("FREE_ID")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.FxKnd)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("FX_KND");

                entity.Property(e => e.FxName)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("FX_NAME");

                entity.Property(e => e.FxNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("FX_NO");

                entity.Property(e => e.FxSpc)
                    .HasColumnType("text")
                    .HasColumnName("FX_SPC");

                entity.Property(e => e.FxUnit)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("FX_UNIT");

                entity.Property(e => e.GfNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("GF_NO");

                entity.Property(e => e.IdNo)
                    .HasMaxLength(38)
                    .IsUnicode(false)
                    .HasColumnName("ID_NO");

                entity.Property(e => e.IsSp)
                    .HasColumnName("IS_SP")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Itm).HasColumnName("ITM");

                entity.Property(e => e.Mid).HasColumnName("MID");

                entity.Property(e => e.MmNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("MM_NO");

                entity.Property(e => e.NewmatFlag)
                    .HasColumnName("NEWMAT_FLAG")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.PrdMark)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("PRD_MARK")
                    .HasDefaultValueSql("(space((0)))");

                entity.Property(e => e.PrdName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("PRD_NAME");

                entity.Property(e => e.PrdNo)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("PRD_NO");

                entity.Property(e => e.PreItm).HasColumnName("PRE_ITM");

                entity.Property(e => e.PrjType)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("PRJ_TYPE");

                entity.Property(e => e.ProduDd)
                    .HasColumnType("datetime")
                    .HasColumnName("PRODU_DD");

                entity.Property(e => e.Qty)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY");

                entity.Property(e => e.Qty1)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY1");

                entity.Property(e => e.Qty1Rtn)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY1_RTN");

                entity.Property(e => e.Qty1RtnUnsh)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY1_RTN_UNSH");

                entity.Property(e => e.QtyCus)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_CUS");

                entity.Property(e => e.QtyPs)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_PS");

                entity.Property(e => e.QtyPsUnsh)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_PS_UNSH");

                entity.Property(e => e.QtyRck)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_RCK");

                entity.Property(e => e.QtyRckUnsh)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_RCK_UNSH");

                entity.Property(e => e.QtyRk)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_RK");

                entity.Property(e => e.QtyRtn)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_RTN");

                entity.Property(e => e.QtyRtnUnsh)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_RTN_UNSH");

                entity.Property(e => e.RBusiNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("R_BusiNO");

                entity.Property(e => e.RMid).HasColumnName("R_MID");

                entity.Property(e => e.RSid).HasColumnName("R_SID");

                entity.Property(e => e.Rem)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("REM");

                entity.Property(e => e.RkDd)
                    .HasColumnType("datetime")
                    .HasColumnName("RK_DD");

                entity.Property(e => e.ShNoCus)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("SH_NO_CUS");

                entity.Property(e => e.SlItm).HasColumnName("SL_ITM");

                entity.Property(e => e.SlNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("SL_NO");

                entity.Property(e => e.SupPrdMark)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("SUP_PRD_MARK");

                entity.Property(e => e.SupPrdNo)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("SUP_PRD_NO");

                entity.Property(e => e.TaskId).HasColumnName("TASK_ID");

                entity.Property(e => e.TiNo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("TI_NO");

                entity.Property(e => e.TrdId)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TRD_ID");

                entity.Property(e => e.TrdNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("TRD_NO");

                entity.Property(e => e.Unit)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("UNIT");

                entity.Property(e => e.UsedTime)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("USED_TIME");

                entity.Property(e => e.ValidDd)
                    .HasColumnType("datetime")
                    .HasColumnName("VALID_DD");

                entity.Property(e => e.Wh)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("WH");

                entity.Property(e => e.XrfQcflag)
                    .HasColumnName("XRF_QCFLAG")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.XrfSample)
                    .HasColumnName("XRF_SAMPLE")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.YhNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("YH_NO");

                entity.Property(e => e.ZcNo)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ZC_NO");

                entity.HasOne(d => d.MidNavigation)
                    .WithMany(p => p.TfTi)
                    .HasForeignKey(d => d.Mid)
                    .HasConstraintName("FK_TF_TI_MF_TI");
            });

            modelBuilder.Entity<TfTw>(entity =>
            {
                entity.ToTable("TF_TW");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BatNo)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("BAT_NO");

                entity.Property(e => e.ChgItm).HasColumnName("CHG_ITM");

                entity.Property(e => e.ChgRto)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("CHG_RTO");

                entity.Property(e => e.CnttNo)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("CNTT_NO");

                entity.Property(e => e.ComposeIdno)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("COMPOSE_IDNO");

                entity.Property(e => e.CpySw)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CPY_SW");

                entity.Property(e => e.CqFlg)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CQ_FLG");

                entity.Property(e => e.Cst)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("CST");

                entity.Property(e => e.CstStd)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("CST_STD");

                entity.Property(e => e.EstItm).HasColumnName("EST_ITM");

                entity.Property(e => e.IdNo)
                    .HasMaxLength(38)
                    .IsUnicode(false)
                    .HasColumnName("ID_NO");

                entity.Property(e => e.Itm).HasColumnName("ITM");

                entity.Property(e => e.LosRto)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("LOS_RTO");

                entity.Property(e => e.Mid).HasColumnName("MID");

                entity.Property(e => e.PakExc)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("PAK_EXC");

                entity.Property(e => e.PakGw)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("PAK_GW");

                entity.Property(e => e.PakGwN)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("PAK_GW_N");

                entity.Property(e => e.PakMeast)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("PAK_MEAST");

                entity.Property(e => e.PakMeastUnit)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("PAK_MEAST_UNIT");

                entity.Property(e => e.PakNw)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("PAK_NW");

                entity.Property(e => e.PakNwN)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("PAK_NW_N");

                entity.Property(e => e.PakUnit)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("PAK_UNIT");

                entity.Property(e => e.PakWeightUnit)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("PAK_WEIGHT_UNIT");

                entity.Property(e => e.PrdMark)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("PRD_MARK")
                    .HasDefaultValueSql("(space((0)))");

                entity.Property(e => e.PrdName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("PRD_NAME");

                entity.Property(e => e.PrdNo)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("PRD_NO");

                entity.Property(e => e.PrdNoChg)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("PRD_NO_CHG");

                entity.Property(e => e.PreItm).HasColumnName("PRE_ITM");

                entity.Property(e => e.Qty)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY");

                entity.Property(e => e.Qty1)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY1");

                entity.Property(e => e.Qty1Dm)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY1_DM");

                entity.Property(e => e.Qty1DmUnsh)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY1_DM_UNSH");

                entity.Property(e => e.Qty1Ql)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY1_QL");

                entity.Property(e => e.Qty1QlUnsh)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY1_QL_UNSH");

                entity.Property(e => e.QtyBl)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_BL");

                entity.Property(e => e.QtyBlUnsh)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_BL_UNSH");

                entity.Property(e => e.QtyChgRto)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_CHG_RTO");

                entity.Property(e => e.QtyDm)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_DM");

                entity.Property(e => e.QtyDmUnsh)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_DM_UNSH");

                entity.Property(e => e.QtyLost)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_LOST");

                entity.Property(e => e.QtyQl)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_QL");

                entity.Property(e => e.QtyQlUnsh)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_QL_UNSH");

                entity.Property(e => e.QtyQlYl)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_QL_YL");

                entity.Property(e => e.QtyQlYlUnsh)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_QL_YL_UNSH");

                entity.Property(e => e.QtyRsv)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_RSV");

                entity.Property(e => e.QtyRtn)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_RTN")
                    .HasDefaultValueSql("('0')");

                entity.Property(e => e.QtyRtnUnsh)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_RTN_UNSH")
                    .HasDefaultValueSql("('0')");

                entity.Property(e => e.QtyStd)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_STD");

                entity.Property(e => e.QtyTs)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_TS")
                    .HasDefaultValueSql("('0')");

                entity.Property(e => e.QtyTsUnsh)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_TS_UNSH")
                    .HasDefaultValueSql("('0')");

                entity.Property(e => e.Rem)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("REM");

                entity.Property(e => e.TsItm).HasColumnName("TS_ITM");

                entity.Property(e => e.TwNo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("TW_NO");

                entity.Property(e => e.Unit)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("UNIT");

                entity.Property(e => e.UpStd)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("UP_STD");

                entity.Property(e => e.UpStdIfrs)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("UP_STD_IFRS");

                entity.Property(e => e.UseinNo)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("USEIN_NO");

                entity.Property(e => e.Wh)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("WH");

                entity.Property(e => e.WtNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("WT_NO");

                entity.Property(e => e.ZcPrd)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ZC_PRD");

                entity.HasOne(d => d.MidNavigation)
                    .WithMany(p => p.TfTw)
                    .HasForeignKey(d => d.Mid)
                    .HasConstraintName("FK_TF_TW_MF_TW");
            });

            modelBuilder.Entity<TfTy>(entity =>
            {
                entity.ToTable("TF_TY");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Amt)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("AMT");

                entity.Property(e => e.AmtDisCnt)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("AMT_DIS_CNT");

                entity.Property(e => e.Amtn)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("AMTN");

                entity.Property(e => e.AutoMv)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("AUTO_MV");

                entity.Property(e => e.BatNo)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("BAT_NO");

                entity.Property(e => e.BilFlag).HasColumnName("BIL_FLAG");

                entity.Property(e => e.BilNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("BIL_NO");

                entity.Property(e => e.BuildBil)
                    .HasMaxLength(26)
                    .IsUnicode(false)
                    .HasColumnName("BUILD_BIL");

                entity.Property(e => e.BuildBilId)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("BUILD_BIL_ID");

                entity.Property(e => e.CasNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CAS_NO");

                entity.Property(e => e.ChkResult)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CHK_RESULT");

                entity.Property(e => e.CkItm).HasColumnName("CK_ITM");

                entity.Property(e => e.CnttNo)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("CNTT_NO");

                entity.Property(e => e.ComposeIdno)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("COMPOSE_IDNO");

                entity.Property(e => e.CpySw)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CPY_SW");

                entity.Property(e => e.CusOsNo)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("CUS_OS_NO");

                entity.Property(e => e.DepRk)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("DEP_RK");

                entity.Property(e => e.EstBuildBil)
                    .HasMaxLength(26)
                    .IsUnicode(false)
                    .HasColumnName("EST_BUILD_BIL");

                entity.Property(e => e.EstItm).HasColumnName("EST_ITM");

                entity.Property(e => e.FreeId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("FREE_ID");

                entity.Property(e => e.FxName)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("FX_NAME");

                entity.Property(e => e.FxNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("FX_NO");

                entity.Property(e => e.GfNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("GF_NO");

                entity.Property(e => e.IdNo)
                    .HasMaxLength(38)
                    .IsUnicode(false)
                    .HasColumnName("ID_NO");

                entity.Property(e => e.Itm).HasColumnName("ITM");

                entity.Property(e => e.KeyItm).HasColumnName("KEY_ITM");

                entity.Property(e => e.LsNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("LS_NO");

                entity.Property(e => e.Mid).HasColumnName("MID");

                entity.Property(e => e.MmId)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("MM_ID");

                entity.Property(e => e.MmNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("MM_NO");

                entity.Property(e => e.MoNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("MO_NO");

                entity.Property(e => e.MvtoNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("MVTO_NO");

                entity.Property(e => e.PcNo)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("PC_NO");

                entity.Property(e => e.PrcId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("PRC_ID");

                entity.Property(e => e.PrdMark)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("PRD_MARK")
                    .HasDefaultValueSql("(space((0)))");

                entity.Property(e => e.PrdName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("PRD_NAME");

                entity.Property(e => e.PrdNo)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("PRD_NO");

                entity.Property(e => e.PreItm).HasColumnName("PRE_ITM");

                entity.Property(e => e.ProduDd)
                    .HasColumnType("datetime")
                    .HasColumnName("PRODU_DD");

                entity.Property(e => e.QcUp)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QC_UP");

                entity.Property(e => e.QcValueAvg)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("QC_VALUE_AVG");

                entity.Property(e => e.Qty1Chk)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY1_CHK");

                entity.Property(e => e.Qty1Lost)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY1_LOST");

                entity.Property(e => e.Qty1Ok)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY1_OK");

                entity.Property(e => e.QtyChk)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_CHK");

                entity.Property(e => e.QtyLost)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_LOST");

                entity.Property(e => e.QtyLostRtn)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_LOST_RTN");

                entity.Property(e => e.QtyLostRtnUnsh)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_LOST_RTN_UNSH");

                entity.Property(e => e.QtyOk)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_OK");

                entity.Property(e => e.QtyOkRtn)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_OK_RTN");

                entity.Property(e => e.QtyOkRtnUnsh)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_OK_RTN_UNSH");

                entity.Property(e => e.QtyPre)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_PRE");

                entity.Property(e => e.QtyPreUnsh)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_PRE_UNSH");

                entity.Property(e => e.QtyQc)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_QC");

                entity.Property(e => e.QtyRtn)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_RTN");

                entity.Property(e => e.RechkDd)
                    .HasColumnType("datetime")
                    .HasColumnName("RECHK_DD");

                entity.Property(e => e.Rem)
                    .HasColumnType("text")
                    .HasColumnName("REM");

                entity.Property(e => e.RkDd)
                    .HasColumnType("datetime")
                    .HasColumnName("RK_DD");

                entity.Property(e => e.RkNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("RK_NO");

                entity.Property(e => e.RtnId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("RTN_ID");

                entity.Property(e => e.ShNoCus)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("SH_NO_CUS");

                entity.Property(e => e.SlNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("SL_NO");

                entity.Property(e => e.SpcNo)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("SPC_NO");

                entity.Property(e => e.TaskId).HasColumnName("TASK_ID");

                entity.Property(e => e.Tax)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("TAX");

                entity.Property(e => e.TaxRto)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("TAX_RTO");

                entity.Property(e => e.TiItm)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("TI_ITM");

                entity.Property(e => e.TiNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("TI_NO");

                entity.Property(e => e.TyId)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("TY_ID");

                entity.Property(e => e.TyNo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("TY_NO");

                entity.Property(e => e.Unit)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("UNIT");

                entity.Property(e => e.Up)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("UP");

                entity.Property(e => e.UsedTime)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("USED_TIME");

                entity.Property(e => e.ValidDd)
                    .HasColumnType("datetime")
                    .HasColumnName("VALID_DD");

                entity.Property(e => e.ValidDdNew)
                    .HasColumnType("datetime")
                    .HasColumnName("VALID_DD_NEW");

                entity.Property(e => e.Wh)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("WH");

                entity.Property(e => e.ZcNo)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ZC_NO");

                entity.HasOne(d => d.MidNavigation)
                    .WithMany(p => p.TfTy)
                    .HasForeignKey(d => d.Mid)
                    .HasConstraintName("FK_TF_TY_MF_TY");
            });

            modelBuilder.Entity<TfTz>(entity =>
            {
                entity.ToTable("TF_TZ");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BatNo)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("BAT_NO");

                entity.Property(e => e.ChgItm).HasColumnName("CHG_ITM");

                entity.Property(e => e.ChgRto)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("CHG_RTO");

                entity.Property(e => e.Cst)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("CST");

                entity.Property(e => e.CstMak)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("CST_MAK");

                entity.Property(e => e.CstMan)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("CST_MAN");

                entity.Property(e => e.CstMl)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("CST_ML");

                entity.Property(e => e.CstOut)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("CST_OUT");

                entity.Property(e => e.CstPrd)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("CST_PRD");

                entity.Property(e => e.EstItm).HasColumnName("EST_ITM");

                entity.Property(e => e.IdNo)
                    .HasMaxLength(38)
                    .IsUnicode(false)
                    .HasColumnName("ID_NO");

                entity.Property(e => e.Itm).HasColumnName("ITM");

                entity.Property(e => e.LosRto)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("LOS_RTO");

                entity.Property(e => e.Mid).HasColumnName("MID");

                entity.Property(e => e.PrdMark)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("PRD_MARK")
                    .HasDefaultValueSql("(space((0)))");

                entity.Property(e => e.PrdNo)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("PRD_NO");

                entity.Property(e => e.PrdNoChg)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("PRD_NO_CHG");

                entity.Property(e => e.PreItm).HasColumnName("PRE_ITM");

                entity.Property(e => e.QcFlag)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("QC_FLAG");

                entity.Property(e => e.Qty)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY");

                entity.Property(e => e.Qty1)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY1");

                entity.Property(e => e.QtyBl)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_BL");

                entity.Property(e => e.QtyBlUnsh)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_BL_UNSH");

                entity.Property(e => e.QtyChgRto)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_CHG_RTO");

                entity.Property(e => e.QtyDm)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_DM");

                entity.Property(e => e.QtyDmUnsh)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_DM_UNSH");

                entity.Property(e => e.QtyLost)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_LOST");

                entity.Property(e => e.QtyQl)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_QL");

                entity.Property(e => e.QtyQlUnsh)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_QL_UNSH");

                entity.Property(e => e.QtyRsv)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_RSV");

                entity.Property(e => e.QtyRtn)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_RTN")
                    .HasDefaultValueSql("('0')");

                entity.Property(e => e.QtyStd)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_STD");

                entity.Property(e => e.QtyTs)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_TS")
                    .HasDefaultValueSql("('0')");

                entity.Property(e => e.QtyTsUnsh)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_TS_UNSH")
                    .HasDefaultValueSql("('0')");

                entity.Property(e => e.Rem)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("REM");

                entity.Property(e => e.TsItm).HasColumnName("TS_ITM");

                entity.Property(e => e.TzNo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("TZ_NO");

                entity.Property(e => e.Unit)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("UNIT");

                entity.Property(e => e.UseinNo)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("USEIN_NO");

                entity.Property(e => e.Wh)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("WH");

                entity.Property(e => e.ZcPrd)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ZC_PRD");

                entity.HasOne(d => d.MidNavigation)
                    .WithMany(p => p.TfTz)
                    .HasForeignKey(d => d.Mid)
                    .HasConstraintName("FK_TF_TZ_MF_TZ");
            });

            modelBuilder.Entity<TfUnqcRecord>(entity =>
            {
                entity.ToTable("TF_UNQC_RECORD");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Mid).HasColumnName("MID");

                entity.Property(e => e.Rem)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("REM");

                entity.Property(e => e.UnqcModel)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("UNQC_MODEL");

                entity.Property(e => e.UnqcQty).HasColumnName("UNQC_QTY");

                entity.Property(e => e.UnqcReason)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("UNQC_REASON");

                entity.Property(e => e.UnqcType)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("UNQC_TYPE");

                entity.HasOne(d => d.MidNavigation)
                    .WithMany(p => p.TfUnqcRecord)
                    .HasForeignKey(d => d.Mid)
                    .HasConstraintName("FK_TF_UNQC_RECORD_MF_UNQC_RECORD");
            });

            modelBuilder.Entity<TfUnqcdspInfos>(entity =>
            {
                entity.ToTable("TF_UNQCDSP_INFOS");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Itm).HasColumnName("ITM");

                entity.Property(e => e.Mid).HasColumnName("MID");

                entity.Property(e => e.ModNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("MOD_NO");

                entity.Property(e => e.Qcdate)
                    .HasColumnType("datetime")
                    .HasColumnName("QCDATE");

                entity.Property(e => e.SebNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SEB_NO");

                entity.Property(e => e.SpcGrade)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("SPC_GRADE");

                entity.Property(e => e.SpcName)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("SPC_NAME");

                entity.Property(e => e.SpcNo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SPC_NO");

                entity.HasOne(d => d.MidNavigation)
                    .WithMany(p => p.TfUnqcdspInfos)
                    .HasForeignKey(d => d.Mid)
                    .HasConstraintName("FK_TF_UNQCDSP_INFOS_TF_UNQCPRDHL");
            });

            modelBuilder.Entity<TfUnqcprdhl>(entity =>
            {
                entity.ToTable("TF_UNQCPRDHL");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BanNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("BAN_NO");

                entity.Property(e => e.BarCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Content)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("CONTENT");

                entity.Property(e => e.Dept)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("DEPT");

                entity.Property(e => e.DspDd)
                    .HasColumnType("datetime")
                    .HasColumnName("DSP_DD");

                entity.Property(e => e.HlResult)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("HL_Result");

                entity.Property(e => e.Itm).HasColumnName("ITM");

                entity.Property(e => e.Mid).HasColumnName("MID");

                entity.Property(e => e.MoNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("MO_NO");

                entity.Property(e => e.PassCtrl)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.Qty)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY");

                entity.Property(e => e.Rem)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("REM");

                entity.Property(e => e.RespZcno)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("RESP_ZCNO");

                entity.Property(e => e.SalNo)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("SAL_NO");

                entity.Property(e => e.SpcDescr)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("SPC_DESCR");

                entity.Property(e => e.SpcGrade)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("SPC_GRADE");

                entity.Property(e => e.SpcNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("SPC_NO");

                entity.Property(e => e.SteelNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("STEEL_NO");

                entity.Property(e => e.SysDd)
                    .HasColumnType("datetime")
                    .HasColumnName("SYS_DD")
                    .HasDefaultValueSql("(getdate())");

                entity.HasOne(d => d.MidNavigation)
                    .WithMany(p => p.TfUnqcprdhl)
                    .HasForeignKey(d => d.Mid)
                    .HasConstraintName("FK_TF_UNQCPRDHL_MF_UNQCPRDHL");
            });

            modelBuilder.Entity<TfVhid>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("TF_VHID");

                entity.Property(e => e.AccExp)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ACC_EXP");

                entity.Property(e => e.AccNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ACC_NO");

                entity.Property(e => e.BilId)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("BIL_ID");

                entity.Property(e => e.Dc)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("DC");

                entity.Property(e => e.Dsr)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("DSR");

                entity.Property(e => e.GetHeadrem)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("GET_HEADREM");

                entity.Property(e => e.Itm).HasColumnName("ITM");

                entity.Property(e => e.PreItm).HasColumnName("PRE_ITM");

                entity.Property(e => e.RemFrom)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("REM_FROM");

                entity.Property(e => e.RemId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("REM_ID");

                entity.Property(e => e.RemSel)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("REM_SEL");

                entity.Property(e => e.VohId)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("VOH_ID");
            });

            modelBuilder.Entity<TfWjM>(entity =>
            {
                entity.ToTable("TF_WJ_M");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.AmtnF)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("AMTN_F");

                entity.Property(e => e.BDdRep)
                    .HasColumnType("datetime")
                    .HasColumnName("B_DD_REP");

                entity.Property(e => e.EDdRep)
                    .HasColumnType("datetime")
                    .HasColumnName("E_DD_REP");

                entity.Property(e => e.Itm).HasColumnName("ITM");

                entity.Property(e => e.ItmMj).HasColumnName("ITM_MJ");

                entity.Property(e => e.Mid).HasColumnName("MID");

                entity.Property(e => e.ModNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("MOD_NO");

                entity.Property(e => e.Rem)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("REM");

                entity.Property(e => e.RepNo)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("REP_NO");

                entity.Property(e => e.RsDesp)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("RS_DESP");

                entity.Property(e => e.RsNo)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("RS_NO");

                entity.Property(e => e.Spc)
                    .HasColumnType("text")
                    .HasColumnName("SPC");

                entity.Property(e => e.ToOth)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TO_OTH");

                entity.Property(e => e.WxjDd)
                    .HasColumnType("datetime")
                    .HasColumnName("WXJ_DD");

                entity.Property(e => e.WxjId)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("WXJ_ID");

                entity.Property(e => e.WxjNo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("WXJ_NO");

                entity.HasOne(d => d.MidNavigation)
                    .WithMany(p => p.TfWjM)
                    .HasForeignKey(d => d.Mid)
                    .HasConstraintName("FK_TF_WJ_M_MF_WJ_M");
            });

            modelBuilder.Entity<TfWjS>(entity =>
            {
                entity.ToTable("TF_WJ_S");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BDdRep)
                    .HasColumnType("datetime")
                    .HasColumnName("B_DD_REP");

                entity.Property(e => e.EDdRep)
                    .HasColumnType("datetime")
                    .HasColumnName("E_DD_REP");

                entity.Property(e => e.Fa)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("FA");

                entity.Property(e => e.FaAppearance)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("FA_Appearance");

                entity.Property(e => e.FaLevel)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("FA_Level");

                entity.Property(e => e.FaType)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("FA_TYPE");

                entity.Property(e => e.Itm).HasColumnName("ITM");

                entity.Property(e => e.ItmSb).HasColumnName("ITM_SB");

                entity.Property(e => e.Lessons)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("LESSONS");

                entity.Property(e => e.Mid).HasColumnName("MID");

                entity.Property(e => e.Rem)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("REM");

                entity.Property(e => e.RepNo)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("REP_NO");

                entity.Property(e => e.RsDesp)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("RS_DESP");

                entity.Property(e => e.RsNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("RS_NO");

                entity.Property(e => e.SebName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SEB_NAME");

                entity.Property(e => e.SebNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SEB_NO");

                entity.Property(e => e.SebPart)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("SEB_Part");

                entity.Property(e => e.ToOth)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TO_OTH");

                entity.Property(e => e.WxjContent)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("WXJ_CONTENT");

                entity.Property(e => e.WxjDd)
                    .HasColumnType("datetime")
                    .HasColumnName("WXJ_DD");

                entity.Property(e => e.WxjId)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("WXJ_ID");

                entity.Property(e => e.WxjNo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("WXJ_NO");

                entity.HasOne(d => d.MidNavigation)
                    .WithMany(p => p.TfWjS)
                    .HasForeignKey(d => d.Mid)
                    .HasConstraintName("FK_TF_WJ_S_MF_WJ_S");
            });

            modelBuilder.Entity<TfWxM>(entity =>
            {
                entity.ToTable("TF_WX_M");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Amt)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("AMT");

                entity.Property(e => e.Amtn)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("AMTN");

                entity.Property(e => e.BDdRep)
                    .HasColumnType("datetime")
                    .HasColumnName("B_DD_REP");

                entity.Property(e => e.BilId)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("BIL_ID");

                entity.Property(e => e.BilNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("BIL_NO");

                entity.Property(e => e.DepRep)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("DEP_REP");

                entity.Property(e => e.EDdRep)
                    .HasColumnType("datetime")
                    .HasColumnName("E_DD_REP");

                entity.Property(e => e.InwhDd)
                    .HasColumnType("datetime")
                    .HasColumnName("INWH_DD");

                entity.Property(e => e.InwhId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("INWH_ID");

                entity.Property(e => e.Itm).HasColumnName("ITM");

                entity.Property(e => e.ItmMj).HasColumnName("ITM_MJ");

                entity.Property(e => e.Mid).HasColumnName("MID");

                entity.Property(e => e.ModNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("MOD_NO");

                entity.Property(e => e.OldStateId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("OLD_STATE_ID");

                entity.Property(e => e.Rem)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("REM");

                entity.Property(e => e.RepNo)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("REP_NO");

                entity.Property(e => e.RsDesp)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("RS_DESP");

                entity.Property(e => e.RsNo)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("RS_NO");

                entity.Property(e => e.Spc)
                    .HasColumnType("text")
                    .HasColumnName("SPC");

                entity.Property(e => e.ToOth)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TO_OTH");

                entity.Property(e => e.WxDd)
                    .HasColumnType("datetime")
                    .HasColumnName("WX_DD");

                entity.Property(e => e.WxId)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("WX_ID");

                entity.Property(e => e.WxNo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("WX_NO");

                entity.HasOne(d => d.MidNavigation)
                    .WithMany(p => p.TfWxM)
                    .HasForeignKey(d => d.Mid)
                    .HasConstraintName("FK_TF_WX_M_MF_WX_M");
            });

            modelBuilder.Entity<TfWxS>(entity =>
            {
                entity.ToTable("TF_WX_S");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BDdRep)
                    .HasColumnType("datetime")
                    .HasColumnName("B_DD_REP");

                entity.Property(e => e.BilId)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("BIL_ID");

                entity.Property(e => e.BilNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("BIL_NO");

                entity.Property(e => e.DepRep)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("DEP_REP");

                entity.Property(e => e.EDdRep)
                    .HasColumnType("datetime")
                    .HasColumnName("E_DD_REP");

                entity.Property(e => e.FaAppearance)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("FA_APPEARANCE");

                entity.Property(e => e.Itm).HasColumnName("ITM");

                entity.Property(e => e.ItmSb).HasColumnName("ITM_SB");

                entity.Property(e => e.Mid).HasColumnName("MID");

                entity.Property(e => e.OldStateId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("OLD_STATE_ID");

                entity.Property(e => e.PreItm).HasColumnName("PRE_ITM");

                entity.Property(e => e.Rem)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("REM");

                entity.Property(e => e.RepNo)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("REP_NO");

                entity.Property(e => e.RsDesp)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("RS_DESP");

                entity.Property(e => e.RsNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("RS_NO");

                entity.Property(e => e.SebName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("SEB_NAME");

                entity.Property(e => e.SebNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("SEB_NO");

                entity.Property(e => e.SebPart)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SEB_PART");

                entity.Property(e => e.ToOth)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TO_OTH");

                entity.Property(e => e.WxDd)
                    .HasColumnType("datetime")
                    .HasColumnName("WX_DD");

                entity.Property(e => e.WxId)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("WX_ID");

                entity.Property(e => e.WxNo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("WX_NO");

                entity.Property(e => e.WxjContent)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("WXJ_CONTENT");

                entity.HasOne(d => d.MidNavigation)
                    .WithMany(p => p.TfWxS)
                    .HasForeignKey(d => d.Mid)
                    .HasConstraintName("FK_TF_WX_S_MF_WX_S");
            });

            modelBuilder.Entity<TfZc>(entity =>
            {
                entity.ToTable("TF_ZC");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.AutoProd).HasColumnName("Auto_Prod");

                entity.Property(e => e.BarCodeType)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.BomNo)
                    .IsRequired()
                    .HasMaxLength(38)
                    .IsUnicode(false)
                    .HasColumnName("BOM_NO");

                entity.Property(e => e.ChkId).HasColumnName("CHK_ID");

                entity.Property(e => e.CusNo)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("CUS_NO");

                entity.Property(e => e.Dep)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("DEP");

                entity.Property(e => e.GdType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("GD_TYPE");

                entity.Property(e => e.IsSchedProcess).HasColumnName("IsSched_Process");

                entity.Property(e => e.Itm).HasColumnName("ITM");

                entity.Property(e => e.MdNo)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("MD_NO");

                entity.Property(e => e.Mid).HasColumnName("MID");

                entity.Property(e => e.MlFin).HasColumnName("ML_FIN");

                entity.Property(e => e.ModNoR)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("MOD_NO_R");

                entity.Property(e => e.MvId).HasColumnName("MV_ID");

                entity.Property(e => e.PrdNo)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("PRD_NO");

                entity.Property(e => e.PrintTpName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PrjNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("PRJ_NO");

                entity.Property(e => e.QtyBasMan)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_BAS_MAN");

                entity.Property(e => e.QtyBat)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_BAT");

                entity.Property(e => e.QtyBatP)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_BAT_P");

                entity.Property(e => e.QtyRto)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_RTO");

                entity.Property(e => e.QtyZc)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_ZC");

                entity.Property(e => e.Rem)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("REM");

                entity.Property(e => e.RtoBad)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("RTO_BAD");

                entity.Property(e => e.SebNo)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("SEB_NO");

                entity.Property(e => e.Sop)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SOP");

                entity.Property(e => e.Split)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SPLIT");

                entity.Property(e => e.TimeUnit)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIME_UNIT");

                entity.Property(e => e.TimeUsed)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("TIME_USED");

                entity.Property(e => e.UtTime)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("UT_TIME");

                entity.Property(e => e.UtWait)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("UT_WAIT");

                entity.Property(e => e.WorkCenter)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ZcItm).HasColumnName("ZC_ITM");

                entity.Property(e => e.ZcName)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("ZC_NAME");

                entity.Property(e => e.ZcNo)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ZC_NO");

                entity.Property(e => e.ZcNoDn)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("ZC_NO_DN");

                entity.Property(e => e.ZcNoUp)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("ZC_NO_UP");

                entity.HasOne(d => d.MidNavigation)
                    .WithMany(p => p.TfZc)
                    .HasForeignKey(d => d.Mid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("FK_TF_ZC_MF_ZC");
            });

            modelBuilder.Entity<TfZcRes>(entity =>
            {
                entity.ToTable("TF_ZC_RES");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Mid).HasColumnName("MID");

                entity.Property(e => e.ResName)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Res_Name");

                entity.Property(e => e.ResNo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Res_No");

                entity.Property(e => e.ResType)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("Res_Type");

                entity.HasOne(d => d.MidNavigation)
                    .WithMany(p => p.TfZcRes)
                    .HasForeignKey(d => d.Mid)
                    .HasConstraintName("FK_TF_ZC_RES_TF_ZC");
            });

            modelBuilder.Entity<TfZg>(entity =>
            {
                entity.ToTable("TF_ZG");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Amt)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("AMT");

                entity.Property(e => e.AmtDisCnt)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("AMT_DIS_CNT");

                entity.Property(e => e.AmtnCom)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("AMTN_COM");

                entity.Property(e => e.AmtnIfrs)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("AMTN_IFRS");

                entity.Property(e => e.AmtnNet)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("AMTN_NET");

                entity.Property(e => e.AmtnNetIfrs)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("AMTN_NET_IFRS");

                entity.Property(e => e.BatNo)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("BAT_NO");

                entity.Property(e => e.BilType)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.BilTypeName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.BusiNo)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.BzKnd)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("BZ_KND");

                entity.Property(e => e.ChkDate).HasColumnType("datetime");

                entity.Property(e => e.ChkMan)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkManName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkMob)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.ChkTax)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CHK_TAX");

                entity.Property(e => e.CkNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CK_NO");

                entity.Property(e => e.ClsDate).HasColumnType("datetime");

                entity.Property(e => e.ClsUsr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ClsUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Cst)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("CST");

                entity.Property(e => e.CstIfrs)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("CST_IFRS");

                entity.Property(e => e.CstMakIfrs)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("CST_MAK_IFRS");

                entity.Property(e => e.CstManIfrs)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("CST_MAN_IFRS");

                entity.Property(e => e.CstMlIfrs)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("CST_ML_IFRS");

                entity.Property(e => e.CstOutIfrs)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("CST_OUT_IFRS");

                entity.Property(e => e.CstPrdIfrs)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("CST_PRD_IFRS");

                entity.Property(e => e.CstSmak)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("CST_SMAK");

                entity.Property(e => e.CstSmakIfrs)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("CST_SMAK_IFRS");

                entity.Property(e => e.CstSman)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("CST_SMAN");

                entity.Property(e => e.CstSmanIfrs)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("CST_SMAN_IFRS");

                entity.Property(e => e.CstSout)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("CST_SOUT");

                entity.Property(e => e.CstSoutIfrs)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("CST_SOUT_IFRS");

                entity.Property(e => e.CstSprd)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("CST_SPRD");

                entity.Property(e => e.CstSprdIfrs)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("CST_SPRD_IFRS");

                entity.Property(e => e.CstStd)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("CST_STD");

                entity.Property(e => e.CstStdIfrs)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("CST_STD_IFRS");

                entity.Property(e => e.CstStdMl)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("CST_STD_ML");

                entity.Property(e => e.CstStdMlIfrs)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("CST_STD_ML_IFRS");

                entity.Property(e => e.CusOsNo)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("CUS_OS_NO");

                entity.Property(e => e.DepRk)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("DEP_RK");

                entity.Property(e => e.DisCnt)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("DIS_CNT");

                entity.Property(e => e.EstItm).HasColumnName("EST_ITM");

                entity.Property(e => e.FreeId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("FREE_ID");

                entity.Property(e => e.FreeIdDef)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("FREE_ID_DEF");

                entity.Property(e => e.IdNo)
                    .HasMaxLength(38)
                    .IsUnicode(false)
                    .HasColumnName("ID_NO");

                entity.Property(e => e.IsSp)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("IS_SP");

                entity.Property(e => e.Itm).HasColumnName("ITM");

                entity.Property(e => e.MatrixItm).HasColumnName("MATRIX_ITM");

                entity.Property(e => e.Mid).HasColumnName("MID");

                entity.Property(e => e.OsId)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("OS_ID");

                entity.Property(e => e.OsNo)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("OS_NO");

                entity.Property(e => e.OthItm).HasColumnName("OTH_ITM");

                entity.Property(e => e.PakExc)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("PAK_EXC");

                entity.Property(e => e.PakGw)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("PAK_GW");

                entity.Property(e => e.PakMeast)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("PAK_MEAST");

                entity.Property(e => e.PakMeastUnit)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("PAK_MEAST_UNIT");

                entity.Property(e => e.PakNw)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("PAK_NW");

                entity.Property(e => e.PakUnit)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("PAK_UNIT");

                entity.Property(e => e.PakWeightUnit)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("PAK_WEIGHT_UNIT");

                entity.Property(e => e.PrdMark)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("PRD_MARK")
                    .HasDefaultValueSql("(space((0)))");

                entity.Property(e => e.PrdName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("PRD_NAME");

                entity.Property(e => e.PrdNo)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("PRD_NO");

                entity.Property(e => e.PreItm).HasColumnName("PRE_ITM");

                entity.Property(e => e.ProduDd)
                    .HasColumnType("datetime")
                    .HasColumnName("PRODU_DD");

                entity.Property(e => e.PwItm).HasColumnName("PW_ITM");

                entity.Property(e => e.QcFlag)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("QC_FLAG");

                entity.Property(e => e.QcItm).HasColumnName("QC_ITM");

                entity.Property(e => e.Qty)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY");

                entity.Property(e => e.Qty1)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY1");

                entity.Property(e => e.Qty1Loss)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY1_LOSS");

                entity.Property(e => e.QtyLoss)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_LOSS");

                entity.Property(e => e.QtyPc)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_PC");

                entity.Property(e => e.QtyPcUnsh)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_PC_UNSH");

                entity.Property(e => e.QtyPs)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_PS");

                entity.Property(e => e.QtyRtn)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_RTN");

                entity.Property(e => e.QtyRtnUnsh)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_RTN_UNSH");

                entity.Property(e => e.Rem)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("REM");

                entity.Property(e => e.RkDd)
                    .HasColumnType("datetime")
                    .HasColumnName("RK_DD");

                entity.Property(e => e.RkNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("RK_NO");

                entity.Property(e => e.ScDd)
                    .HasColumnType("datetime")
                    .HasColumnName("SC_DD");

                entity.Property(e => e.SendWh)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("SEND_WH");

                entity.Property(e => e.ShNoCus)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("SH_NO_CUS");

                entity.Property(e => e.SlItm).HasColumnName("SL_ITM");

                entity.Property(e => e.SlNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("SL_NO");

                entity.Property(e => e.SourceId).HasColumnName("SOURCE_ID");

                entity.Property(e => e.SupPrdMark)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("SUP_PRD_MARK");

                entity.Property(e => e.SupPrdNo)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("SUP_PRD_NO");

                entity.Property(e => e.SysDate).HasColumnType("datetime");

                entity.Property(e => e.Tax)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("TAX");

                entity.Property(e => e.TaxIfrs)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("TAX_IFRS");

                entity.Property(e => e.TaxRto)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("TAX_RTO");

                entity.Property(e => e.TiItm).HasColumnName("TI_ITM");

                entity.Property(e => e.Unit)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("UNIT");

                entity.Property(e => e.Up)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("UP");

                entity.Property(e => e.UpMain)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("UP_MAIN");

                entity.Property(e => e.UpMainIfrs)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("UP_MAIN_IFRS");

                entity.Property(e => e.UpQty1)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("UP_QTY1");

                entity.Property(e => e.UpStd)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("UP_STD");

                entity.Property(e => e.UpStdIfrs)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("UP_STD_IFRS");

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ValidDd)
                    .HasColumnType("datetime")
                    .HasColumnName("VALID_DD");

                entity.Property(e => e.Wh)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("WH");

                entity.Property(e => e.ZgDd)
                    .HasColumnType("datetime")
                    .HasColumnName("ZG_DD");

                entity.Property(e => e.ZgId)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("ZG_ID");

                entity.Property(e => e.ZgNo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ZG_NO");

                entity.HasOne(d => d.MidNavigation)
                    .WithMany(p => p.TfZg)
                    .HasForeignKey(d => d.Mid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("FK_TF_ZG_MF_ZG");
            });

            modelBuilder.Entity<TiType>(entity =>
            {
                entity.ToTable("TI_TYPE");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Name)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.No)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TmpDphHgl>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("TMP_DPH_HGL");

                entity.Property(e => e.BanNo)
                    .HasMaxLength(100)
                    .HasColumnName("BAN_NO");

                entity.Property(e => e.Denominator).HasColumnName("DENOMINATOR");

                entity.Property(e => e.Numerator).HasColumnName("NUMERATOR");

                entity.Property(e => e.Rate).HasColumnName("RATE");

                entity.Property(e => e.Rq)
                    .HasMaxLength(100)
                    .HasColumnName("RQ");

                entity.Property(e => e.SebNo)
                    .HasMaxLength(100)
                    .HasColumnName("SEB_NO");
            });

            modelBuilder.Entity<TmpHjHgl>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("TMP_HJ_HGL");

                entity.Property(e => e.BanNo)
                    .HasMaxLength(100)
                    .HasColumnName("BAN_NO");

                entity.Property(e => e.Denominator).HasColumnName("DENOMINATOR");

                entity.Property(e => e.Numerator).HasColumnName("NUMERATOR");

                entity.Property(e => e.Rate).HasColumnName("RATE");

                entity.Property(e => e.Rq)
                    .HasMaxLength(100)
                    .HasColumnName("RQ");

                entity.Property(e => e.SebNo)
                    .HasMaxLength(100)
                    .HasColumnName("SEB_NO");
            });

            modelBuilder.Entity<TmpHuanmo>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("TMP_HUANMO");

                entity.Property(e => e.EndTime)
                    .HasMaxLength(40)
                    .HasColumnName("END_TIME");

                entity.Property(e => e.HmDate)
                    .HasMaxLength(40)
                    .HasColumnName("HM_DATE");

                entity.Property(e => e.Id)
                    .HasMaxLength(40)
                    .HasColumnName("ID");

                entity.Property(e => e.PrdNo)
                    .HasMaxLength(200)
                    .HasColumnName("PRD_NO");

                entity.Property(e => e.Rn).HasColumnName("RN");

                entity.Property(e => e.StaTime)
                    .HasMaxLength(40)
                    .HasColumnName("STA_TIME");
            });

            modelBuilder.Entity<TmpJjgHgl>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("TMP_JJG_HGL");

                entity.Property(e => e.BanNo)
                    .HasMaxLength(100)
                    .HasColumnName("BAN_NO");

                entity.Property(e => e.Denominator).HasColumnName("DENOMINATOR");

                entity.Property(e => e.Numerator).HasColumnName("NUMERATOR");

                entity.Property(e => e.Rate).HasColumnName("RATE");

                entity.Property(e => e.Rq)
                    .HasMaxLength(100)
                    .HasColumnName("RQ");

                entity.Property(e => e.SebNo)
                    .HasMaxLength(100)
                    .HasColumnName("SEB_NO");
            });

            modelBuilder.Entity<TmpMaterials>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("TMP_MATERIALS");

                entity.Property(e => e.PrdName)
                    .HasMaxLength(100)
                    .HasColumnName("PRD_NAME");

                entity.Property(e => e.PrdNo)
                    .HasMaxLength(100)
                    .HasColumnName("PRD_NO");

                entity.Property(e => e.Rn).HasColumnName("RN");

                entity.Property(e => e.Unit)
                    .HasMaxLength(100)
                    .HasColumnName("UNIT");
            });

            modelBuilder.Entity<TmpSzb>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("TMP_SZB");

                entity.Property(e => e.Ban)
                    .HasMaxLength(40)
                    .HasColumnName("BAN");

                entity.Property(e => e.Maxqty).HasColumnName("MAXQTY");

                entity.Property(e => e.Minqty).HasColumnName("MINQTY");

                entity.Property(e => e.Qty).HasColumnName("QTY");

                entity.Property(e => e.Rq)
                    .HasMaxLength(40)
                    .HasColumnName("RQ");

                entity.Property(e => e.Setflag).HasColumnName("SETFLAG");
            });

            modelBuilder.Entity<TmpSzbdata>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("TMP_SZBDATA");

                entity.Property(e => e.BanNo)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("BAN_NO");

                entity.Property(e => e.Csbh)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("CSBH")
                    .IsFixedLength(true);

                entity.Property(e => e.Cssz)
                    .HasMaxLength(127)
                    .IsUnicode(false)
                    .HasColumnName("CSSZ")
                    .IsFixedLength(true);

                entity.Property(e => e.Cszt).HasColumnName("CSZT");

                entity.Property(e => e.Sbbh)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SBBH")
                    .IsFixedLength(true);

                entity.Property(e => e.Sj)
                    .HasMaxLength(19)
                    .IsUnicode(false)
                    .HasColumnName("SJ")
                    .IsFixedLength(true);

                entity.Property(e => e.SysDate)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("SYS_DATE")
                    .IsFixedLength(true);
            });

            modelBuilder.Entity<TmpTzzmxl>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("TMP_TZZMXL");

                entity.Property(e => e.Gjsl).HasColumnName("GJSL");

                entity.Property(e => e.Rq)
                    .HasMaxLength(40)
                    .HasColumnName("RQ");

                entity.Property(e => e.SebNo)
                    .HasMaxLength(100)
                    .HasColumnName("SEB_NO");

                entity.Property(e => e.Zgjsl).HasColumnName("ZGJSL");
            });

            modelBuilder.Entity<TomesYplacebar>(entity =>
            {
                entity.ToTable("TOMES_YPLACEBAR");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BarCodeVch)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.BarNumDbl).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.BillCodeVch)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ConIdVch)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.LotNoVch)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.LotSelfNoVch)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.MasterCodeVch)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.MasterNameVch)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.OperateDt).HasColumnType("datetime");

                entity.Property(e => e.PlaceBarStatusVch)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.PlaceBarVch)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PlaceNameVch)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.RbillCodeVch)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("RBillCodeVch");

                entity.Property(e => e.RbillTypeVch)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("RBillTypeVch");

                entity.Property(e => e.TrayCodeVch)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Tool>(entity =>
            {
                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Enddate)
                    .HasColumnType("datetime")
                    .HasColumnName("ENDDATE");

                entity.Property(e => e.InspectionSpec)
                    .HasMaxLength(55)
                    .IsUnicode(false);

                entity.Property(e => e.InspectionUnit)
                    .HasMaxLength(55)
                    .IsUnicode(false);

                entity.Property(e => e.Stratdate)
                    .HasColumnType("datetime")
                    .HasColumnName("STRATDATE");

                entity.Property(e => e.ToolUseNum).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Toollife)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("TOOLLIFE");

                entity.Property(e => e.Toolname)
                    .IsRequired()
                    .HasMaxLength(55)
                    .IsUnicode(false)
                    .HasColumnName("TOOLNAME");

                entity.Property(e => e.Toolno)
                    .IsRequired()
                    .HasMaxLength(55)
                    .IsUnicode(false)
                    .HasColumnName("TOOLNO");

                entity.Property(e => e.Tooltype)
                    .IsRequired()
                    .HasMaxLength(55)
                    .IsUnicode(false)
                    .HasColumnName("TOOLTYPE");

                entity.Property(e => e.Usr)
                    .HasMaxLength(55)
                    .IsUnicode(false)
                    .HasColumnName("USR");
            });

            modelBuilder.Entity<ToolPrdt>(entity =>
            {
                entity.ToTable("Tool_Prdt");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Prdname)
                    .HasMaxLength(55)
                    .IsUnicode(false)
                    .HasColumnName("PRDNAME");

                entity.Property(e => e.Prdno)
                    .IsRequired()
                    .HasMaxLength(55)
                    .IsUnicode(false)
                    .HasColumnName("PRDNO");

                entity.Property(e => e.Sysdate)
                    .HasColumnType("datetime")
                    .HasColumnName("SYSDATE");

                entity.Property(e => e.Toolname)
                    .HasMaxLength(55)
                    .IsUnicode(false)
                    .HasColumnName("TOOLNAME");

                entity.Property(e => e.Toolno)
                    .IsRequired()
                    .HasMaxLength(55)
                    .IsUnicode(false)
                    .HasColumnName("TOOLNO");

                entity.Property(e => e.Usr)
                    .HasMaxLength(55)
                    .IsUnicode(false)
                    .HasColumnName("USR");

                entity.Property(e => e.Zcname)
                    .HasMaxLength(55)
                    .IsUnicode(false)
                    .HasColumnName("ZCNAME");

                entity.Property(e => e.Zcno)
                    .IsRequired()
                    .HasMaxLength(55)
                    .IsUnicode(false)
                    .HasColumnName("ZCNO");
            });

            modelBuilder.Entity<TrayBarcodebinding>(entity =>
            {
                entity.ToTable("TRAY_BARCODEBINDING");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BarcodeNoCpx)
                    .IsRequired()
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("BarcodeNO_CPX")
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.BarcodeNoLzx)
                    .IsRequired()
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("BarcodeNO_LZX")
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Qty)
                    .HasColumnType("decimal(18, 4)")
                    .HasColumnName("QTY");

                entity.Property(e => e.SysDate).HasColumnType("datetime");

                entity.Property(e => e.Usr)
                    .HasMaxLength(20)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TrayBarcodeinfos>(entity =>
            {
                entity.ToTable("TRAY_BARCODEINFOS");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Barcode)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("BARCODE");

                entity.Property(e => e.Mid).HasColumnName("MID");

                entity.Property(e => e.MrpBarcode)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("MRP_BARCODE");

                entity.Property(e => e.QtyBind)
                    .HasColumnType("decimal(18, 4)")
                    .HasColumnName("QTY_Bind");
            });

            modelBuilder.Entity<Tt>(entity =>
            {
                entity.ToTable("TT");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Ban)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("BAN")
                    .IsFixedLength(true);

                entity.Property(e => e.BanNo)
                    .HasMaxLength(200)
                    .HasColumnName("BAN_NO");

                entity.Property(e => e.Bangroup)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("BANGROUP")
                    .IsFixedLength(true);

                entity.Property(e => e.Createdate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATEDATE");

                entity.Property(e => e.Creator)
                    .HasMaxLength(200)
                    .HasColumnName("CREATOR");

                entity.Property(e => e.Defecttype)
                    .HasMaxLength(200)
                    .HasColumnName("DEFECTTYPE");

                entity.Property(e => e.Deliveryshop)
                    .HasMaxLength(200)
                    .HasColumnName("DELIVERYSHOP");

                entity.Property(e => e.Deliveryshopno)
                    .HasMaxLength(200)
                    .HasColumnName("DELIVERYSHOPNO");

                entity.Property(e => e.Inputdate)
                    .HasColumnType("datetime")
                    .HasColumnName("INPUTDATE");

                entity.Property(e => e.Liablemanno)
                    .HasMaxLength(200)
                    .HasColumnName("LIABLEMANNO");

                entity.Property(e => e.Modifydate)
                    .HasColumnType("datetime")
                    .HasColumnName("MODIFYDATE");

                entity.Property(e => e.Modifyuser)
                    .HasMaxLength(200)
                    .HasColumnName("MODIFYUSER");

                entity.Property(e => e.Productcode)
                    .HasMaxLength(200)
                    .HasColumnName("PRODUCTCODE");

                entity.Property(e => e.Productname)
                    .HasMaxLength(200)
                    .HasColumnName("PRODUCTNAME");

                entity.Property(e => e.Productspec)
                    .HasMaxLength(200)
                    .HasColumnName("PRODUCTSPEC");

                entity.Property(e => e.Productstatus)
                    .HasMaxLength(200)
                    .HasColumnName("PRODUCTSTATUS");

                entity.Property(e => e.Responequipment)
                    .HasMaxLength(200)
                    .HasColumnName("RESPONEQUIPMENT");

                entity.Property(e => e.Responequipmentno)
                    .HasMaxLength(200)
                    .HasColumnName("RESPONEQUIPMENTNO");

                entity.Property(e => e.Responprocess)
                    .HasMaxLength(200)
                    .HasColumnName("RESPONPROCESS");

                entity.Property(e => e.Responprocessno)
                    .HasMaxLength(200)
                    .HasColumnName("RESPONPROCESSNO");

                entity.Property(e => e.Responshop)
                    .HasMaxLength(200)
                    .HasColumnName("RESPONSHOP");

                entity.Property(e => e.Responshopno)
                    .HasMaxLength(200)
                    .HasColumnName("RESPONSHOPNO");

                entity.Property(e => e.Reworknumber).HasColumnName("REWORKNUMBER");

                entity.Property(e => e.Type)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("TYPE")
                    .IsFixedLength(true);

                entity.Property(e => e.Wastenumber).HasColumnName("WASTENUMBER");
            });

            modelBuilder.Entity<Tt1>(entity =>
            {
                entity.ToTable("TT1");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Name)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("NAME");
            });

            modelBuilder.Entity<Tt2>(entity =>
            {
                entity.ToTable("TT2");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Name)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("NAME");
            });

            modelBuilder.Entity<TypeUnqualified>(entity =>
            {
                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.GenreateFormType)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Sitype).HasColumnName("SIType");

                entity.Property(e => e.SysDate).HasColumnType("datetime");

                entity.Property(e => e.UnqualifiedType)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Usr)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UsrName)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TzBarcodeinfos>(entity =>
            {
                entity.ToTable("TZ_BARCODEINFOS");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Barcode)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("BARCODE");

                entity.Property(e => e.MoNo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("MO_NO");

                entity.Property(e => e.PrdNo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("PRD_NO");

                entity.Property(e => e.SoNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SO_NO");

                entity.Property(e => e.SysDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.TzNo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TZ_NO");

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Usr)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.UsrName)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.ZcNo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ZC_NO");
            });

            modelBuilder.Entity<TzMod>(entity =>
            {
                entity.ToTable("TZ_MOD");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.ModNo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("MOD_NO");

                entity.Property(e => e.TzNo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("TZ_NO");
            });

            modelBuilder.Entity<TzSeb>(entity =>
            {
                entity.ToTable("TZ_SEB");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Mid).HasColumnName("MID");

                entity.Property(e => e.SebNo)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("SEB_NO");

                entity.Property(e => e.TzNo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("TZ_NO");
            });

            modelBuilder.Entity<TzSpectrumInfo>(entity =>
            {
                entity.ToTable("TZ_SPECTRUM_INFO");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BatNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("BAT_NO");

                entity.Property(e => e.Impdate)
                    .HasColumnType("datetime")
                    .HasColumnName("IMPDATE");

                entity.Property(e => e.Lowsybol)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("LOWSYBOL");

                entity.Property(e => e.No)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NO");

                entity.Property(e => e.NumMax)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("NUM_MAX");

                entity.Property(e => e.NumMin)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("NUM_MIN");

                entity.Property(e => e.Outrng).HasColumnName("OUTRNG");

                entity.Property(e => e.QcModel)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("QC_MODEL");

                entity.Property(e => e.Scope)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SCOPE");

                entity.Property(e => e.SebNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SEB_NO");

                entity.Property(e => e.Sysdate)
                    .HasColumnType("datetime")
                    .HasColumnName("SYSDATE");

                entity.Property(e => e.Typeno)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TYPENO");

                entity.Property(e => e.TzDd)
                    .HasColumnType("datetime")
                    .HasColumnName("TZ_DD");

                entity.Property(e => e.TzNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TZ_NO");

                entity.Property(e => e.Upsybol)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("UPSYBOL");

                entity.Property(e => e.Value)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("VALUE");

                entity.Property(e => e.ZcNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ZC_NO");
            });

            modelBuilder.Entity<TzscMap>(entity =>
            {
                entity.ToTable("TZSC_MAP");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.MapDate)
                    .HasColumnType("datetime")
                    .HasColumnName("MAP_DATE");

                entity.Property(e => e.OpnDd)
                    .HasColumnType("datetime")
                    .HasColumnName("OPN_DD");

                entity.Property(e => e.PaDate)
                    .HasColumnType("datetime")
                    .HasColumnName("PA_DATE");

                entity.Property(e => e.PaName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("PA_NAME");

                entity.Property(e => e.PaNo)
                    .IsRequired()
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("PA_NO");

                entity.Property(e => e.PaValue)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("PA_VALUE");

                entity.Property(e => e.SebNo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SEB_NO");

                entity.Property(e => e.TzId).HasColumnName("TZ_ID");

                entity.Property(e => e.TzNo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TZ_NO");

                entity.Property(e => e.ZcNo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ZC_NO");
            });

            modelBuilder.Entity<TzscMap20184>(entity =>
            {
                entity.ToTable("TZSC_MAP_20184");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.MapDate)
                    .HasColumnType("datetime")
                    .HasColumnName("MAP_DATE");

                entity.Property(e => e.OpnDd)
                    .HasColumnType("datetime")
                    .HasColumnName("OPN_DD");

                entity.Property(e => e.PaDate)
                    .HasColumnType("datetime")
                    .HasColumnName("PA_DATE");

                entity.Property(e => e.PaName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("PA_NAME");

                entity.Property(e => e.PaNo)
                    .IsRequired()
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("PA_NO");

                entity.Property(e => e.PaValue)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("PA_VALUE");

                entity.Property(e => e.SebNo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SEB_NO");

                entity.Property(e => e.TzId).HasColumnName("TZ_ID");

                entity.Property(e => e.TzNo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TZ_NO");

                entity.Property(e => e.ZcNo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ZC_NO");
            });

            modelBuilder.Entity<UnacceptedProductionHandle>(entity =>
            {
                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Attachment)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.BilType)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.BilTypeName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.BillNo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.BusiNo)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkDate).HasColumnType("datetime");

                entity.Property(e => e.ChkMan)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkManName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkMob)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.ClsDate).HasColumnType("datetime");

                entity.Property(e => e.ClsUsr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ClsUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ProcessNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Rem)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.SourceBillNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SysDate).HasColumnType("datetime");

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Usr)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UsrName)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.WorkCenter)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<UnacceptedProductionHandleSub>(entity =>
            {
                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BatchNoOrBarcode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.DefectNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.DefectPhenomenon)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.HandleMode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Mid).HasColumnName("MID");

                entity.Property(e => e.ProductionNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.HasOne(d => d.MidNavigation)
                    .WithMany(p => p.UnacceptedProductionHandleSub)
                    .HasForeignKey(d => d.Mid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("FK_UnacceptedProductionHandleSub_UnacceptedProductionHandle");
            });

            modelBuilder.Entity<UnacceptedProductionHandleSubResult>(entity =>
            {
                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Barcode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Comment)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.Mid).HasColumnName("MID");

                entity.Property(e => e.Result)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.HasOne(d => d.MidNavigation)
                    .WithMany(p => p.UnacceptedProductionHandleSubResult)
                    .HasForeignKey(d => d.Mid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("FK_UnacceptedProductionHandleSubResult_UnacceptedProductionHandleSub");
            });

            modelBuilder.Entity<VAndonCallState>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("V_AndonCallState");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.No)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Num).HasColumnName("NUM");

                entity.Property(e => e.TypeName)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VAndonRespPstate>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("V_AndonRespPState");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.No)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Num).HasColumnName("NUM");

                entity.Property(e => e.TypeName)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VAndonRespstate>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("V_AndonRESPState");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.No)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Num).HasColumnName("NUM");

                entity.Property(e => e.TypeName)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VAndonSeb>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("V_AndonSEB");

                entity.Property(e => e.CallSta)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("CALL_STA");

                entity.Property(e => e.DeviceCode).HasMaxLength(50);

                entity.Property(e => e.DeviceName).HasMaxLength(100);

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.WorkStationCode).HasMaxLength(50);

                entity.Property(e => e.WorkStationName).HasMaxLength(100);
            });

            modelBuilder.Entity<VBarcodeProductMap>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("V_BARCODE_PRODUCT_MAP");

                entity.Property(e => e.ModNo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("MOD_NO");

                entity.Property(e => e.PrdNo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("PRD_NO");
            });

            modelBuilder.Entity<VBarcodeStorage>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("V_BarcodeStorage");

                entity.Property(e => e.BatchNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Batch_NO");

                entity.Property(e => e.Location)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Master)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("master");

                entity.Property(e => e.MasterWareHouseNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PackageNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("PackageNO");

                entity.Property(e => e.ProdNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Prod_NO");

                entity.Property(e => e.ProductionDate).HasColumnType("datetime");

                entity.Property(e => e.Quantity).HasColumnType("decimal(38, 8)");

                entity.Property(e => e.Type)
                    .IsRequired()
                    .HasMaxLength(7)
                    .IsUnicode(false)
                    .HasColumnName("type");
            });

            modelBuilder.Entity<VBatchNo>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("V_Batch_NO");

                entity.Property(e => e.BatchNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Batch_NO");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.ProdNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("PROD_NO");
            });

            modelBuilder.Entity<VBatchReview>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("V_BatchReview");

                entity.Property(e => e.Castingbatchno)
                    .HasMaxLength(55)
                    .IsUnicode(false)
                    .HasColumnName("CASTINGBATCHNO");

                entity.Property(e => e.JzmoNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("JZMO_NO");

                entity.Property(e => e.ZxmoNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ZXMO_NO");
            });

            modelBuilder.Entity<VBatno>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("V_BATNO");

                entity.Property(e => e.BanNo)
                    .HasMaxLength(50)
                    .HasColumnName("BAN_NO");

                entity.Property(e => e.RlTz)
                    .HasMaxLength(100)
                    .HasColumnName("RL_TZ");

                entity.Property(e => e.SebNo)
                    .HasMaxLength(100)
                    .HasColumnName("SEB_NO");

                entity.Property(e => e.ZcNo)
                    .HasMaxLength(50)
                    .HasColumnName("ZC_NO");
            });

            modelBuilder.Entity<VBomprdt>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("V_BOMPRDT");

                entity.Property(e => e.MPrdName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("M_PRD_NAME");

                entity.Property(e => e.MPrdNo)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("M_PRD_NO");

                entity.Property(e => e.Mid).HasColumnName("MID");

                entity.Property(e => e.ZcNo)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ZC_NO");
            });

            modelBuilder.Entity<VCurrentStorage>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("V_CurrentStorage");

                entity.Property(e => e.FreezeQuantity).HasColumnType("decimal(38, 8)");

                entity.Property(e => e.FrozenQuantity).HasColumnType("decimal(38, 4)");

                entity.Property(e => e.MasterWareHouseNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ProdNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Prod_NO");

                entity.Property(e => e.Quantity).HasColumnType("decimal(38, 4)");

                entity.Property(e => e.StorageQuantity).HasColumnType("decimal(38, 4)");
            });

            modelBuilder.Entity<VDctProcessParameter>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vDCT_ProcessParameter");

                entity.Property(e => e.CreateTime).HasColumnType("datetime");

                entity.Property(e => e.DataModel)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.DeviceNo)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Interval).HasColumnType("numeric(12, 0)");

                entity.Property(e => e.LowerLimit).HasColumnType("decimal(18, 4)");

                entity.Property(e => e.ProcessParameterCode)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ProcessParameterName)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.ProductNo)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Standard).HasColumnType("decimal(18, 4)");

                entity.Property(e => e.TableName)
                    .HasMaxLength(8000)
                    .IsUnicode(false);

                entity.Property(e => e.UpperLimit).HasColumnType("decimal(18, 4)");
            });

            modelBuilder.Entity<VDefDetail>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vDefDetail");

                entity.Property(e => e.FirstWrdd)
                    .HasColumnType("datetime")
                    .HasColumnName("FirstWRDD");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.MoNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("MO_NO");

                entity.Property(e => e.ModNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("MOD_NO");

                entity.Property(e => e.MrpNo)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("MRP_NO");

                entity.Property(e => e.OpnDd)
                    .HasColumnType("datetime")
                    .HasColumnName("OPN_DD");

                entity.Property(e => e.PcBan)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("PC_BAN");

                entity.Property(e => e.Qty)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY");

                entity.Property(e => e.QtyFin)
                    .HasColumnType("numeric(38, 0)")
                    .HasColumnName("QTY_FIN");

                entity.Property(e => e.QtyScrap)
                    .HasColumnType("numeric(38, 0)")
                    .HasColumnName("QTY_SCRAP");

                entity.Property(e => e.SebNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("SEB_NO");

                entity.Property(e => e.TzDd)
                    .HasColumnType("datetime")
                    .HasColumnName("TZ_DD");

                entity.Property(e => e.TzNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("TZ_NO");

                entity.Property(e => e.WrDd)
                    .HasColumnType("datetime")
                    .HasColumnName("WR_DD");

                entity.Property(e => e.ZcNo)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ZC_NO");
            });

            modelBuilder.Entity<VEnterForm>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("V_EnterForm");

                entity.Property(e => e.Abc)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ABC");

                entity.Property(e => e.BilMl)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("BIL_ML");

                entity.Property(e => e.BomId).HasColumnName("BOM_ID");

                entity.Property(e => e.Cadname)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("CADNAME");

                entity.Property(e => e.ChkDate).HasColumnType("datetime");

                entity.Property(e => e.ChkM2)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CHK_M2");

                entity.Property(e => e.ChkMan)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkManName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkMl)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CHK_ML");

                entity.Property(e => e.ChkMm)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CHK_MM");

                entity.Property(e => e.ChkMob)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.ChkMtn)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CHK_MTN");

                entity.Property(e => e.ChkPc)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CHK_PC");

                entity.Property(e => e.ChkSa)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CHK_SA");

                entity.Property(e => e.ChkSb)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CHK_SB");

                entity.Property(e => e.ChkTax)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CHK_TAX");

                entity.Property(e => e.ChkTw)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CHK_TW");

                entity.Property(e => e.DeliveryLead).HasColumnType("decimal(18, 0)");

                entity.Property(e => e.Dep)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("DEP");

                entity.Property(e => e.Ditype).HasColumnName("DIType");

                entity.Property(e => e.DrawNoHis)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("DrawNo_His");

                entity.Property(e => e.DzDd)
                    .HasColumnType("datetime")
                    .HasColumnName("DZ_DD");

                entity.Property(e => e.EffectiveDate)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.FigureNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Formula)
                    .HasMaxLength(210)
                    .IsUnicode(false)
                    .HasColumnName("FORMULA");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Idx1)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDX1");

                entity.Property(e => e.Iitype).HasColumnName("IIType");

                entity.Property(e => e.IsBarcodeMng).HasColumnName("IsBarcode_Mng");

                entity.Property(e => e.IsBatchMng).HasColumnName("IsBatch_Mng");

                entity.Property(e => e.IsBom)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("IsBOM");

                entity.Property(e => e.IsPieceMng).HasColumnName("IsPiece_Mng");

                entity.Property(e => e.Knd)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("KND");

                entity.Property(e => e.MaterialType)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.MinRequestQuantity).HasColumnType("decimal(18, 0)");

                entity.Property(e => e.MlByMm)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ML_BY_MM");

                entity.Property(e => e.MlUt)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ML_UT");

                entity.Property(e => e.MtnLtime).HasColumnName("MTN_LTIME");

                entity.Property(e => e.Multiple).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.Name)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("NAME");

                entity.Property(e => e.NameEng)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("NAME_ENG");

                entity.Property(e => e.NamePy)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("NAME_PY");

                entity.Property(e => e.NeedDays)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("NEED_DAYS");

                entity.Property(e => e.NeedDd).HasColumnName("NEED_DD");

                entity.Property(e => e.NotRtn).HasColumnName("NOT_RTN");

                entity.Property(e => e.NouseDd)
                    .HasColumnType("datetime")
                    .HasColumnName("NOUSE_DD");

                entity.Property(e => e.Oitype).HasColumnName("OIType");

                entity.Property(e => e.OldCode)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("OLD_CODE");

                entity.Property(e => e.Olefield)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("OLEFIELD");

                entity.Property(e => e.OnTrayQty).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.PakExc)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("PAK_EXC");

                entity.Property(e => e.PakGw)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("PAK_GW");

                entity.Property(e => e.PakMeast)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("PAK_MEAST");

                entity.Property(e => e.PakMeastUnit)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("PAK_MEAST_UNIT");

                entity.Property(e => e.PakNw)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("PAK_NW");

                entity.Property(e => e.PakUnit)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("PAK_UNIT");

                entity.Property(e => e.PakWeightUnit)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("PAK_WEIGHT_UNIT");

                entity.Property(e => e.Pk2Qty)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("PK2_QTY");

                entity.Property(e => e.Pk2Ut)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("PK2_UT");

                entity.Property(e => e.Pk3Qty)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("PK3_QTY");

                entity.Property(e => e.Pk3Ut)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("PK3_UT");

                entity.Property(e => e.PlanLead).HasColumnType("decimal(12, 3)");

                entity.Property(e => e.PrdLevel)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("PRD_LEVEL");

                entity.Property(e => e.PrdNo)
                    .IsRequired()
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("PRD_NO");

                entity.Property(e => e.PrdNoExc)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("PRD_NO_EXC");

                entity.Property(e => e.PrdPack)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("PRD_PACK");

                entity.Property(e => e.QtyLostFix)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_LOST_FIX");

                entity.Property(e => e.QtyLow)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_LOW");

                entity.Property(e => e.QtyMax)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_MAX");

                entity.Property(e => e.QtyMin)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_MIN");

                entity.Property(e => e.QtyMin1)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_MIN1");

                entity.Property(e => e.Rem)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("REM");

                entity.Property(e => e.RequestAdvance).HasColumnType("decimal(18, 0)");

                entity.Property(e => e.Rmitype).HasColumnName("RMIType");

                entity.Property(e => e.RtoCl)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("RTO_CL");

                entity.Property(e => e.RtoId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("RTO_ID");

                entity.Property(e => e.RtoMm)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("RTO_MM");

                entity.Property(e => e.RtoPc)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("RTO_PC");

                entity.Property(e => e.RtoRtn).HasColumnName("RTO_RTN");

                entity.Property(e => e.RtoSa)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("RTO_SA");

                entity.Property(e => e.RtoTb)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("RTO_TB");

                entity.Property(e => e.SalNo)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("SAL_NO");

                entity.Property(e => e.SelfMadePartsType)
                    .HasMaxLength(55)
                    .IsUnicode(false);

                entity.Property(e => e.SmallestPackage).HasColumnType("decimal(18, 0)");

                entity.Property(e => e.Smallpic)
                    .HasColumnType("image")
                    .HasColumnName("SMALLPIC");

                entity.Property(e => e.Snm)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SNM");

                entity.Property(e => e.Spc)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("SPC");

                entity.Property(e => e.SpcTax)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("SPC_TAX");

                entity.Property(e => e.StopId).HasColumnName("STOP_ID");

                entity.Property(e => e.StorageType)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Sup1)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("SUP1");

                entity.Property(e => e.Sup2)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("SUP2");

                entity.Property(e => e.SysDate).HasColumnType("datetime");

                entity.Property(e => e.TimeUnit)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIME_UNIT");

                entity.Property(e => e.TlId).HasColumnName("TL_ID");

                entity.Property(e => e.TwId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TW_ID");

                entity.Property(e => e.UnitConv)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Unit_Conv");

                entity.Property(e => e.UpMax)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("UP_MAX");

                entity.Property(e => e.UpMin)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("UP_MIN");

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Usr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Ut)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("UT");

                entity.Property(e => e.Ut1)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("UT1");

                entity.Property(e => e.UtTime)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("UT_TIME");

                entity.Property(e => e.Utno)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("UTNO");

                entity.Property(e => e.ValidDays).HasColumnName("VALID_DAYS");

                entity.Property(e => e.ValidUnit)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("VALID_UNIT");

                entity.Property(e => e.WcMonth).HasColumnName("WC_MONTH");

                entity.Property(e => e.Weight)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("WEIGHT");

                entity.Property(e => e.Wh)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("WH");

                entity.Property(e => e.WhLc)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("WH_LC");

                entity.Property(e => e.XnNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("XN_NO");
            });

            modelBuilder.Entity<VEqptInfo>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_EQPT_INFO");

                entity.Property(e => e.DatabaseName)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("DATABASE_NAME");

                entity.Property(e => e.EqptNo)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("EQPT_NO");

                entity.Property(e => e.No)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NO");

                entity.Property(e => e.PrmName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("PRM_NAME");

                entity.Property(e => e.PrmNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("PRM_NO");

                entity.Property(e => e.PrmValue)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("PRM_VALUE");

                entity.Property(e => e.SebNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("SEB_NO");

                entity.Property(e => e.SysDate)
                    .HasColumnType("datetime")
                    .HasColumnName("SYS_DATE");

                entity.Property(e => e.TableName)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("TABLE_NAME");

                entity.Property(e => e.ZcNo)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ZC_NO");
            });

            modelBuilder.Entity<VFormType>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("V_FormType");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Name)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("name");

                entity.Property(e => e.No)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("no");
            });

            modelBuilder.Entity<VJlbatno>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("V_JLBATNO");

                entity.Property(e => e.BanNo)
                    .HasMaxLength(50)
                    .HasColumnName("BAN_NO");

                entity.Property(e => e.RlTz)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("RL_TZ");

                entity.Property(e => e.SebNo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SEB_NO");

                entity.Property(e => e.ZcNo)
                    .HasMaxLength(50)
                    .HasColumnName("ZC_NO");
            });

            modelBuilder.Entity<VLogisticsScheduling>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("V_LogisticsScheduling");

                entity.Property(e => e.Barcodesourcelocation)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("BARCODESOURCELOCATION");

                entity.Property(e => e.Barcodesourcelocationname)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("BARCODESOURCELOCATIONNAME");

                entity.Property(e => e.BatchNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Batch_No");

                entity.Property(e => e.Billno)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("BILLNO");

                entity.Property(e => e.Billstatus)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("BILLSTATUS");

                entity.Property(e => e.DeadLineDate).HasColumnType("datetime");

                entity.Property(e => e.DeliveryLead).HasColumnType("decimal(18, 0)");

                entity.Property(e => e.FinishQuantity).HasColumnType("decimal(22, 4)");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Location)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Mid).HasColumnName("MID");

                entity.Property(e => e.ProdNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("PROD_NO");

                entity.Property(e => e.ProductionDate).HasColumnType("datetime");

                entity.Property(e => e.Quantity).HasColumnType("decimal(22, 4)");

                entity.Property(e => e.Remark)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ShippedQuantity).HasColumnType("decimal(22, 4)");

                entity.Property(e => e.SourceLocation).HasMaxLength(50);

                entity.Property(e => e.StartDate).HasColumnType("datetime");

                entity.Property(e => e.Status)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Statusname)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("STATUSNAME");

                entity.Property(e => e.TargetLocation)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Type)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TYPE");

                entity.Property(e => e.Unit)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.WoNo)
                    .HasMaxLength(55)
                    .IsUnicode(false)
                    .HasColumnName("WO_NO");
            });

            modelBuilder.Entity<VMachinworkshopbracket>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("V_MACHINWORKSHOPBRACKET");

                entity.Property(e => e.CallSta)
                    .IsRequired()
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("CALL_STA");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Name)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("NAME");

                entity.Property(e => e.SebName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("SEB_NAME");

                entity.Property(e => e.SebNo)
                    .IsRequired()
                    .HasMaxLength(7)
                    .IsUnicode(false)
                    .HasColumnName("SEB_NO");

                entity.Property(e => e.Typename)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("TYPENAME");
            });

            modelBuilder.Entity<VMaterialPreparaPlanDetail>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("V_MaterialPreparaPlanDetail");

                entity.Property(e => e.AddInfo)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Add_Info");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Mid).HasColumnName("MID");

                entity.Property(e => e.MprodName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("MPROD_NAME");

                entity.Property(e => e.MprodNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("MPROD_NO");

                entity.Property(e => e.MprodSpc)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("MPROD_SPC");

                entity.Property(e => e.NeedPickMaterialTime).HasColumnType("datetime");

                entity.Property(e => e.PlanQuantity).HasColumnType("decimal(18, 4)");

                entity.Property(e => e.ProdName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("PROD_NAME");

                entity.Property(e => e.ProdNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Prod_No");

                entity.Property(e => e.ProdSpc)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("PROD_SPC");

                entity.Property(e => e.Quantity).HasColumnType("decimal(18, 4)");

                entity.Property(e => e.StartDate).HasColumnType("datetime");

                entity.Property(e => e.Status)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Type)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Unquantity)
                    .HasColumnType("decimal(19, 4)")
                    .HasColumnName("UNQUANTITY");

                entity.Property(e => e.WkCenterName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("WkCenter_Name");

                entity.Property(e => e.WkCenterNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("WkCenter_No");

                entity.Property(e => e.WoNo)
                    .HasMaxLength(55)
                    .IsUnicode(false)
                    .HasColumnName("WO_NO");
            });

            modelBuilder.Entity<VMlTrace>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vML_Trace");

                entity.Property(e => e.BatNo)
                    .HasMaxLength(55)
                    .IsUnicode(false)
                    .HasColumnName("BAT_NO");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Mid).HasColumnName("MID");

                entity.Property(e => e.MlNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ML_NO");

                entity.Property(e => e.MoNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("MO_NO");

                entity.Property(e => e.MrpName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("MRP_NAME");

                entity.Property(e => e.MrpNo)
                    .HasMaxLength(55)
                    .IsUnicode(false)
                    .HasColumnName("MRP_NO");

                entity.Property(e => e.PrdName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("PRD_NAME");

                entity.Property(e => e.PrdNo)
                    .HasMaxLength(55)
                    .IsUnicode(false)
                    .HasColumnName("PRD_NO");

                entity.Property(e => e.Qty)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("QTY");

                entity.Property(e => e.RlTz)
                    .HasMaxLength(100)
                    .HasColumnName("RL_TZ");

                entity.Property(e => e.Sysdate)
                    .HasColumnType("datetime")
                    .HasColumnName("SYSDATE");

                entity.Property(e => e.TzNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("TZ_NO");

                entity.Property(e => e.Unit)
                    .HasMaxLength(55)
                    .IsUnicode(false)
                    .HasColumnName("UNIT");

                entity.Property(e => e.ZcName)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("ZC_NAME");

                entity.Property(e => e.ZcNo)
                    .HasMaxLength(50)
                    .HasColumnName("ZC_NO");
            });

            modelBuilder.Entity<VMoenterQty>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vMOEnterQty");

                entity.Property(e => e.MoNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("MO_No");

                entity.Property(e => e.Qty)
                    .HasColumnType("decimal(38, 4)")
                    .HasColumnName("qty");
            });

            modelBuilder.Entity<VMoldBom>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vMoldBom");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.ModNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("MOD_NO");

                entity.Property(e => e.Name)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("NAME");

                entity.Property(e => e.No)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("NO");

                entity.Property(e => e.ParentNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PartId).HasColumnName("PartID");

                entity.Property(e => e.Sort).HasColumnName("sort");

                entity.Property(e => e.Type)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("type");
            });

            modelBuilder.Entity<VMoldLocal>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vMoldLocal");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Name)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("name");

                entity.Property(e => e.No)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("no");

                entity.Property(e => e.Type)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("type");

                entity.Property(e => e.UniqueNo)
                    .HasMaxLength(55)
                    .IsUnicode(false);

                entity.Property(e => e.Up)
                    .HasMaxLength(55)
                    .HasColumnName("up");
            });

            modelBuilder.Entity<VMpppickMaterial>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("V_MPPPickMaterial");

                entity.Property(e => e.ConfirmQuantity).HasColumnType("decimal(18, 0)");

                entity.Property(e => e.Mid).HasColumnName("MID");

                entity.Property(e => e.PickMaterialNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PlanQuantity).HasColumnType("decimal(18, 4)");

                entity.Property(e => e.ProdName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("PROD_NAME");

                entity.Property(e => e.ProdNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("PROD_NO");

                entity.Property(e => e.ProdSpc)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("PROD_SPC");

                entity.Property(e => e.SourceWareHouse)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SourceWareHouseName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.StartDate).HasColumnType("datetime");

                entity.Property(e => e.TargetWareHouse)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TargetWareHouseName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.WkCenterName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("WkCenter_Name");

                entity.Property(e => e.WkCenterNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("WkCenter_No");

                entity.Property(e => e.WoNo)
                    .HasMaxLength(55)
                    .IsUnicode(false)
                    .HasColumnName("WO_NO");
            });

            modelBuilder.Entity<VNormalWareHouse>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("V_NormalWareHouse");

                entity.Property(e => e.Address)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Bearing).HasColumnType("decimal(18, 0)");

                entity.Property(e => e.Customer).HasMaxLength(55);

                entity.Property(e => e.EffectiveDate).HasColumnType("datetime");

                entity.Property(e => e.ExpirationDate).HasColumnType("datetime");

                entity.Property(e => e.FactoryCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.FeedPriority)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Height).HasColumnType("decimal(18, 0)");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.InspectArea)
                    .HasMaxLength(55)
                    .IsUnicode(false);

                entity.Property(e => e.Isfifo).HasColumnName("ISFIFO");

                entity.Property(e => e.Long).HasColumnType("decimal(18, 0)");

                entity.Property(e => e.MasterWareHouseNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Remark)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.Supplier)
                    .HasMaxLength(55)
                    .IsUnicode(false);

                entity.Property(e => e.SysDate).HasColumnType("datetime");

                entity.Property(e => e.TempLocation)
                    .HasMaxLength(55)
                    .IsUnicode(false);

                entity.Property(e => e.Up)
                    .HasMaxLength(50)
                    .HasColumnName("UP");

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr).HasMaxLength(50);

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Usr)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.UsrName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.WareHouseAttribute).HasMaxLength(50);

                entity.Property(e => e.WareHouseType).HasMaxLength(50);

                entity.Property(e => e.WarehouseName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.WarehouseNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Width).HasColumnType("decimal(18, 0)");
            });

            modelBuilder.Entity<VOnTraySingleTrace>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("V_OnTraySingleTrace");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Mid).HasColumnName("MID");

                entity.Property(e => e.Pcode)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("PCODE");

                entity.Property(e => e.PrdName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("PRD_NAME");

                entity.Property(e => e.PrdNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("PRD_NO");

                entity.Property(e => e.StaTime)
                    .HasColumnType("datetime")
                    .HasColumnName("STA_TIME");

                entity.Property(e => e.Sysdate)
                    .HasColumnType("datetime")
                    .HasColumnName("SYSDATE");

                entity.Property(e => e.Tdcode)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("TDCODE");

                entity.Property(e => e.ZcNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ZC_NO");
            });

            modelBuilder.Entity<VOnsiteInspection>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("V_OnsiteInspection");

                entity.Property(e => e.BanNo)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("BAN_NO");

                entity.Property(e => e.Banname)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("BANNAME");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.PrdNo)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("PRD_NO");

                entity.Property(e => e.QcResult)
                    .HasMaxLength(50)
                    .HasColumnName("QC_Result");

                entity.Property(e => e.SebNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("SEB_NO");

                entity.Property(e => e.Sebname)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("SEBNAME");

                entity.Property(e => e.SourceBillNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SourceType)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SysDate).HasColumnType("datetime");

                entity.Property(e => e.TzNo)
                    .HasMaxLength(50)
                    .HasColumnName("TZ_NO");

                entity.Property(e => e.UsrName)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ZcNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ZC_NO");

                entity.Property(e => e.Zcname)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("ZCNAME");
            });

            modelBuilder.Entity<VOutForm>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("V_OutForm");

                entity.Property(e => e.BatchNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Batch_No");

                entity.Property(e => e.FinishQuantity).HasColumnType("decimal(18, 4)");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.ItemId).HasColumnName("ItemID");

                entity.Property(e => e.ItemStatus)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Location)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.LocationName).HasMaxLength(100);

                entity.Property(e => e.No)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ProdName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("PROD_NAME");

                entity.Property(e => e.ProdNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Prod_No");

                entity.Property(e => e.ProdSnm)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("PROD_SNM");

                entity.Property(e => e.ProdSpc)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("PROD_SPC");

                entity.Property(e => e.ProductionDate).HasColumnType("datetime");

                entity.Property(e => e.Quantity).HasColumnType("decimal(18, 4)");

                entity.Property(e => e.SourceLocation).HasMaxLength(50);

                entity.Property(e => e.SourceLocationName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SourceNameForm)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SourceName_Form");

                entity.Property(e => e.SourceNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Source_No");

                entity.Property(e => e.SourceNoForm)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SourceNo_Form");

                entity.Property(e => e.Status)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SysDate).HasColumnType("datetime");

                entity.Property(e => e.TargetNameForm)
                    .HasMaxLength(100)
                    .HasColumnName("TargetName_Form");

                entity.Property(e => e.TargetNoForm)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TargetNo_Form");

                entity.Property(e => e.Type)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Unit)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Usr)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UsrName)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VOutFormApplyItemStorage>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("V_OutFormApplyItemStorage");

                entity.Property(e => e.AllCanQty)
                    .HasColumnType("decimal(38, 4)")
                    .HasColumnName("allCanQty");

                entity.Property(e => e.AllFroQty)
                    .HasColumnType("decimal(38, 4)")
                    .HasColumnName("allFroQty");

                entity.Property(e => e.AllQty)
                    .HasColumnType("decimal(38, 4)")
                    .HasColumnName("allQty");

                entity.Property(e => e.BatchNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Batch_No");

                entity.Property(e => e.ErporderNumber)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ERPOrderNumber");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Location)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.MasterWareHouseName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.MasterWareHouseNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.MaxDeliveryQuantity).HasColumnType("decimal(18, 4)");

                entity.Property(e => e.Mid).HasColumnName("MID");

                entity.Property(e => e.MinDeliveryQuantity).HasColumnType("decimal(18, 4)");

                entity.Property(e => e.OrderNumber)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ProdName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("PROD_NAME");

                entity.Property(e => e.ProdNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Prod_No");

                entity.Property(e => e.ProdSpc)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("PROD_SPC");

                entity.Property(e => e.ProductionDate).HasColumnType("datetime");

                entity.Property(e => e.Quantity).HasColumnType("decimal(18, 4)");

                entity.Property(e => e.Remark)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.ShippedQuantity).HasColumnType("decimal(18, 4)");

                entity.Property(e => e.SourceLocation)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TurnNum).HasColumnType("decimal(38, 4)");

                entity.Property(e => e.Unit)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VOutFormApplyTarget>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("V_OutFormApplyTarget");

                entity.Property(e => e.Code)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("code");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Name)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("name");

                entity.Property(e => e.Type)
                    .IsRequired()
                    .HasMaxLength(9)
                    .IsUnicode(false)
                    .HasColumnName("type");
            });

            modelBuilder.Entity<VOutFormTarget>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("V_OutFormTarget");

                entity.Property(e => e.Code)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnName("code");

                entity.Property(e => e.Name)
                    .HasMaxLength(100)
                    .HasColumnName("name");

                entity.Property(e => e.Type)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnName("type");
            });

            modelBuilder.Entity<VPackageAndStorage>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("V_PackageAndStorage");

                entity.Property(e => e.AsnItemId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("AsnItemID");

                entity.Property(e => e.BatchNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Batch_NO");

                entity.Property(e => e.BilType)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.BilTypeName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.BusiNo)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Capacity).HasColumnType("decimal(22, 8)");

                entity.Property(e => e.ChkDate).HasColumnType("datetime");

                entity.Property(e => e.ChkMan)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkManName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkMob)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.ClsDate).HasColumnType("datetime");

                entity.Property(e => e.ClsUsr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ClsUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.EnterFormDetailId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("EnterFormDetailID");

                entity.Property(e => e.FreezeQuantity).HasColumnType("decimal(38, 8)");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Location)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.LocationName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.LockFormNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.LockQuantity).HasColumnType("decimal(38, 8)");

                entity.Property(e => e.MasterWareHouseName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.MasterWareHouseNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Material)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Name)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("NAME");

                entity.Property(e => e.No)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PackageType)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ParentPackageId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ParentPackageID");

                entity.Property(e => e.ProBatchNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ProBatch_No");

                entity.Property(e => e.ProductionDate).HasColumnType("datetime");

                entity.Property(e => e.Quantity).HasColumnType("decimal(22, 8)");

                entity.Property(e => e.Rem)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.SbId).HasColumnName("sbID");

                entity.Property(e => e.SbProductionDate)
                    .HasColumnType("datetime")
                    .HasColumnName("sbProductionDate");

                entity.Property(e => e.SbQuantity)
                    .HasColumnType("decimal(38, 8)")
                    .HasColumnName("sbQuantity");

                entity.Property(e => e.Snm)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SNM");

                entity.Property(e => e.Sort).HasColumnType("decimal(22, 8)");

                entity.Property(e => e.SourceNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Source_NO");

                entity.Property(e => e.Spc)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("SPC");

                entity.Property(e => e.Storage)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.StorageType)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Supplier)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SupplierName)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.SysDate).HasColumnType("datetime");

                entity.Property(e => e.TransferFormItem)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Unit)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Usr)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UsrName)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.WareHouseType).HasMaxLength(50);
            });

            modelBuilder.Entity<VPackagefed>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("V_PACKAGEFED");

                entity.Property(e => e.BanNo)
                    .HasMaxLength(50)
                    .HasColumnName("BAN_NO");

                entity.Property(e => e.BatNo)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("BAT_NO");

                entity.Property(e => e.MlDd)
                    .HasColumnType("datetime")
                    .HasColumnName("ML_DD");

                entity.Property(e => e.MprdName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("MPRD_NAME");

                entity.Property(e => e.MrpNo)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("MRP_NO");

                entity.Property(e => e.PrdName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("PRD_NAME");

                entity.Property(e => e.PrdNo)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("PRD_NO");

                entity.Property(e => e.Qty)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("QTY");

                entity.Property(e => e.SebNo)
                    .HasMaxLength(50)
                    .HasColumnName("SEB_NO");

                entity.Property(e => e.ZcNo)
                    .HasMaxLength(50)
                    .HasColumnName("ZC_NO");
            });

            modelBuilder.Entity<VPackagefeed>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("V_PACKAGEFEED");

                entity.Property(e => e.BanNo)
                    .HasMaxLength(50)
                    .HasColumnName("BAN_NO");

                entity.Property(e => e.BatNo)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("BAT_NO");

                entity.Property(e => e.Mid).HasColumnName("mid");

                entity.Property(e => e.MlDd)
                    .HasColumnType("datetime")
                    .HasColumnName("ML_DD");

                entity.Property(e => e.MprdName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("MPRD_NAME");

                entity.Property(e => e.MrpNo)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("MRP_NO");

                entity.Property(e => e.PrdName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("PRD_NAME");

                entity.Property(e => e.PrdNo)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("PRD_NO");

                entity.Property(e => e.Qty)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("QTY");

                entity.Property(e => e.SebNo)
                    .HasMaxLength(50)
                    .HasColumnName("SEB_NO");

                entity.Property(e => e.Tid).HasColumnName("TID");

                entity.Property(e => e.Unit)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("UNIT");

                entity.Property(e => e.ZcNo)
                    .HasMaxLength(50)
                    .HasColumnName("ZC_NO");
            });

            modelBuilder.Entity<VPackagfeed>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("V_PACKAGFEED");

                entity.Property(e => e.BanNo)
                    .HasMaxLength(50)
                    .HasColumnName("BAN_NO");

                entity.Property(e => e.BatNo)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("BAT_NO");

                entity.Property(e => e.MlDd)
                    .HasColumnType("datetime")
                    .HasColumnName("ML_DD");

                entity.Property(e => e.MprdName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("MPRD_NAME");

                entity.Property(e => e.MrpNo)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("MRP_NO");

                entity.Property(e => e.PrdName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("PRD_NAME");

                entity.Property(e => e.PrdNo)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("PRD_NO");

                entity.Property(e => e.Qty)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("QTY");

                entity.Property(e => e.SebNo)
                    .HasMaxLength(50)
                    .HasColumnName("SEB_NO");

                entity.Property(e => e.ZcNo)
                    .HasMaxLength(50)
                    .HasColumnName("ZC_NO");
            });

            modelBuilder.Entity<VPaintingworkshopfinal>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("V_PAINTINGWORKSHOPFINAL");

                entity.Property(e => e.CallSta)
                    .IsRequired()
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("CALL_STA");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Name)
                    .IsRequired()
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("NAME");

                entity.Property(e => e.SebName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("SEB_NAME");

                entity.Property(e => e.SebNo)
                    .IsRequired()
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("SEB_NO");

                entity.Property(e => e.Typename)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("TYPENAME");
            });

            modelBuilder.Entity<VPaintingworkshoppreprocess>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("V_PAINTINGWORKSHOPPREPROCESS");

                entity.Property(e => e.CallSta)
                    .IsRequired()
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("CALL_STA");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Name)
                    .IsRequired()
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("NAME");

                entity.Property(e => e.SebName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("SEB_NAME");

                entity.Property(e => e.SebNo)
                    .IsRequired()
                    .HasMaxLength(7)
                    .IsUnicode(false)
                    .HasColumnName("SEB_NO");

                entity.Property(e => e.Typename)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("TYPENAME");
            });

            modelBuilder.Entity<VPaintingworkshopreview>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("V_PAINTINGWORKSHOPREVIEW");

                entity.Property(e => e.CallSta)
                    .IsRequired()
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("CALL_STA");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Name)
                    .IsRequired()
                    .HasMaxLength(21)
                    .IsUnicode(false)
                    .HasColumnName("NAME");

                entity.Property(e => e.SebName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("SEB_NAME");

                entity.Property(e => e.SebNo)
                    .IsRequired()
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("SEB_NO");

                entity.Property(e => e.Typename)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("TYPENAME");
            });

            modelBuilder.Entity<VParaAbnormal>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("V_PARA_ABNORMAL");

                entity.Property(e => e.Flag).HasColumnName("FLAG");

                entity.Property(e => e.No)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("NO");

                entity.Property(e => e.SebNo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("SEB_NO");

                entity.Property(e => e.SysDate)
                    .HasColumnType("datetime")
                    .HasColumnName("SYS_DATE");

                entity.Property(e => e.Value)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("VALUE");
            });

            modelBuilder.Entity<VPickMaterial>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("V_PickMaterial");

                entity.Property(e => e.BatchNo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Batch_No");

                entity.Property(e => e.ConfirmQuantity).HasColumnType("decimal(18, 0)");

                entity.Property(e => e.FinishQuantity).HasColumnType("decimal(18, 4)");

                entity.Property(e => e.Group1)
                    .IsRequired()
                    .HasMaxLength(152)
                    .IsUnicode(false)
                    .HasColumnName("group1");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.PickMaterialNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PickMaterialQuantity).HasColumnType("decimal(18, 0)");

                entity.Property(e => e.PlanQuantity).HasColumnType("decimal(18, 4)");

                entity.Property(e => e.ProdName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("PROD_NAME");

                entity.Property(e => e.ProdNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Prod_No");

                entity.Property(e => e.ProdSpc)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("PROD_SPC");

                entity.Property(e => e.SourceWareHouse)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SourceWareHouseName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.StartDate).HasColumnType("datetime");

                entity.Property(e => e.Status)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TargetWareHouse)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TargetWareHouseName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.WkCenterName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("WkCenter_Name");

                entity.Property(e => e.WkCenterNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("WkCenter_No");

                entity.Property(e => e.WoNo)
                    .HasMaxLength(55)
                    .IsUnicode(false)
                    .HasColumnName("WO_NO");
            });

            modelBuilder.Entity<VPickMaterialDetail>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("V_PickMaterialDetail");

                entity.Property(e => e.AddInfo)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Add_Info");

                entity.Property(e => e.AvailableStorage).HasColumnType("decimal(38, 4)");

                entity.Property(e => e.FinishQuantity).HasColumnType("decimal(18, 4)");

                entity.Property(e => e.FormNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Mid).HasColumnName("MID");

                entity.Property(e => e.MprodName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("MPROD_NAME");

                entity.Property(e => e.MprodNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("MPROD_NO");

                entity.Property(e => e.MprodSpc)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("MPROD_SPC");

                entity.Property(e => e.NeedPickMaterialTime).HasColumnType("datetime");

                entity.Property(e => e.PlanQuantity).HasColumnType("decimal(18, 4)");

                entity.Property(e => e.ProdName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("PROD_NAME");

                entity.Property(e => e.ProdNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("PROD_NO");

                entity.Property(e => e.ProdSpc)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("PROD_SPC");

                entity.Property(e => e.Quantity).HasColumnType("decimal(18, 4)");

                entity.Property(e => e.SourceWareHouseName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SourceWareHouseNo).HasMaxLength(50);

                entity.Property(e => e.StartDate).HasColumnType("datetime");

                entity.Property(e => e.Status)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TargetWareHouseName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TargetWareHouseNo).HasMaxLength(55);

                entity.Property(e => e.Type)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Unfinishedquantity)
                    .HasColumnType("decimal(19, 4)")
                    .HasColumnName("UNFINISHEDQUANTITY");

                entity.Property(e => e.Usr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VPlso>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vPLSO");

                entity.Property(e => e.DeptNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("Dept_No");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.LayoutNo)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("Layout_No");

                entity.Property(e => e.Mid).HasColumnName("MID");

                entity.Property(e => e.PlanDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Plan_Date");

                entity.Property(e => e.PlanNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Plan_No");

                entity.Property(e => e.ProdName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Prod_Name");

                entity.Property(e => e.ProdNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Prod_No");

                entity.Property(e => e.Qty)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY");

                entity.Property(e => e.ReqDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Req_Date");

                entity.Property(e => e.Unit)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("UNIT");

                entity.Property(e => e.VerNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Ver_No");
            });

            modelBuilder.Entity<VPrdtBom>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vPRDT_BOM");

                entity.Property(e => e.BomNo)
                    .HasMaxLength(38)
                    .IsUnicode(false)
                    .HasColumnName("BOM_NO");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Idx1)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDX1");

                entity.Property(e => e.Name)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("NAME");

                entity.Property(e => e.PfNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("PF_NO");

                entity.Property(e => e.PrdKnd)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("PRD_KND");

                entity.Property(e => e.PrdNo)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("PRD_NO");

                entity.Property(e => e.Snm)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SNM");

                entity.Property(e => e.Spc)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("SPC");

                entity.Property(e => e.Unit)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("UNIT");

                entity.Property(e => e.Ut1)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("UT1");

                entity.Property(e => e.WhNo)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("WH_NO");
            });

            modelBuilder.Entity<VPrdtProcess>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vPrdtProcess");

                entity.Property(e => e.BomNo)
                    .HasMaxLength(38)
                    .IsUnicode(false)
                    .HasColumnName("BOM_NO");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Idx).HasColumnName("IDX");

                entity.Property(e => e.PrdNo)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("PRD_NO");

                entity.Property(e => e.SebNo)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("SEB_NO");

                entity.Property(e => e.WorkCenter)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ZcItm).HasColumnName("ZC_ITM");

                entity.Property(e => e.ZcName)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("ZC_NAME");

                entity.Property(e => e.ZcNo)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ZC_NO");
            });

            modelBuilder.Entity<VProcessSendInspectionOrder>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("V_ProcessSendInspectionOrder");

                entity.Property(e => e.BillNo)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.BillStatus)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.DeviceNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Inspectdate)
                    .HasColumnType("datetime")
                    .HasColumnName("INSPECTDATE");

                entity.Property(e => e.Result)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.SourceType)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SysDate).HasColumnType("datetime");

                entity.Property(e => e.Usr)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VProcessTraceCode>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vProcessTraceCode");

                entity.Property(e => e.DeviceNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("DeviceNO");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.ProcessNo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ProcessNO");

                entity.Property(e => e.ProcessTraceCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ProductNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ProductNO");

                entity.Property(e => e.ProductionDate)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.SourceOrder)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VProduceFeedFirstInFirstOut>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("V_ProduceFeedFirstInFirstOut");

                entity.Property(e => e.AsnItemId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("AsnItemID");

                entity.Property(e => e.BilType)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.BilTypeName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.BusiNo)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Capacity).HasColumnType("decimal(22, 8)");

                entity.Property(e => e.ChkDate).HasColumnType("datetime");

                entity.Property(e => e.ChkMan)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkManName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkMob)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.ClsDate).HasColumnType("datetime");

                entity.Property(e => e.ClsUsr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ClsUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.CustomerTag)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.EnterFormDetailId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("EnterFormDetailID");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Location)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.LockFormNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.LockReason)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Material)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.No)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.OrderNumber)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PackageType)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ParentPackageId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ParentPackageID");

                entity.Property(e => e.ProBatchNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ProBatch_No");

                entity.Property(e => e.ProductionDate).HasColumnType("datetime");

                entity.Property(e => e.Quantity).HasColumnType("decimal(22, 8)");

                entity.Property(e => e.Rem)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.Remark)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.Sort).HasColumnType("decimal(22, 8)");

                entity.Property(e => e.Storage)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Supplier)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SysDate).HasColumnType("datetime");

                entity.Property(e => e.TransferFormItem)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Unit)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Usr)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UsrName)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VProductInfo>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vProductInfo");

                entity.Property(e => e.AcceptingDate).HasColumnType("datetime");

                entity.Property(e => e.Barcode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.BatchNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Batch_No");

                entity.Property(e => e.ErporderNumber)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ERPOrderNumber");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.MoNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("MO_NO");

                entity.Property(e => e.No)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ProdNmaeBind)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Prod_Nmae_Bind");

                entity.Property(e => e.ProdNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Prod_No");

                entity.Property(e => e.ProdNoBind)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Prod_No_Bind");

                entity.Property(e => e.ProdSpec)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Prod_Spec");

                entity.Property(e => e.ProductionDate).HasColumnType("datetime");

                entity.Property(e => e.Quantity).HasColumnType("decimal(18, 4)");

                entity.Property(e => e.TargetNoForm)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TargetNo_Form");

                entity.Property(e => e.TraceNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.WoNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("WO_NO");
            });

            modelBuilder.Entity<VProductionFeed>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("V_ProductionFeed");

                entity.Property(e => e.BatNo)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("BAT_NO");

                entity.Property(e => e.MlDd)
                    .HasColumnType("datetime")
                    .HasColumnName("ML_DD");

                entity.Property(e => e.MlNo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ML_NO");

                entity.Property(e => e.MrpNo)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("MRP_NO");

                entity.Property(e => e.PrdNo)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("PRD_NO");

                entity.Property(e => e.Qty)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("QTY");

                entity.Property(e => e.TzNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("TZ_NO");
            });

            modelBuilder.Entity<VProductionLineAndDevice>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("V_ProductionLineAndDevice");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Name).HasMaxLength(50);

                entity.Property(e => e.No)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnName("no");

                entity.Property(e => e.Type)
                    .IsRequired()
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("TYPE");
            });

            modelBuilder.Entity<VQcBillList>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vQcBillList");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.No)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PrdNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("PRD_NO");

                entity.Property(e => e.QcDev)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("QC_DEV");

                entity.Property(e => e.QcResult)
                    .HasMaxLength(50)
                    .HasColumnName("qc_result");

                entity.Property(e => e.Sysdate)
                    .HasColumnType("datetime")
                    .HasColumnName("SYSDATE");

                entity.Property(e => e.TraceCode)
                    .HasMaxLength(55)
                    .IsUnicode(false);

                entity.Property(e => e.ZcNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ZC_NO");
            });

            modelBuilder.Entity<VQcDataRec>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vQcDataRec");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Itemno).HasColumnName("ITEMNO");

                entity.Property(e => e.Lowsybol)
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("LOWSYBOL");

                entity.Property(e => e.No)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("NO");

                entity.Property(e => e.NumMax)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("NUM_MAX");

                entity.Property(e => e.NumMin)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("NUM_MIN");

                entity.Property(e => e.PrjName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("PRJ_NAME");

                entity.Property(e => e.QcItm)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("QC_ITM");

                entity.Property(e => e.QcResult)
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("QC_RESULT");

                entity.Property(e => e.QcValue)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("QC_VALUE");

                entity.Property(e => e.SalNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("SAL_NO");

                entity.Property(e => e.Sysdate)
                    .HasColumnType("datetime")
                    .HasColumnName("SYSDATE");

                entity.Property(e => e.TraceCode)
                    .HasMaxLength(55)
                    .IsUnicode(false);

                entity.Property(e => e.Upsybol)
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("UPSYBOL");
            });

            modelBuilder.Entity<VQcPrdInspectFirst>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_QC_PRD_INSPECT_FIRST");

                entity.Property(e => e.InspectType)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("INSPECT_TYPE");

                entity.Property(e => e.IsWsFirstInspect)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("IS_WS_FIRST_INSPECT");

                entity.Property(e => e.PrdNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("PRD_NO");

                entity.Property(e => e.ZcNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ZC_NO");
            });

            modelBuilder.Entity<VQcPrdInspectLast>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("V_ QC_PRD_INSPECT_LAST");

                entity.Property(e => e.InspectType)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("INSPECT_TYPE");

                entity.Property(e => e.IsWsLastInspect)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("IS_WS_LAST_INSPECT");

                entity.Property(e => e.PrdNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("PRD_NO");

                entity.Property(e => e.ZcNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ZC_NO");
            });

            modelBuilder.Entity<VQcPrdInspectLast1>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_QC_PRD_INSPECT_LAST");

                entity.Property(e => e.InspectType)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("INSPECT_TYPE");

                entity.Property(e => e.IsWsLastInspect)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("IS_WS_LAST_INSPECT");

                entity.Property(e => e.PrdNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("PRD_NO");

                entity.Property(e => e.ZcNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ZC_NO");
            });

            modelBuilder.Entity<VQcPrdInspectWs>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_QC_PRD_INSPECT_WS");

                entity.Property(e => e.InspectType)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("INSPECT_TYPE");

                entity.Property(e => e.IsWsInspect)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("IS_WS_INSPECT");

                entity.Property(e => e.PrdNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("PRD_NO");

                entity.Property(e => e.ZcNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ZC_NO");
            });

            modelBuilder.Entity<VQcPrdMeasureRecord>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("V_QC_PRD_MEASURE_RECORD");

                entity.Property(e => e.Axis)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("AXIS");

                entity.Property(e => e.Ddate)
                    .HasColumnType("datetime")
                    .HasColumnName("DDATE");

                entity.Property(e => e.Description)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("DESCRIPTION");

                entity.Property(e => e.Detailid).HasColumnName("DETAILID");

                entity.Property(e => e.Dimension)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("DIMENSION");

                entity.Property(e => e.Dtime)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("DTIME");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Meas)
                    .HasColumnType("decimal(18, 4)")
                    .HasColumnName("MEAS");

                entity.Property(e => e.Mid).HasColumnName("MID");

                entity.Property(e => e.PartName)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("PART_NAME");

                entity.Property(e => e.Revisionnumber)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("REVISIONNUMBER");

                entity.Property(e => e.Serialnumber)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SERIALNUMBER");
            });

            modelBuilder.Entity<VQcPrdMeasureSchemes>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_qc_prd_measure_schemes");

                entity.Property(e => e.Axis)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("AXIS");

                entity.Property(e => e.Ddate)
                    .HasColumnType("datetime")
                    .HasColumnName("DDATE");

                entity.Property(e => e.Description)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("DESCRIPTION");

                entity.Property(e => e.DetailId).HasColumnName("detailId");

                entity.Property(e => e.Dimension)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("DIMENSION");

                entity.Property(e => e.Dtime)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("DTIME");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.NumMaxIn)
                    .HasColumnType("decimal(18, 4)")
                    .HasColumnName("NUM_MAX_IN");

                entity.Property(e => e.NumMinIn)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("NUM_MIN_IN");

                entity.Property(e => e.PartName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("part_name");

                entity.Property(e => e.Revisionnumber)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("REVISIONNUMBER");

                entity.Property(e => e.Serialnumber)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SERIALNUMBER");
            });

            modelBuilder.Entity<VQmInspectSBatchReview>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("V_QM_InspectS_BatchReview");

                entity.Property(e => e.AdvanceSampleNo)
                    .HasMaxLength(55)
                    .IsUnicode(false)
                    .HasColumnName("AdvanceSampleNO");

                entity.Property(e => e.BanNo)
                    .HasMaxLength(55)
                    .IsUnicode(false)
                    .HasColumnName("BAN_NO");

                entity.Property(e => e.BillNo)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.BillStatus)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.CastingBatchNo)
                    .HasMaxLength(55)
                    .IsUnicode(false);

                entity.Property(e => e.DeviceName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Device_Name");

                entity.Property(e => e.DeviceNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.InspectDate).HasColumnType("datetime");

                entity.Property(e => e.InspectDevice)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InspectType)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.IsCheck).HasColumnName("isCheck");

                entity.Property(e => e.IsTransform)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Mid).HasColumnName("MID");

                entity.Property(e => e.ProcedureCode)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ProcedureName)
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.Property(e => e.ProductNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Result)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.SampleNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TargetDeviceName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("TargetDevice_Name");

                entity.Property(e => e.TargetDeviceNo)
                    .HasMaxLength(55)
                    .IsUnicode(false)
                    .HasColumnName("TargetDeviceNO");

                entity.Property(e => e.TraceNo)
                    .HasMaxLength(55)
                    .IsUnicode(false);

                entity.Property(e => e.TzNo)
                    .HasMaxLength(55)
                    .IsUnicode(false)
                    .HasColumnName("TZ_NO");
            });

            modelBuilder.Entity<VQmInspectSdview>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("V_QM_InspectSDView");

                entity.Property(e => e.BarCode)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Bmid).HasColumnName("BMID");

                entity.Property(e => e.CastingBatchNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("castingBatchNo");

                entity.Property(e => e.DeviceNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.InputDate).HasColumnType("datetime");

                entity.Property(e => e.InspectCode)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.InspectDate).HasColumnType("datetime");

                entity.Property(e => e.InspectName)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InspectType)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.LowerLimit)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Mid).HasColumnName("MID");

                entity.Property(e => e.ProductNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.RealValue)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Remark)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Result)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.StandardValue)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.StoveNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Unit)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UpdateStamp)
                    .IsRequired()
                    .IsRowVersion()
                    .IsConcurrencyToken();

                entity.Property(e => e.UpperLimit)
                    .HasMaxLength(20)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VQmsio>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("V_QMSIO");

                entity.Property(e => e.BatchNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.No)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PfaNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("PFA_NO");

                entity.Property(e => e.ProductNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SuppCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VQpicmap>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vQPICMAP");

                entity.Property(e => e.EffDate)
                    .HasColumnType("datetime")
                    .HasColumnName("EFF_DATE");

                entity.Property(e => e.Fidx).HasColumnName("FIDX");

                entity.Property(e => e.Filepath)
                    .HasMaxLength(300)
                    .IsUnicode(false)
                    .HasColumnName("FILEPATH");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Idx).HasColumnName("IDX");

                entity.Property(e => e.InspectType)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("INSPECT_TYPE");

                entity.Property(e => e.Picid).HasColumnName("PICID");

                entity.Property(e => e.PrdNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("PRD_NO");

                entity.Property(e => e.ZcName)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("ZC_NAME");

                entity.Property(e => e.ZcNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ZC_NO");
            });

            modelBuilder.Entity<VReceivingMaterial>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("V_ReceivingMaterial");

                entity.Property(e => e.BatchNo)
                    .HasMaxLength(50)
                    .HasColumnName("Batch_No");

                entity.Property(e => e.FinishQuantity).HasColumnType("decimal(20, 4)");

                entity.Property(e => e.FormNo)
                    .HasMaxLength(50)
                    .HasColumnName("FormNO");

                entity.Property(e => e.ItemId).HasColumnName("ItemID");

                entity.Property(e => e.LtfinishQuantity)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("LTFinishQuantity");

                entity.Property(e => e.Ltid).HasColumnName("LTID");

                entity.Property(e => e.Ltitemid).HasColumnName("LTITEMID");

                entity.Property(e => e.Ltno)
                    .HasMaxLength(50)
                    .HasColumnName("LTNO");

                entity.Property(e => e.LtplanQuantity)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("LTPlanQuantity");

                entity.Property(e => e.MprodName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("MPROD_NAME");

                entity.Property(e => e.MprodNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("MPROD_NO");

                entity.Property(e => e.MprodSpc)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("MPROD_SPC");

                entity.Property(e => e.PlanQuantity).HasColumnType("decimal(20, 4)");

                entity.Property(e => e.ProdName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("PROD_NAME");

                entity.Property(e => e.ProdNo)
                    .HasMaxLength(50)
                    .HasColumnName("Prod_No");

                entity.Property(e => e.ProdSnm)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("PROD_SNM");

                entity.Property(e => e.ProdSpc)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("PROD_SPC");

                entity.Property(e => e.Qty)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY");

                entity.Property(e => e.Quantity).HasColumnType("decimal(21, 4)");

                entity.Property(e => e.TargetWareHouse)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.UnFinishedQuantity).HasColumnType("decimal(21, 4)");

                entity.Property(e => e.WoNo)
                    .HasMaxLength(55)
                    .IsUnicode(false)
                    .HasColumnName("WO_NO");
            });

            modelBuilder.Entity<VRollBackList>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vRollBackList");

                entity.Property(e => e.BomNo)
                    .HasMaxLength(38)
                    .IsUnicode(false)
                    .HasColumnName("BOM_NO");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.IdNo)
                    .HasMaxLength(38)
                    .IsUnicode(false)
                    .HasColumnName("ID_NO");

                entity.Property(e => e.MoNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("MO_NO");

                entity.Property(e => e.MrpNo)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("MRP_NO");

                entity.Property(e => e.OpnDd)
                    .HasColumnType("datetime")
                    .HasColumnName("OPN_DD");

                entity.Property(e => e.PcBan)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("PC_BAN");

                entity.Property(e => e.Qty)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY");

                entity.Property(e => e.QtyChk)
                    .HasColumnType("numeric(38, 0)")
                    .HasColumnName("QTY_CHK");

                entity.Property(e => e.QtyFin)
                    .HasColumnType("numeric(38, 0)")
                    .HasColumnName("QTY_FIN");

                entity.Property(e => e.QtyLost)
                    .HasColumnType("numeric(38, 0)")
                    .HasColumnName("QTY_LOST");

                entity.Property(e => e.QtyScrap)
                    .HasColumnType("numeric(38, 0)")
                    .HasColumnName("QTY_SCRAP");

                entity.Property(e => e.SebNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("SEB_NO");

                entity.Property(e => e.StationNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TzNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("TZ_NO");

                entity.Property(e => e.Unit)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("UNIT");

                entity.Property(e => e.ZcNo)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ZC_NO");
            });

            modelBuilder.Entity<VRosFilterXl>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("V_RosFilterXL");

                entity.Property(e => e.Asn)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ASN");

                entity.Property(e => e.BatchNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.BillNo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.BillStatus)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.BusiNo)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Comment)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.CreateAi)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CreateAI");

                entity.Property(e => e.CreateInspectionOrder)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.DeptNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.InspectTc).HasColumnName("InspectTC");

                entity.Property(e => e.InspectionDate).HasColumnType("datetime");

                entity.Property(e => e.InspectionType)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.IsEfi).HasColumnName("IsEFI");

                entity.Property(e => e.ProducedDate).HasColumnType("datetime");

                entity.Property(e => e.ProductionName)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.ProductionNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.QtyPs)
                    .HasColumnType("decimal(18, 4)")
                    .HasColumnName("QTY_PS");

                entity.Property(e => e.QtyRck)
                    .HasColumnType("decimal(18, 4)")
                    .HasColumnName("QTY_RCK");

                entity.Property(e => e.QtyRtn)
                    .HasColumnType("decimal(18, 4)")
                    .HasColumnName("QTY_RTN");

                entity.Property(e => e.RawMaterialBatch)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SendInspectorId).HasColumnName("SendInspectorID");

                entity.Property(e => e.Siqty)
                    .HasColumnType("decimal(18, 4)")
                    .HasColumnName("SIQty");

                entity.Property(e => e.Snm)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SNM");

                entity.Property(e => e.SourceBillNo)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.SourceLocation)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SourceLocationName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Spc)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("SPC");

                entity.Property(e => e.StorageLocation)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Subid).HasColumnName("SUBID");

                entity.Property(e => e.SuppCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SuppName)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.SuppSnm)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("SuppSNM");

                entity.Property(e => e.SysDate).HasColumnType("datetime");

                entity.Property(e => e.TargetWareHouse)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TargetWareHouseName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Unit)
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.UsrName)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ViewDetail)
                    .IsRequired()
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.供应商检验报废数量).HasColumnType("decimal(18, 4)");

                entity.Property(e => e.厂内检验报废数量).HasColumnType("decimal(18, 4)");

                entity.Property(e => e.合格数量).HasColumnType("decimal(18, 4)");

                entity.Property(e => e.待处置数量).HasColumnType("decimal(18, 4)");

                entity.Property(e => e.报废数量).HasColumnType("decimal(18, 4)");

                entity.Property(e => e.让步接收数量).HasColumnType("decimal(18, 4)");

                entity.Property(e => e.退回数量).HasColumnType("decimal(18, 4)");
            });

            modelBuilder.Entity<VRptTemplet>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("V_RPT_TEMPLET");

                entity.Property(e => e.BusiKind)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.BusiNo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.InputDate).HasColumnType("datetime");

                entity.Property(e => e.IsSystem)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.Memo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Name)
                    .IsRequired()
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.No)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("NO");

                entity.Property(e => e.Userno)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("userno");

                entity.Property(e => e.ViewData).HasColumnType("image");
            });

            modelBuilder.Entity<VSafeTyInventoryList>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("V_SafeTyInventoryList");

                entity.Property(e => e.InventoryReplenishment).HasColumnType("decimal(18, 4)");

                entity.Property(e => e.MaxQuantity)
                    .HasColumnType("decimal(18, 0)")
                    .HasColumnName("maxQuantity");

                entity.Property(e => e.Minquantity)
                    .HasColumnType("decimal(18, 0)")
                    .HasColumnName("MINQUANTITY");

                entity.Property(e => e.ProdName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("PROD_NAME");

                entity.Property(e => e.ProdNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Prod_NO");

                entity.Property(e => e.ProdSnm)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("PROD_SNM");

                entity.Property(e => e.ProdSpc)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("PROD_SPC");

                entity.Property(e => e.Quantity).HasColumnType("decimal(38, 4)");

                entity.Property(e => e.Ut)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("UT");

                entity.Property(e => e.WareHouseNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.WarehouseName)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VSbrecordtype>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("V_SBRECORDTYPE");

                entity.Property(e => e.Type)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("TYPE");
            });

            modelBuilder.Entity<VSebeiModel>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vSebeiModel");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Model)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("MODEL");

                entity.Property(e => e.Name)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("NAME");
            });

            modelBuilder.Entity<VSittik>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("V_SITTIK");

                entity.Property(e => e.BillNo)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.BillStatus)
                    .HasMaxLength(6)
                    .IsUnicode(false);

                entity.Property(e => e.DeptNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InspectQty).HasColumnType("decimal(18, 4)");

                entity.Property(e => e.InspectionDate).HasColumnType("datetime");

                entity.Property(e => e.InspectionType)
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.InspectionUser)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Priority)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.ProcessNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ProcessNO");

                entity.Property(e => e.ProductionName)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.SendInspectionDate).HasColumnType("datetime");

                entity.Property(e => e.SendInspectionUser)
                    .HasMaxLength(20)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VStorage>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("V_Storage");

                entity.Property(e => e.AvailableQuantity).HasColumnType("decimal(38, 4)");

                entity.Property(e => e.BatchNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Batch_NO");

                entity.Property(e => e.FreezeQuantity).HasColumnType("decimal(38, 8)");

                entity.Property(e => e.FrozenQuantity).HasColumnType("decimal(38, 4)");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Location)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.LocationName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.LockQuantity).HasColumnType("decimal(38, 8)");

                entity.Property(e => e.MasterWareHouseName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Masterwarehouseno)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("MASTERWAREHOUSENO");

                entity.Property(e => e.ProdName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("PROD_NAME");

                entity.Property(e => e.ProdNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Prod_NO");

                entity.Property(e => e.ProdSnm)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("PROD_SNM");

                entity.Property(e => e.ProdSpc)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("PROD_SPC");

                entity.Property(e => e.ProductionDate).HasColumnType("datetime");

                entity.Property(e => e.Quantity).HasColumnType("decimal(38, 4)");

                entity.Property(e => e.SupplierName)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.SupplierNo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SupplierSnm)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("SupplierSNM");

                entity.Property(e => e.Unit)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VStorageBarcode>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("V_StorageBarcode");

                entity.Property(e => e.AvailableQuantity).HasColumnType("decimal(38, 8)");

                entity.Property(e => e.BatchNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Batch_NO");

                entity.Property(e => e.BilType)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.BilTypeName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.BusiNo)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkDate).HasColumnType("datetime");

                entity.Property(e => e.ChkMan)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkManName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkMob)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.ClsDate).HasColumnType("datetime");

                entity.Property(e => e.ClsUsr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ClsUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.FreezeQuantity).HasColumnType("decimal(38, 8)");

                entity.Property(e => e.FrozenQuantity).HasColumnType("decimal(18, 4)");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Location)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.LocationName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.LockQuantity).HasColumnType("decimal(38, 8)");

                entity.Property(e => e.Masterwarehousename)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("MASTERWAREHOUSENAME");

                entity.Property(e => e.Masterwarehouseno)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("MASTERWAREHOUSENO");

                entity.Property(e => e.PackageNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("PackageNO");

                entity.Property(e => e.ProdName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("PROD_NAME");

                entity.Property(e => e.ProdNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Prod_NO");

                entity.Property(e => e.ProdSnm)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("PROD_SNM");

                entity.Property(e => e.ProdSpc)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("PROD_SPC");

                entity.Property(e => e.ProductionDate).HasColumnType("datetime");

                entity.Property(e => e.Quantity).HasColumnType("decimal(18, 4)");

                entity.Property(e => e.Rem)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.Remark)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("REMARK");

                entity.Property(e => e.SourceNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Source_NO");

                entity.Property(e => e.SupplierName)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.SupplierNo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SupplierSnm)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("SupplierSNM");

                entity.Property(e => e.SysDate).HasColumnType("datetime");

                entity.Property(e => e.Unit)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Usr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VStorageBarcodeHistory>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("V_StorageBarcodeHistory");

                entity.Property(e => e.Balance).HasColumnType("decimal(18, 4)");

                entity.Property(e => e.BatchNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Batch_NO");

                entity.Property(e => e.BeginningOfPeriod).HasColumnType("decimal(18, 4)");

                entity.Property(e => e.CustNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Cust_NO");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Iotype)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("IOType");

                entity.Property(e => e.Location)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.LocationName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Masterwarehousename)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("MASTERWAREHOUSENAME");

                entity.Property(e => e.Masterwarehouseno)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("MASTERWAREHOUSENO");

                entity.Property(e => e.MaterialBatchNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("MaterialBatch_NO");

                entity.Property(e => e.Mid).HasColumnName("MID");

                entity.Property(e => e.PackageNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("PackageNO");

                entity.Property(e => e.ProdName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("PROD_NAME");

                entity.Property(e => e.ProdNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Prod_NO");

                entity.Property(e => e.ProdSnm)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("PROD_SNM");

                entity.Property(e => e.ProdSpc)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("PROD_SPC");

                entity.Property(e => e.ProductionDate).HasColumnType("datetime");

                entity.Property(e => e.Quantity).HasColumnType("decimal(18, 4)");

                entity.Property(e => e.SourceNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Source_NO");

                entity.Property(e => e.SourceNoForm)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SourceNo_Form");

                entity.Property(e => e.Supplier)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SupplierName)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.SupplierSnm)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("SupplierSNM");

                entity.Property(e => e.SysDate).HasColumnType("datetime");

                entity.Property(e => e.TradeDate).HasColumnType("datetime");

                entity.Property(e => e.Unit)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Usr)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.UsrName)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VStorageDull>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("V_StorageDull");

                entity.Property(e => e.BatchNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Batch_NO");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.LateDeliveryDate).HasColumnType("datetime");

                entity.Property(e => e.LateStorageDate).HasColumnType("datetime");

                entity.Property(e => e.ProdName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("PROD_NAME");

                entity.Property(e => e.ProdNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Prod_No");

                entity.Property(e => e.ProdSnm)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("PROD_SNM");

                entity.Property(e => e.ProdSpc)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("PROD_SPC");

                entity.Property(e => e.ProductionDate).HasColumnType("datetime");

                entity.Property(e => e.Quantity)
                    .HasColumnType("decimal(18, 4)")
                    .HasColumnName("quantity");

                entity.Property(e => e.Unit)
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.WareHouseName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.WareHouseNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VStoragePackage>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("V_StoragePackage");

                entity.Property(e => e.BatchNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Batch_NO");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.PackageNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("PackageNO");

                entity.Property(e => e.ProdName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("PROD_NAME");

                entity.Property(e => e.ProdNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Prod_NO");

                entity.Property(e => e.ProdSnm)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("PROD_SNM");

                entity.Property(e => e.ProdSpc)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("PROD_SPC");

                entity.Property(e => e.Quantity).HasColumnType("decimal(38, 8)");

                entity.Property(e => e.Unit)
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.WareHouseNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.WarehouseName)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VStorageSummary>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("V_StorageSummary");

                entity.Property(e => e.AvailableQuantity).HasColumnType("decimal(38, 4)");

                entity.Property(e => e.BatchNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Batch_NO");

                entity.Property(e => e.FreezeQuantity).HasColumnType("decimal(38, 8)");

                entity.Property(e => e.FrozenQuantity).HasColumnType("decimal(38, 4)");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.ProdName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Prod_NAME");

                entity.Property(e => e.ProdNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Prod_NO");

                entity.Property(e => e.ProdSnm)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Prod_SNM");

                entity.Property(e => e.ProdSpc)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Prod_SPC");

                entity.Property(e => e.Quantity).HasColumnType("decimal(38, 4)");

                entity.Property(e => e.SupplierName)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.SupplierNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SupplierNO");

                entity.Property(e => e.SupplierSnm)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("SupplierSNM");

                entity.Property(e => e.Unit)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.WareHouseNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.WarehouseName)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VStorageWareHouse>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("V_StorageWareHouse");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.MasterWareHouseNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("masterWareHouseNo");

                entity.Property(e => e.WareHouseNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.WarehouseName)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VStorageWareHouseProduction>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("V_StorageWareHouseProduction");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.MasterWareHouseNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("masterWareHouseNo");

                entity.Property(e => e.ProdName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("PROD_NAME");

                entity.Property(e => e.ProdNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Prod_NO");

                entity.Property(e => e.ProdSnm)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("PROD_SNM");

                entity.Property(e => e.ProdSpc)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("PROD_SPC");

                entity.Property(e => e.Unit)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("UNIT");

                entity.Property(e => e.WareHouseNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.WarehouseName)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VSysDataCus>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vSysDataCus");

                entity.Property(e => e.CusNo)
                    .IsRequired()
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("CUS_NO");

                entity.Property(e => e.CusNov)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("cusNov");

                entity.Property(e => e.Name)
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VSysDataDept>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vSysDataDept");

                entity.Property(e => e.Dep)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("dep");

                entity.Property(e => e.Depv)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("depv");

                entity.Property(e => e.Name)
                    .HasMaxLength(30)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VSysDataRole>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vSysDataRole");

                entity.Property(e => e.Name)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.No)
                    .IsRequired()
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("no");

                entity.Property(e => e.Nov)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("nov");

                entity.Property(e => e.Remark)
                    .HasMaxLength(200)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VSysDataUsr>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vSysDataUsr");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Name)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.No)
                    .IsRequired()
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("no");

                entity.Property(e => e.Nov)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("nov");
            });

            modelBuilder.Entity<VTdCodeBusi1>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vTdCodeBusi");

                entity.Property(e => e.Barcode)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("BARCODE");

                entity.Property(e => e.CodeStatus)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CODE_STATUS");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.IdNo)
                    .HasMaxLength(38)
                    .IsUnicode(false)
                    .HasColumnName("ID_NO");

                entity.Property(e => e.JhNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("JH_NO");

                entity.Property(e => e.PassTime)
                    .HasColumnType("datetime")
                    .HasColumnName("PASS_TIME");

                entity.Property(e => e.PrdNo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("PRD_NO");

                entity.Property(e => e.SebNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SEB_NO");

                entity.Property(e => e.TzNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("TZ_NO");

                entity.Property(e => e.ZcNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ZC_NO");
            });

            modelBuilder.Entity<VTdcodeBusi>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("V_TDCODE_BUSI");

                entity.Property(e => e.Barcode)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("BARCODE");

                entity.Property(e => e.CodeStatus)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CODE_STATUS");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.ModName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("MOD_NAME");

                entity.Property(e => e.PrdNo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("PRD_NO");

                entity.Property(e => e.Rn).HasColumnName("RN");

                entity.Property(e => e.SebNo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("SEB_NO");

                entity.Property(e => e.StaTime)
                    .HasColumnType("datetime")
                    .HasColumnName("STA_TIME");

                entity.Property(e => e.TzNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("TZ_NO");

                entity.Property(e => e.ZcNo)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("ZC_NO");
            });

            modelBuilder.Entity<VTest>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("V_TEST");

                entity.Property(e => e.Flag).HasColumnName("FLAG");

                entity.Property(e => e.SebNo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("SEB_NO");

                entity.Property(e => e.SysDate)
                    .HasColumnType("datetime")
                    .HasColumnName("SYS_DATE");

                entity.Property(e => e.Type)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("TYPE");
            });

            modelBuilder.Entity<VTransfer>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("V_TRANSFER");

                entity.Property(e => e.Datasource)
                    .HasMaxLength(200)
                    .HasColumnName("DATASOURCE");

                entity.Property(e => e.Datatype)
                    .HasMaxLength(200)
                    .HasColumnName("DATATYPE");

                entity.Property(e => e.DepName)
                    .HasMaxLength(200)
                    .HasColumnName("DEP_NAME");

                entity.Property(e => e.DepNo)
                    .HasMaxLength(200)
                    .HasColumnName("DEP_NO");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Inputdate)
                    .HasColumnType("datetime")
                    .HasColumnName("INPUTDATE");

                entity.Property(e => e.Num).HasColumnName("NUM");

                entity.Property(e => e.PrdName)
                    .HasMaxLength(200)
                    .HasColumnName("PRD_NAME");

                entity.Property(e => e.PrdNo)
                    .HasMaxLength(200)
                    .HasColumnName("PRD_NO");

                entity.Property(e => e.PrdSnm)
                    .HasMaxLength(200)
                    .HasColumnName("PRD_SNM");

                entity.Property(e => e.PrdSpc)
                    .HasMaxLength(200)
                    .HasColumnName("PRD_SPC");

                entity.Property(e => e.Producestatus)
                    .HasMaxLength(200)
                    .HasColumnName("PRODUCESTATUS");
            });

            modelBuilder.Entity<VTransferform>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("V_TRANSFERFORM");

                entity.Property(e => e.Datasource)
                    .HasMaxLength(200)
                    .HasColumnName("DATASOURCE");

                entity.Property(e => e.Datatype)
                    .HasMaxLength(200)
                    .HasColumnName("DATATYPE");

                entity.Property(e => e.DepName)
                    .HasMaxLength(200)
                    .HasColumnName("DEP_NAME");

                entity.Property(e => e.DepNo)
                    .HasMaxLength(200)
                    .HasColumnName("DEP_NO");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Inputdate)
                    .HasColumnType("datetime")
                    .HasColumnName("INPUTDATE");

                entity.Property(e => e.Num).HasColumnName("NUM");

                entity.Property(e => e.PrdName)
                    .HasMaxLength(200)
                    .HasColumnName("PRD_NAME");

                entity.Property(e => e.PrdNo)
                    .HasMaxLength(200)
                    .HasColumnName("PRD_NO");

                entity.Property(e => e.PrdSnm)
                    .HasMaxLength(200)
                    .HasColumnName("PRD_SNM");

                entity.Property(e => e.PrdSpc)
                    .HasMaxLength(200)
                    .HasColumnName("PRD_SPC");

                entity.Property(e => e.Producestatus)
                    .HasMaxLength(200)
                    .HasColumnName("PRODUCESTATUS");
            });

            modelBuilder.Entity<VWaitBoxingBatList>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vWaitBoxingBatList");

                entity.Property(e => e.BatchNo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Batch_No");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.ProcessNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Process_No");

                entity.Property(e => e.ProdNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Prod_No");

                entity.Property(e => e.Qty)
                    .HasColumnType("decimal(38, 8)")
                    .HasColumnName("qty");

                entity.Property(e => e.Result)
                    .IsRequired()
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("result");

                entity.Property(e => e.WoNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("WO_NO");
            });

            modelBuilder.Entity<VWaitScanBarsList>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vWaitScanBarsList");

                entity.Property(e => e.Barcode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.ProcessInOut)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("Process_InOut");

                entity.Property(e => e.ProcessNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("Process_No");

                entity.Property(e => e.ProdNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Prod_No");

                entity.Property(e => e.Qty).HasColumnType("decimal(16, 8)");

                entity.Property(e => e.Type)
                    .HasMaxLength(10)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VWareHouse>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("V_WareHouse");

                entity.Property(e => e.Address)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Bearing).HasColumnType("decimal(18, 0)");

                entity.Property(e => e.Customer).HasMaxLength(55);

                entity.Property(e => e.EffectiveDate).HasColumnType("datetime");

                entity.Property(e => e.ExpirationDate).HasColumnType("datetime");

                entity.Property(e => e.FactoryCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.FeedPriority)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Height).HasColumnType("decimal(18, 0)");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.InspectArea)
                    .HasMaxLength(55)
                    .IsUnicode(false);

                entity.Property(e => e.Isfifo).HasColumnName("ISFIFO");

                entity.Property(e => e.Long).HasColumnType("decimal(18, 0)");

                entity.Property(e => e.MasterWareHouseNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.MwhisInspectArea).HasColumnName("MWHIsInspectArea");

                entity.Property(e => e.MwhisLine).HasColumnName("MWHIsLine");

                entity.Property(e => e.MwhisSuspected).HasColumnName("MWHIsSuspected");

                entity.Property(e => e.MwhisWaste).HasColumnName("MWHIsWaste");

                entity.Property(e => e.Remark)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.Supplier)
                    .HasMaxLength(55)
                    .IsUnicode(false);

                entity.Property(e => e.SysDate).HasColumnType("datetime");

                entity.Property(e => e.TempLocation)
                    .HasMaxLength(55)
                    .IsUnicode(false);

                entity.Property(e => e.Up)
                    .HasMaxLength(50)
                    .HasColumnName("UP");

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr).HasMaxLength(50);

                entity.Property(e => e.Usr)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.WareHouseAttribute).HasMaxLength(50);

                entity.Property(e => e.WareHouseType).HasMaxLength(50);

                entity.Property(e => e.WarehouseName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.WarehouseNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Width).HasColumnType("decimal(18, 0)");
            });

            modelBuilder.Entity<VWkStationProcess>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vWkStationProcess");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Name)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NAME");

                entity.Property(e => e.TmNo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("TM_NO");

                entity.Property(e => e.ZcNo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ZC_NO");
            });

            modelBuilder.Entity<VWmformPackage>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vWMFormPackage");

                entity.Property(e => e.AcceptingDate).HasColumnType("datetime");

                entity.Property(e => e.ErporderNumber)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ERPOrderNumber");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.No)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PackageNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ProdNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Prod_No");
            });

            modelBuilder.Entity<VWorkOrderMats>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("V_WorkOrderMats");

                entity.Property(e => e.AddInfo)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Add_Info");

                entity.Property(e => e.BatchNo)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("Batch_NO");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Mid).HasColumnName("mid");

                entity.Property(e => e.ProcessName)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("PROCESS_NAME");

                entity.Property(e => e.ProcessNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("PROCESS_NO");

                entity.Property(e => e.ProdName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Prod_Name");

                entity.Property(e => e.ProdNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Prod_No");

                entity.Property(e => e.ProdSnm)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("PROD_SNM");

                entity.Property(e => e.ProdSpc)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("PROD_SPC");

                entity.Property(e => e.Quantity).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.Rem)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("REM");

                entity.Property(e => e.StartDate).HasColumnType("datetime");

                entity.Property(e => e.Unit)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.WareHouseName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.WareHouseNo).HasMaxLength(55);

                entity.Property(e => e.WkCenterName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("WkCenter_Name");

                entity.Property(e => e.WkCenterNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("WkCenter_No");

                entity.Property(e => e.WoNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("WO_NO");
            });

            modelBuilder.Entity<VWorkOrderMatsExtend>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("V_WorkOrderMatsExtend");

                entity.Property(e => e.BatchNo)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("Batch_No");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.MaterialWarehouse).HasMaxLength(55);

                entity.Property(e => e.MaterialWarehouseName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Mid).HasColumnName("MID");

                entity.Property(e => e.MinRequestQuantity).HasColumnType("decimal(18, 0)");

                entity.Property(e => e.MprodName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("MPROD_NAME");

                entity.Property(e => e.MprodNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("MPROD_NO");

                entity.Property(e => e.PlanStarDate).HasColumnType("datetime");

                entity.Property(e => e.ProcessNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Process_No");

                entity.Property(e => e.ProdMark)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Prod_Mark");

                entity.Property(e => e.ProdName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Prod_Name");

                entity.Property(e => e.ProdNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Prod_No");

                entity.Property(e => e.ProdSpec)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Prod_Spec");

                entity.Property(e => e.Qty).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.Rem)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.RequestAdvance).HasColumnType("decimal(18, 0)");

                entity.Property(e => e.StartDate).HasColumnType("datetime");

                entity.Property(e => e.StartDateAct)
                    .HasColumnType("datetime")
                    .HasColumnName("StartDate_Act");

                entity.Property(e => e.StationNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("Station_No");

                entity.Property(e => e.Unit)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.VerNo)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("Ver_No");

                entity.Property(e => e.WhseNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("Whse_No");

                entity.Property(e => e.WkCenterNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("WkCenter_No");

                entity.Property(e => e.WoNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("WO_No");
            });

            modelBuilder.Entity<VXlight>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("V_XLIGHT");

                entity.Property(e => e.Barcode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("BARCODE");

                entity.Property(e => e.CodeStatus)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CODE_STATUS");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.MdNo)
                    .HasMaxLength(400)
                    .IsUnicode(false)
                    .HasColumnName("MD_NO");

                entity.Property(e => e.Name)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("NAME");

                entity.Property(e => e.Qty)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY");

                entity.Property(e => e.QtyChk)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_CHK");

                entity.Property(e => e.QtyScrap)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_SCRAP");

                entity.Property(e => e.Sm)
                    .HasColumnType("numeric(19, 0)")
                    .HasColumnName("SM");

                entity.Property(e => e.StaTime)
                    .HasColumnType("datetime")
                    .HasColumnName("STA_TIME");

                entity.Property(e => e.TzNo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("TZ_NO");
            });

            modelBuilder.Entity<VZcNoSebei>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_zc_no_sebei");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Name)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("NAME");

                entity.Property(e => e.Type).HasColumnName("TYPE");

                entity.Property(e => e.TypeName)
                    .IsRequired()
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("TYPE_NAME");

                entity.Property(e => e.ZcNo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ZC_NO");
            });

            modelBuilder.Entity<VZcdefect>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vZCDefect");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.MoNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("MO_NO");

                entity.Property(e => e.ModNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("MOD_NO");

                entity.Property(e => e.MrpNo)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("MRP_NO");

                entity.Property(e => e.OpnDd)
                    .HasColumnType("datetime")
                    .HasColumnName("OPN_DD");

                entity.Property(e => e.Qty)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY");

                entity.Property(e => e.QtyFin)
                    .HasColumnType("numeric(38, 0)")
                    .HasColumnName("QTY_FIN");

                entity.Property(e => e.QtyLost)
                    .HasColumnType("numeric(38, 0)")
                    .HasColumnName("QTY_LOST");

                entity.Property(e => e.QtyScrap)
                    .HasColumnType("numeric(38, 0)")
                    .HasColumnName("QTY_SCRAP");

                entity.Property(e => e.SebNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("SEB_NO");

                entity.Property(e => e.TzDd)
                    .HasColumnType("datetime")
                    .HasColumnName("TZ_DD");

                entity.Property(e => e.TzNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("TZ_NO");

                entity.Property(e => e.WrDd)
                    .HasColumnType("datetime")
                    .HasColumnName("WR_DD");

                entity.Property(e => e.ZcNo)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ZC_NO");
            });

            modelBuilder.Entity<VZzallprd>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vZZALLPRD");

                entity.Property(e => e.BatNo)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("BAT_NO");

                entity.Property(e => e.IdNo)
                    .HasMaxLength(38)
                    .IsUnicode(false)
                    .HasColumnName("ID_NO");

                entity.Property(e => e.Idx).HasColumnName("IDX");

                entity.Property(e => e.IsPieceMng).HasColumnName("IsPiece_Mng");

                entity.Property(e => e.Jhqty)
                    .HasColumnType("numeric(38, 0)")
                    .HasColumnName("JHQTY");

                entity.Property(e => e.Knd)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("KND");

                entity.Property(e => e.MoNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("MO_NO");

                entity.Property(e => e.MtItm).HasColumnName("MT_ITM");

                entity.Property(e => e.Name)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("NAME");

                entity.Property(e => e.PrdNo)
                    .IsRequired()
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("PRD_NO");

                entity.Property(e => e.RtoId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("RTO_ID");

                entity.Property(e => e.SebNo)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("seb_no");

                entity.Property(e => e.SoNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("SO_NO");

                entity.Property(e => e.TzDd)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("TZ_DD");
            });

            modelBuilder.Entity<VZzpcprd>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vZZPCPRD");

                entity.Property(e => e.BatNo)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("BAT_NO");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.IdNo)
                    .HasMaxLength(38)
                    .IsUnicode(false)
                    .HasColumnName("ID_NO");

                entity.Property(e => e.IsPieceMng).HasColumnName("IsPiece_Mng");

                entity.Property(e => e.Jhqty)
                    .HasColumnType("numeric(38, 0)")
                    .HasColumnName("JHQTY");

                entity.Property(e => e.Knd)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("KND");

                entity.Property(e => e.MoNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("MO_NO");

                entity.Property(e => e.MtItm).HasColumnName("MT_ITM");

                entity.Property(e => e.Name)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("NAME");

                entity.Property(e => e.PcBan)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("PC_BAN");

                entity.Property(e => e.PrdNo)
                    .IsRequired()
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("PRD_NO");

                entity.Property(e => e.RtoId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("RTO_ID");

                entity.Property(e => e.SebNo)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("seb_no");

                entity.Property(e => e.SoNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("SO_NO");

                entity.Property(e => e.TzDd)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("TZ_DD");

                entity.Property(e => e.Unit)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("UNIT");
            });

            modelBuilder.Entity<Vdchgmoldlist>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VDCHGMOLDLIST");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.ModId)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("MOD_ID");

                entity.Property(e => e.ModNo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("MOD_NO");

                entity.Property(e => e.Name)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("NAME");
            });

            modelBuilder.Entity<VfixtureBom>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VFixtureBOM");

                entity.Property(e => e.FixtureCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Name)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("NAME");

                entity.Property(e => e.ParentNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PartCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PartId).HasColumnName("PartID");

                entity.Property(e => e.Type)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("type");
            });

            modelBuilder.Entity<Vjhso>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VJHSO");

                entity.Property(e => e.Dep)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("DEP");

                entity.Property(e => e.EstDd)
                    .HasColumnType("datetime")
                    .HasColumnName("EST_DD");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.IdNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ID_NO");

                entity.Property(e => e.Itm).HasColumnName("ITM");

                entity.Property(e => e.JhDd)
                    .HasColumnType("datetime")
                    .HasColumnName("JH_DD");

                entity.Property(e => e.JhNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("JH_NO");

                entity.Property(e => e.Mid).HasColumnName("MID");

                entity.Property(e => e.PrdName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("PRD_NAME");

                entity.Property(e => e.PrdNo)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("PRD_NO");

                entity.Property(e => e.Qty)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY");

                entity.Property(e => e.Unit)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("UNIT");
            });

            modelBuilder.Entity<Vmddevparas>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VMDDEVPARAS");

                entity.Property(e => e.CoolMode)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("COOL_MODE");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Itm)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ITM");

                entity.Property(e => e.LowLimit)
                    .HasColumnType("decimal(18, 4)")
                    .HasColumnName("LOW_LIMIT");

                entity.Property(e => e.Lowsybol)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("LOWSYBOL");

                entity.Property(e => e.Manner)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("MANNER");

                entity.Property(e => e.Mid).HasColumnName("MID");

                entity.Property(e => e.ModNo)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("MOD_NO");

                entity.Property(e => e.ParaName)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("PARA_NAME");

                entity.Property(e => e.ParaNo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("PARA_NO");

                entity.Property(e => e.PrdName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("PRD_NAME");

                entity.Property(e => e.PrdNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("PRD_NO");

                entity.Property(e => e.Ptype)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("PTYPE");

                entity.Property(e => e.SebName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SEB_NAME");

                entity.Property(e => e.SebNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("SEB_NO");

                entity.Property(e => e.UpLimit)
                    .HasColumnType("decimal(18, 4)")
                    .HasColumnName("UP_LIMIT");

                entity.Property(e => e.Upsybol)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("UPSYBOL");

                entity.Property(e => e.Ut)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("UT");
            });

            modelBuilder.Entity<VmfTzOee>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VMF_TZ_OEE");

                entity.Property(e => e.JhTotal)
                    .HasColumnType("numeric(38, 6)")
                    .HasColumnName("JH_TOTAL");

                entity.Property(e => e.PrdNo)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("PRD_NO");

                entity.Property(e => e.SebNo)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("SEB_NO");

                entity.Property(e => e.Sysdate)
                    .HasColumnType("datetime")
                    .HasColumnName("SYSDATE");

                entity.Property(e => e.TzNo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("TZ_NO");

                entity.Property(e => e.ZcNo)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ZC_NO");
            });

            modelBuilder.Entity<VmkYgOee>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VMK_YG_OEE");

                entity.Property(e => e.LlTotal)
                    .HasColumnType("numeric(38, 6)")
                    .HasColumnName("LL_TOTAL");

                entity.Property(e => e.PrdNo)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("PRD_NO");

                entity.Property(e => e.QtyLost)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_LOST");

                entity.Property(e => e.QtyOk)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_OK");

                entity.Property(e => e.SebNo)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("SEB_NO");

                entity.Property(e => e.Sysdate)
                    .HasColumnType("datetime")
                    .HasColumnName("SYSDATE");

                entity.Property(e => e.TzNo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("TZ_NO");

                entity.Property(e => e.Weight)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("WEIGHT");

                entity.Property(e => e.ZcNo)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ZC_NO");
            });

            modelBuilder.Entity<Vml>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VML");

                entity.Property(e => e.BatNo)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("BAT_NO");

                entity.Property(e => e.Mlid).HasColumnName("MLID");

                entity.Property(e => e.PrdName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("PRD_NAME");

                entity.Property(e => e.PrdNo)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("PRD_NO");

                entity.Property(e => e.Qty)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("QTY");

                entity.Property(e => e.RlTz)
                    .HasMaxLength(100)
                    .HasColumnName("RL_TZ");

                entity.Property(e => e.SebNo)
                    .HasMaxLength(50)
                    .HasColumnName("SEB_NO");

                entity.Property(e => e.Tid).HasColumnName("tid");

                entity.Property(e => e.Unit)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("UNIT");

                entity.Property(e => e.ZcNo)
                    .HasMaxLength(50)
                    .HasColumnName("ZC_NO");
            });

            modelBuilder.Entity<Vmoniseblist>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VMONISEBLIST");

                entity.Property(e => e.SebName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("SEB_NAME");

                entity.Property(e => e.SebNo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("SEB_NO");

                entity.Property(e => e.WorkShop)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("WORK_SHOP");

                entity.Property(e => e.ZcIdx).HasColumnName("ZC_IDX");

                entity.Property(e => e.ZcName)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ZC_NAME");
            });

            modelBuilder.Entity<VprdtMold>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VPRDT_MOLD");

                entity.Property(e => e.Name)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("NAME");

                entity.Property(e => e.PrdNo)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("PRD_NO");

                entity.Property(e => e.ResName)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("RES_NAME");

                entity.Property(e => e.ResNo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("RES_NO");
            });

            modelBuilder.Entity<Vqcfreqs>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VQCFREQS");

                entity.Property(e => e.FreqName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("FREQ_NAME");

                entity.Property(e => e.Id).HasColumnName("ID");
            });

            modelBuilder.Entity<Vrollbackwrs>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VROLLBACKWRS");

                entity.Property(e => e.BanGroupNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("BAN_GROUP_NO");

                entity.Property(e => e.BanNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("BAN_NO");

                entity.Property(e => e.Barcode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("BARCODE");

                entity.Property(e => e.BilDd)
                    .HasColumnType("datetime")
                    .HasColumnName("BIL_DD");

                entity.Property(e => e.BilId)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("BIL_ID");

                entity.Property(e => e.BilNo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("BIL_NO");

                entity.Property(e => e.BilNoG)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("BIL_NO_G");

                entity.Property(e => e.ChkNum).HasColumnName("CHK_NUM");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.IdNo)
                    .HasMaxLength(38)
                    .IsUnicode(false)
                    .HasColumnName("ID_NO");

                entity.Property(e => e.Idx).HasColumnName("IDX");

                entity.Property(e => e.Itm).HasColumnName("ITM");

                entity.Property(e => e.Mid).HasColumnName("MID");

                entity.Property(e => e.PrdName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("PRD_NAME");

                entity.Property(e => e.PrdNo)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("PRD_NO");

                entity.Property(e => e.PrdSpc)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("PRD_SPC");

                entity.Property(e => e.Qty)
                    .HasColumnType("numeric(38, 0)")
                    .HasColumnName("QTY");

                entity.Property(e => e.QtyLost)
                    .HasColumnType("numeric(38, 0)")
                    .HasColumnName("QTY_LOST");

                entity.Property(e => e.QtyScrap)
                    .HasColumnType("numeric(38, 0)")
                    .HasColumnName("QTY_SCRAP");

                entity.Property(e => e.SebName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("SEB_NAME");

                entity.Property(e => e.SebNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("SEB_NO");

                entity.Property(e => e.TzNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("TZ_NO");

                entity.Property(e => e.Unit)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("UNIT");

                entity.Property(e => e.YgNo)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("YG_NO");

                entity.Property(e => e.ZcName)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("ZC_NAME");

                entity.Property(e => e.ZcNo)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ZC_NO");
            });

            modelBuilder.Entity<Vswrs>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VSWRS");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.MoNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("MO_NO");

                entity.Property(e => e.ProcessNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Process_NO");

                entity.Property(e => e.ProdNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("PROD_NO");

                entity.Property(e => e.Qty)
                    .HasColumnType("decimal(38, 8)")
                    .HasColumnName("QTY");

                entity.Property(e => e.QtyLost)
                    .HasColumnType("decimal(38, 8)")
                    .HasColumnName("QTY_LOST");

                entity.Property(e => e.QtyScrap)
                    .HasColumnType("decimal(38, 8)")
                    .HasColumnName("QTY_SCRAP");

                entity.Property(e => e.QtyWr)
                    .HasColumnType("decimal(38, 8)")
                    .HasColumnName("QTY_WR");

                entity.Property(e => e.TzQty)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("TZ_QTY");

                entity.Property(e => e.WoNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("WO_NO");

                entity.Property(e => e.ZcName)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("ZC_NAME");
            });

            modelBuilder.Entity<Vtdcp>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VTDCP");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.Idx).HasColumnName("IDX");

                entity.Property(e => e.Pcode)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("PCODE");

                entity.Property(e => e.PrdName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("PRD_NAME");

                entity.Property(e => e.PrdNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("PRD_NO");

                entity.Property(e => e.Qty).HasColumnName("QTY");
            });

            modelBuilder.Entity<Vzcreslist>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VZCRESLIST");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Name)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("NAME");

                entity.Property(e => e.No)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("NO");

                entity.Property(e => e.ResType)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("RES_TYPE");
            });

            modelBuilder.Entity<WhEntryBarcode>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("WH_ENTRY_BARCODE");

                entity.Property(e => e.BarcodeNo)
                    .HasMaxLength(800)
                    .HasColumnName("BarcodeNO");

                entity.Property(e => e.BatNo)
                    .HasMaxLength(120)
                    .HasColumnName("BAT_NO");

                entity.Property(e => e.EntryItemId)
                    .IsRequired()
                    .HasMaxLength(144)
                    .HasColumnName("EntryItemID");

                entity.Property(e => e.EntryNo)
                    .HasMaxLength(120)
                    .HasColumnName("EntryNO");

                entity.Property(e => e.PrdName)
                    .HasMaxLength(400)
                    .HasColumnName("PRD_NAME");

                entity.Property(e => e.PrdNo)
                    .HasMaxLength(120)
                    .HasColumnName("PRD_NO");

                entity.Property(e => e.PrdSpc)
                    .HasMaxLength(800)
                    .HasColumnName("PRD_SPC");

                entity.Property(e => e.Qty)
                    .HasColumnType("decimal(18, 4)")
                    .HasColumnName("QTY");

                entity.Property(e => e.Qty1)
                    .HasColumnType("decimal(18, 4)")
                    .HasColumnName("QTY1");

                entity.Property(e => e.RkDate)
                    .HasMaxLength(19)
                    .IsUnicode(false)
                    .HasColumnName("RK_DATE");

                entity.Property(e => e.StorageNo)
                    .HasMaxLength(120)
                    .HasColumnName("StorageNO");

                entity.Property(e => e.SwFlag)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("SW_Flag");

                entity.Property(e => e.SwOpdate)
                    .HasColumnType("datetime")
                    .HasColumnName("SW_OPDate");

                entity.Property(e => e.Unit)
                    .HasMaxLength(120)
                    .HasColumnName("UNIT");
            });

            modelBuilder.Entity<WhEntryInfo>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("WH_ENTRY_INFO");

                entity.Property(e => e.Billno)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("BILLNO");

                entity.Property(e => e.Billtype)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("BILLTYPE");

                entity.Property(e => e.CreateTime)
                    .HasMaxLength(19)
                    .IsUnicode(false);

                entity.Property(e => e.CreateUserId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("CreateUserID");

                entity.Property(e => e.EntDate).HasColumnType("datetime");

                entity.Property(e => e.EntState)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.EntryNo)
                    .IsRequired()
                    .HasMaxLength(120)
                    .HasColumnName("EntryNO");

                entity.Property(e => e.Inout)
                    .HasMaxLength(8)
                    .HasColumnName("INOUT");

                entity.Property(e => e.PartnerNo)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("PartnerNO");

                entity.Property(e => e.ToBilNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ToBusiNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.UpdateTime).HasColumnType("datetime");

                entity.Property(e => e.UpdateUserId)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("UpdateUserID");

                entity.Property(e => e.Wh)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("WH");
            });

            modelBuilder.Entity<WhEntryTemp>(entity =>
            {
                entity.ToTable("WH_ENTRY_TEMP");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BarcodeNo)
                    .HasMaxLength(400)
                    .HasColumnName("BarcodeNO");

                entity.Property(e => e.BillNo)
                    .HasMaxLength(400)
                    .HasColumnName("billNO");

                entity.Property(e => e.BillType)
                    .HasMaxLength(80)
                    .HasColumnName("billType");

                entity.Property(e => e.BusiClassName).HasMaxLength(200);

                entity.Property(e => e.CreateUserId)
                    .HasMaxLength(144)
                    .HasColumnName("CreateUserID");

                entity.Property(e => e.CusNo)
                    .HasMaxLength(80)
                    .HasColumnName("CUS_NO");

                entity.Property(e => e.EntryId)
                    .HasMaxLength(144)
                    .HasColumnName("EntryID");

                entity.Property(e => e.Idno)
                    .HasMaxLength(80)
                    .HasColumnName("IDNO");

                entity.Property(e => e.QtyAdj)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_ADJ");

                entity.Property(e => e.QtyOut)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY_Out");

                entity.Property(e => e.SourceBarCode).HasMaxLength(400);

                entity.Property(e => e.StorageNo)
                    .HasMaxLength(40)
                    .HasColumnName("StorageNO");

                entity.Property(e => e.TempTime).HasColumnType("datetime");

                entity.Property(e => e.Usermac)
                    .HasMaxLength(192)
                    .HasColumnName("USERMAC");

                entity.Property(e => e.Whno)
                    .HasMaxLength(80)
                    .HasColumnName("WHNO");
            });

            modelBuilder.Entity<WhInventoryBarcode>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("WH_INVENTORY_BARCODE");

                entity.Property(e => e.BarcodeNo)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("BarcodeNO");

                entity.Property(e => e.BatNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("BAT_NO");

                entity.Property(e => e.InventoryBarcodeId)
                    .IsRequired()
                    .HasMaxLength(144)
                    .HasColumnName("InventoryBarcodeID");

                entity.Property(e => e.InventoryTime).HasColumnType("datetime");

                entity.Property(e => e.PrdName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("PRD_NAME");

                entity.Property(e => e.PrdNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("PRD_NO");

                entity.Property(e => e.PrdSpc)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("PRD_SPC");

                entity.Property(e => e.Qty)
                    .HasColumnType("decimal(18, 4)")
                    .HasColumnName("QTY");

                entity.Property(e => e.Qty1)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY1");

                entity.Property(e => e.StorageNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("StorageNO");

                entity.Property(e => e.Unit)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("UNIT");

                entity.Property(e => e.Whno)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("WHNO");
            });

            modelBuilder.Entity<WhInventoryPart>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("WH_INVENTORY_PART");

                entity.Property(e => e.BatNo)
                    .HasMaxLength(400)
                    .HasColumnName("BAT_NO");

                entity.Property(e => e.InventoryPartId)
                    .IsRequired()
                    .HasMaxLength(144)
                    .HasColumnName("InventoryPartID");

                entity.Property(e => e.PartnerNo)
                    .HasMaxLength(120)
                    .HasColumnName("PartnerNO");

                entity.Property(e => e.PrdName)
                    .HasMaxLength(400)
                    .HasColumnName("PRD_NAME");

                entity.Property(e => e.PrdNo)
                    .HasMaxLength(120)
                    .HasColumnName("PRD_NO");

                entity.Property(e => e.PrdSpc)
                    .HasMaxLength(400)
                    .HasColumnName("PRD_SPC");

                entity.Property(e => e.Qty)
                    .HasColumnType("decimal(18, 4)")
                    .HasColumnName("QTY");

                entity.Property(e => e.Qty1)
                    .HasColumnType("decimal(18, 4)")
                    .HasColumnName("QTY1");

                entity.Property(e => e.StorageNo)
                    .HasMaxLength(120)
                    .HasColumnName("StorageNO");

                entity.Property(e => e.Unit)
                    .HasMaxLength(120)
                    .HasColumnName("UNIT");

                entity.Property(e => e.Whno)
                    .HasMaxLength(120)
                    .HasColumnName("WHNO");
            });

            modelBuilder.Entity<WmAsn>(entity =>
            {
                entity.ToTable("WM_Asn");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.AcceptingDate).HasColumnType("datetime");

                entity.Property(e => e.BilType)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.BilTypeName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.BusiNo)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkDate).HasColumnType("datetime");

                entity.Property(e => e.ChkMan)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkManName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkMob)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.ClsDate).HasColumnType("datetime");

                entity.Property(e => e.ClsUsr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ClsUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Dept)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.No)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Rem)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.SourceNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Source_No");

                entity.Property(e => e.SourceNoForm)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SourceNo_Form");

                entity.Property(e => e.Status)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SysDate).HasColumnType("datetime");

                entity.Property(e => e.TargetNoForm)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TargetNo_Form");

                entity.Property(e => e.Type)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Usr)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UsrName)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<WmAsnBarcodeInfo>(entity =>
            {
                entity.ToTable("WM_AsnBarcodeInfo");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BatchNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Batch_No");

                entity.Property(e => e.FinishQuantity).HasColumnType("decimal(18, 4)");

                entity.Property(e => e.Mid).HasColumnName("MID");

                entity.Property(e => e.PackageNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ProdNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Prod_No");

                entity.Property(e => e.ProductionDate).HasColumnType("datetime");

                entity.Property(e => e.Quantity).HasColumnType("decimal(18, 4)");

                entity.Property(e => e.Status)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Unit)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.HasOne(d => d.MidNavigation)
                    .WithMany(p => p.WmAsnBarcodeInfo)
                    .HasForeignKey(d => d.Mid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("FK_WM_AsnBarcodeInfo_WM_AsnItem");
            });

            modelBuilder.Entity<WmAsnItem>(entity =>
            {
                entity.ToTable("WM_AsnItem");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BatchNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Batch_No");

                entity.Property(e => e.FinishQuantity).HasColumnType("decimal(18, 4)");

                entity.Property(e => e.ItemNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Location)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.MaterialBatchNo)
                    .HasMaxLength(55)
                    .IsUnicode(false)
                    .HasColumnName("MaterialBatch_No");

                entity.Property(e => e.Mid).HasColumnName("MID");

                entity.Property(e => e.OrderNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PrintQuantity).HasColumnType("decimal(18, 4)");

                entity.Property(e => e.ProdNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Prod_No");

                entity.Property(e => e.ProductionDate).HasColumnType("datetime");

                entity.Property(e => e.Quantity).HasColumnType("decimal(18, 4)");

                entity.Property(e => e.RefuseQuantity).HasColumnType("decimal(18, 4)");

                entity.Property(e => e.Remark)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SourceNo)
                    .HasMaxLength(55)
                    .IsUnicode(false)
                    .HasColumnName("Source_No");

                entity.Property(e => e.Status)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TargetWareHouseNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Unit)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.HasOne(d => d.MidNavigation)
                    .WithMany(p => p.WmAsnItem)
                    .HasForeignKey(d => d.Mid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("FK_WM_AsnItem_WM_Asn");
            });

            modelBuilder.Entity<WmBarCodeScanTemp>(entity =>
            {
                entity.ToTable("WM_BarCodeScan_Temp");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BanNo)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("BAN_NO");

                entity.Property(e => e.Barcode)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.BatchNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Batch_No");

                entity.Property(e => e.DefectNo)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("Defect_No");

                entity.Property(e => e.DevNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Dev_No");

                entity.Property(e => e.EntryId)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("EntryID");

                entity.Property(e => e.MoNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("MO_NO");

                entity.Property(e => e.PkgNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ProcessNo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("Process_No");

                entity.Property(e => e.QualityState)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("Quality_State");

                entity.Property(e => e.ScanTime).HasColumnType("datetime");

                entity.Property(e => e.StationNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("Station_No");

                entity.Property(e => e.Usrno)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("USRNO");

                entity.Property(e => e.WoNo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("WO_NO");
            });

            modelBuilder.Entity<WmBarcode>(entity =>
            {
                entity.ToTable("WM_Barcode");

                entity.HasIndex(e => e.Barcode).HasName("IX_WM_Barcode")
                    .IsUnique();

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Barcode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Mid).HasColumnName("MID");

                entity.Property(e => e.Type)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.HasOne(d => d.MidNavigation)
                    .WithMany(p => p.WmBarcode)
                    .HasForeignKey(d => d.Mid)
                    .HasConstraintName("FK_WM_Barcode_WM_Barcode_Source");
            });

            modelBuilder.Entity<WmBarcodeBatchInfo>(entity =>
            {
                entity.ToTable("WM_Barcode_BatchInfo");

                entity.HasIndex(e => e.Barcode).HasName("IX_WM_Barcode_BatchInfo");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Barcode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.BarcodeDate).HasColumnType("datetime");

                entity.Property(e => e.BarcodePkg)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Barcode_Pkg");

                entity.Property(e => e.DevNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("Dev_No");

                entity.Property(e => e.Mid).HasColumnName("MID");

                entity.Property(e => e.MoNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("MO_NO");

                entity.Property(e => e.PackingDate).HasColumnType("datetime");

                entity.Property(e => e.PrintDate).HasColumnType("datetime");

                entity.Property(e => e.ProcessInOut)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("Process_InOut");

                entity.Property(e => e.ProcessNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("Process_No");

                entity.Property(e => e.ProdNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Prod_No");

                entity.Property(e => e.ProdState)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("Prod_State");

                entity.Property(e => e.Qty).HasColumnType("decimal(16, 8)");

                entity.Property(e => e.QualityState)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("Quality_State");

                entity.Property(e => e.ReportDate).HasColumnType("datetime");

                entity.Property(e => e.Reserved1)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Reserved10)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Reserved2)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Reserved3)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Reserved4)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Reserved5)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Reserved6)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Reserved7)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Reserved8)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Reserved9)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ReworkDate).HasColumnType("datetime");

                entity.Property(e => e.ShippingDate).HasColumnType("datetime");

                entity.Property(e => e.ShippingNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("Shipping_No");

                entity.Property(e => e.StationNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("Station_No");

                entity.Property(e => e.StorageDate).HasColumnType("datetime");

                entity.Property(e => e.SysDate).HasColumnType("datetime");

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Usr)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UsrExec)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("Usr_Exec");

                entity.Property(e => e.UsrName)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.WhseNoCur)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("Whse_No_Cur");

                entity.Property(e => e.WoNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("WO_NO");

                entity.HasOne(d => d.MidNavigation)
                    .WithMany(p => p.WmBarcodeBatchInfo)
                    .HasForeignKey(d => d.Mid)
                    .HasConstraintName("FK_WM_Barcode_BatchInfo_WM_Barcode");
            });

            modelBuilder.Entity<WmBarcodeBatchInfoHis>(entity =>
            {
                entity.ToTable("WM_Barcode_BatchInfoHis");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Barcode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.BarcodeDate).HasColumnType("datetime");

                entity.Property(e => e.BarcodePkg)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Barcode_Pkg");

                entity.Property(e => e.DevNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("Dev_No");

                entity.Property(e => e.Mid).HasColumnName("MID");

                entity.Property(e => e.MoNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("MO_NO");

                entity.Property(e => e.PackingDate).HasColumnType("datetime");

                entity.Property(e => e.PrintDate).HasColumnType("datetime");

                entity.Property(e => e.ProcessInOut)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("Process_InOut");

                entity.Property(e => e.ProcessNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("Process_No");

                entity.Property(e => e.ProdNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Prod_No");

                entity.Property(e => e.ProdState)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("Prod_State");

                entity.Property(e => e.Qty).HasColumnType("decimal(16, 8)");

                entity.Property(e => e.QualityState)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("Quality_State");

                entity.Property(e => e.ReportDate).HasColumnType("datetime");

                entity.Property(e => e.Reserved1)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Reserved10)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Reserved2)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Reserved3)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Reserved4)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Reserved5)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Reserved6)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Reserved7)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Reserved8)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Reserved9)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ReworkDate).HasColumnType("datetime");

                entity.Property(e => e.ShippingDate).HasColumnType("datetime");

                entity.Property(e => e.ShippingNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("Shipping_No");

                entity.Property(e => e.StationNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("Station_No");

                entity.Property(e => e.StorageDate).HasColumnType("datetime");

                entity.Property(e => e.SysDate).HasColumnType("datetime");

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Usr)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UsrExec)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("Usr_Exec");

                entity.Property(e => e.UsrName)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.WhseNoCur)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("Whse_No_Cur");

                entity.Property(e => e.WoNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("WO_NO");

                entity.HasOne(d => d.MidNavigation)
                    .WithMany(p => p.WmBarcodeBatchInfoHis)
                    .HasForeignKey(d => d.Mid)
                    .HasConstraintName("FK_WM_Barcode_BatchInfoHis_WM_Barcode_BatchInfo");
            });

            modelBuilder.Entity<WmBarcodeSource>(entity =>
            {
                entity.ToTable("WM_Barcode_Source");

                entity.HasIndex(e => new { e.SrcNo, e.SrcItemId }).HasName("IX_WM_Barcode_Source");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BarcodeType)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.BatchNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Batch_No");

                entity.Property(e => e.BilType)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.BilTypeName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.BillDate).HasColumnType("datetime");

                entity.Property(e => e.BusiNo)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkDate).HasColumnType("datetime");

                entity.Property(e => e.ChkMan)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkManName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkMob)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.ClsDate).HasColumnType("datetime");

                entity.Property(e => e.ClsUsr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ClsUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Dept)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.MoldNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Mold_No");

                entity.Property(e => e.No)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PkgConver)
                    .HasColumnType("decimal(12, 8)")
                    .HasColumnName("Pkg_Conver");

                entity.Property(e => e.ProdName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Prod_Name");

                entity.Property(e => e.ProdNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Prod_No");

                entity.Property(e => e.ProdSpec)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Prod_Spec");

                entity.Property(e => e.Qty).HasColumnType("decimal(12, 8)");

                entity.Property(e => e.QtyPkg)
                    .HasColumnType("decimal(12, 8)")
                    .HasColumnName("Qty_Pkg");

                entity.Property(e => e.Rem)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.SrcBarcode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Src_Barcode");

                entity.Property(e => e.SrcItemId).HasColumnName("Src_ItemID");

                entity.Property(e => e.SrcNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("Src_No");

                entity.Property(e => e.SrcType)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("Src_Type");

                entity.Property(e => e.SysDate).HasColumnType("datetime");

                entity.Property(e => e.Unit)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Usr)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UsrName)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.VendorNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("Vendor_No");
            });

            modelBuilder.Entity<WmFeeding>(entity =>
            {
                entity.ToTable("WM_Feeding");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BatchNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Batch_No");

                entity.Property(e => e.BilType)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.BilTypeName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.BusiNo)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkDate).HasColumnType("datetime");

                entity.Property(e => e.ChkMan)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkManName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkMob)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.ClsDate).HasColumnType("datetime");

                entity.Property(e => e.ClsUsr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ClsUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.FeedType)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.FinishQuantity).HasColumnType("decimal(18, 4)");

                entity.Property(e => e.MoNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("MO_NO");

                entity.Property(e => e.MprodNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("MPROD_NO");

                entity.Property(e => e.PackageNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PlanNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Plan_No");

                entity.Property(e => e.Process)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ProdNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("PROD_NO");

                entity.Property(e => e.ProductionDate).HasColumnType("datetime");

                entity.Property(e => e.Quantity).HasColumnType("decimal(18, 4)");

                entity.Property(e => e.Rem)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.ReturnQuantity).HasColumnType("decimal(18, 4)");

                entity.Property(e => e.ShiftNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("Shift_No");

                entity.Property(e => e.SysDate).HasColumnType("datetime");

                entity.Property(e => e.TraceNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Usr)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UsrName)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.WoNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("WO_NO");

                entity.Property(e => e.WorkStation)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<WmFeedingDetail>(entity =>
            {
                entity.ToTable("WM_FeedingDetail");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BatchNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Batch_No");

                entity.Property(e => e.BilType)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.BilTypeName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.BillDate).HasColumnType("datetime");

                entity.Property(e => e.BusiNo)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkDate).HasColumnType("datetime");

                entity.Property(e => e.ChkMan)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkManName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkMob)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.ClsDate).HasColumnType("datetime");

                entity.Property(e => e.ClsUsr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ClsUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.MprodNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("MProd_No");

                entity.Property(e => e.No)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PackageNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ProcessNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Process_No");

                entity.Property(e => e.ProdNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Prod_No");

                entity.Property(e => e.Quantity).HasColumnType("decimal(18, 4)");

                entity.Property(e => e.Rem)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.SourceNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Source_No");

                entity.Property(e => e.SysDate).HasColumnType("datetime");

                entity.Property(e => e.TraceNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Trace_No");

                entity.Property(e => e.Unit)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Usr)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UsrName)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.WorkStation)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<WmFeedingHistory>(entity =>
            {
                entity.ToTable("WM_FeedingHistory");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BatchNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Batch_No");

                entity.Property(e => e.FeedType)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.FinishQuantity).HasColumnType("decimal(18, 4)");

                entity.Property(e => e.Iotype)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("IOType");

                entity.Property(e => e.Mid).HasColumnName("MID");

                entity.Property(e => e.MoNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("MO_NO");

                entity.Property(e => e.MprodNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("MPROD_NO");

                entity.Property(e => e.PackageNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PlanNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Plan_No");

                entity.Property(e => e.Process)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ProdNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("PROD_NO");

                entity.Property(e => e.ProductionDate).HasColumnType("datetime");

                entity.Property(e => e.Quantity).HasColumnType("decimal(18, 4)");

                entity.Property(e => e.ReturnQuantity).HasColumnType("decimal(18, 4)");

                entity.Property(e => e.ShiftNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("Shift_No");

                entity.Property(e => e.SysDate).HasColumnType("datetime");

                entity.Property(e => e.TraceNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Usr)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.WoNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("WO_NO");

                entity.Property(e => e.WorkStation)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.HasOne(d => d.MidNavigation)
                    .WithMany(p => p.WmFeedingHistory)
                    .HasForeignKey(d => d.Mid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("FK_WM_FeedingHistory_WM_Feeding");
            });

            modelBuilder.Entity<WmForm>(entity =>
            {
                entity.ToTable("WM_Form");

                entity.HasIndex(e => e.No).HasName("UN_NO")
                    .IsUnique();

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.AcceptingDate).HasColumnType("datetime");

                entity.Property(e => e.BilType)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.BilTypeName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.BusiNo)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkDate).HasColumnType("datetime");

                entity.Property(e => e.ChkMan)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkManName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkMob)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.ClsDate).HasColumnType("datetime");

                entity.Property(e => e.ClsUsr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ClsUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Dept)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Erpsingle)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ERPSingle");

                entity.Property(e => e.Location)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.No)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.OrderNumber)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Rem)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.SourceNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Source_No");

                entity.Property(e => e.SourceNoForm)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SourceNo_Form");

                entity.Property(e => e.Status)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SysDate).HasColumnType("datetime");

                entity.Property(e => e.TargetNoForm)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TargetNo_Form");

                entity.Property(e => e.Type)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Usr)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UsrName)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<WmFormBarcodeInfo>(entity =>
            {
                entity.ToTable("WM_FormBarcodeInfo");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BatchNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Batch_No");

                entity.Property(e => e.Location)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.MaterialBatchNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("MaterialBatch_NO");

                entity.Property(e => e.Mid).HasColumnName("MID");

                entity.Property(e => e.PackageNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ProdNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Prod_No");

                entity.Property(e => e.ProductionDate).HasColumnType("datetime");

                entity.Property(e => e.Quantity).HasColumnType("decimal(18, 4)");

                entity.Property(e => e.ReturnQuantity).HasColumnType("decimal(18, 4)");

                entity.Property(e => e.SourceLocation)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Status).HasMaxLength(50);

                entity.Property(e => e.Unit)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.HasOne(d => d.MidNavigation)
                    .WithMany(p => p.WmFormBarcodeInfo)
                    .HasForeignKey(d => d.Mid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("FK_WM_FormBarcodeInfo_WM_FormItem");
            });

            modelBuilder.Entity<WmFormItem>(entity =>
            {
                entity.ToTable("WM_FormItem");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.AcceptanceItemId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("AcceptanceItemID");

                entity.Property(e => e.BatchNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Batch_No");

                entity.Property(e => e.DeadLineDate).HasColumnType("datetime");

                entity.Property(e => e.ErporderNumber)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ERPOrderNumber");

                entity.Property(e => e.FinishQuantity)
                    .HasColumnType("decimal(18, 4)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Location)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.MaterialBatchNo)
                    .HasMaxLength(55)
                    .IsUnicode(false)
                    .HasColumnName("MaterialBatch_No");

                entity.Property(e => e.Mid).HasColumnName("MID");

                entity.Property(e => e.OrderNumber)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ProdNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Prod_No");

                entity.Property(e => e.ProductionDate).HasColumnType("datetime");

                entity.Property(e => e.Quantity).HasColumnType("decimal(18, 4)");

                entity.Property(e => e.Remark)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ShippedQuantity)
                    .HasColumnType("decimal(18, 4)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.SourceLineNumber)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SourceLocation).HasMaxLength(50);

                entity.Property(e => e.SourceNo)
                    .HasMaxLength(55)
                    .IsUnicode(false)
                    .HasColumnName("Source_NO");

                entity.Property(e => e.Status)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Unit)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.WoNo)
                    .HasMaxLength(55)
                    .IsUnicode(false)
                    .HasColumnName("WO_NO");

                entity.HasOne(d => d.MidNavigation)
                    .WithMany(p => p.WmFormItem)
                    .HasForeignKey(d => d.Mid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("FK_WM_FormItem_WM_Form");
            });

            modelBuilder.Entity<WmFormScene>(entity =>
            {
                entity.ToTable("WM_FormScene");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Class)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("CLASS");

                entity.Property(e => e.Name)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("NAME");

                entity.Property(e => e.No)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("NO");
            });

            modelBuilder.Entity<WmFormType>(entity =>
            {
                entity.ToTable("WM_FormType");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Class)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Erpno)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ERPNo");

                entity.Property(e => e.InspectionType)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.IsEffective).HasColumnName("isEffective");

                entity.Property(e => e.IsHandover).HasDefaultValueSql("((0))");

                entity.Property(e => e.Name)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("NAME");

                entity.Property(e => e.No)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Remark)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.Scene)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SysDate).HasColumnType("datetime");

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Usr)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<WmFreezeStorage>(entity =>
            {
                entity.ToTable("WM_FreezeStorage");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BatchNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Batch_No");

                entity.Property(e => e.BilType)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.BilTypeName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.BusiNo)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkDate).HasColumnType("datetime");

                entity.Property(e => e.ChkMan)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkManName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkMob)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.ClsDate).HasColumnType("datetime");

                entity.Property(e => e.ClsUsr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ClsUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.FreezeQuantity).HasColumnType("decimal(22, 8)");

                entity.Property(e => e.FreezeReason)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.FreezeTime).HasColumnType("datetime");

                entity.Property(e => e.LiftTime).HasColumnType("datetime");

                entity.Property(e => e.PackageNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ProdNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("PROD_NO");

                entity.Property(e => e.Rem)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.Status)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SysDate).HasColumnType("datetime");

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Usr)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UsrName)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.WareHouseNo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<WmFreezeStorageHistory>(entity =>
            {
                entity.ToTable("WM_FreezeStorageHistory");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BatchNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Batch_NO");

                entity.Property(e => e.FreezeQuantity).HasColumnType("decimal(22, 8)");

                entity.Property(e => e.FreezeReason)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.Mid).HasColumnName("MID");

                entity.Property(e => e.PackageNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ProdNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("PROD_NO");

                entity.Property(e => e.Status)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SysDate).HasColumnType("datetime");

                entity.Property(e => e.Usr)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.UsrName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.WareHouseNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.HasOne(d => d.MidNavigation)
                    .WithMany(p => p.WmFreezeStorageHistory)
                    .HasForeignKey(d => d.Mid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("FK_WM_FreezeStorageHistory_WM_FreezeStorage");
            });

            modelBuilder.Entity<WmFrozenStorage>(entity =>
            {
                entity.ToTable("WM_FrozenStorage");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BatchNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Batch_No");

                entity.Property(e => e.FrozenQuantity).HasColumnType("decimal(18, 4)");

                entity.Property(e => e.ProdNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Prod_No");

                entity.Property(e => e.ProductionDate).HasColumnType("datetime");

                entity.Property(e => e.SourceNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Source_No");

                entity.Property(e => e.SysDate).HasColumnType("datetime");

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Usr)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UsrName)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.WareHouseNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<WmInventoryPlan>(entity =>
            {
                entity.ToTable("WM_InventoryPlan");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BilType)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.BilTypeName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.BusiNo)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkDate).HasColumnType("datetime");

                entity.Property(e => e.ChkMan)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkManName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkMob)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.ClsDate).HasColumnType("datetime");

                entity.Property(e => e.ClsUsr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ClsUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.InventoryWay)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.No)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ProdNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Prod_NO");

                entity.Property(e => e.Rem)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.Status)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SysDate).HasColumnType("datetime");

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Usr)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UsrName)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.WareHouse)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<WmInventoryPlanBarcode>(entity =>
            {
                entity.ToTable("WM_InventoryPlanBarcode");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.ActualQuantity).HasColumnType("decimal(18, 4)");

                entity.Property(e => e.BatchNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Batch_No");

                entity.Property(e => e.Location)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Mid).HasColumnName("MID");

                entity.Property(e => e.PackageNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ProdNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Prod_No");

                entity.Property(e => e.ProductionDate).HasColumnType("datetime");

                entity.Property(e => e.Quantity).HasColumnType("decimal(18, 4)");

                entity.Property(e => e.Status)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Unit)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.HasOne(d => d.MidNavigation)
                    .WithMany(p => p.WmInventoryPlanBarcode)
                    .HasForeignKey(d => d.Mid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("FK_WM_InventoryPlanBarcode_WM_InventoryPlanItem");
            });

            modelBuilder.Entity<WmInventoryPlanItem>(entity =>
            {
                entity.ToTable("WM_InventoryPlanItem");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.AccountQuantity).HasColumnType("decimal(18, 4)");

                entity.Property(e => e.ActualQuantity).HasColumnType("decimal(18, 4)");

                entity.Property(e => e.LackQuantity).HasColumnType("decimal(18, 4)");

                entity.Property(e => e.Mid).HasColumnName("MID");

                entity.Property(e => e.MuchQuantity).HasColumnType("decimal(18, 4)");

                entity.Property(e => e.ProdNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Prod_No");

                entity.Property(e => e.Remark)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.Unit)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.HasOne(d => d.MidNavigation)
                    .WithMany(p => p.WmInventoryPlanItem)
                    .HasForeignKey(d => d.Mid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("FK_WM_InventoryPlanItem_WM_InventoryPlan");
            });

            modelBuilder.Entity<WmItemPageAge>(entity =>
            {
                entity.ToTable("WM_ItemPageAge");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.CreateTime).HasColumnType("datetime");

                entity.Property(e => e.CreateUser)
                    .HasMaxLength(55)
                    .IsUnicode(false);

                entity.Property(e => e.Item)
                    .HasMaxLength(55)
                    .IsUnicode(false);

                entity.Property(e => e.Pageage)
                    .HasMaxLength(55)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<WmMaterialPreparaPlan>(entity =>
            {
                entity.ToTable("WM_MaterialPreparaPlan");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BilType)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.BilTypeName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.BusiNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ChkDate).HasColumnType("datetime");

                entity.Property(e => e.ChkMan)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ChkManName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ChkMob)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.ClsDate).HasColumnType("datetime");

                entity.Property(e => e.ClsUsr)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ClsUsrName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CreateDate).HasColumnType("datetime");

                entity.Property(e => e.Dept)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.EndDate).HasColumnType("datetime");

                entity.Property(e => e.MaterialRequestId).HasColumnName("MaterialRequestID");

                entity.Property(e => e.No)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Rem)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.SourceNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Source_No");

                entity.Property(e => e.SourceNoForm)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SourceNo_Form");

                entity.Property(e => e.StartDate).HasColumnType("datetime");

                entity.Property(e => e.Status)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SysDate).HasColumnType("datetime");

                entity.Property(e => e.TargetNoForm)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TargetNo_Form");

                entity.Property(e => e.Type)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Usr)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.UsrName)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.WkCenterNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("WkCenter_No");
            });

            modelBuilder.Entity<WmMaterialPreparaPlanBarcode>(entity =>
            {
                entity.ToTable("WM_MaterialPreparaPlanBarcode");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BatchNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Batch_No");

                entity.Property(e => e.FinishQuantity).HasColumnType("decimal(18, 0)");

                entity.Property(e => e.Mid).HasColumnName("MID");

                entity.Property(e => e.PackageNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ProdNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Prod_No");

                entity.Property(e => e.ProductionDate).HasColumnType("datetime");

                entity.Property(e => e.Quantity).HasColumnType("decimal(18, 4)");

                entity.Property(e => e.SourceLocation)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SourceWareHouseNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Status)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TargetLocation)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Unit)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.HasOne(d => d.MidNavigation)
                    .WithMany(p => p.WmMaterialPreparaPlanBarcode)
                    .HasForeignKey(d => d.Mid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("FK_WM_MaterialPreparaPlanBarcode_WM_MaterialPreparaPlanItem");
            });

            modelBuilder.Entity<WmMaterialPreparaPlanItem>(entity =>
            {
                entity.ToTable("WM_MaterialPreparaPlanItem");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BatchNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Batch_No");

                entity.Property(e => e.ConfirmQuantity).HasColumnType("decimal(18, 0)");

                entity.Property(e => e.DeadLineDate).HasColumnType("datetime");

                entity.Property(e => e.FinishQuantity).HasColumnType("decimal(18, 4)");

                entity.Property(e => e.LineNumber)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.Location)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Mid).HasColumnName("MID");

                entity.Property(e => e.PickMaterialNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PickMaterialQuantity).HasColumnType("decimal(18, 0)");

                entity.Property(e => e.PlanQuantity).HasColumnType("decimal(18, 4)");

                entity.Property(e => e.ProdNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Prod_No");

                entity.Property(e => e.ProductionDate).HasColumnType("datetime");

                entity.Property(e => e.Quantity).HasColumnType("decimal(18, 4)");

                entity.Property(e => e.Remark)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ShippedQuantity).HasColumnType("decimal(18, 0)");

                entity.Property(e => e.SourceWareHouse)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Status)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TargetWareHouse)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TransferQuantity).HasColumnType("decimal(18, 4)");

                entity.Property(e => e.Type)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.UnFinishedQuantity).HasColumnType("decimal(18, 4)");

                entity.Property(e => e.Unit)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.WkCenterNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("WkCenter_No");

                entity.Property(e => e.WoNo)
                    .HasMaxLength(55)
                    .IsUnicode(false)
                    .HasColumnName("WO_NO");

                entity.HasOne(d => d.MidNavigation)
                    .WithMany(p => p.WmMaterialPreparaPlanItem)
                    .HasForeignKey(d => d.Mid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("FK_WM_MaterialPreparaPlanItem_WM_MaterialPreparaPlan");
            });

            modelBuilder.Entity<WmOnShelfGuide>(entity =>
            {
                entity.ToTable("WM_OnShelfGuide");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BilType)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.BilTypeName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.BusiNo)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkDate).HasColumnType("datetime");

                entity.Property(e => e.ChkMan)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkManName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkMob)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.ClsDate).HasColumnType("datetime");

                entity.Property(e => e.ClsUsr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ClsUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Dept)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.No)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Rem)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.SourceNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Source_No");

                entity.Property(e => e.SourceNoForm)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SourceNo_Form");

                entity.Property(e => e.Status)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SysDate).HasColumnType("datetime");

                entity.Property(e => e.Type)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Usr)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UsrName)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<WmOnShelfGuideBarcode>(entity =>
            {
                entity.ToTable("WM_OnShelfGuideBarcode");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BatchNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Batch_No");

                entity.Property(e => e.FinishQuantity).HasColumnType("decimal(18, 4)");

                entity.Property(e => e.Location)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Mid).HasColumnName("MID");

                entity.Property(e => e.PackageNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ProdNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Prod_No");

                entity.Property(e => e.ProductionDate).HasColumnType("datetime");

                entity.Property(e => e.Quantity).HasColumnType("decimal(18, 4)");

                entity.Property(e => e.SourceLocation)
                    .HasMaxLength(55)
                    .IsUnicode(false);

                entity.Property(e => e.Status)
                    .HasMaxLength(55)
                    .IsUnicode(false);

                entity.Property(e => e.Unit)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.HasOne(d => d.MidNavigation)
                    .WithMany(p => p.WmOnShelfGuideBarcode)
                    .HasForeignKey(d => d.Mid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("FK_WM_OnShelfGuideBarcode_WM_OnShelfGuideItem");
            });

            modelBuilder.Entity<WmOnShelfGuideItem>(entity =>
            {
                entity.ToTable("WM_OnShelfGuideItem");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BatchNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Batch_No");

                entity.Property(e => e.Mid).HasColumnName("MID");

                entity.Property(e => e.PlanQuantity).HasColumnType("decimal(18, 4)");

                entity.Property(e => e.ProdNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Prod_No");

                entity.Property(e => e.ProductionDate).HasColumnType("datetime");

                entity.Property(e => e.Quantity).HasColumnType("decimal(18, 4)");

                entity.Property(e => e.Remark)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SourceLocation)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Status)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TargetLocation)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Unit)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.HasOne(d => d.MidNavigation)
                    .WithMany(p => p.WmOnShelfGuideItem)
                    .HasForeignKey(d => d.Mid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("FK_WM_OnShelfGuideItem_WM_OnShelfGuide");
            });

            modelBuilder.Entity<WmOnShelfGuideRule>(entity =>
            {
                entity.ToTable("WM_OnShelfGuideRule");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Capacity).HasColumnType("decimal(22, 8)");

                entity.Property(e => e.Location)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Priority)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ProdNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Prod_No");

                entity.Property(e => e.SysDate).HasColumnType("datetime");

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Usr)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.UsrName)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<WmOrderBarsQty>(entity =>
            {
                entity.ToTable("WM_OrderBars_Qty");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BatchNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Batch_No");

                entity.Property(e => e.FeedingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("Feeding_Time");

                entity.Property(e => e.ProcessNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Process_No");

                entity.Property(e => e.ProdNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("Prod_No");

                entity.Property(e => e.ProdNoMat)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("Prod_No_Mat");

                entity.Property(e => e.StationNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("Station_No");

                entity.Property(e => e.Status)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.SysDate).HasColumnType("datetime");

                entity.Property(e => e.TraceNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UserExec)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("User_Exec");

                entity.Property(e => e.Usr)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UsrName)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.WoNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("WO_NO");
            });

            modelBuilder.Entity<WmOutFormApply>(entity =>
            {
                entity.ToTable("WM_OutFormApply");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BilType)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.BilTypeName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.BusiNo)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkDate).HasColumnType("datetime");

                entity.Property(e => e.ChkMan)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkManName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkMob)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.ClsDate).HasColumnType("datetime");

                entity.Property(e => e.ClsUsr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ClsUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Dept)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ExpectHandoverDate).HasColumnType("datetime");

                entity.Property(e => e.No)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.OrderNumber)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Rem)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.SourceNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Source_No");

                entity.Property(e => e.SourceNoForm)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SourceNo_Form");

                entity.Property(e => e.Status)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("((10))");

                entity.Property(e => e.SysDate).HasColumnType("datetime");

                entity.Property(e => e.TargetNoForm)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TargetNo_Form");

                entity.Property(e => e.Type)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Usr)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UsrName)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<WmOutFormApplyBarcodeInfo>(entity =>
            {
                entity.ToTable("WM_OutFormApplyBarcodeInfo");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BatchNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Batch_No");

                entity.Property(e => e.Location)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Mid).HasColumnName("MID");

                entity.Property(e => e.PackageNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ProdNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Prod_No");

                entity.Property(e => e.ProductionDate).HasColumnType("datetime");

                entity.Property(e => e.Quantity).HasColumnType("decimal(18, 4)");

                entity.Property(e => e.SourceLocation)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Unit)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.HasOne(d => d.MidNavigation)
                    .WithMany(p => p.WmOutFormApplyBarcodeInfo)
                    .HasForeignKey(d => d.Mid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("FK_WM_OutFormApplyBarcodeInfo_WM_OutFormApplyItem");
            });

            modelBuilder.Entity<WmOutFormApplyItem>(entity =>
            {
                entity.ToTable("WM_OutFormApplyItem");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.ActualHandoverDate).HasColumnType("datetime");

                entity.Property(e => e.BatchNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Batch_No");

                entity.Property(e => e.ErporderNumber)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ERPOrderNumber");

                entity.Property(e => e.Location)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.MaxDeliveryQuantity).HasColumnType("decimal(18, 4)");

                entity.Property(e => e.Mid).HasColumnName("MID");

                entity.Property(e => e.MinDeliveryQuantity).HasColumnType("decimal(18, 4)");

                entity.Property(e => e.OrderNumber)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ProdNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Prod_No");

                entity.Property(e => e.ProductionDate).HasColumnType("datetime");

                entity.Property(e => e.Quantity).HasColumnType("decimal(18, 4)");

                entity.Property(e => e.Remark)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.ShippedQuantity)
                    .HasColumnType("decimal(18, 4)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.SourceLocation)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Status)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Unit)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.HasOne(d => d.MidNavigation)
                    .WithMany(p => p.WmOutFormApplyItem)
                    .HasForeignKey(d => d.Mid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("FK_WM_OutFormApplyItem_WM_OutFormApply");
            });

            modelBuilder.Entity<WmPackage>(entity =>
            {
                entity.ToTable("WM_Package");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.AsnItemId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("AsnItemID");

                entity.Property(e => e.BilType)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.BilTypeName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.BusiNo)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Capacity).HasColumnType("decimal(22, 8)");

                entity.Property(e => e.ChkDate).HasColumnType("datetime");

                entity.Property(e => e.ChkMan)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkManName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkMob)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.ClsDate).HasColumnType("datetime");

                entity.Property(e => e.ClsUsr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ClsUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.CustomerTag)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.EnterFormDetailId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("EnterFormDetailID");

                entity.Property(e => e.Location)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.LockFormNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.LockReason)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Material)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.No)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.OrderNumber)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PackageType)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ParentPackageId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ParentPackageID");

                entity.Property(e => e.ProBatchNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ProBatch_No");

                entity.Property(e => e.ProductionDate).HasColumnType("datetime");

                entity.Property(e => e.Quantity).HasColumnType("decimal(22, 8)");

                entity.Property(e => e.Rem)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.Remark)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.Sort).HasColumnType("decimal(22, 8)");

                entity.Property(e => e.Storage)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Supplier)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SysDate).HasColumnType("datetime");

                entity.Property(e => e.TransferFormItem)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Unit)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Usr)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UsrName)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<WmPackageBarcode>(entity =>
            {
                entity.ToTable("WM_PackageBarcode");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Barcode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CreateDate).HasColumnType("datetime");

                entity.Property(e => e.PackageNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<WmPackageBarcodeHistory>(entity =>
            {
                entity.ToTable("WM_PackageBarcodeHistory");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Barcode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Iotype)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("IOType");

                entity.Property(e => e.PackageNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SourceNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Source_NO");

                entity.Property(e => e.SysDate).HasColumnType("datetime");

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Usr)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UsrName)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<WmPackageBom>(entity =>
            {
                entity.ToTable("WM_Package_BOM");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BilType)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.BilTypeName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.BomNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("BOM_NO");

                entity.Property(e => e.BomNoSub)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("BOM_NO_Sub");

                entity.Property(e => e.BusiNo)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkDate).HasColumnType("datetime");

                entity.Property(e => e.ChkMan)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkManName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkMob)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.ClsDate).HasColumnType("datetime");

                entity.Property(e => e.ClsUsr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ClsUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.EffectiveDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Effective_Date");

                entity.Property(e => e.PkgSn)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Pkg_SN");

                entity.Property(e => e.PkgSnSub)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Pkg_SN_Sub");

                entity.Property(e => e.PkgType)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("Pkg_Type");

                entity.Property(e => e.PkgTypeSub)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("Pkg_Type_Sub");

                entity.Property(e => e.ProdName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Prod_Name");

                entity.Property(e => e.ProdNo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Prod_No");

                entity.Property(e => e.ProdSpec)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Prod_Spec");

                entity.Property(e => e.ProdType)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Prod_Type");

                entity.Property(e => e.QtySub).HasColumnName("Qty_Sub");

                entity.Property(e => e.Rem)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.SysDate).HasColumnType("datetime");

                entity.Property(e => e.Unit)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Usr)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UsrName)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.VerNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("VER_NO");
            });

            modelBuilder.Entity<WmPackageBomItems>(entity =>
            {
                entity.ToTable("WM_Package_BOM_Items");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BomNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("BOM_NO");

                entity.Property(e => e.Mid).HasColumnName("MID");

                entity.Property(e => e.ProdName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Prod_Name");

                entity.Property(e => e.ProdNo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Prod_No");

                entity.Property(e => e.ProdSpec)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Prod_Spec");

                entity.Property(e => e.Qty).HasColumnType("decimal(12, 8)");

                entity.Property(e => e.Unit)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.WhseNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Whse_No");

                entity.HasOne(d => d.MidNavigation)
                    .WithMany(p => p.WmPackageBomItems)
                    .HasForeignKey(d => d.Mid)
                    .HasConstraintName("FK_WM_Package_BOM_Items_WM_Package_BOM");
            });

            modelBuilder.Entity<WmPackageChange>(entity =>
            {
                entity.ToTable("WM_PackageChange");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.ChangeType)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ProductSn)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Quantity).HasColumnType("decimal(22, 8)");

                entity.Property(e => e.SourcePackageNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SysDate).HasColumnType("datetime");

                entity.Property(e => e.TargetPackageNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Usr)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UsrName)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<WmPackageFeed>(entity =>
            {
                entity.ToTable("WM_PackageFeed");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.BatchNumber)
                    .HasMaxLength(55)
                    .IsUnicode(false);

                entity.Property(e => e.FeedDate).HasColumnType("datetime");

                entity.Property(e => e.MasterProductionCode)
                    .HasMaxLength(55)
                    .IsUnicode(false)
                    .HasColumnName("masterProductionCode");

                entity.Property(e => e.MasterProductionName)
                    .HasMaxLength(55)
                    .IsUnicode(false)
                    .HasColumnName("masterProductionName");

                entity.Property(e => e.MaterialCode)
                    .HasMaxLength(55)
                    .IsUnicode(false);

                entity.Property(e => e.MaterialName)
                    .HasMaxLength(55)
                    .IsUnicode(false);

                entity.Property(e => e.PackageNo)
                    .HasMaxLength(55)
                    .IsUnicode(false);

                entity.Property(e => e.Quality).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.SysDate).HasColumnType("datetime");

                entity.Property(e => e.Unit)
                    .HasMaxLength(55)
                    .IsUnicode(false)
                    .HasColumnName("UNIT");
            });

            modelBuilder.Entity<WmPackageSnMng>(entity =>
            {
                entity.ToTable("WM_Package_SN_Mng");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Capacity)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.IsCycleBox).HasColumnName("IsCycle_Box");

                entity.Property(e => e.PkgSn)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Pkg_SN");

                entity.Property(e => e.PkgType)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("Pkg_Type");

                entity.Property(e => e.Status)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.SysDate).HasColumnType("datetime");

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Usr)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UsrName)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<WmPackageType>(entity =>
            {
                entity.ToTable("WM_PackageType");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Capacity).HasColumnType("decimal(18, 0)");

                entity.Property(e => e.Code)
                    .IsRequired()
                    .HasMaxLength(55);

                entity.Property(e => e.CreateTime).HasColumnType("datetime");

                entity.Property(e => e.CreateUser).HasMaxLength(55);

                entity.Property(e => e.Isdelete).HasColumnName("ISDELETE");

                entity.Property(e => e.Name)
                    .IsRequired()
                    .HasMaxLength(55);

                entity.Property(e => e.Specs).HasMaxLength(55);

                entity.Property(e => e.Up)
                    .HasMaxLength(55)
                    .HasColumnName("UP");

                entity.Property(e => e.UpdateTime).HasColumnType("datetime");

                entity.Property(e => e.UpdateUser).HasMaxLength(55);
            });

            modelBuilder.Entity<WmPackageTypeProduct>(entity =>
            {
                entity.ToTable("WM_PackageTypeProduct");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Capacity).HasColumnType("decimal(18, 0)");

                entity.Property(e => e.Createtime)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATETIME");

                entity.Property(e => e.Createuser)
                    .HasMaxLength(55)
                    .HasColumnName("CREATEUSER");

                entity.Property(e => e.Isdelete).HasColumnName("ISDELETE");

                entity.Property(e => e.PackageTypeCode)
                    .IsRequired()
                    .HasMaxLength(55);

                entity.Property(e => e.ProductCode)
                    .IsRequired()
                    .HasMaxLength(55);

                entity.Property(e => e.Updatetime)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDATETIME");

                entity.Property(e => e.Updateuser)
                    .HasMaxLength(55)
                    .HasColumnName("UPDATEUSER");
            });

            modelBuilder.Entity<WmPackageTypeRelation>(entity =>
            {
                entity.ToTable("WM_PackageTypeRelation");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.CreateTime).HasColumnType("datetime");

                entity.Property(e => e.CreateUser).HasMaxLength(50);

                entity.Property(e => e.Isdelete).HasColumnName("ISDELETE");

                entity.Property(e => e.ParentTypeCode)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.TypeCode)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.UpdateTime).HasColumnType("datetime");

                entity.Property(e => e.UpdateUser).HasMaxLength(50);
            });

            modelBuilder.Entity<WmShelfGuide>(entity =>
            {
                entity.ToTable("WM_ShelfGuide");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BilType)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.BilTypeName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.BusiNo)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkDate).HasColumnType("datetime");

                entity.Property(e => e.ChkMan)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkManName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkMob)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.ClsDate).HasColumnType("datetime");

                entity.Property(e => e.ClsUsr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ClsUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Dept)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.No)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Rem)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.SourceNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Source_No");

                entity.Property(e => e.SourceNoForm)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SourceNo_Form");

                entity.Property(e => e.Status)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SysDate).HasColumnType("datetime");

                entity.Property(e => e.Type)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Usr)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UsrName)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<WmShelfGuideBarcode>(entity =>
            {
                entity.ToTable("WM_ShelfGuideBarcode");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BatchNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Batch_No");

                entity.Property(e => e.Location)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Mid).HasColumnName("MID");

                entity.Property(e => e.PackageNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ProdNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Prod_No");

                entity.Property(e => e.ProductionDate).HasColumnType("datetime");

                entity.Property(e => e.Quantity).HasColumnType("decimal(18, 4)");

                entity.Property(e => e.SourceLocation)
                    .HasMaxLength(55)
                    .IsUnicode(false);

                entity.Property(e => e.Unit)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.HasOne(d => d.MidNavigation)
                    .WithMany(p => p.WmShelfGuideBarcode)
                    .HasForeignKey(d => d.Mid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("FK_WM_ShelfGuideBarcode_WM_ShelfGuideItem");
            });

            modelBuilder.Entity<WmShelfGuideItem>(entity =>
            {
                entity.ToTable("WM_ShelfGuideItem");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BatchNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Batch_No");

                entity.Property(e => e.Mid).HasColumnName("MID");

                entity.Property(e => e.PlanQuantity).HasColumnType("decimal(18, 4)");

                entity.Property(e => e.ProdNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Prod_No");

                entity.Property(e => e.ProductionDate).HasColumnType("datetime");

                entity.Property(e => e.Quantity).HasColumnType("decimal(18, 4)");

                entity.Property(e => e.Remark)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SourceLocation)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Status)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TargetLocation)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Unit)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.HasOne(d => d.MidNavigation)
                    .WithMany(p => p.WmShelfGuideItem)
                    .HasForeignKey(d => d.Mid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("FK_WM_ShelfGuideItem_WM_ShelfGuide");
            });

            modelBuilder.Entity<WmStock>(entity =>
            {
                entity.ToTable("WM_Stock");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.BatchNo)
                    .HasMaxLength(55)
                    .IsUnicode(false);

                entity.Property(e => e.FactoryNo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.IsDelete)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.MaterialNo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Quantity).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.UpdateTime)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.WarehouseNo)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<WmStorage>(entity =>
            {
                entity.ToTable("WM_Storage");

                entity.HasIndex(e => new { e.Location, e.ProdNo, e.BatchNo, e.ProductionDate, e.Quantity }).HasName("NonClusteredIndex-20200618-084818");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BatchNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Batch_NO");

                entity.Property(e => e.BilType)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.BilTypeName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.BusiNo)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkDate).HasColumnType("datetime");

                entity.Property(e => e.ChkMan)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkManName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkMob)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.ClsDate).HasColumnType("datetime");

                entity.Property(e => e.ClsUsr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ClsUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.FrozenQuantity).HasColumnType("decimal(18, 4)");

                entity.Property(e => e.LateDeliveryDate).HasColumnType("datetime");

                entity.Property(e => e.LateStorageDate).HasColumnType("datetime");

                entity.Property(e => e.Location)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ProdNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Prod_NO");

                entity.Property(e => e.ProductionDate).HasColumnType("datetime");

                entity.Property(e => e.Quantity).HasColumnType("decimal(18, 4)");

                entity.Property(e => e.Rem)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.SysDate).HasColumnType("datetime");

                entity.Property(e => e.Unit)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Usr)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UsrName)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<WmStorageBarcode>(entity =>
            {
                entity.ToTable("WM_StorageBarcode");

                entity.HasIndex(e => new { e.Location, e.ProdNo, e.PackageNo, e.BatchNo, e.ProductionDate, e.Quantity }).HasName("NonClusteredIndex-20200618-085138");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BatchNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Batch_NO");

                entity.Property(e => e.BilType)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.BilTypeName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.BusiNo)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkDate).HasColumnType("datetime");

                entity.Property(e => e.ChkMan)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkManName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkMob)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.ClsDate).HasColumnType("datetime");

                entity.Property(e => e.ClsUsr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ClsUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.FrozenQuantity).HasColumnType("decimal(18, 4)");

                entity.Property(e => e.Location)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PackageNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("PackageNO");

                entity.Property(e => e.ProdNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Prod_NO");

                entity.Property(e => e.ProductionDate).HasColumnType("datetime");

                entity.Property(e => e.Quantity).HasColumnType("decimal(18, 4)");

                entity.Property(e => e.Rem)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.SourceNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Source_NO");

                entity.Property(e => e.SysDate).HasColumnType("datetime");

                entity.Property(e => e.Unit)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Usr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<WmStorageBarcodeHistory>(entity =>
            {
                entity.ToTable("WM_StorageBarcodeHistory");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Balance).HasColumnType("decimal(18, 4)");

                entity.Property(e => e.BatchNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Batch_NO");

                entity.Property(e => e.BeginningOfPeriod).HasColumnType("decimal(18, 4)");

                entity.Property(e => e.CustNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Cust_NO");

                entity.Property(e => e.Iotype)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("IOType");

                entity.Property(e => e.Location)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.MaterialBatchNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("MaterialBatch_NO");

                entity.Property(e => e.Mid).HasColumnName("MID");

                entity.Property(e => e.PackageNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("PackageNO");

                entity.Property(e => e.ProdNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Prod_NO");

                entity.Property(e => e.ProductionDate).HasColumnType("datetime");

                entity.Property(e => e.Quantity).HasColumnType("decimal(18, 4)");

                entity.Property(e => e.SourceNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Source_NO");

                entity.Property(e => e.SourceNoForm)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SourceNo_Form");

                entity.Property(e => e.SysDate).HasColumnType("datetime");

                entity.Property(e => e.TradeDate).HasColumnType("datetime");

                entity.Property(e => e.Unit)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Usr)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.UsrName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.HasOne(d => d.MidNavigation)
                    .WithMany(p => p.WmStorageBarcodeHistory)
                    .HasForeignKey(d => d.Mid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("FK_WM_StorageBarcodeHistory_WM_StorageBarcode");
            });

            modelBuilder.Entity<WmStorageBarcodeLock>(entity =>
            {
                entity.ToTable("WM_StorageBarcodeLock");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BatchNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Batch_NO");

                entity.Property(e => e.LockQuantity).HasColumnType("decimal(22, 8)");

                entity.Property(e => e.PackageNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ProdNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("PROD_NO");

                entity.Property(e => e.ProductionDate).HasColumnType("datetime");

                entity.Property(e => e.SourceNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SysDate).HasColumnType("datetime");

                entity.Property(e => e.Usr)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.UsrName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.WareHouseNo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<WmStorageHistory>(entity =>
            {
                entity.ToTable("WM_StorageHistory");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Balance).HasColumnType("decimal(18, 4)");

                entity.Property(e => e.BatchNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Batch_NO");

                entity.Property(e => e.BeginningOfPeriod).HasColumnType("decimal(18, 4)");

                entity.Property(e => e.Iotype)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("IOType");

                entity.Property(e => e.Location)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Mid).HasColumnName("MID");

                entity.Property(e => e.ProdNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Prod_NO");

                entity.Property(e => e.Quantity).HasColumnType("decimal(18, 4)");

                entity.Property(e => e.SourceNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Source_NO");

                entity.Property(e => e.SysDate).HasColumnType("datetime");

                entity.Property(e => e.Unit)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Usr)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.HasOne(d => d.MidNavigation)
                    .WithMany(p => p.WmStorageHistory)
                    .HasForeignKey(d => d.Mid)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("FK_WM_StorageHistory_WM_Storage");
            });

            modelBuilder.Entity<WmWareHouse>(entity =>
            {
                entity.ToTable("WM_WareHouse");

                entity.HasComment("仓库");

                entity.HasIndex(e => e.WarehouseNo).HasName("NonClusteredIndex-20200617-190521");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Address)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Bearing).HasColumnType("decimal(18, 0)");

                entity.Property(e => e.CreateTime).HasColumnType("datetime");

                entity.Property(e => e.CreateUser)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Customer).HasMaxLength(55);

                entity.Property(e => e.EffectiveDate).HasColumnType("datetime");

                entity.Property(e => e.ExpirationDate).HasColumnType("datetime");

                entity.Property(e => e.FactoryCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.FeedPriority)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Height).HasColumnType("decimal(18, 0)");

                entity.Property(e => e.InspectArea)
                    .HasMaxLength(55)
                    .IsUnicode(false);

                entity.Property(e => e.Isfifo).HasColumnName("ISFIFO");

                entity.Property(e => e.Long).HasColumnType("decimal(18, 0)");

                entity.Property(e => e.MasterWareHouseNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Remark)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.Supplier)
                    .HasMaxLength(55)
                    .IsUnicode(false);

                entity.Property(e => e.SysDate).HasColumnType("datetime");

                entity.Property(e => e.TempLocation)
                    .HasMaxLength(55)
                    .IsUnicode(false);

                entity.Property(e => e.Up)
                    .HasMaxLength(50)
                    .HasColumnName("UP");

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr).HasMaxLength(50);

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.UpdateTime).HasColumnType("datetime");

                entity.Property(e => e.UpdateUser).HasMaxLength(50);

                entity.Property(e => e.Usr)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.UsrName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.WareHouseAttribute).HasMaxLength(50);

                entity.Property(e => e.WareHouseType).HasMaxLength(50);

                entity.Property(e => e.WarehouseName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.WarehouseNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Width).HasColumnType("decimal(18, 0)");
            });

            modelBuilder.Entity<WmWareHouseProduct>(entity =>
            {
                entity.ToTable("WM_WareHouseProduct");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.CreateTime).HasColumnType("datetime");

                entity.Property(e => e.CreateUser).HasMaxLength(55);

                entity.Property(e => e.InventoryReplenishment).HasColumnType("decimal(18, 4)");

                entity.Property(e => e.IsBarcodeMng).HasColumnName("IsBarcode_Mng");

                entity.Property(e => e.IsBatchMng).HasColumnName("IsBatch_Mng");

                entity.Property(e => e.IsPieceMng).HasColumnName("IsPiece_Mng");

                entity.Property(e => e.Isdelete).HasColumnName("ISDELETE");

                entity.Property(e => e.MaxQuantity).HasColumnType("decimal(18, 0)");

                entity.Property(e => e.MinQuantity).HasColumnType("decimal(18, 0)");

                entity.Property(e => e.MinRequestQuantity).HasColumnType("decimal(18, 0)");

                entity.Property(e => e.ProductCode)
                    .IsRequired()
                    .HasMaxLength(55);

                entity.Property(e => e.SysDate).HasColumnType("datetime");

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr).HasMaxLength(55);

                entity.Property(e => e.UpdateTime).HasColumnType("datetime");

                entity.Property(e => e.UpdateUser).HasMaxLength(55);

                entity.Property(e => e.Usr).HasMaxLength(55);

                entity.Property(e => e.WareHouseCode)
                    .IsRequired()
                    .HasMaxLength(55);
            });

            modelBuilder.Entity<WorkGroup>(entity =>
            {
                entity.ToTable("WORK_GROUP");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.ChkDate).HasColumnType("datetime");

                entity.Property(e => e.ChkMan)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkManName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkMob)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Name)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("NAME");

                entity.Property(e => e.No)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("NO");

                entity.Property(e => e.Rem)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.StopId).HasColumnName("STOP_ID");

                entity.Property(e => e.SysDate).HasColumnType("datetime");

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Usr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<WorkShift>(entity =>
            {
                entity.ToTable("WORK_SHIFT");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.ChkDate).HasColumnType("datetime");

                entity.Property(e => e.ChkMan)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkManName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkMob)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Name)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("NAME");

                entity.Property(e => e.No)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("NO");

                entity.Property(e => e.Rem)
                    .IsRequired()
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.StopId).HasColumnName("STOP_ID");

                entity.Property(e => e.SysDate).HasColumnType("datetime");

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Usr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<WsReturnMaterial>(entity =>
            {
                entity.ToTable("WS_RETURN_MATERIAL");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Barcode)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("BARCODE");

                entity.Property(e => e.BarcodeNew)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("BARCODE_NEW");

                entity.Property(e => e.PrdNo)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("PRD_NO");

                entity.Property(e => e.Qty)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("QTY");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.UpdateTime).HasColumnType("datetime");

                entity.Property(e => e.Usr)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Ychj>(entity =>
            {
                entity.HasKey(e => e.序号);

                entity.ToTable("ychj");

                entity.Property(e => e.序号).ValueGeneratedNever();

                entity.Property(e => e.B1).HasColumnType("numeric(18, 1)");

                entity.Property(e => e.C).HasColumnType("numeric(18, 1)");

                entity.Property(e => e.FeCr).HasColumnType("numeric(18, 1)");

                entity.Property(e => e.FeMn).HasColumnType("numeric(18, 1)");

                entity.Property(e => e.FeS).HasColumnType("numeric(18, 1)");

                entity.Property(e => e.日期).HasColumnType("datetime");

                entity.Property(e => e.时间)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.标识号)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.炉号)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.班号)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength(true);
            });

            modelBuilder.Entity<Yctl>(entity =>
            {
                entity.HasKey(e => e.序号);

                entity.ToTable("yctl");

                entity.Property(e => e.序号).ValueGeneratedNever();

                entity.Property(e => e._1号料).HasColumnName("1号料");

                entity.Property(e => e._2号料).HasColumnName("2号料");

                entity.Property(e => e._3号料).HasColumnName("3号料");

                entity.Property(e => e._4号料).HasColumnName("4号料");

                entity.Property(e => e._5号料).HasColumnName("5号料");

                entity.Property(e => e.日期).HasColumnType("datetime");

                entity.Property(e => e.时间)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.标识号)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.炉号)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.班号)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength(true);
            });

            modelBuilder.Entity<ZcNo>(entity =>
            {
                entity.ToTable("ZC_NO");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BanNo)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("BAN_NO");

                entity.Property(e => e.ChkDate).HasColumnType("datetime");

                entity.Property(e => e.ChkMan)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkManName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ChkMob)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Dep)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("DEP");

                entity.Property(e => e.IdxNo)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("IDX_NO");

                entity.Property(e => e.IsBindBatNo).HasColumnName("IsBindBat_NO");

                entity.Property(e => e.IsCheckWorkOrder).HasColumnName("isCheckWorkOrder");

                entity.Property(e => e.IsFeeding)
                    .IsRequired()
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.MtnId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("MTN_ID");

                entity.Property(e => e.Name)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("NAME");

                entity.Property(e => e.Rem)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("REM");

                entity.Property(e => e.SpcId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SPC_ID");

                entity.Property(e => e.StopId).HasColumnName("STOP_ID");

                entity.Property(e => e.SysDate).HasColumnType("datetime");

                entity.Property(e => e.TwId)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TW_ID");

                entity.Property(e => e.Unfdinterface)
                    .HasColumnName("UNFDINTERFACE")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Unwrinterface)
                    .HasColumnName("UNWRINTERFACE")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.UpDd).HasColumnName("UP_DD");

                entity.Property(e => e.UpdDate).HasColumnType("datetime");

                entity.Property(e => e.UpdUsr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UpdUsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Usr)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UsrName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.WorkType)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.ZcNo1)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ZC_NO");

                entity.Property(e => e.ZcUp)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ZC_UP");
            });

            modelBuilder.Entity<ZzSbmodBc>(entity =>
            {
                entity.ToTable("ZZ_SBMOD_BC");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BanNo)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("BAN_NO");

                entity.Property(e => e.ModNo)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("MOD_NO");

                entity.Property(e => e.Qty).HasColumnName("QTY");

                entity.Property(e => e.SebNo)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("SEB_NO");

                entity.Property(e => e.SysDate)
                    .HasColumnType("datetime")
                    .HasColumnName("SYS_DATE");

                entity.Property(e => e.Upddate)
                    .HasColumnType("datetime")
                    .HasColumnName("UPDDATE");
            });

           
        }
    }
}