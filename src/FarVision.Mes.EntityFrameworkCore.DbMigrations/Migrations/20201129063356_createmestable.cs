using System;
using Microsoft.EntityFrameworkCore.Migrations;

namespace FarVision.Mes.Migrations
{
    public partial class createmestable : Migration
    {
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.CreateTable(
                name: "_bf_Busi_Field_C",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    m_BusiNo = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    m_Name = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    m_ValueControl = table.Column<int>(nullable: false),
                    m_ValueDefault = table.Column<string>(unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')"),
                    m_History = table.Column<bool>(nullable: false),
                    gc_Visible = table.Column<int>(nullable: false, defaultValueSql: "((1))"),
                    gc_Format = table.Column<string>(unicode: false, maxLength: 500, nullable: true, defaultValueSql: "('')"),
                    edit_Able = table.Column<bool>(nullable: false),
                    Usr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UsrName = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    Edit_Type = table.Column<int>(nullable: true),
                    Filter_Able = table.Column<bool>(nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK__bf_Busi_Field_C", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "_bf_Data_History",
                columns: table => new
                {
                    ID = table.Column<long>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    TableName = table.Column<string>(unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')"),
                    ObjectID = table.Column<int>(nullable: false),
                    OperKind = table.Column<int>(nullable: false),
                    Remark = table.Column<string>(unicode: false, maxLength: 4000, nullable: false, defaultValueSql: "('')"),
                    UserID = table.Column<int>(nullable: false),
                    dTime = table.Column<DateTime>(type: "datetime", nullable: false, defaultValueSql: "(getdate())")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK__bf_Data_History", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "_bf_FieldSelectList",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    TableName = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    PropertyNo = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    ItemValue = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    ItemField = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    Symbol = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    ItemOrder = table.Column<int>(nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK__bf_FieldSelectList", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "ACCN",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    ACC_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    NAME = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    ACC_NO_UP = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    DC = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    CLS = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    ACC_NO_B = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ACC_NO_E = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    SW_OBJ = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    SW_ARP = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    SW_INV = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    SW_TAX = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    SW_CAS = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    KN_CST = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    CSH_FR = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    OTH_SW1 = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    OTH_SW2 = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    CURID = table.Column<string>(unicode: false, maxLength: 4, nullable: true),
                    ENG_NAME = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    REL_CLS = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    REM = table.Column<string>(type: "text", nullable: true),
                    STOP_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    CLS_ID1 = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    CLS_ID2 = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    CLS_ID3 = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    CLS_ID4 = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    CHK_CASH_FLOW = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    CHK_CSH = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    KM_TYPE = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    KM_ID = table.Column<string>(unicode: false, maxLength: 4, nullable: true),
                    ACC_NO_STD = table.Column<string>(unicode: false, maxLength: 200, nullable: true),
                    UP_DD = table.Column<byte[]>(nullable: true),
                    WORD_NO1 = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    WORD_NO2 = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    WORD_NO3 = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    WORD_NO4 = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    WORD_NO5 = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    KIND = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ACCNO2 = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    CUR_TYPE = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    ACC_NO_IFRS = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    OFFSET_ID = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    EXC_ID = table.Column<string>(unicode: false, maxLength: 4, nullable: true),
                    ACC_NO_GSTD = table.Column<string>(unicode: false, maxLength: 200, nullable: true),
                    ACC_NO_QYJZ = table.Column<string>(unicode: false, maxLength: 20, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ACCN", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "ACTUALDCR",
                columns: table => new
                {
                    SJ = table.Column<string>(maxLength: 100, nullable: true),
                    SBBH = table.Column<string>(maxLength: 100, nullable: true),
                    CSBH = table.Column<string>(maxLength: 100, nullable: true),
                    CSSZ = table.Column<string>(maxLength: 1000, nullable: true),
                    CSZT = table.Column<byte>(nullable: true)
                },
                constraints: table =>
                {
                });

            migrationBuilder.CreateTable(
                name: "ACTUALPARA",
                columns: table => new
                {
                    PARA_NO = table.Column<string>(maxLength: 100, nullable: true),
                    PARA_NAME = table.Column<string>(maxLength: 100, nullable: true),
                    LOW_LIMIT = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    UP_LIMIT = table.Column<decimal>(type: "decimal(18, 4)", nullable: true),
                    PARA = table.Column<string>(maxLength: 200, nullable: true),
                    RN = table.Column<int>(nullable: true)
                },
                constraints: table =>
                {
                });

            migrationBuilder.CreateTable(
                name: "ALERT_MESSAGE_HIS_T",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    MSGID = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    ALERT_NOTIFICATION = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    RECEIVER = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    UPGRADE_LEVEL = table.Column<int>(nullable: true),
                    SENDRESULT = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    SENDTIME = table.Column<DateTime>(type: "datetime", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ALERT_MESSAGE_HIS_T", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "ALERT_MESSAGE_T",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    EXCEP_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    FACTORY = table.Column<string>(unicode: false, maxLength: 10, nullable: false),
                    WORKSHOP = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    DEV_STATION = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    EXCEP_TYPE = table.Column<string>(unicode: false, maxLength: 100, nullable: false),
                    EXCEP_LEVEL = table.Column<string>(unicode: false, maxLength: 100, nullable: false),
                    EXCEP_DESC = table.Column<string>(unicode: false, maxLength: 1000, nullable: false),
                    START_TIME = table.Column<DateTime>(type: "datetime", nullable: false),
                    END_TIME = table.Column<DateTime>(type: "datetime", nullable: true),
                    DURATION = table.Column<int>(nullable: true),
                    STATUS = table.Column<int>(nullable: false),
                    UPGRADE_LEVEL = table.Column<int>(nullable: false),
                    IS_TRACK = table.Column<bool>(nullable: false),
                    SYSDATE = table.Column<DateTime>(type: "datetime", nullable: false),
                    BIL_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    BIL_BUSI = table.Column<string>(unicode: false, maxLength: 30, nullable: true),
                    Title = table.Column<string>(unicode: false, maxLength: 100, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ALERT_MESSAGE_T", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "ALERT_PDPARA",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    MENUTYPE = table.Column<string>(unicode: false, maxLength: 30, nullable: true),
                    PRD_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    ZC_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    ZC_NAME = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    PARA_CHANGE = table.Column<string>(unicode: false, maxLength: 1000, nullable: true),
                    ISSEND = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    UPDATETIME = table.Column<DateTime>(type: "datetime", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ALERT_PDPARA", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "ALERT_RULES_T",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    ALERT_TYPE = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    ALERT_STATION = table.Column<string>(unicode: false, maxLength: 500, nullable: true),
                    ALERT_LEVEL = table.Column<string>(unicode: false, maxLength: 100, nullable: false),
                    IS_TRACKSTATUS = table.Column<bool>(nullable: false),
                    UPGRADE_TIME = table.Column<int>(nullable: false),
                    ALERT_NOTIFICATION = table.Column<string>(unicode: false, maxLength: 100, nullable: false),
                    RECEIVER = table.Column<string>(unicode: false, maxLength: 100, nullable: false),
                    UPGRADE_LEVEL = table.Column<int>(nullable: false),
                    ISENABLE = table.Column<bool>(nullable: false),
                    SYSDATE = table.Column<DateTime>(type: "datetime", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ALERT_RULES_T", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "AREA",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    AREA_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    NAME = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    AREA_UP = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    STOP_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    REM = table.Column<string>(unicode: false, maxLength: 60, nullable: true),
                    UP_DD = table.Column<DateTime>(type: "datetime", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_AREA", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "BACLOSE",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    BusiNo = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    BillDate = table.Column<DateTime>(type: "datetime", nullable: false),
                    userID = table.Column<int>(nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_BACLOSE", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "BACOMP",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    No = table.Column<string>(unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')"),
                    Name = table.Column<string>(unicode: false, maxLength: 100, nullable: false, defaultValueSql: "('')"),
                    Path = table.Column<string>(unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')"),
                    OpenDate = table.Column<DateTime>(type: "datetime", nullable: false),
                    ComName = table.Column<string>(unicode: false, maxLength: 500, nullable: false, defaultValueSql: "('')"),
                    curNo = table.Column<string>(unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')"),
                    curName = table.Column<string>(unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')"),
                    curSymbol = table.Column<string>(unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')"),
                    ORGCode = table.Column<string>(unicode: false, maxLength: 100, nullable: false, defaultValueSql: "('')"),
                    NameS = table.Column<string>(unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')"),
                    Domain = table.Column<string>(unicode: false, maxLength: 500, nullable: false, defaultValueSql: "('')"),
                    Addr = table.Column<string>(unicode: false, maxLength: 500, nullable: false, defaultValueSql: "('')"),
                    LP = table.Column<string>(unicode: false, maxLength: 100, nullable: false, defaultValueSql: "('')"),
                    Tel1 = table.Column<string>(unicode: false, maxLength: 100, nullable: false, defaultValueSql: "('')"),
                    Tel2 = table.Column<string>(unicode: false, maxLength: 100, nullable: false, defaultValueSql: "('')"),
                    Fax = table.Column<string>(unicode: false, maxLength: 100, nullable: false, defaultValueSql: "('')"),
                    Zap = table.Column<string>(unicode: false, maxLength: 100, nullable: false, defaultValueSql: "('')"),
                    EMail = table.Column<string>(unicode: false, maxLength: 100, nullable: false, defaultValueSql: "('')"),
                    TaxNo = table.Column<string>(unicode: false, maxLength: 100, nullable: false, defaultValueSql: "('')"),
                    Picture = table.Column<Guid>(nullable: true),
                    NameEn = table.Column<string>(unicode: false, maxLength: 100, nullable: false, defaultValueSql: "('')"),
                    AddrEn = table.Column<string>(unicode: false, maxLength: 100, nullable: false, defaultValueSql: "('')"),
                    CustomCode = table.Column<string>(unicode: false, maxLength: 100, nullable: false, defaultValueSql: "('')"),
                    Memo = table.Column<string>(unicode: false, maxLength: 500, nullable: false, defaultValueSql: "('')"),
                    userID = table.Column<int>(nullable: false),
                    InputDate = table.Column<DateTime>(type: "datetime", nullable: false, defaultValueSql: "(getdate())"),
                    Flag = table.Column<int>(nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_BACOMP", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "BARCODE_PRODUCT_MAP",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    BARCODE = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    PRD_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    PRD_SNM = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    MOD_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    ID_NO = table.Column<string>(unicode: false, maxLength: 100, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_BARCODE_PRODUCT_MAP", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "BAT_NO",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    BAT_NO = table.Column<string>(unicode: false, maxLength: 40, nullable: false),
                    NAME = table.Column<string>(unicode: false, maxLength: 80, nullable: true),
                    JH_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    PRD_NO = table.Column<string>(unicode: false, maxLength: 100, nullable: false),
                    UP_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    VALID_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    UniqueIdent = table.Column<string>(unicode: false, maxLength: 100, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_BAT_NO", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "BAT_REC1",
                columns: table => new
                {
                    BAT_NO = table.Column<string>(unicode: false, maxLength: 40, nullable: false),
                    PRD_NO = table.Column<string>(unicode: false, maxLength: 30, nullable: false),
                    WH = table.Column<string>(unicode: false, maxLength: 12, nullable: false),
                    PRD_MARK = table.Column<string>(unicode: false, maxLength: 40, nullable: false, defaultValueSql: "(space((0)))"),
                    QTY_IN = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_OUT = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CST = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_LRN = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_BRW = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_ON_WAY = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_ON_PRC = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_ON_RSV = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_ON_ODR = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CLS_ID = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    QTY1_IN = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY1_OUT = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY1_LRN = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY1_BRW = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    PASS = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    USR = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    VALID_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    QTY_MAX = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_MIN = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    LST_OTD = table.Column<DateTime>(type: "datetime", nullable: true),
                    LST_IND = table.Column<DateTime>(type: "datetime", nullable: true),
                    QTY_SA = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_RK = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_ZG = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_CK = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_SQ = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    REM = table.Column<string>(unicode: false, maxLength: 200, nullable: true),
                    CHQC_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    QTY_SW = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_WX = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_WS = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_WS_KC = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_QL = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_Q2 = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_Q2_YL = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_Q3 = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CST_BX = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_SQR = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_SQC = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_LOCK = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    SC_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    QTY_JH = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    LST_OTD_QC = table.Column<DateTime>(type: "datetime", nullable: true),
                    LST_IND_QC = table.Column<DateTime>(type: "datetime", nullable: true),
                    UP_DD = table.Column<byte[]>(nullable: true),
                    QTY1_LOCK = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CST_IFRS = table.Column<decimal>(type: "numeric(18, 0)", nullable: true)
                },
                constraints: table =>
                {
                });

            migrationBuilder.CreateTable(
                name: "BATCHG_REC",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    SEB_NO = table.Column<string>(unicode: false, maxLength: 100, nullable: false),
                    PRD_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    BAT_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    SYSDATE = table.Column<DateTime>(type: "datetime", nullable: false),
                    SAL_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_BATCHG_REC", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "BF_FILTER",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    NO = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    TYPE = table.Column<int>(nullable: false),
                    CATEGORY = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    ISDEFAULT = table.Column<bool>(nullable: false),
                    IUSERID = table.Column<int>(nullable: false),
                    VIEWDATA = table.Column<byte[]>(nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_BF_FILTER", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "BF_LAYOUT",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    NO = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    TYPE = table.Column<int>(nullable: false),
                    CATEGORY = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    USRNO = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    VIEWDATA = table.Column<byte[]>(type: "image", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_BF_LAYOUT", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "BF_RPT_TEMPLET_C",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    BUSINO = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    BUSIKIND = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    NAME = table.Column<string>(unicode: false, maxLength: 500, nullable: false),
                    VIEWDATA = table.Column<byte[]>(type: "image", nullable: true),
                    ISDEFAULT = table.Column<bool>(nullable: true),
                    MEMO = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    USERNO = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    INPUTDATE = table.Column<DateTime>(type: "datetime", nullable: false),
                    FLAG = table.Column<int>(nullable: true),
                    NO = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    MenuNo = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_BF_RPT_TEMPLET_C", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "BF_RPT_TEMPLET_S",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    BUSINO = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    BUSIKIND = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    NAME = table.Column<string>(unicode: false, maxLength: 500, nullable: false),
                    ISDEFAULT = table.Column<int>(nullable: false),
                    MEMO = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    USERNO = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    INPUTDATE = table.Column<DateTime>(type: "datetime", nullable: false),
                    FLAG = table.Column<int>(nullable: false),
                    VIEWDATA = table.Column<byte[]>(type: "image", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_BF_RPT_TEMPLET_S", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "BIL_SPC",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    BIL_ID = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    SPC_ID = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    SPC_NO = table.Column<string>(unicode: false, maxLength: 12, nullable: false),
                    NAME = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    REM = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    Usr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 20, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_BIL_SPC", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "BILLBASE",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    No = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    BillDate = table.Column<DateTime>(type: "datetime", nullable: false, defaultValueSql: "((1))"),
                    Rem = table.Column<string>(unicode: false, maxLength: 4000, nullable: false, defaultValueSql: "('')"),
                    BusiNo = table.Column<string>(unicode: false, maxLength: 20, nullable: false, defaultValueSql: "('')"),
                    BilType = table.Column<string>(unicode: false, maxLength: 20, nullable: false, defaultValueSql: "('')"),
                    BilTypeName = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    Usr = table.Column<string>(unicode: false, maxLength: 20, nullable: false, defaultValueSql: "('')"),
                    UsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: false, defaultValueSql: "(getdate())"),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: false),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')"),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    ChkMan = table.Column<string>(unicode: false, maxLength: 20, nullable: false, defaultValueSql: "('')"),
                    ChkManName = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    ChkDate = table.Column<DateTime>(type: "datetime", nullable: false),
                    IsClose = table.Column<bool>(nullable: false),
                    ClsDate = table.Column<DateTime>(type: "datetime", nullable: false),
                    ClsUsr = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    ClsUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    ChkMob = table.Column<string>(unicode: false, maxLength: 100, nullable: false),
                    IsPrint = table.Column<bool>(nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_BILLBASE", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "BLOB_TEMP",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    BDATA = table.Column<Guid>(nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_BLOB_TEMP", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "CALL_INFO",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    CallType_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    RS_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    RS_DESP = table.Column<string>(unicode: false, maxLength: 200, nullable: true),
                    CALL_DEP = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    CALL_SAL_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    CALL_DATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    SEB_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    CALL_PAD = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    CALL_PAD_IP = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: false),
                    Usr = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    UsrName = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    BusiNo = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    CALL_STA = table.Column<string>(unicode: false, maxLength: 8, nullable: false),
                    Source_No = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    TO_BillNo = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ALMSG_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ResetUsr = table.Column<string>(unicode: false, maxLength: 50, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_CALL_INFO", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "CALLTYPE",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    No = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    TypeName = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Enabled = table.Column<bool>(nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_CALLTYPE", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "CAMERA_SEB_MAP",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    CAM_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    CAM_IP = table.Column<string>(unicode: false, maxLength: 15, nullable: true),
                    SEB_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    SEB_TYPE = table.Column<string>(unicode: false, maxLength: 50, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_CAMERA_SEB_MAP", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "CASN",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    CAS_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    REF_NO = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    CUS = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    CUS_NO = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    OPN_DAT = table.Column<DateTime>(type: "datetime", nullable: true),
                    END_DAT = table.Column<DateTime>(type: "datetime", nullable: true),
                    NAME = table.Column<string>(unicode: false, maxLength: 80, nullable: true),
                    AMTN = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    AMTN_ADD = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    AMTN_SUB = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CLS_DAT = table.Column<DateTime>(type: "datetime", nullable: true),
                    END_RTO = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CLS_MTH = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    CST1 = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CST2 = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CST3 = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CST4 = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    DEP = table.Column<string>(unicode: false, maxLength: 8, nullable: true),
                    CAS_OK = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    REM = table.Column<string>(type: "text", nullable: true),
                    ADR1 = table.Column<string>(type: "text", nullable: true),
                    AG_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    AG_NAME = table.Column<string>(unicode: false, maxLength: 40, nullable: true),
                    CAS_VER = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    CHK_MAN = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    CLS_DATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    CLS_ID = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    USR = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    DAY_HH = table.Column<short>(nullable: true),
                    WEEK_HH = table.Column<short>(nullable: true),
                    MONTH_DD = table.Column<short>(nullable: true),
                    BAN_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    FILE_ID = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    TYPE = table.Column<string>(unicode: false, maxLength: 1, nullable: true, defaultValueSql: "((1))"),
                    UP = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    SNM = table.Column<string>(unicode: false, maxLength: 30, nullable: true),
                    UP_DD = table.Column<byte[]>(nullable: true),
                    SAL_NO = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    DF_USR = table.Column<string>(unicode: false, maxLength: 40, nullable: true),
                    DF_TEL = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    QTY1_RCV = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY1_FINED = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    REM_RCV = table.Column<string>(type: "text", nullable: true),
                    MOB_ID = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    LOCK_MAN = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    LOCK_DATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    UT1 = table.Column<string>(unicode: false, maxLength: 8, nullable: true),
                    AMTN_ZB = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CLS_DD_ZB = table.Column<DateTime>(type: "datetime", nullable: true),
                    CLS_ID_ZB = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    TEMP_ID = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    PER_ZB = table.Column<int>(nullable: true),
                    LOSS_RATE1 = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    LOSS_RATE2 = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    AMTN_JS = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    SUP_CODE = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    TAXPAYER_CODE = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    BNK_NAME = table.Column<string>(unicode: false, maxLength: 7, nullable: true),
                    ID_CODE = table.Column<string>(unicode: false, maxLength: 30, nullable: true),
                    CT_FILE = table.Column<Guid>(nullable: true),
                    CT_FILE_NAME = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    SIGN_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    CT_RTN_RTO = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    AMTN_TARGET = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    ACC_DAYS = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    RCV_TYPE = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    PAY1_AMTN = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    PAY2_AMTN = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    PAY2_DAYS = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    IDX_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    SYS_DATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    MODIFY_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    MODIFY_MAN = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    BIL_TYPE = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    DATA_SRC = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    AUTO_BIL = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    RTO_HB = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    RTO_XK = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    RETURN_ID = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    AMTN_JH = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    FX_NO = table.Column<string>(unicode: false, maxLength: 30, nullable: true),
                    RTO_ZK = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CELLPHONE = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    AMTN_SP1 = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    AMTN_SP2 = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    AMTN_SP3 = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    AMTN_SP4 = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    AMTN_SP5 = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    AMTN_BZ = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    AMTN_DJ = table.Column<decimal>(type: "numeric(18, 0)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_CASN", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "CMM_MEASURE_REC",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    PART_NAME = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    REVISIONNUMBER = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    SERIALNUMBER = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    DDATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    DTIME = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    PRD_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    ZC_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    SEB_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    BAN_NO = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    REC_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    TZ_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    SYSDATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    CHK_TYPE = table.Column<string>(unicode: false, maxLength: 2, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_CMM_MEASURE_REC", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "CNTT_SGT",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    CT_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    CT_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    STATE = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    IP_CNTT_NO = table.Column<string>(unicode: false, maxLength: 40, nullable: true),
                    OP_CNTT_NO = table.Column<string>(unicode: false, maxLength: 40, nullable: true),
                    PRE_MANUAL_NO = table.Column<string>(unicode: false, maxLength: 18, nullable: true),
                    MANUAL_NO = table.Column<string>(unicode: false, maxLength: 40, nullable: true),
                    CUS_NO_TRADE = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    CUS_NO_WORK = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    TRADE_TYPE = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    PRJ_NO = table.Column<string>(unicode: false, maxLength: 40, nullable: true),
                    CUS_NO_FRGN = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    SUPPMTR_CNTT_NO = table.Column<string>(unicode: false, maxLength: 40, nullable: true),
                    CST_WORK = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    IP_MPRD_NO = table.Column<string>(unicode: false, maxLength: 30, nullable: true),
                    OP_MPRD_NO = table.Column<string>(unicode: false, maxLength: 30, nullable: true),
                    AMT_IP_MTR = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    AMT_OP_PRD = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CUST_ID_1 = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    CUST_ID_2 = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    CUST_ID_3 = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    CUST_ID_4 = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    APP_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    ACCAREA_ID = table.Column<string>(unicode: false, maxLength: 4, nullable: true),
                    SAL_NO = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    TRADE_ID = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    TAX_ID = table.Column<string>(unicode: false, maxLength: 4, nullable: true),
                    CUT_NO = table.Column<string>(unicode: false, maxLength: 4, nullable: true),
                    TRANS_ID = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    RTO_TAX = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    FE_SC = table.Column<string>(unicode: false, maxLength: 40, nullable: true),
                    VST_TYPE = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    INV_TYPE = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    RTO_ISAL = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    TAX_TYPE = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    OFFER = table.Column<string>(unicode: false, maxLength: 40, nullable: true),
                    AGREE_NO = table.Column<string>(unicode: false, maxLength: 40, nullable: true),
                    PASS_NO = table.Column<string>(unicode: false, maxLength: 40, nullable: true),
                    CNTT_QTY = table.Column<int>(nullable: true),
                    CUR_ID_IP = table.Column<string>(unicode: false, maxLength: 4, nullable: true),
                    CUR_ID_OP = table.Column<string>(unicode: false, maxLength: 4, nullable: true),
                    AMT_MNG = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    RTO_MNG = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    WORK_TYPE = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    IP_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    OP_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    STR_AREA = table.Column<string>(unicode: false, maxLength: 4, nullable: true),
                    IM_FLG = table.Column<string>(unicode: false, maxLength: 40, nullable: true),
                    CHK_MAN = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    CHK_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    CHG_FLAG = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    MEMO = table.Column<string>(type: "text", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_CNTT_SGT", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "COMBITABLE",
                columns: table => new
                {
                    COMBITYPE = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    ITEMTYPE = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    FIXCHAR = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    ITEMLEN = table.Column<int>(nullable: true),
                    FORMAT = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    ALIGN = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    COVERCAR = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    ROWINDEX = table.Column<int>(nullable: true)
                },
                constraints: table =>
                {
                });

            migrationBuilder.CreateTable(
                name: "CSiTemp",
                columns: table => new
                {
                    id = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    SEB_NO = table.Column<string>(unicode: false, maxLength: 55, nullable: true),
                    NO = table.Column<string>(unicode: false, maxLength: 55, nullable: true),
                    VALUE = table.Column<string>(unicode: false, maxLength: 55, nullable: true),
                    SYS_DATE = table.Column<string>(unicode: false, maxLength: 55, nullable: true),
                    ITM = table.Column<string>(unicode: false, maxLength: 55, nullable: true),
                    TYPE = table.Column<string>(unicode: false, maxLength: 55, nullable: true),
                    BARCODE = table.Column<string>(unicode: false, maxLength: 55, nullable: true),
                    INPUTDATE = table.Column<string>(unicode: false, maxLength: 55, nullable: true),
                    MINLIMIT = table.Column<string>(unicode: false, maxLength: 55, nullable: true),
                    MAXLIMIT = table.Column<string>(unicode: false, maxLength: 55, nullable: true),
                    CASTINGBATCHNO = table.Column<string>(unicode: false, maxLength: 55, nullable: true),
                    STOVENO = table.Column<string>(unicode: false, maxLength: 55, nullable: true),
                    InspectDevice = table.Column<string>(unicode: false, maxLength: 50, nullable: true)
                },
                constraints: table =>
                {
                });

            migrationBuilder.CreateTable(
                name: "CUR_ID",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    CUR_ID = table.Column<string>(unicode: false, maxLength: 4, nullable: false),
                    IJ_DD = table.Column<DateTime>(type: "datetime", nullable: false),
                    CUR_NAME = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    EXC_RTO = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    ACC_NO_IR = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ACC_NO_IP = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ACC_NO_CHK = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    EXC_RTO_E = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    EXC_RTO_I = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    EXC_RTO_O = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    ID_SGT = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    UP_DD = table.Column<byte[]>(nullable: true),
                    DEP = table.Column<string>(unicode: false, maxLength: 8, nullable: true),
                    DEPRO_NO = table.Column<string>(unicode: false, maxLength: 8, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_CUR_ID", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "CUS_BOX",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    BOXCODE = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    PRODUCTCODE = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    NUMBER = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    PRO_TIME = table.Column<DateTime>(type: "datetime", nullable: true),
                    TABLENAME = table.Column<string>(unicode: false, maxLength: 50, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_CUS_BOX", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "CUS_WH",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    CUS_NO = table.Column<string>(unicode: false, maxLength: 12, nullable: false),
                    WH = table.Column<string>(unicode: false, maxLength: 12, nullable: false),
                    NAME = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    CNT_MAN = table.Column<string>(unicode: false, maxLength: 60, nullable: true),
                    TEL_NO = table.Column<string>(unicode: false, maxLength: 40, nullable: true),
                    FAX_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ADR = table.Column<string>(type: "text", nullable: true),
                    SENDCUS_NAME = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    CON_MAN = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    CELL_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ZIP = table.Column<string>(unicode: false, maxLength: 8, nullable: true),
                    UP_DD = table.Column<byte[]>(nullable: true),
                    COUN_ID = table.Column<int>(nullable: true),
                    E_MAIL = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    REM = table.Column<string>(unicode: false, maxLength: 200, nullable: true),
                    CHK_DFT = table.Column<string>(unicode: false, maxLength: 1, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_CUS_WH", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "CUST",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    CUS_NO = table.Column<string>(unicode: false, maxLength: 12, nullable: false),
                    CUS_ARE = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    MAS_CUS = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    OBJ_ID = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    NAME = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    SNM = table.Column<string>(unicode: false, maxLength: 30, nullable: true),
                    CLS_MTH = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    CLS_DD = table.Column<short>(nullable: true),
                    MM_END = table.Column<short>(nullable: true),
                    CHK_DD = table.Column<short>(nullable: true),
                    UNI_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    BOS_NM = table.Column<string>(unicode: false, maxLength: 30, nullable: true),
                    CNT_MAN1 = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    CNT_MAN2 = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    ACC_MAN = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    TEL1 = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    TEL2 = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    FAX = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    ZIP = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    INV_ID = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    ID1_TAX = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    CLS1 = table.Column<string>(unicode: false, maxLength: 80, nullable: true),
                    STR_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    END_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    CUR = table.Column<string>(unicode: false, maxLength: 4, nullable: true),
                    CRD_NR_NC = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    E_MAIL = table.Column<string>(unicode: false, maxLength: 200, nullable: true),
                    SEND_MTH = table.Column<string>(unicode: false, maxLength: 200, nullable: true),
                    SEND_WH = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    ID_CODE = table.Column<string>(unicode: false, maxLength: 30, nullable: true),
                    COMPNET = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    COMP_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    CAPSUM = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    BUSISUM = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    SALMS = table.Column<int>(nullable: true),
                    BUSINOTE = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    NOTIFY = table.Column<string>(unicode: false, maxLength: 30, nullable: true),
                    BROKER = table.Column<string>(unicode: false, maxLength: 30, nullable: true),
                    LOADING_PORT = table.Column<string>(unicode: false, maxLength: 60, nullable: true),
                    DIS_PORT = table.Column<string>(unicode: false, maxLength: 60, nullable: true),
                    MANU_PLACE = table.Column<string>(unicode: false, maxLength: 60, nullable: true),
                    BIZ_DSC = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    COUNTRY = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    FP_NAME = table.Column<string>(unicode: false, maxLength: 80, nullable: true),
                    CHK_FAX = table.Column<bool>(nullable: true),
                    RTO_TAX = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CHK_CUS_IDX = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    CY_ID = table.Column<bool>(nullable: true),
                    REGIST_CODE = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    CORP_ID = table.Column<string>(unicode: false, maxLength: 4, nullable: true),
                    M_CUST = table.Column<string>(unicode: false, maxLength: 4, nullable: true),
                    SAL_NO = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    CHK_DEP = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    RTO_KK = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    DEP = table.Column<string>(unicode: false, maxLength: 8, nullable: true),
                    RTO_FL = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    RTO_YL = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    DEP1 = table.Column<string>(unicode: false, maxLength: 8, nullable: true),
                    PAY_DAYS = table.Column<short>(nullable: true),
                    PAY_FLAG = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    AMTN_MAX_PAY = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CHK_QK = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    AMTN_QK = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    RTO_DISCNT = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CHK_IRP2 = table.Column<bool>(nullable: true),
                    LOGON = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    WH_NO = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    STOP_ORDER = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    RTN_CTRL = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    DRP_ID = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    YH_WH1 = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    YH_WH2 = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    ACC_NO_IR = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ACC_NO_IP = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    PRTWEEKS_PO = table.Column<short>(nullable: true),
                    SOWEEKS_PO = table.Column<short>(nullable: true),
                    CHK_DRP1 = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    CHK_DRP2 = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    CHK_DRP3 = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    XN_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    CHK_BARCODE = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    ACC_NO_ZP = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    HM_ID = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    AMTN_FL = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    AMTN_FLED = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CHK_SBRTO = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    RTO_FQSK = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    DATEFLAG_FQSK = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    DATE_FQSK = table.Column<DateTime>(type: "datetime", nullable: true),
                    QS_FQSK = table.Column<int>(nullable: true),
                    CODE_NAME = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    NSR_CODE = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    NAME_PY = table.Column<string>(unicode: false, maxLength: 150, nullable: true),
                    BIZ_DSC1 = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    EX_TRD_ID = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    IM_TRD_ID = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    FP_TYPE = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    CHK_MIN_XF = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    BIL_MIN_XF = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    AMTN_MIN_XF = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    UsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkMan = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkManName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ChkMob = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    IsPrint = table.Column<bool>(nullable: true),
                    Usr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ADR1 = table.Column<string>(unicode: false, maxLength: 200, nullable: true),
                    ADR2 = table.Column<string>(unicode: false, maxLength: 200, nullable: true),
                    REM = table.Column<string>(unicode: false, maxLength: 200, nullable: true),
                    NM_ENG = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    MAIN_PRD = table.Column<string>(unicode: false, maxLength: 200, nullable: true),
                    ADR_ENG = table.Column<string>(unicode: false, maxLength: 200, nullable: true),
                    IsEffective = table.Column<bool>(nullable: true),
                    EffectiveDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ExpirationDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ISDELETE = table.Column<bool>(nullable: true),
                    IsCustomerDeposit = table.Column<bool>(nullable: true, defaultValueSql: "((0))"),
                    SmallPackageQTY = table.Column<decimal>(type: "decimal(18, 0)", nullable: true),
                    SaleType = table.Column<string>(unicode: false, maxLength: 10, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_CUST", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "CYCLE_TIME",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    PRD_NO = table.Column<string>(unicode: false, maxLength: 30, nullable: true),
                    PRD_NAME = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    SEB_NO = table.Column<string>(unicode: false, maxLength: 30, nullable: true),
                    SEB_NAME = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    ZC_NO = table.Column<string>(unicode: false, maxLength: 30, nullable: true),
                    ZC_NAME = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    CYCLE_TIME = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CT_UNIT = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    QTY = table.Column<int>(nullable: true),
                    Usr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkMan = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkManName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ChkMob = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    IsPrint = table.Column<bool>(nullable: true),
                    MODEL = table.Column<string>(unicode: false, maxLength: 50, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_CYCLE_TIME", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "DATABASE",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    NAME = table.Column<string>(unicode: false, maxLength: 30, nullable: false),
                    Usr = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    POOL_NAME = table.Column<string>(unicode: false, maxLength: 30, nullable: true),
                    REGION_NUM = table.Column<int>(nullable: true),
                    UsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: false),
                    GSM_PASSWORD = table.Column<string>(unicode: false, maxLength: 30, nullable: false),
                    CONNECT_STRING = table.Column<string>(unicode: false, maxLength: 256, nullable: false),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: false),
                    DATABASE_NUM = table.Column<int>(nullable: false),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    STATUS = table.Column<string>(unicode: false, fixedLength: true, maxLength: 1, nullable: false),
                    SCAN_ADDRESS = table.Column<string>(unicode: false, maxLength: 256, nullable: true),
                    ChkMan = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    ChkManName = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    ONS_PORT = table.Column<int>(nullable: true),
                    ChkDate = table.Column<DateTime>(type: "datetime", nullable: false),
                    NUM_ASSIGNED_INSTANCES = table.Column<int>(nullable: false),
                    SRLAT_THRESH = table.Column<int>(nullable: true),
                    ChkMOB = table.Column<string>(unicode: false, maxLength: 100, nullable: false),
                    CPU_THRESH = table.Column<int>(nullable: true),
                    IsPrint = table.Column<bool>(nullable: false),
                    VERSION = table.Column<string>(unicode: false, maxLength: 30, nullable: true),
                    DB_TYPE = table.Column<string>(unicode: false, fixedLength: true, maxLength: 1, nullable: true),
                    ENCRYPTED_GSM_PASSWORD = table.Column<byte[]>(nullable: true)
                },
                constraints: table =>
                {
                });

            migrationBuilder.CreateTable(
                name: "dc_CS_Record",
                columns: table => new
                {
                    ID = table.Column<long>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    DEV_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    ITM = table.Column<int>(nullable: true),
                    ParaNo = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Value = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    SYSDATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    BARCODE = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    DataTime = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    LowerLimit = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    UpperLimit = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    castingBatchNo = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    StoveNo = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    RecID = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Product = table.Column<string>(unicode: false, maxLength: 50, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_dc_CS_Record", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "DCRRESULT",
                columns: table => new
                {
                    SEB_NO = table.Column<string>(maxLength: 100, nullable: true),
                    PARA_NO = table.Column<string>(maxLength: 100, nullable: true),
                    TYPE = table.Column<byte>(nullable: true),
                    MAXVALUE = table.Column<string>(maxLength: 100, nullable: true),
                    MINVALUE = table.Column<string>(maxLength: 100, nullable: true)
                },
                constraints: table =>
                {
                });

            migrationBuilder.CreateTable(
                name: "DCT_Device",
                columns: table => new
                {
                    ID = table.Column<Guid>(nullable: false),
                    DeviceNo = table.Column<string>(maxLength: 50, nullable: true),
                    Status = table.Column<int>(nullable: true),
                    CreateTime = table.Column<DateTime>(type: "datetime", nullable: true),
                    IsProcessed = table.Column<bool>(nullable: true),
                    ProcessResult = table.Column<string>(maxLength: 100, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_DCT_Device", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "DCT_DeviceAlarm",
                columns: table => new
                {
                    ID = table.Column<Guid>(nullable: false),
                    DeviceNo = table.Column<string>(maxLength: 50, nullable: true),
                    AlarmCode = table.Column<string>(maxLength: 50, nullable: true),
                    AlarmReason = table.Column<string>(maxLength: 100, nullable: true),
                    AlarmType = table.Column<int>(nullable: true),
                    StartTime = table.Column<DateTime>(type: "datetime", nullable: true),
                    CreateTime = table.Column<DateTime>(type: "datetime", nullable: true),
                    IsProcessed = table.Column<bool>(nullable: true),
                    ProcessResult = table.Column<string>(maxLength: 100, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_DCT_DeviceAlarm", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "DEPT",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    DNAME = table.Column<string>(unicode: false, maxLength: 14, nullable: true),
                    PID = table.Column<int>(nullable: true),
                    LOC = table.Column<string>(unicode: false, maxLength: 13, nullable: true),
                    DEP = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    NAME = table.Column<string>(unicode: false, maxLength: 30, nullable: true),
                    ENG_NAME = table.Column<string>(unicode: false, maxLength: 30, nullable: true),
                    UP = table.Column<string>(unicode: false, maxLength: 8, nullable: true),
                    STOP_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    DAYTIME = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    MAKE_ID = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    GROUP_ID = table.Column<bool>(nullable: true),
                    Usr = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    NAME_PY = table.Column<string>(unicode: false, maxLength: 30, nullable: true),
                    DEP_GSTD = table.Column<string>(unicode: false, maxLength: 8, nullable: true),
                    CUS_NOS = table.Column<string>(unicode: false, maxLength: 200, nullable: true),
                    CUS_NO = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    UsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkMan = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkManName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ChkMob = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    IsPrint = table.Column<bool>(nullable: true),
                    MaterialWarehouse = table.Column<string>(unicode: false, maxLength: 55, nullable: true),
                    TargetWarehouse = table.Column<string>(unicode: false, maxLength: 55, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_DEPT", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "DEVICE_SHIFT",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    SHIFT_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    SHIFT_NAME = table.Column<string>(unicode: false, maxLength: 100, nullable: false),
                    SEB_NO = table.Column<string>(unicode: false, maxLength: 100, nullable: false),
                    SEB_NAME = table.Column<string>(unicode: false, maxLength: 200, nullable: false),
                    TIME_LEN = table.Column<int>(nullable: true),
                    BEGIN_TIME = table.Column<string>(unicode: false, maxLength: 8, nullable: true),
                    BEGIN_TIME_TYPE = table.Column<int>(nullable: true),
                    END_TIME = table.Column<string>(unicode: false, maxLength: 8, nullable: true),
                    END_TIME_TYPE = table.Column<int>(nullable: true),
                    USR = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    USRNAME = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    SYSDATE = table.Column<DateTime>(type: "datetime", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_DEVICE_SHIFT", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "DIE_CHANGE_INFOS",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    SEB_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    MOD_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    STA_TIME = table.Column<DateTime>(type: "datetime", nullable: false),
                    END_TIME = table.Column<DateTime>(type: "datetime", nullable: false),
                    USR = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    USRNAME = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    SYSDATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    UPDDATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    UPDUSR = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UPDUSRNAME = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    PRD_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    COOL_MODE = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    JGQTY = table.Column<int>(nullable: true),
                    OEE_ID = table.Column<int>(nullable: true),
                    BLSTATUS = table.Column<byte>(nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_DIE_CHANGE_INFOS", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "DNC_ALARM_REC",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    SEB_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    ALARM_NO = table.Column<string>(unicode: false, maxLength: 200, nullable: false),
                    ALARM_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    SYSDATE = table.Column<DateTime>(type: "datetime", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_DNC_ALARM_REC", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "DNC_PROCESS_PARAS_REC",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    SEB_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    CREATETIME = table.Column<DateTime>(type: "datetime", nullable: true),
                    MACHINEMODE = table.Column<string>(unicode: false, maxLength: 6, nullable: true),
                    MACHINESTATUS = table.Column<string>(unicode: false, maxLength: 6, nullable: true),
                    POWERONTIME = table.Column<int>(nullable: true),
                    RUNNINGTIME = table.Column<int>(nullable: true),
                    CUTTINGTIME = table.Column<int>(nullable: true),
                    PROCESSEDCOUNT = table.Column<int>(nullable: true),
                    SPINDLELOAD = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    SPINDLESPEED = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    FEEDSPEED = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    SPINDLEOVERRIDE = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    FEEDOVERRIDE = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    ALARMNO = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    ALARMMESSAGE = table.Column<string>(unicode: false, maxLength: 200, nullable: true),
                    TOOLNUM = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    XLOAD = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    YLOAD = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    ZLOAD = table.Column<decimal>(type: "numeric(18, 0)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_DNC_PROCESS_PARAS_REC", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "DNC_TTL_T",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    SEB_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    QTY = table.Column<int>(nullable: true),
                    SYSDATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    QTY_ACC = table.Column<int>(nullable: true),
                    BAN_NO = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    QTY_BAN = table.Column<int>(nullable: true),
                    UPDDATE = table.Column<DateTime>(type: "datetime", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_DNC_TTL_T", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "EQP_Alert_Trace",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    AlertContent = table.Column<string>(unicode: false, maxLength: 500, nullable: true),
                    Barcode = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Dev_No = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    EndTime = table.Column<DateTime>(type: "datetime", nullable: true),
                    EXCEP_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Prod_No = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    StartTime = table.Column<DateTime>(type: "datetime", nullable: true),
                    Station_No = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: false),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    Usr = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    UsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    WO_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_EQP_Alert_Trace", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "EQP_DeviceWarning",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    DeviceCode = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    DeviceName = table.Column<string>(unicode: false, maxLength: 200, nullable: true),
                    WarningCode = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    WarningType = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    WarningInfo = table.Column<string>(unicode: false, maxLength: 500, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_EQP_DeviceWarning", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "EQP_Maintain_Plan",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    ActQTY_Cycle = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    BillDate = table.Column<DateTime>(type: "datetime", nullable: false),
                    BilType = table.Column<string>(unicode: false, maxLength: 50, nullable: true, defaultValueSql: "('')"),
                    BilTypeName = table.Column<string>(unicode: false, maxLength: 50, nullable: true, defaultValueSql: "('')"),
                    BusiNo = table.Column<string>(unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')"),
                    ChkDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ChkMan = table.Column<string>(unicode: false, maxLength: 50, nullable: true, defaultValueSql: "('')"),
                    ChkManName = table.Column<string>(unicode: false, maxLength: 50, nullable: true, defaultValueSql: "('')"),
                    ChkMob = table.Column<string>(unicode: false, maxLength: 100, nullable: true, defaultValueSql: "('')"),
                    ClsDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ClsUsr = table.Column<string>(unicode: false, maxLength: 50, nullable: true, defaultValueSql: "('')"),
                    ClsUsrName = table.Column<string>(unicode: false, maxLength: 50, nullable: true, defaultValueSql: "('')"),
                    CycelInfo = table.Column<byte[]>(type: "image", nullable: true),
                    DEP = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    IsAll_Release = table.Column<bool>(nullable: true),
                    IsClose = table.Column<bool>(nullable: true, defaultValueSql: "((0))"),
                    IsPrint = table.Column<bool>(nullable: true, defaultValueSql: "((0))"),
                    JH_Spec = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    JH_Status = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    Last_Release_Time = table.Column<DateTime>(type: "datetime", nullable: true),
                    Name = table.Column<string>(unicode: false, maxLength: 100, nullable: false),
                    NO = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    QTY_Cycle = table.Column<int>(nullable: true),
                    Rem = table.Column<string>(unicode: false, maxLength: 200, nullable: true),
                    SAL_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    SEB_CycleUnit = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    SEB_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    Standard = table.Column<decimal>(type: "numeric(18, 0)", nullable: true, defaultValueSql: "((0))"),
                    Station_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: false, defaultValueSql: "(getdate())"),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 50, nullable: true, defaultValueSql: "('')"),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 50, nullable: true, defaultValueSql: "('')"),
                    Usr = table.Column<string>(unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')"),
                    UsrName = table.Column<string>(unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_EQP_Maintain_Plan", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "EQP_MAINTAIN_SPEC",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    BillDate = table.Column<DateTime>(type: "datetime", nullable: false, defaultValueSql: "('')"),
                    BilType = table.Column<string>(unicode: false, maxLength: 20, nullable: true, defaultValueSql: "('')"),
                    BilTypeName = table.Column<string>(unicode: false, maxLength: 20, nullable: true, defaultValueSql: "('')"),
                    BusiNo = table.Column<string>(unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')"),
                    ChkDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ChkMan = table.Column<string>(unicode: false, maxLength: 50, nullable: true, defaultValueSql: "('')"),
                    ChkManName = table.Column<string>(unicode: false, maxLength: 50, nullable: true, defaultValueSql: "('')"),
                    ChkMob = table.Column<string>(unicode: false, maxLength: 100, nullable: true, defaultValueSql: "('')"),
                    ClsDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ClsUsr = table.Column<string>(unicode: false, maxLength: 50, nullable: true, defaultValueSql: "('')"),
                    ClsUsrName = table.Column<string>(unicode: false, maxLength: 50, nullable: true, defaultValueSql: "('')"),
                    DEP = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    Enabled = table.Column<bool>(nullable: false),
                    guide = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    IsClose = table.Column<bool>(nullable: true, defaultValueSql: "((0))"),
                    IsPrint = table.Column<bool>(nullable: true, defaultValueSql: "((0))"),
                    Name = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    NO = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    POST_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    QTY_Cycle = table.Column<int>(nullable: true),
                    Rem = table.Column<string>(unicode: false, maxLength: 4000, nullable: true, defaultValueSql: "('')"),
                    SEB_CycleUnit = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    SEB_Name = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    SEB_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    Standard = table.Column<decimal>(type: "numeric(18, 0)", nullable: true, defaultValueSql: "((0))"),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: false, defaultValueSql: "(getdate())"),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true, defaultValueSql: "(getdate())"),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 50, nullable: true, defaultValueSql: "('')"),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 50, nullable: true, defaultValueSql: "('')"),
                    Usr = table.Column<string>(unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')"),
                    UsrName = table.Column<string>(unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')"),
                    Version = table.Column<string>(unicode: false, maxLength: 50, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_EQP_MAINTAIN_SPEC", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "EQP_MT_Order",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    BAN_NO = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    BIL_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    BillDate = table.Column<DateTime>(type: "datetime", nullable: false, defaultValueSql: "(getdate())"),
                    BilType = table.Column<string>(unicode: false, maxLength: 20, nullable: true, defaultValueSql: "('')"),
                    BilTypeName = table.Column<string>(unicode: false, maxLength: 20, nullable: true, defaultValueSql: "('')"),
                    BusiNo = table.Column<string>(unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')"),
                    ChkDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ChkMan = table.Column<string>(unicode: false, maxLength: 50, nullable: true, defaultValueSql: "('')"),
                    ChkManName = table.Column<string>(unicode: false, maxLength: 50, nullable: true, defaultValueSql: "('')"),
                    ChkMob = table.Column<string>(unicode: false, maxLength: 100, nullable: true, defaultValueSql: "('')"),
                    ClsDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ClsUsr = table.Column<string>(unicode: false, maxLength: 50, nullable: true, defaultValueSql: "('')"),
                    ClsUsrName = table.Column<string>(unicode: false, maxLength: 50, nullable: true, defaultValueSql: "('')"),
                    END_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    GD_Source = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    IsClose = table.Column<bool>(nullable: true, defaultValueSql: "((0))"),
                    IsPrint = table.Column<int>(nullable: true, defaultValueSql: "((0))"),
                    JH_DD = table.Column<DateTime>(type: "datetime", nullable: false),
                    Name = table.Column<string>(maxLength: 120, nullable: true),
                    NO = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    Rem = table.Column<string>(unicode: false, maxLength: 1000, nullable: true),
                    SAL_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    SEB_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    Spec_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    Standard = table.Column<decimal>(type: "numeric(18, 0)", nullable: true, defaultValueSql: "((0))"),
                    Station_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    Status = table.Column<string>(unicode: false, maxLength: 1, nullable: false),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: false, defaultValueSql: "(getdate())"),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true, defaultValueSql: "(getdate())"),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 50, nullable: true, defaultValueSql: "('')"),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 50, nullable: true, defaultValueSql: "('')"),
                    Usr = table.Column<string>(unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')"),
                    UsrName = table.Column<string>(unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_EQP_MT_Order", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "EQP_MT_RunTime",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    MtTimes = table.Column<int>(nullable: true),
                    QTY_Cycle = table.Column<int>(nullable: false),
                    SEB_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    Spec_No = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    Spec_Type = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    Sta_No = table.Column<string>(unicode: false, maxLength: 10, nullable: false),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: false, defaultValueSql: "(getdate())"),
                    TimeFromLatestMT = table.Column<decimal>(type: "numeric(18, 0)", nullable: false),
                    TotalRunTime = table.Column<decimal>(type: "numeric(18, 0)", nullable: false),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 50, nullable: true, defaultValueSql: "('')"),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 50, nullable: true, defaultValueSql: "('')"),
                    Usr = table.Column<string>(unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')"),
                    UsrName = table.Column<string>(unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_EQP_MT_RunTime", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "EQP_MTOrder_Info",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    ActualAddAmount = table.Column<string>(unicode: false, maxLength: 100, nullable: true, defaultValueSql: "((0))"),
                    Content = table.Column<string>(unicode: false, maxLength: 500, nullable: true),
                    ExcStatus = table.Column<string>(unicode: false, maxLength: 1, nullable: false),
                    ITM = table.Column<int>(nullable: false),
                    Method = table.Column<string>(unicode: false, maxLength: 600, nullable: true),
                    MID = table.Column<int>(nullable: false),
                    OilsName = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Part_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    Recorder = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    Rem = table.Column<string>(maxLength: 2000, nullable: true),
                    Result = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    SpareParts_NO = table.Column<string>(unicode: false, maxLength: 30, nullable: true),
                    Spec_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    SpecImage = table.Column<byte[]>(type: "image", nullable: true),
                    Standard = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    StandardAddAmount = table.Column<string>(unicode: false, maxLength: 100, nullable: true, defaultValueSql: "((0))"),
                    Unit = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    Src_ItemID = table.Column<int>(nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_EQP_MTOrder_Info", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "EQP_PartChange_Record",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    ITM = table.Column<int>(nullable: true),
                    MID = table.Column<int>(nullable: false),
                    Part_Name = table.Column<string>(unicode: false, maxLength: 100, nullable: false),
                    Part_No = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    QTY = table.Column<decimal>(type: "numeric(18, 0)", nullable: false),
                    Rem = table.Column<string>(unicode: false, maxLength: 1000, nullable: true),
                    SAL_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    SYSDATE = table.Column<DateTime>(type: "datetime", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_EQP_PartChange_Record", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "EQP_PartInfo",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    ChkDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ChkMan = table.Column<string>(unicode: false, maxLength: 50, nullable: true, defaultValueSql: "('')"),
                    ChkManName = table.Column<string>(unicode: false, maxLength: 50, nullable: true, defaultValueSql: "('')"),
                    ChkMob = table.Column<string>(unicode: false, maxLength: 100, nullable: true, defaultValueSql: "('')"),
                    Enabled = table.Column<bool>(nullable: false),
                    IsKey = table.Column<bool>(nullable: false),
                    IsPrint = table.Column<bool>(nullable: true, defaultValueSql: "((0))"),
                    Name = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    NO = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    Sort = table.Column<int>(nullable: false),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: false, defaultValueSql: "(getdate())"),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 50, nullable: true, defaultValueSql: "('')"),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 50, nullable: true, defaultValueSql: "('')"),
                    Usr = table.Column<string>(unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')"),
                    UsrName = table.Column<string>(unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_EQP_PartInfo", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "EQP_RunStatus",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    Dev_No = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    StartTime = table.Column<DateTime>(type: "datetime", nullable: false),
                    Status_No = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    Status_Prop = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: false),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Usr = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    UsrName = table.Column<string>(unicode: false, maxLength: 50, nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_EQP_RunStatus", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "EQP_RunStatus_Def",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    Enabled = table.Column<bool>(nullable: false),
                    Name = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    NO = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    Rem = table.Column<string>(unicode: false, maxLength: 2000, nullable: true),
                    RunStatus = table.Column<string>(unicode: false, maxLength: 2, nullable: false),
                    Sort = table.Column<int>(nullable: false),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: false, defaultValueSql: "(getdate())"),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 50, nullable: true, defaultValueSql: "('')"),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 50, nullable: true, defaultValueSql: "('')"),
                    Usr = table.Column<string>(unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')"),
                    UsrName = table.Column<string>(unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_EQP_RunStatus_Def", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "EQPT_INFO_EA211_3",
                columns: table => new
                {
                    EQPT_NO = table.Column<string>(unicode: false, maxLength: 80, nullable: true),
                    PRM_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    PRM_VALUE = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    SYS_DATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    TABLE_NAME = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    DATABASE_NAME = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    SEB_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ZC_NO = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    PRM_NAME = table.Column<string>(unicode: false, maxLength: 50, nullable: true)
                },
                constraints: table =>
                {
                });

            migrationBuilder.CreateTable(
                name: "EVN_NO",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    EVN_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    EVN_NAME = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Usr = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    UsrName = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: false),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ChkMan = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    ChkManName = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    ChkDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ChkMob = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    IsPrint = table.Column<bool>(nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_EVN_NO", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "EVN_PARM_INFO",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    WORKSHOP = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    NAME = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    EVN_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    EVN_NAME = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    NUM_MAX = table.Column<decimal>(type: "decimal(18, 4)", nullable: true),
                    NUM_MIN = table.Column<decimal>(type: "decimal(18, 4)", nullable: true),
                    UNIT = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    Usr = table.Column<string>(unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')"),
                    UsrName = table.Column<string>(unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')"),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: false, defaultValueSql: "(getdate())"),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 50, nullable: true, defaultValueSql: "('')"),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 50, nullable: true, defaultValueSql: "('')"),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ChkMan = table.Column<string>(unicode: false, maxLength: 50, nullable: true, defaultValueSql: "('')"),
                    ChkManName = table.Column<string>(unicode: false, maxLength: 50, nullable: true, defaultValueSql: "('')"),
                    ChkDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ChkMob = table.Column<string>(unicode: false, maxLength: 100, nullable: true, defaultValueSql: "('')"),
                    IsPrint = table.Column<bool>(nullable: true, defaultValueSql: "((0))")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_EVN_PARM_INFO", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "EVN_PARM_RECORD",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    WORKSHOP = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    NAME = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    EVN_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    EVN_NAME = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    BGN_DATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    END_DATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    JH_DATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    SAL_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    SAL_DEP = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    QTY_CYCLE = table.Column<int>(nullable: true),
                    CYCLE_UNIT = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    EXEC_DATE = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    EXEC_HOUR = table.Column<int>(nullable: true),
                    EXEC_MINUTE = table.Column<int>(nullable: true),
                    REM = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    BusiNo = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    BilType = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    BilTypeName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    Usr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkMan = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkManName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    IsClose = table.Column<bool>(nullable: true),
                    ClsDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ClsUsr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ClsUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkMob = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    IsPrint = table.Column<bool>(nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_EVN_PARM_RECORD", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "EVN_PARM_RECORD_VALUE",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    MID = table.Column<int>(nullable: true),
                    EVN_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    EVN_NAME = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    NUM_MAX = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    NUM_MIN = table.Column<decimal>(type: "decimal(18, 4)", nullable: true),
                    UNIT = table.Column<string>(unicode: false, maxLength: 20, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_EVN_PARM_RECORD_VALUE", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "EX_IMP_TEMP",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    TP_Type = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    TP_Name = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    BusiNo = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    SheetName = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    SheetIndex = table.Column<int>(nullable: true),
                    StartRow = table.Column<int>(nullable: false),
                    RowsCount = table.Column<int>(nullable: true),
                    TableName = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    ColMap = table.Column<Guid>(nullable: false),
                    MapData = table.Column<Guid>(nullable: false),
                    Usr = table.Column<string>(unicode: false, maxLength: 50, nullable: true, defaultValueSql: "('')"),
                    UsrName = table.Column<string>(unicode: false, maxLength: 50, nullable: true, defaultValueSql: "('')"),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: false, defaultValueSql: "(getdate())"),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 50, nullable: true, defaultValueSql: "('')"),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 50, nullable: true, defaultValueSql: "('')"),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_EX_IMP_TEMP", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "FAULT_CAUSE",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    NO = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    NAME = table.Column<string>(unicode: false, maxLength: 100, nullable: false),
                    CALLTYPENO = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    ZC_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    SORT = table.Column<int>(nullable: true),
                    BUSINO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    SYSDATE = table.Column<DateTime>(type: "datetime", nullable: false),
                    USR = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    UPDDATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    UPDUSR = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    USRNAME = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    UPDUSRNAME = table.Column<string>(unicode: false, maxLength: 50, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_FAULT_CAUSE", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "FIELDSTABLE",
                columns: table => new
                {
                    NAME = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    ROWN = table.Column<int>(nullable: true),
                    DATATYPE = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    VVALUE = table.Column<string>(unicode: false, maxLength: 100, nullable: true)
                },
                constraints: table =>
                {
                });

            migrationBuilder.CreateTable(
                name: "FIFOINCLUDELIST",
                columns: table => new
                {
                    PRD_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    PRD_NAME = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    PRD_SPC = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    CheckCusNO = table.Column<bool>(nullable: true)
                },
                constraints: table =>
                {
                });

            migrationBuilder.CreateTable(
                name: "FILEDSTABLE",
                columns: table => new
                {
                    NAME = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    ROWN = table.Column<int>(nullable: true),
                    DATATYPE = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    VALUE = table.Column<string>(unicode: false, maxLength: 50, nullable: true)
                },
                constraints: table =>
                {
                });

            migrationBuilder.CreateTable(
                name: "Fixture_RLOSP",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    ChangeDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ChangeQty = table.Column<int>(nullable: true),
                    ChangeUser = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    FixtureCode = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    IsDelete = table.Column<bool>(nullable: true),
                    ReplacementCode = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: false),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    Usr = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    UsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_Fixture_RLOSP", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "FLOW_CHECK",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    NO = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    Name = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    Enabled = table.Column<bool>(nullable: false),
                    Sort = table.Column<int>(nullable: false),
                    Attachment = table.Column<string>(unicode: false, maxLength: 100, nullable: false),
                    Rem = table.Column<string>(unicode: false, maxLength: 500, nullable: false),
                    SEB_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    CheckType = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    Usr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkMan = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkManName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ChkMOB = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    IsPrint = table.Column<bool>(nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_FLOW_CHECK", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "FR_XT",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    NO = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    DESCP = table.Column<string>(unicode: false, maxLength: 200, nullable: false),
                    XT_TIME = table.Column<DateTime>(type: "datetime", nullable: false),
                    IPADD = table.Column<string>(unicode: false, maxLength: 20, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_FR_XT", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "Furnace_Binding",
                columns: table => new
                {
                    id = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    Bat_No = table.Column<string>(unicode: false, maxLength: 55, nullable: false),
                    GPBat_NO = table.Column<string>(unicode: false, maxLength: 55, nullable: false),
                    Seb_NO = table.Column<string>(unicode: false, maxLength: 55, nullable: false),
                    ZC_NO = table.Column<string>(unicode: false, maxLength: 55, nullable: false),
                    BAN_NO = table.Column<string>(unicode: false, maxLength: 55, nullable: false),
                    USR = table.Column<string>(unicode: false, maxLength: 55, nullable: false),
                    SYSDATE = table.Column<DateTime>(type: "datetime", nullable: false),
                    UPDUSR = table.Column<string>(unicode: false, maxLength: 55, nullable: true),
                    UPDDATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    InspectionResult = table.Column<string>(unicode: false, maxLength: 55, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_Furnace_Binding", x => x.id);
                });

            migrationBuilder.CreateTable(
                name: "FX_KND",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    KND_NO = table.Column<string>(unicode: false, maxLength: 10, nullable: false),
                    NAME = table.Column<string>(unicode: false, maxLength: 60, nullable: true),
                    KND_UP = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    STOP_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    Rem = table.Column<string>(unicode: false, maxLength: 200, nullable: true),
                    ACC_NO_FX = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ACC_NO_SHARE = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ACC_NO_FY = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    SHARE_MTH = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    USE_YEARS = table.Column<short>(nullable: true),
                    USE_MONTH = table.Column<short>(nullable: true),
                    AMTN_REST = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    DD_QY = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    Usr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkMan = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkManName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ChkMob = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    IsPrint = table.Column<bool>(nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_FX_KND", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "GX_Other_Main",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    BillDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    BilType = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    BilTypeName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    BusiNo = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ChkMan = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkManName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkMob = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    ClsDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ClsUsr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ClsUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    GX_Other_Name = table.Column<string>(unicode: false, maxLength: 60, nullable: true),
                    IsClose = table.Column<bool>(nullable: true),
                    IsPrint = table.Column<bool>(nullable: true),
                    No = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Rem = table.Column<string>(unicode: false, maxLength: 500, nullable: true),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: false),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    Usr = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    UsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_GX_Other_Main", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "HFPL_REC",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    HF_DD = table.Column<DateTime>(type: "datetime", nullable: false),
                    BAT_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    PRD_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    FM_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    FM_Result = table.Column<string>(unicode: false, maxLength: 10, nullable: false),
                    No = table.Column<string>(unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')"),
                    BillDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    Rem = table.Column<string>(unicode: false, maxLength: 1000, nullable: true, defaultValueSql: "('')"),
                    BusiNo = table.Column<string>(unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')"),
                    BilType = table.Column<string>(unicode: false, maxLength: 20, nullable: true, defaultValueSql: "('')"),
                    BilTypeName = table.Column<string>(unicode: false, maxLength: 20, nullable: true, defaultValueSql: "('')"),
                    Usr = table.Column<string>(unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')"),
                    UsrName = table.Column<string>(unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')"),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: false, defaultValueSql: "(getdate())"),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 50, nullable: true, defaultValueSql: "('')"),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 50, nullable: true, defaultValueSql: "('')"),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ChkMan = table.Column<string>(unicode: false, maxLength: 50, nullable: true, defaultValueSql: "('')"),
                    ChkManName = table.Column<string>(unicode: false, maxLength: 50, nullable: true, defaultValueSql: "('')"),
                    ChkDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ChkMob = table.Column<string>(unicode: false, maxLength: 100, nullable: true, defaultValueSql: "('')"),
                    IsClose = table.Column<bool>(nullable: true, defaultValueSql: "((0))"),
                    ClsDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ClsUsr = table.Column<string>(unicode: false, maxLength: 50, nullable: true, defaultValueSql: "('')"),
                    ClsUsrName = table.Column<string>(unicode: false, maxLength: 50, nullable: true, defaultValueSql: "('')"),
                    IsPrint = table.Column<bool>(nullable: true, defaultValueSql: "((0))")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_HFPL_REC", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "HFPL_RECS",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    MID = table.Column<int>(nullable: false),
                    ITM = table.Column<int>(nullable: false),
                    PRD_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    BAT_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    QTY = table.Column<decimal>(type: "decimal(18, 4)", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_HFPL_RECS", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "INDX",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    IDX_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    NAME = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    IDX_UP = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    STOP_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    REM = table.Column<string>(unicode: false, maxLength: 60, nullable: true),
                    UP_STD = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    UP_DD = table.Column<byte[]>(nullable: true),
                    WEB_TITLE = table.Column<string>(unicode: false, maxLength: 200, nullable: true),
                    WEB_DESCRIPTION = table.Column<string>(unicode: false, maxLength: 200, nullable: true),
                    WEB_KEYWORDS = table.Column<string>(unicode: false, maxLength: 200, nullable: true),
                    DAY_SUPPLY = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    CHK_YH = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    LOS_RTO = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CHK_POS = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    IDX_TYPE = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    Usr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkMan = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkManName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ChkMob = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    IsPrint = table.Column<bool>(nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_INDX", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "INDX1",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    IDX1 = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    NAME = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    ACC_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    SPC_IDX = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    RTO_TAX = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    UP_DD = table.Column<byte[]>(nullable: true),
                    CHK_COMP = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    CHK_SUM = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    SPC_ID = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    PRD_NO_VIR = table.Column<string>(unicode: false, maxLength: 30, nullable: true),
                    FL_REM = table.Column<string>(type: "text", nullable: true),
                    TAX_ID = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    TAX_KND = table.Column<string>(unicode: false, maxLength: 1, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_INDX1", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "INSPECT_ITEMS_LIST",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    PRD_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    WS_SPC = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    WS_FE = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    WS_INSPECT_HZ = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    WS_COLLECT_METHOD = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    QC_SPC = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    QC_FE = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    QC_INSPECT_HZ = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    QC_COLLECT_METHOD = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    ZC_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    SEB_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    MOD_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    VORDER = table.Column<int>(nullable: true),
                    ITEM_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    ITEM_NAME = table.Column<string>(maxLength: 400, nullable: true),
                    MIN_DESIGN = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    MAX_DESIGN = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    MIN_TECH = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    MAX_TECH = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    STANDARD_TECH = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    INSPECT_TYPE = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    CREATE_TIME = table.Column<DateTime>(type: "datetime", nullable: false),
                    USR = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    USRNAME = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    SH_DATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    CHKMAN = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    STATUS = table.Column<string>(unicode: false, maxLength: 10, nullable: false),
                    UPDDATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    SH_REM = table.Column<string>(unicode: false, maxLength: 2000, nullable: true),
                    MONTH_CONDITION = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    BUSINO = table.Column<string>(unicode: false, maxLength: 50, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_INSPECT_ITEMS_LIST", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "JHTP_TEMP",
                columns: table => new
                {
                    PID = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    ID = table.Column<string>(unicode: false, maxLength: 100, nullable: true)
                },
                constraints: table =>
                {
                });

            migrationBuilder.CreateTable(
                name: "JHTP2_TEMP",
                columns: table => new
                {
                    IDX = table.Column<int>(nullable: true),
                    PID = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    ID = table.Column<string>(unicode: false, maxLength: 100, nullable: true)
                },
                constraints: table =>
                {
                });

            migrationBuilder.CreateTable(
                name: "LBL_SUPQC",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    NO = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    BUSINO = table.Column<string>(unicode: false, maxLength: 10, nullable: false),
                    PRD_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    MT_BARCODE = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    SUP_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    ATTACHMENT = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    SYSDATE = table.Column<DateTime>(type: "datetime", nullable: false),
                    DEL_NO = table.Column<string>(unicode: false, maxLength: 100, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_LBL_SUPQC", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "LBL_SUPQC_BARS",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    MID = table.Column<int>(nullable: false),
                    BARCODE = table.Column<string>(unicode: false, maxLength: 100, nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_LBL_SUPQC_BARS", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "LE_LogisticsTasks",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    No = table.Column<string>(maxLength: 50, nullable: false),
                    Source_No = table.Column<string>(maxLength: 50, nullable: true),
                    StartingPoint = table.Column<string>(maxLength: 50, nullable: false),
                    EndPoint = table.Column<string>(maxLength: 50, nullable: false),
                    Status = table.Column<string>(maxLength: 50, nullable: false),
                    CreateDate = table.Column<DateTime>(type: "datetime", nullable: false, defaultValueSql: "(getdate())"),
                    CreateUser = table.Column<string>(maxLength: 50, nullable: true),
                    DistributionDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    CarrierUSER = table.Column<string>(maxLength: 50, nullable: true),
                    FinishDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    FinishUSER = table.Column<string>(maxLength: 50, nullable: true),
                    ShippingCategory = table.Column<string>(maxLength: 50, nullable: true),
                    VehicleRequirements = table.Column<string>(maxLength: 50, nullable: true),
                    DeadlineDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    WO_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    ProductionOrder = table.Column<int>(nullable: true),
                    Remark = table.Column<string>(unicode: false, maxLength: 200, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_LE_LogisticsTasks", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "LE_LogisticsTasksHistory",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    No = table.Column<string>(maxLength: 50, nullable: false),
                    Status = table.Column<string>(maxLength: 50, nullable: false),
                    ItemID = table.Column<int>(nullable: true),
                    PlanQuantity = table.Column<decimal>(type: "decimal(18, 2)", nullable: true, defaultValueSql: "((0))"),
                    FinishedQuantity = table.Column<decimal>(type: "decimal(18, 2)", nullable: true, defaultValueSql: "((0))"),
                    Quantity = table.Column<decimal>(type: "decimal(18, 2)", nullable: true, defaultValueSql: "((0))"),
                    ItemStatus = table.Column<string>(maxLength: 50, nullable: true),
                    OperateType = table.Column<string>(maxLength: 50, nullable: true),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: false, defaultValueSql: "(getdate())"),
                    OperateUser = table.Column<string>(maxLength: 50, nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_LE_LogisticsTasksHistory", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "LE_LogisticsTasksItem",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    MID = table.Column<int>(nullable: false),
                    Prod_No = table.Column<string>(maxLength: 50, nullable: true),
                    Prod_Type = table.Column<string>(maxLength: 50, nullable: true),
                    Unit = table.Column<string>(maxLength: 50, nullable: true),
                    PlanQuantity = table.Column<decimal>(type: "decimal(18, 2)", nullable: false),
                    Quantity = table.Column<decimal>(type: "decimal(18, 2)", nullable: true, defaultValueSql: "((0))"),
                    Status = table.Column<string>(maxLength: 50, nullable: true, defaultValueSql: "((0))"),
                    CreateDate = table.Column<DateTime>(type: "datetime", nullable: true, defaultValueSql: "(getdate())"),
                    UpdateDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    Batch_No = table.Column<string>(maxLength: 50, nullable: true),
                    Rmark = table.Column<string>(maxLength: 100, nullable: true),
                    Source_ID = table.Column<int>(nullable: true),
                    Source_No = table.Column<string>(maxLength: 50, nullable: true),
                    Location = table.Column<string>(maxLength: 50, nullable: true),
                    SourceLocation = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    SourceLocationName = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    DeadlineDate = table.Column<DateTime>(type: "datetime", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_LE_LogisticsTasksItem", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "LE_Test_Main",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    BilType = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    BilTypeName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    BusiNo = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ChkMan = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkManName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkMob = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    ClsDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ClsUsr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ClsUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    IsClose = table.Column<bool>(nullable: true),
                    IsPrint = table.Column<bool>(nullable: true),
                    LE_Date = table.Column<DateTime>(type: "datetime", nullable: true),
                    LE_NO = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    Rem = table.Column<string>(unicode: false, maxLength: 500, nullable: true),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: false),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    Usr = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    UsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_LE_Test_Main", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "LSB_YZJ_MAP",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    LSB_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    YZJ_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    SYSDATE = table.Column<DateTime>(type: "datetime", nullable: false),
                    OUTTIME = table.Column<DateTime>(type: "datetime", nullable: false),
                    TZ_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    RL_ID = table.Column<int>(nullable: true),
                    RL_TZ = table.Column<string>(maxLength: 50, nullable: true),
                    ZY_CAPACITY = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    SEB_NO = table.Column<string>(maxLength: 50, nullable: true),
                    BAN_NO = table.Column<string>(maxLength: 50, nullable: true),
                    ZC_NO = table.Column<string>(maxLength: 50, nullable: true),
                    UNIT = table.Column<string>(maxLength: 20, nullable: true),
                    TEMPERATURE = table.Column<decimal>(type: "numeric(18, 2)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_LSB_YZJ_MAP", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "Major",
                columns: table => new
                {
                    MajorID = table.Column<int>(nullable: false),
                    Name = table.Column<string>(maxLength: 50, nullable: true),
                    Remark = table.Column<string>(nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_Major", x => x.MajorID);
                });

            migrationBuilder.CreateTable(
                name: "MD_SP_INFO",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    Spec_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    ITM = table.Column<int>(nullable: false),
                    Part_NO = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    ChkContent = table.Column<string>(unicode: false, maxLength: 500, nullable: true),
                    Standard = table.Column<string>(unicode: false, maxLength: 500, nullable: true),
                    Method = table.Column<string>(unicode: false, maxLength: 500, nullable: true),
                    Opportunity = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    OPType = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Result = table.Column<string>(unicode: false, maxLength: 100, nullable: false),
                    Rem = table.Column<string>(unicode: false, maxLength: 500, nullable: true),
                    Usr = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    UsrName = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: false),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 50, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_MD_SP_INFO", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "MDM_AQLSample",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    EndQty = table.Column<int>(nullable: true),
                    InspectionLevel = table.Column<int>(nullable: false),
                    IsDelete = table.Column<bool>(nullable: true),
                    SampleQty = table.Column<int>(nullable: true),
                    StartQty = table.Column<int>(nullable: true),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: false),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    Usr = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    UsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_MDM_AQLSample", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "MDM_Attribute",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    AttributeCode = table.Column<string>(maxLength: 50, nullable: true),
                    AttributeDescribtion = table.Column<string>(maxLength: 200, nullable: true),
                    AttributeType = table.Column<string>(maxLength: 50, nullable: false),
                    AttributeOwnershipHierarchy = table.Column<string>(maxLength: 50, nullable: false),
                    CreateUser = table.Column<string>(maxLength: 50, nullable: true),
                    CreateTime = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdateUser = table.Column<string>(maxLength: 50, nullable: true),
                    UpdateTime = table.Column<DateTime>(type: "datetime", nullable: true),
                    ISDELETE = table.Column<bool>(nullable: true),
                    AttributeOrder = table.Column<int>(nullable: true),
                    BusinessCode = table.Column<string>(maxLength: 50, nullable: true),
                    ConfigurationField = table.Column<string>(maxLength: 50, nullable: true),
                    DisplayField = table.Column<string>(maxLength: 50, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_MDM_Attribute", x => x.ID);
                },
                comment: "属性配置");

            migrationBuilder.CreateTable(
                name: "MDM_AttributeValue",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    ObjectCode = table.Column<string>(maxLength: 50, nullable: false),
                    AttributeCode = table.Column<string>(maxLength: 50, nullable: false),
                    AttributeValue = table.Column<string>(maxLength: 50, nullable: false),
                    AttributeType = table.Column<string>(maxLength: 50, nullable: true),
                    AttributeDescribtion = table.Column<string>(maxLength: 200, nullable: true),
                    CreateUser = table.Column<string>(maxLength: 50, nullable: true),
                    CreateTime = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdateUser = table.Column<string>(maxLength: 50, nullable: true),
                    UpdateTime = table.Column<DateTime>(type: "datetime", nullable: true),
                    ISDELETE = table.Column<bool>(nullable: true),
                    AttributeOrder = table.Column<int>(nullable: true),
                    BusinessCode = table.Column<string>(maxLength: 50, nullable: true),
                    ConfigurationField = table.Column<string>(maxLength: 50, nullable: true),
                    DisplayField = table.Column<string>(maxLength: 50, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_MDM_AttributeValue", x => x.ID);
                },
                comment: "属性");

            migrationBuilder.CreateTable(
                name: "MDM_BOM",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    PartNo = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    ProductionPurpose = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    VersionNo = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    EffectiveDate = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ExpirationDate = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    IsEffective = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    IsDelete = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UpdateTime = table.Column<DateTime>(type: "datetime", nullable: true, defaultValueSql: "(getdate())")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_MDM_BOM", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "MDM_BOMDetail",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    Seq = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    MaterialNo = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Quantity = table.Column<decimal>(type: "numeric(18, 2)", nullable: true),
                    ParentBaseQty = table.Column<decimal>(type: "numeric(18, 2)", nullable: true),
                    MeasuringUnit = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    MeasuringUnitName = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    FeedingMode = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    StorageLocation = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    StorageLocationCode = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    VirtualId = table.Column<string>(unicode: false, maxLength: 32, nullable: true),
                    Remark = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    IsEffective = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    EffectiveDate = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ExpirationDate = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    MID = table.Column<int>(nullable: false),
                    IsDelete = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UpdateTime = table.Column<DateTime>(type: "datetime", nullable: true, defaultValueSql: "(getdate())")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_MDM_BOMDetail", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "MDM_Customer",
                columns: table => new
                {
                    id = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    Code = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    Name = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    ShortName = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    IsEffective = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    EffectiveDate = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ExpirationDate = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    IsDelete = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UpdateTime = table.Column<DateTime>(type: "datetime", nullable: true, defaultValueSql: "(getdate())")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_MDM_Customer", x => x.id);
                });

            migrationBuilder.CreateTable(
                name: "MDM_Fixture_FaultBOM",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    Dept = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    FixtureCode = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    IsDelete = table.Column<bool>(nullable: true),
                    Name = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    ParentCode = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    PartCode = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: false),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    Usr = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    UsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_MDM_Fixture_FaultBOM", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "MDM_Fixture_FaultCause",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    IsDelete = table.Column<bool>(nullable: true),
                    Name = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    SerialNumber = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: false),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    Usr = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    UsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_MDM_Fixture_FaultCause", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "MDM_Fixture_FaultPhenomenon",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    IsDelete = table.Column<bool>(nullable: true),
                    Name = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    SerialNumber = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: false),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    Usr = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    UsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_MDM_Fixture_FaultPhenomenon", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "MDM_FormAttribute",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    Attribution = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    Name = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Value = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    Sort = table.Column<int>(nullable: false),
                    Rem = table.Column<string>(unicode: false, maxLength: 500, nullable: true),
                    BusiNo = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    BilType = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    BilTypeName = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Usr = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    UsrName = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: false),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    ChkMan = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    ChkManName = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    ChkDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    IsClose = table.Column<bool>(nullable: true),
                    ClsDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ClsUsr = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    ClsUsrName = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    ChkMob = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    IsPrint = table.Column<bool>(nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_MDM_FormAttribute", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "MDM_Layout",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    NO = table.Column<string>(maxLength: 50, nullable: false),
                    Name = table.Column<string>(maxLength: 50, nullable: false),
                    TYPE = table.Column<string>(maxLength: 50, nullable: false),
                    Up = table.Column<string>(maxLength: 50, nullable: true),
                    EffectiveDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ExpiryDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    Usr = table.Column<string>(maxLength: 50, nullable: true),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdUsr = table.Column<string>(maxLength: 50, nullable: true),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ISDELETE = table.Column<bool>(nullable: true),
                    MaterialWarehouse = table.Column<string>(maxLength: 55, nullable: true),
                    TargetWarehouse = table.Column<string>(maxLength: 55, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_MDM_Layout", x => x.ID);
                },
                comment: "工厂布局");

            migrationBuilder.CreateTable(
                name: "MDM_Material",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    Code = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    Type = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    NAME = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    Spec = table.Column<string>(unicode: false, maxLength: 500, nullable: true),
                    FigureNo = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    MeasuringUnit = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    WeightUnit = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Describe = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    WareHouseCode = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    MaxLimitQty = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    MinLimitQty = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    Multiple = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    IsBOM = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    ProductionDepartment = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    IsEffective = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    EffectiveDate = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ExpirationDate = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    IsDelete = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UpdateTime = table.Column<DateTime>(type: "datetime", nullable: true, defaultValueSql: "(getdate())"),
                    WareHouseName = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    ProductionDepartmentName = table.Column<string>(unicode: false, maxLength: 100, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_MDM_Material", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "MDM_ParameterType",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    ParameterCode = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    ParameterName = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    Comment = table.Column<string>(unicode: false, maxLength: 500, nullable: true),
                    Usr = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    UsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: false),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    IsDelete = table.Column<bool>(nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_MDM_ParameterType", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "MDM_PQIP",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    Frequency = table.Column<int>(nullable: true),
                    FrequencyType = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    InspectionInstructor = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    InspectionMode = table.Column<int>(nullable: true),
                    InspectionType = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    InspectUnit = table.Column<int>(nullable: true),
                    IsPrint = table.Column<bool>(nullable: true),
                    MaterialType = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    ProcessNo = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    ProductionNo = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    SolutionFeature = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    SolutionName = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    SolutionNo = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    SolutionType = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    SuppCode = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: false),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    Usr = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    UsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    AQL = table.Column<decimal>(type: "numeric(18, 2)", nullable: true),
                    Comment = table.Column<string>(maxLength: 200, nullable: true),
                    EffectiveDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ExpiryDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    RecordQty = table.Column<int>(nullable: true),
                    SampleQty = table.Column<int>(nullable: true),
                    SampleRule = table.Column<int>(nullable: true),
                    InspectionSchemeID = table.Column<int>(nullable: true),
                    Version = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    EFI = table.Column<bool>(nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_MDM_PQIP", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "MDM_ProcessProduct_Map",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    Proc_No = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Prod_No = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: false),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    Usr = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    UsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    Ver_No = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    IsConverted = table.Column<bool>(nullable: true),
                    BOMNO = table.Column<string>(unicode: false, maxLength: 50, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_MDM_ProcessProduct_Map", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "MDM_ProdCapacity",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    Line_No = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Prod_Name = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    Prod_No = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Qty = table.Column<int>(nullable: true),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: false),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    Usr = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    UsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_MDM_ProdCapacity", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "MDM_SpotCheckSchedule",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    ItemNo = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ItemName = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    MaterialType = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    StartQty = table.Column<int>(nullable: true),
                    TerminationQty = table.Column<int>(nullable: true),
                    StricterQty = table.Column<int>(nullable: true),
                    NormalQty = table.Column<int>(nullable: true),
                    BroadenQty = table.Column<int>(nullable: true),
                    Usr = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    UsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: false),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 50, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_MDM_SpotCheckSchedule", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "MDM_Supplier",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    SupplierNO = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    NAME = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    ShortName = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    IsEffective = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    EffectiveDate = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ExpirationDate = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    IsDelete = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UpdateTime = table.Column<DateTime>(type: "datetime", nullable: true, defaultValueSql: "(getdate())")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_MDM_Supplier", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "MDM_WareHouse",
                columns: table => new
                {
                    id = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    No = table.Column<string>(unicode: false, maxLength: 55, nullable: false),
                    Name = table.Column<string>(unicode: false, maxLength: 55, nullable: false),
                    Address = table.Column<string>(unicode: false, maxLength: 55, nullable: true),
                    IsEffective = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    EffectiveDate = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ExpirationDate = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    IssueMES = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    IsDelete = table.Column<string>(fixedLength: true, maxLength: 10, nullable: true),
                    UpdateTime = table.Column<DateTime>(type: "datetime", nullable: true, defaultValueSql: "(getdate())")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_MDM_WareHouse", x => x.id);
                });

            migrationBuilder.CreateTable(
                name: "MDM_WorkCenter",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    NO = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    NAME = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    Factory_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    Usr = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    UsrName = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: false),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    PullMaterialWH1 = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    PullMaterialWH2 = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    PullMaterialWH3 = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    ExceedRatio = table.Column<decimal>(type: "decimal(16, 2)", nullable: true),
                    MinMemberNum = table.Column<int>(nullable: true, defaultValueSql: "((0))"),
                    ScheduleValue = table.Column<decimal>(type: "decimal(16, 2)", nullable: true),
                    ExceedQty = table.Column<decimal>(type: "decimal(16, 2)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_MDM_WorkCenter", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "MDM_WorkCenter_Map",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    Center_No = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    Center_Name = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    Map_Type = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    Type_No = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    Type_Name = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    Factory_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    Usr = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    UsrName = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: false),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdUsr = table.Column<string>(fixedLength: true, maxLength: 10, nullable: true),
                    UpdUsrName = table.Column<string>(fixedLength: true, maxLength: 10, nullable: true)
                },
                constraints: table =>
                {
                });

            migrationBuilder.CreateTable(
                name: "MES_DNC_INTFC_T",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    INTERFACE = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    PARAS = table.Column<string>(unicode: false, maxLength: 4000, nullable: true),
                    TIMESTAMP = table.Column<DateTime>(type: "datetime", nullable: false),
                    NAME = table.Column<string>(unicode: false, maxLength: 100, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_MES_DNC_INTFC_T", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "MES_JOB_DATA",
                columns: table => new
                {
                    NO = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    VALUE1 = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    VALUE2 = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    VALUE3 = table.Column<string>(unicode: false, maxLength: 50, nullable: true)
                },
                constraints: table =>
                {
                });

            migrationBuilder.CreateTable(
                name: "MES_JOB_INFOS",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    JOBTYPE = table.Column<string>(unicode: false, maxLength: 100, nullable: false),
                    NAME = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    DESCRIPTION = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    ASSEMBLYNAME = table.Column<string>(unicode: false, maxLength: 100, nullable: false),
                    CLASSNAME = table.Column<string>(unicode: false, maxLength: 100, nullable: false),
                    JOBARGS = table.Column<string>(unicode: false, maxLength: 200, nullable: true),
                    CRONEXPRESSION = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    CRONEXPDESP = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    LASTRUNTIME = table.Column<DateTime>(type: "datetime", nullable: true),
                    NEXTRUNTIME = table.Column<DateTime>(type: "datetime", nullable: true),
                    RUNCOUNT = table.Column<int>(nullable: true),
                    STATE = table.Column<int>(nullable: true),
                    DISPLAYORDER = table.Column<int>(nullable: true),
                    USR = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    USRNAME = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    SYSDATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    UPDUSR = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UPDUSRNAME = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    UPDDATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    DEBUG_RUN = table.Column<bool>(nullable: true),
                    RunType = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    TcpListenPort = table.Column<int>(nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_MES_JOB_INFOS", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "MES_JOB_LOG",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    JOB_ID = table.Column<int>(nullable: false),
                    JOBNAME = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    EXECUTIONTIME = table.Column<DateTime>(type: "datetime", nullable: true),
                    EXECUTIONDURATION = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CREATEDATE = table.Column<DateTime>(type: "datetime", nullable: false),
                    RUNLOG = table.Column<string>(unicode: false, maxLength: 4000, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_MES_JOB_LOG", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "MF_BAN",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    BAN_NO = table.Column<string>(unicode: false, maxLength: 4, nullable: false),
                    NAME = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    BAN_ID = table.Column<bool>(nullable: true),
                    Rem = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    TIME_OUT = table.Column<short>(nullable: true),
                    BEG_ID = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    BEG_TIME = table.Column<string>(unicode: false, maxLength: 5, nullable: true),
                    END_ID = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    END_TIME = table.Column<string>(unicode: false, maxLength: 5, nullable: true),
                    ACT_ID = table.Column<bool>(nullable: true),
                    ACT_MIN = table.Column<short>(nullable: true),
                    ACT_RANGE = table.Column<short>(nullable: true),
                    ACT_FX = table.Column<short>(nullable: true),
                    HALF_ITM = table.Column<int>(nullable: true),
                    STOP_ID = table.Column<bool>(nullable: true),
                    BusiNo = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    BilType = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    BilTypeName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    Usr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkMan = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkManName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    IsClose = table.Column<bool>(nullable: true),
                    ClsDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ClsUsr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ClsUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkMob = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    IsPrint = table.Column<bool>(nullable: true),
                    TOTAL_TIME = table.Column<short>(nullable: true),
                    Batch_BEG_TIME = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Batch_END_TIME = table.Column<string>(unicode: false, maxLength: 50, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_MF_BAN", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "MF_BOM",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    BOM_NO = table.Column<string>(unicode: false, maxLength: 38, nullable: false),
                    NAME = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    PRD_NO = table.Column<string>(unicode: false, maxLength: 30, nullable: true),
                    PRD_MARK = table.Column<string>(unicode: false, maxLength: 40, nullable: true, defaultValueSql: "(space((0)))"),
                    PF_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    WH_NO = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    PRD_KND = table.Column<string>(unicode: false, maxLength: 1, nullable: false),
                    UNIT = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    QTY = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY1 = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CST_MAKE = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CST_PRD = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CST_MAN = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CST_OUT = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    USED_TIME = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CST = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    USR_NO = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    DEP = table.Column<string>(unicode: false, maxLength: 8, nullable: true),
                    VALID_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    END_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    CLS_DATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    SEB_NO = table.Column<string>(unicode: false, maxLength: 200, nullable: true),
                    MOD_NO = table.Column<string>(unicode: false, maxLength: 200, nullable: true),
                    TIME_CNT = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    DEP_INC = table.Column<string>(unicode: false, maxLength: 8, nullable: true),
                    SPC = table.Column<string>(unicode: false, maxLength: 200, nullable: true),
                    CST_ML = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    IDX_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    Rem = table.Column<string>(unicode: false, maxLength: 3500, nullable: true),
                    BusiNo = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    BilType = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    BilTypeName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    Usr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkMan = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkManName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    IsClose = table.Column<bool>(nullable: true),
                    ClsDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ClsUsr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ClsUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkMob = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    IsPrint = table.Column<bool>(nullable: true),
                    IsEffective = table.Column<bool>(nullable: true),
                    ISDELETE = table.Column<bool>(nullable: true),
                    Src_No = table.Column<string>(unicode: false, maxLength: 36, nullable: true),
                    Src_Type = table.Column<string>(unicode: false, maxLength: 30, nullable: true),
                    Cust_No = table.Column<string>(unicode: false, maxLength: 50, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_MF_BOM", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "MF_BYJL",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    BY_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    BY_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    SEB_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    ITM_SB = table.Column<int>(nullable: true),
                    DEP = table.Column<string>(unicode: false, maxLength: 8, nullable: true),
                    SAL_NO = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    JHBY_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    JHBY_DJ = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    ZD_FLAG = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    PRT_SW = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    PRT_USR = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    LOCK_MAN = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    LOCK_DATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    CPY_SW = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    CANCEL_ID = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    PRT_DATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    Rem = table.Column<string>(unicode: false, maxLength: 4000, nullable: true),
                    BusiNo = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    BilType = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    BilDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    BilTypeName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    Usr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkMan = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkManName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    IsClose = table.Column<bool>(nullable: true),
                    ClsDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ClsUsr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ClsUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkMob = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    IsPrint = table.Column<bool>(nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_MF_BYJL", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "MF_CK",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    CK_ID = table.Column<string>(unicode: false, maxLength: 2, nullable: false),
                    CK_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    CK_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    PAY_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    TRAD_MTH = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    BAT_NO = table.Column<string>(unicode: false, maxLength: 40, nullable: true),
                    CUS_NO = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    DEP = table.Column<string>(unicode: false, maxLength: 8, nullable: true),
                    OS_ID = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    OS_NO = table.Column<string>(unicode: false, maxLength: 25, nullable: true),
                    CUR_ID = table.Column<string>(unicode: false, maxLength: 4, nullable: true),
                    EXC_RTO = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    SAL_NO = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    PAY_MTH = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    PAY_DAYS = table.Column<short>(nullable: true),
                    CHK_DAYS = table.Column<short>(nullable: true),
                    INT_DAYS = table.Column<short>(nullable: true),
                    PAY_REM = table.Column<string>(unicode: false, maxLength: 80, nullable: true),
                    PRT_SW = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    CPY_SW = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    CONTRACT = table.Column<string>(unicode: false, maxLength: 80, nullable: true),
                    AMT = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    AMTN_NET = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    TAX = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    TAX_ID = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    SEND_MTH = table.Column<string>(unicode: false, maxLength: 200, nullable: true),
                    SEND_WH = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    ADR = table.Column<string>(type: "text", nullable: true),
                    DIS_CNT = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    PS_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    AMT_CLS = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    AMTN_NET_CLS = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    TAX_CLS = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CLS_REM = table.Column<string>(unicode: false, maxLength: 30, nullable: true),
                    CLS_DATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    ZHANG_ID = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    SA_CLS_ID = table.Column<bool>(nullable: true),
                    LZ_CLS_ID = table.Column<bool>(nullable: true),
                    CLSSA = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    CLSLZ = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    YD_ID = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    BIL_TYPE = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    CUS_OS_NO = table.Column<string>(unicode: false, maxLength: 30, nullable: true),
                    MOB_ID = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    LOCK_MAN = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    LOCK_DATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    CAS_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    TASK_ID = table.Column<int>(nullable: true),
                    TURN_ID = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    PRT_USR = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    QTY_CLS = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    ZGFX = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    SOFH_ID = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    CANCEL_ID = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    RTO_FQSK = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    DATEFLAG_FQSK = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    DATE_FQSK = table.Column<DateTime>(type: "datetime", nullable: true),
                    QS_FQSK = table.Column<int>(nullable: true),
                    CUS_NO_POS = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    INST_TEAM = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    AMTN_DS = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CARD_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    PRT_DATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    QTY1_CLS = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    TT_TYPE_SET = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    TT_YM_B = table.Column<DateTime>(type: "datetime", nullable: true),
                    AMT_POI = table.Column<short>(nullable: true),
                    LZ_CLS_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    CNT_MAN1 = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    CHK_PICKING = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    SCAN_USR = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    SCAN_DATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    CUS_FH = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    DEP_FH = table.Column<string>(unicode: false, maxLength: 8, nullable: true),
                    CUS_FX = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    CHK_CACHE = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    CHK_PKCHE = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    CHK_FULL_PAY = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    Rem = table.Column<string>(unicode: false, maxLength: 3500, nullable: true),
                    BusiNo = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    BilType = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    BilTypeName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    Usr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkMan = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkManName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    IsClose = table.Column<bool>(nullable: true),
                    ClsDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ClsUsr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ClsUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkMob = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    IsPrint = table.Column<bool>(nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_MF_CK", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "MF_CS",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    CS_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    CS_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    STATUS = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    REASON = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    SAL_NO = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    CHG_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    CPY_SW = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    PRT_SW = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    DEP = table.Column<string>(unicode: false, maxLength: 8, nullable: true),
                    LOCK_MAN = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    LOCK_DATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    PRT_USR = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    CANCEL_ID = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    PRT_DATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    CSType = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    Rem = table.Column<string>(unicode: false, maxLength: 3500, nullable: true),
                    BusiNo = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    BilType = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    BilTypeName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    Usr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkMan = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkManName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    IsClose = table.Column<bool>(nullable: true),
                    ClsDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ClsUsr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ClsUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkMob = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    IsPrint = table.Column<bool>(nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_MF_CS", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "MF_DS",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    DS_ID = table.Column<string>(unicode: false, maxLength: 2, nullable: false),
                    DS_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    DS_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    BAT_NO = table.Column<string>(unicode: false, maxLength: 40, nullable: true),
                    REM = table.Column<string>(type: "text", nullable: true),
                    USR = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    CHK_MAN = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    PRT_SW = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    CPY_SW = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    CLS_DATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    DEP = table.Column<string>(unicode: false, maxLength: 8, nullable: true),
                    CUS_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    CUS_NAME = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    EXC_RTO = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CUR_ID = table.Column<string>(unicode: false, maxLength: 4, nullable: true),
                    SPC_ID = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    FIX_CST = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    SAL_NO = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    IC_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    BIL_TYPE = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    MOB_ID = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    LOCK_MAN = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    LOCK_DATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    SYS_DATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    BIL_ID = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    BIL_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    CLS_ID = table.Column<bool>(nullable: true),
                    PRT_USR = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    QTY = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    MC_ID = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    CANCEL_ID = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    PRT_DATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    INV_BCODE_NO = table.Column<string>(unicode: false, maxLength: 15, nullable: true),
                    MODIFY_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    MODIFY_MAN = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    BusiNo = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    BilType = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    BilTypeName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    Usr1 = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkMan = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkManName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    IsClose = table.Column<bool>(nullable: true),
                    ClsDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ClsUsr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ClsUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkMob = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    IsPrint = table.Column<bool>(nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_MF_DS", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "MF_GR_M",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    GR_ID = table.Column<string>(unicode: false, maxLength: 2, nullable: false),
                    GR_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    GR_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    SAL_NO = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    CUS_NO = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    DEP = table.Column<string>(unicode: false, maxLength: 8, nullable: true),
                    VOH_ID = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    VOH_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    SAL_NO_BG = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    DEP_USE = table.Column<string>(unicode: false, maxLength: 8, nullable: true),
                    TAX_ID = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    BIL_TYPE = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    CUR_ID = table.Column<string>(unicode: false, maxLength: 4, nullable: true),
                    EXC_RTO = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    USR = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    CHK_MAN = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    CLS_DATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    SYS_DATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    AMTN_NET = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    TAX = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    AMT = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    AMTN = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    REM = table.Column<string>(type: "text", nullable: true),
                    PRT_SW = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    MOB_ID = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    CPY_SW = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    ZHANG_ID = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    LZ_CLS_ID = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    CLOSE_ID = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    LOCK_MAN = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    LOCK_DATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    BIL_ID = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    BIL_NO = table.Column<string>(unicode: false, maxLength: 25, nullable: true),
                    PRT_USR = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    CANCEL_ID = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    PAY_MTH = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    PAY_DAYS = table.Column<short>(nullable: true),
                    CHK_DAYS = table.Column<short>(nullable: true),
                    INT_DAYS = table.Column<short>(nullable: true),
                    PAY_REM = table.Column<string>(unicode: false, maxLength: 80, nullable: true),
                    CLS_REM = table.Column<string>(unicode: false, maxLength: 30, nullable: true),
                    INV_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    KP_ID = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    TURN_ID = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    AMT_CLS = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    AMTN_NET_CLS = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    TAX_CLS = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_CLS = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    SEND_MTH = table.Column<string>(unicode: false, maxLength: 200, nullable: true),
                    AMT_IRP = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    AMTN_IRP = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    TAX_IRP = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    SEND_WH = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    ADR = table.Column<string>(type: "text", nullable: true),
                    PAY_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    CHK_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    RP_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ARP_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    RTO_FQSK = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    DATEFLAG_FQSK = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    DATE_FQSK = table.Column<DateTime>(type: "datetime", nullable: true),
                    QS_FQSK = table.Column<int>(nullable: true),
                    PRT_DATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    QTY1_CLS = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    INV_BIL_ID = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    INV_BIL_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    QC_SW = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    LZ_CLS_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    MODIFY_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    MODIFY_MAN = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    DZ_USR = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    DZ_DATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    BusiNo = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    BilType = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    BilTypeName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    Usr1 = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkMan = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkManName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    IsClose = table.Column<bool>(nullable: true),
                    ClsDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ClsUsr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ClsUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkMob = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    IsPrint = table.Column<bool>(nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_MF_GR_M", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "MF_GR_S",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    GR_ID = table.Column<string>(unicode: false, maxLength: 2, nullable: false),
                    GR_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    GR_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    DEP = table.Column<string>(unicode: false, maxLength: 8, nullable: true),
                    SAL_NO = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    CUS_NO = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    SAL_NO_BG = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    DEP_USE = table.Column<string>(unicode: false, maxLength: 8, nullable: true),
                    VOH_ID = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    VOH_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    TAX_ID = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    CUR_ID = table.Column<string>(unicode: false, maxLength: 4, nullable: true),
                    EXC_RTO = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    TAX = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    AMTN_NET = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    AMTN = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    AMT = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    PRT_SW = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    CPY_SW = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    LOCK_MAN = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    LOCK_DATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    ZHANG_ID = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    BIL_ID = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    BIL_NO = table.Column<string>(unicode: false, maxLength: 25, nullable: true),
                    PRT_USR = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    CANCEL_ID = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    PAY_MTH = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    PAY_DAYS = table.Column<short>(nullable: true),
                    CHK_DAYS = table.Column<short>(nullable: true),
                    INT_DAYS = table.Column<short>(nullable: true),
                    PAY_REM = table.Column<string>(unicode: false, maxLength: 80, nullable: true),
                    CLS_REM = table.Column<string>(unicode: false, maxLength: 30, nullable: true),
                    INV_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    KP_ID = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    LZ_CLS_ID = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    TURN_ID = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    AMT_CLS = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    AMTN_NET_CLS = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    TAX_CLS = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_CLS = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    AMT_IRP = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    AMTN_IRP = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    TAX_IRP = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    SEND_MTH = table.Column<string>(unicode: false, maxLength: 200, nullable: true),
                    SEND_WH = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    ADR = table.Column<string>(type: "text", nullable: true),
                    PAY_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    CHK_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    RP_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ARP_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    RTO_FQSK = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    DATEFLAG_FQSK = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    DATE_FQSK = table.Column<DateTime>(type: "datetime", nullable: true),
                    QS_FQSK = table.Column<int>(nullable: true),
                    PRT_DATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    QTY1_CLS = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    INV_BIL_ID = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    INV_BIL_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    QC_SW = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    LZ_CLS_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    DZ_USR = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    DZ_DATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    Rem = table.Column<string>(unicode: false, maxLength: 4000, nullable: true),
                    BusiNo = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    BilType = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    BilTypeName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    Usr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkMan = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkManName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    IsClose = table.Column<bool>(nullable: true),
                    ClsDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ClsUsr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ClsUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkMob = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    IsPrint = table.Column<bool>(nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_MF_GR_S", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "MF_IC",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    IC_ID = table.Column<string>(unicode: false, maxLength: 2, nullable: false),
                    IC_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    IC_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    BAT_NO = table.Column<string>(unicode: false, maxLength: 40, nullable: true),
                    VOH_ID = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    VOH_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    FIX_CST = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    REM = table.Column<string>(type: "text", nullable: true),
                    USR = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    CHK_MAN = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    PRT_SW = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    CPY_SW = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    BIL_NO = table.Column<string>(unicode: false, maxLength: 25, nullable: true),
                    BIL_ID = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    CLS_DATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    POS_ID = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    ZY_NO = table.Column<string>(unicode: false, maxLength: 25, nullable: true),
                    AMTN = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    DEP = table.Column<string>(unicode: false, maxLength: 8, nullable: true),
                    OUTDEP = table.Column<string>(unicode: false, maxLength: 8, nullable: true),
                    REQ_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    GL_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    CAS_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    BIL_TYPE = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    SAL_NO = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    ID_NO = table.Column<string>(unicode: false, maxLength: 25, nullable: true),
                    MOB_ID = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    LOCK_MAN = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    LOCK_DATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    FJ_NUM = table.Column<short>(nullable: true),
                    SYS_DATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    CUS_NO1 = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    CUS_NO2 = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    CLS_ID = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    BYBOX = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    TOT_BOX = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    TOT_QTY = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    OS_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    LZ_CLS_ID = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    TASK_ID = table.Column<int>(nullable: true),
                    SAL_NO2 = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    PRT_USR = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    AMT_CLS = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    AMTN_NET_CLS = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    TAX_CLS = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    TURN_ID = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    OS_ID = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    LZ_CLS_ID2 = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    AMT_CLS2 = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    AMTN_NET_CLS2 = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    TAX_CLS2 = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    TURN_ID2 = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    EP_ID = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    EP_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    DEP_DS = table.Column<string>(unicode: false, maxLength: 8, nullable: true),
                    SAL_DS = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    QTY_CLS = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_CLS2 = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    IZ_BACK_ID = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    CFM_SW = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    IZ_CLS_ID = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    CANCEL_ID = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    CUR_ID_IFRS = table.Column<string>(unicode: false, maxLength: 4, nullable: true),
                    EXC_RTO_IFRS = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CUS_OS_NO = table.Column<string>(unicode: false, maxLength: 30, nullable: true),
                    PRT_DATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    ADR = table.Column<string>(type: "text", nullable: true),
                    SEND_MTH = table.Column<string>(unicode: false, maxLength: 200, nullable: true),
                    SEND_WH = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    FIX_CST1 = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    QTY1_CLS = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY1_CLS2 = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    ISSVS = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    SCAN_ID = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    MODIFY_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    MODIFY_MAN = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    SCAN_USR = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    SCAN_DATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    BusiNo = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    BilType = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    BilTypeName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    Usr1 = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkMan = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkManName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    IsClose = table.Column<bool>(nullable: true),
                    ClsDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ClsUsr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ClsUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkMob = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    IsPrint = table.Column<bool>(nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_MF_IC", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "MF_IJ",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    IJ_ID = table.Column<string>(unicode: false, maxLength: 2, nullable: false),
                    IJ_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    IJ_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    IJ_REASON = table.Column<string>(unicode: false, maxLength: 4, nullable: true),
                    FIX_CST = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    ACC_NO_D = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ACC_NO_C = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    DEP = table.Column<string>(unicode: false, maxLength: 8, nullable: true),
                    VOH_ID = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    VOH_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    REF_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    BAT_NO = table.Column<string>(unicode: false, maxLength: 40, nullable: true),
                    MAN_NO = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    REM = table.Column<string>(type: "text", nullable: true),
                    USR = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    CHK_MAN = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    PRT_SW = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    CPY_SW = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    BIL_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    BIL_ID = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    CLS_DATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    POS_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    IJID = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CAS_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    BIL_TYPE = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    CNTT_NO = table.Column<string>(unicode: false, maxLength: 40, nullable: true),
                    ACC_NO_SS = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ACC_NO_SY = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    MOB_ID = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    LOCK_MAN = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    LOCK_DATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    FJ_NUM = table.Column<short>(nullable: true),
                    SYS_DATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    POS_ID = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    CUS_NO = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    TASK_ID = table.Column<int>(nullable: true),
                    PRT_USR = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    SQ_ID = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    SQ_NO = table.Column<string>(unicode: false, maxLength: 25, nullable: true),
                    SQ_ITM = table.Column<int>(nullable: true),
                    ISSVS = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    FROMCB_CALC = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    JH_SO_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    TZZG = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    YG_NO = table.Column<string>(unicode: false, maxLength: 65, nullable: true),
                    CANCEL_ID = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    CUR_ID_IFRS = table.Column<string>(unicode: false, maxLength: 4, nullable: true),
                    EXC_RTO_IFRS = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    PRT_DATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    MODIFY_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    MODIFY_MAN = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    SCAN_ID = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    SCAN_USR = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    SCAN_DATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    SCAN_USR1 = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    SCAN_DATE1 = table.Column<DateTime>(type: "datetime", nullable: true),
                    GROUP_KEY = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    BusiNo = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    BilType = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    BilTypeName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    Usr1 = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkMan = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkManName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    IsClose = table.Column<bool>(nullable: true),
                    ClsDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ClsUsr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ClsUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkMob = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    IsPrint = table.Column<bool>(nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_MF_IJ", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "MF_JH",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    JH_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    JH_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    JH_ID = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    DEP = table.Column<string>(unicode: false, maxLength: 8, nullable: true),
                    SAL_NO = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    BAT_NO = table.Column<string>(unicode: false, maxLength: 40, nullable: true),
                    Rem = table.Column<string>(type: "text", nullable: true),
                    EST_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    SO_NO = table.Column<string>(unicode: false, maxLength: 25, nullable: true),
                    CUS_NO = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    CLS_ID_SC = table.Column<bool>(nullable: true),
                    BusiNo = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    BilType = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    BilTypeName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    Usr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkMan = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkManName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    IsClose = table.Column<bool>(nullable: true),
                    ClsDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ClsUsr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ClsUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkMob = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    IsPrint = table.Column<bool>(nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_MF_JH", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "MF_JJ",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    PRD_NO = table.Column<string>(unicode: false, maxLength: 30, nullable: false),
                    PRD_MARK = table.Column<string>(unicode: false, maxLength: 40, nullable: false, defaultValueSql: "(space((0)))"),
                    ZC_NO = table.Column<string>(unicode: false, maxLength: 10, nullable: false),
                    BOM_NO = table.Column<string>(unicode: false, maxLength: 38, nullable: false),
                    SEB_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    YGXZ = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    UP_DD = table.Column<DateTime>(type: "datetime", nullable: false),
                    SZ_NO1 = table.Column<string>(unicode: false, maxLength: 3, nullable: true),
                    SZ_NO2 = table.Column<string>(unicode: false, maxLength: 3, nullable: true),
                    UNIT = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    AMTN_FIX = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    AMTN_KC = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    UP_FIX = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    UP_KC = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    JJ_ID = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    Rem = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    RTO_KK = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CANCEL_ID = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    GXS = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    BusiNo = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    BilType = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    BilTypeName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    Usr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkMan = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkManName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    IsClose = table.Column<bool>(nullable: true),
                    ClsDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ClsUsr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ClsUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkMob = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    IsPrint = table.Column<bool>(nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_MF_JJ", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "MF_JXZB_JS",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    JXJS_NAME = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    VERSION = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    DEP = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    NO = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    BILLDATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    REM = table.Column<string>(unicode: false, maxLength: 4000, nullable: true),
                    BUSINO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    BILTYPE = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    BILTYPENAME = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    USR = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    USRNAME = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UPDDATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    UPDUSRNAME = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UPDUSR = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    CHKMAN = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    CHKMANNAME = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    CHKDATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    ISCLOSE = table.Column<bool>(nullable: true),
                    CLSDATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    CLSUSR = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    CLSUSRNAME = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    CHKMOB = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    ISPRINT = table.Column<bool>(nullable: true),
                    SYSDATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    TZ_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    STA_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    END_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    YG_NO = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    SEB_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    BAN_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    QTY = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_LOST = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    USE_TIME = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_TC = table.Column<decimal>(type: "numeric(18, 0)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_MF_JXZB_JS", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "MF_JXZB_SZ",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    JXSZ_NAME = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    VERSION = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    STA_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    END_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    DEP = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    AUTHDEP = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    RELEASETIME = table.Column<DateTime>(type: "datetime", nullable: true),
                    STATE = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    NO = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    BILLDATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    REM = table.Column<string>(unicode: false, maxLength: 4000, nullable: true),
                    BUSINO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    BILTYPE = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    BILTYPENAME = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    USR = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    USRNAME = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UPDDATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    UPDUSRNAME = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UPDUSR = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    CHKMAN = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    CHKMANNAME = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    CHKDATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    ISCLOSE = table.Column<bool>(nullable: true),
                    CLSDATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    CLSUSR = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    CLSUSRNAME = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    CHKMOB = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    ISPRINT = table.Column<bool>(nullable: true),
                    SYSDATE = table.Column<DateTime>(type: "datetime", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_MF_JXZB_SZ", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "MF_MD_INOUT",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    EntryNo = table.Column<string>(maxLength: 80, nullable: false),
                    InOut = table.Column<int>(nullable: false),
                    EntDate = table.Column<DateTime>(type: "datetime", nullable: false),
                    Usr = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    UsrName = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: false),
                    BusiNo = table.Column<string>(unicode: false, maxLength: 50, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_MF_MD_INOUT", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "MF_MJAA",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    AA_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    AA_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    CK_ID = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    BIL_TYPE = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    DEP = table.Column<string>(unicode: false, maxLength: 8, nullable: true),
                    SAL_NO = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    VOH_ID = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    VOH_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    BIL_ID = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    BIL_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    CPY_SW = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    USR = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    SYS_DATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    CHK_MAN = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    CLS_DATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    MOB_ID = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    PRT_SW = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    PRT_USR = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    LOCK_MAN = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    LOCK_DATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    REM = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    PRT_DATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    WX_ID = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    WX_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    MODIFY_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    MODIFY_MAN = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    BusiNo = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    BilType = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    BilTypeName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    Usr1 = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkMan = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkManName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    IsClose = table.Column<bool>(nullable: true),
                    ClsDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ClsUsr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ClsUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkMob = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    IsPrint = table.Column<bool>(nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_MF_MJAA", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "MF_MK_YG",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    BIL_ID = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    BIL_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    BIL_DD = table.Column<DateTime>(type: "datetime", nullable: false),
                    To_ZCDSP = table.Column<bool>(nullable: true),
                    Rem = table.Column<string>(unicode: false, maxLength: 3500, nullable: true),
                    BusiNo = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    BilType = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    BilTypeName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    Usr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkMan = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkManName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    IsClose = table.Column<bool>(nullable: true),
                    ClsDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ClsUsr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ClsUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkMob = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    IsPrint = table.Column<bool>(nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_MF_MK_YG", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "MF_ML",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    MLID = table.Column<string>(unicode: false, maxLength: 2, nullable: false),
                    ML_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    ML_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    BIL_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ML_ID = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    BAT_NO = table.Column<string>(unicode: false, maxLength: 40, nullable: true),
                    MO_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    MRP_NO = table.Column<string>(unicode: false, maxLength: 30, nullable: true),
                    PRD_NAME = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    PRD_MARK = table.Column<string>(unicode: false, maxLength: 40, nullable: true, defaultValueSql: "(space((0)))"),
                    UNIT = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    WH_MTL = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    QTY = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    USR_NO = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    DEP = table.Column<string>(unicode: false, maxLength: 8, nullable: true),
                    TZ_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    QL_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    Rem = table.Column<string>(unicode: false, maxLength: 3500, nullable: true),
                    BusiNo = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    BilType = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    BilTypeName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    Usr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkMan = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkManName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    IsClose = table.Column<bool>(nullable: true),
                    ClsDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ClsUsr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ClsUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkMob = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    IsPrint = table.Column<bool>(nullable: true),
                    SEB_NO = table.Column<string>(maxLength: 50, nullable: true),
                    BAN_NO = table.Column<string>(maxLength: 50, nullable: true),
                    ZC_NO = table.Column<string>(maxLength: 50, nullable: true),
                    RL_TZ = table.Column<string>(maxLength: 100, nullable: true),
                    RL_ID = table.Column<int>(nullable: true),
                    JH_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_MF_ML", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "MF_MM0",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    MM_ID = table.Column<string>(unicode: false, maxLength: 2, nullable: false),
                    MM_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    MM_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    BIL_TYPE = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    DEP = table.Column<string>(unicode: false, maxLength: 8, nullable: true),
                    BIL_ID = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    BIL_NO = table.Column<string>(unicode: false, maxLength: 25, nullable: true),
                    MO_NO = table.Column<string>(unicode: false, maxLength: 25, nullable: true),
                    VOH_ID = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    VOH_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    FJ_NUM = table.Column<short>(nullable: true),
                    USR = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    USR_NO = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    CHK_MAN = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    LOCK_MAN = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    LOCK_DATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    PRT_USR = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    SYS_DATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    CLS_DATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    MOB_ID = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    PRT_SW = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    CPY_SW = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    FIN_ID = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    REM = table.Column<string>(type: "text", nullable: true),
                    CANCEL_ID = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    CUR_ID_IFRS = table.Column<string>(unicode: false, maxLength: 4, nullable: true),
                    EXC_RTO_IFRS = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    PRT_DATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    MODIFY_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    MODIFY_MAN = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    SCAN_ID = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    SCAN_USR = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    SCAN_DATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    OS_ID = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    OS_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    BusiNo = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    BilType = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    BilTypeName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    Usr1 = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkMan = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkManName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    IsClose = table.Column<bool>(nullable: true),
                    ClsDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ClsUsr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ClsUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkMob = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    IsPrint = table.Column<bool>(nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_MF_MM0", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "MF_MMJH",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    JH_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    JH_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    JH_ID = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    EST_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    DEP = table.Column<string>(unicode: false, maxLength: 8, nullable: true),
                    SAL_NO = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    BAT_NO = table.Column<string>(unicode: false, maxLength: 40, nullable: true),
                    Rem = table.Column<string>(type: "text", nullable: true),
                    SO_NO = table.Column<string>(unicode: false, maxLength: 25, nullable: true),
                    CUS_NO = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    BusiNo = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    BilType = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    BilTypeName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    Usr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkMan = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkManName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    IsClose = table.Column<bool>(nullable: true),
                    ClsDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ClsUsr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ClsUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkMob = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    IsPrint = table.Column<bool>(nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_MF_MMJH", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "MF_MO",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    MO_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    MO_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    STA_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    END_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    BIL_ID = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    BIL_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    MRP_NO = table.Column<string>(unicode: false, maxLength: 30, nullable: true),
                    PRD_MARK = table.Column<string>(unicode: false, maxLength: 40, nullable: true, defaultValueSql: "(space((0)))"),
                    WH = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    SO_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UNIT = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    QTY = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY1 = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    NEED_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    DEP = table.Column<string>(unicode: false, maxLength: 8, nullable: true),
                    CUS_NO = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    BAT_NO = table.Column<string>(unicode: false, maxLength: 40, nullable: true),
                    PRD_NO_MT = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    MT_ITM = table.Column<int>(nullable: true, defaultValueSql: "((0))"),
                    MO_NO_ADD = table.Column<string>(unicode: false, maxLength: 38, nullable: true),
                    QTY_FIN = table.Column<decimal>(type: "numeric(18, 0)", nullable: true, defaultValueSql: "('0')"),
                    QTY_ML = table.Column<decimal>(type: "numeric(18, 0)", nullable: true, defaultValueSql: "('0')"),
                    CST_MAKE = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CST_PRD = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CST_OUT = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CST_MAN = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    USED_TIME = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CST = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    OPN_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    FIN_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    EST_ITM = table.Column<int>(nullable: true),
                    ML_OK = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    MD_NO = table.Column<string>(unicode: false, maxLength: 400, nullable: true),
                    QTY_RK = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_RK_UNSH = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    ID_NO = table.Column<string>(unicode: false, maxLength: 38, nullable: true),
                    QTY_CHK = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CONTROL = table.Column<bool>(nullable: true),
                    MO_STATE = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    MM_CURML = table.Column<bool>(nullable: true),
                    CNTT_NO = table.Column<string>(unicode: false, maxLength: 40, nullable: true),
                    SEB_NO = table.Column<string>(unicode: false, maxLength: 200, nullable: true),
                    GRP_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    SUP_PRD_NO = table.Column<string>(unicode: false, maxLength: 40, nullable: true),
                    TIME_CNT = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CF_ID = table.Column<bool>(nullable: true),
                    CUS_OS_NO = table.Column<string>(unicode: false, maxLength: 30, nullable: true),
                    QTY_QL = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_QL_UNSH = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QL_ID = table.Column<bool>(nullable: true),
                    Q2_ID = table.Column<bool>(nullable: true),
                    Q3_ID = table.Column<bool>(nullable: true),
                    ZT_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    SUP_PRD_MARK = table.Column<string>(unicode: false, maxLength: 40, nullable: true),
                    QTY_QS = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_QS_UNSH = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_LOST = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    ZT_ID = table.Column<bool>(nullable: true),
                    BIL_DSP_ID = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    Rem = table.Column<string>(unicode: false, maxLength: 4000, nullable: true),
                    BusiNo = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    BilType = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    BilTypeName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    Usr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkMan = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkManName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    IsClose = table.Column<bool>(nullable: true),
                    ClsDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ClsUsr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ClsUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkMob = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    IsPrint = table.Column<bool>(nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_MF_MO", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "MF_MP",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    MP_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    MP_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    SAL_NO = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    SO_NO = table.Column<string>(unicode: false, maxLength: 25, nullable: true),
                    BAT_NO = table.Column<string>(unicode: false, maxLength: 40, nullable: true),
                    BUY_MAN = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    USR_MAN = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    PRC_MAN = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    PRD_OUT = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    CPY_SW = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    PRT_SW = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    DEP = table.Column<string>(unicode: false, maxLength: 8, nullable: true),
                    OVER_RTO = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    PRT_PO = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    PRT_MO = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    WH = table.Column<string>(unicode: false, maxLength: 2000, nullable: true),
                    CLUDE = table.Column<bool>(nullable: true),
                    LOCK_MAN = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    LOCK_DATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    EST_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    PRT_USR = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    CANCEL_ID = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    PRT_DATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    PRT_PO_DATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    PRT_MO_DATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    PO_OK = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    Rem = table.Column<string>(unicode: false, maxLength: 3500, nullable: true),
                    BusiNo = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    BilType = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    BilTypeName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    Usr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkMan = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkManName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    IsClose = table.Column<bool>(nullable: true),
                    ClsDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ClsUsr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ClsUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkMob = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    IsPrint = table.Column<bool>(nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_MF_MP", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "MF_MSC",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    MSC_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    MSC_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    SAL_NO = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    DEP = table.Column<string>(unicode: false, maxLength: 8, nullable: true),
                    BIL_ID = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    BIL_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    USR = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    CHK_MAN = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    CLS_DATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    SYS_DATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    CLOSE_ID = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    BIL_TYPE = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    REM = table.Column<string>(type: "text", nullable: true),
                    PRT_SW = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    CPY_SW = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    MOB_ID = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    LOCK_MAN = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    LOCK_DATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    PRT_USR = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    CANCEL_ID = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    VOH_ID = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    VOH_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    PRT_DATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    MODIFY_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    MODIFY_MAN = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    AJ_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    PRE_ITM_AJ = table.Column<int>(nullable: true),
                    BusiNo = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    BilType = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    BilTypeName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    Usr1 = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkMan = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkManName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    IsClose = table.Column<bool>(nullable: true),
                    ClsDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ClsUsr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ClsUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkMob = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    IsPrint = table.Column<bool>(nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_MF_MSC", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "MF_POS",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    OS_ID = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    OS_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    BAT_NO = table.Column<string>(unicode: false, maxLength: 40, nullable: true),
                    OS_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    QT_NO = table.Column<string>(unicode: false, maxLength: 25, nullable: true),
                    VOH_ID = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    VOH_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    TRAD_MTH = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    PAY_MTH = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    PAY_DAYS = table.Column<short>(nullable: true),
                    CHK_DAYS = table.Column<short>(nullable: true),
                    PAY_REM = table.Column<string>(unicode: false, maxLength: 80, nullable: true),
                    SEND_MTH = table.Column<string>(unicode: false, maxLength: 200, nullable: true),
                    SEND_WH = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    EST_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    CUS_NO = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    SAL_NO = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    USE_DEP = table.Column<string>(unicode: false, maxLength: 8, nullable: true),
                    CUR_ID = table.Column<string>(unicode: false, maxLength: 4, nullable: true),
                    EXC_RTO = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    AMTN_INT = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    AMT_INT = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    DIS_CNT = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    BACK_ID = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    HIS_PRICE = table.Column<bool>(nullable: true),
                    ADR = table.Column<string>(type: "text", nullable: true),
                    PO_DEP = table.Column<string>(unicode: false, maxLength: 8, nullable: true),
                    PO_SO_NO = table.Column<string>(unicode: false, maxLength: 25, nullable: true),
                    SO_BY_MM = table.Column<short>(nullable: true),
                    SO_OT_DD = table.Column<short>(nullable: true),
                    SO_BY_DD = table.Column<short>(nullable: true),
                    SO_LNG_CAS = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    SO_END_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    SO_LST_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    INV_DIS_ID = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    INV_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    TAX_ID = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    RP_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    OLD_INV_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    AMTN_NET = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    TAX = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    PAY_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    INT_DAYS = table.Column<short>(nullable: true),
                    CONTRACT = table.Column<string>(unicode: false, maxLength: 80, nullable: true),
                    PRT_SW = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    CPY_SW = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    BIL_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    LC_NO = table.Column<string>(unicode: false, maxLength: 30, nullable: true),
                    AMTN_DIS = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CLS_MP_ID = table.Column<bool>(nullable: true),
                    CLS_REM = table.Column<string>(unicode: false, maxLength: 30, nullable: true),
                    BIL_ID = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    RK_CLS_ID = table.Column<bool>(nullable: true),
                    PRE_ID = table.Column<bool>(nullable: true),
                    IS_POS = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    POS_NO = table.Column<string>(unicode: false, maxLength: 14, nullable: true),
                    PCL_ID = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    CUS_OS_NO = table.Column<string>(unicode: false, maxLength: 30, nullable: true),
                    BZ_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    HS_ID = table.Column<bool>(nullable: true),
                    AMT_LC = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CNTT_NO = table.Column<string>(unicode: false, maxLength: 40, nullable: true),
                    SB_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    LOCK_MAN = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    LOCK_DATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    ISOVERSH = table.Column<bool>(nullable: true),
                    DJ_NO = table.Column<string>(unicode: false, maxLength: 4, nullable: true),
                    FJ_NUM = table.Column<short>(nullable: true),
                    CAS_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    SQ_ID = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    INV_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    INV_YM = table.Column<int>(nullable: true),
                    TITLE_BUY = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    METH_ID = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    AMT_INV = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    TAX_INV = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    FX_WH = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    YH_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    BYBOX = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    TOT_QTY = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    TOT_BOX = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    TASK_ID = table.Column<int>(nullable: true),
                    PRT_USR = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    RP_NO1 = table.Column<string>(type: "text", nullable: true),
                    SQ_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    CARD_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    SEND_AREA = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    JFEND_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    SG_ID = table.Column<string>(unicode: false, maxLength: 30, nullable: true),
                    PRT_NUM = table.Column<int>(nullable: true),
                    PAY_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    AMTN_YJBX = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    AMTN_BX = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    ISSVS = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    BIL_MARK = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    CHK_FX = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    HAS_FX = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    AMTN_CBAC = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CBAC_CLS = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    INV_CHK = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    INV_UNI_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    INV_TITLE = table.Column<string>(unicode: false, maxLength: 80, nullable: true),
                    INV_AMT = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    PAY_B2C = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    CANCEL_ID = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    SG_ID1 = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    BIL_COMP = table.Column<string>(unicode: false, maxLength: 13, nullable: true),
                    RTO_FQSK = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    DATEFLAG_FQSK = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    DATE_FQSK = table.Column<DateTime>(type: "datetime", nullable: true),
                    QS_FQSK = table.Column<int>(nullable: true),
                    CUS_NO_POS = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    INST_TEAM = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    AMTN_DS = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CFM_SW = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    INV_ID = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    PRT_DATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    INV_BIL_ID = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    INV_BIL_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    OFF_OS_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    INV_BCODE_NO = table.Column<string>(unicode: false, maxLength: 15, nullable: true),
                    ZHANG_ID = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    AMTN_CBAC_PS = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    ACT_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    TT_TYPE_SET = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    TT_YM_B = table.Column<DateTime>(type: "datetime", nullable: true),
                    ICOS_ID = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    CNT_MAN1 = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    MODIFY_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    MODIFY_MAN = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    CLS_ME_ID = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    MRK = table.Column<string>(unicode: false, maxLength: 8, nullable: true),
                    PRM_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    CX_ID = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    CX_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    CHK_LATEST = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    SRC_ID = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    SG_BIL_COMP = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    SOKP = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    CUS_FH = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    DEP_FH = table.Column<string>(unicode: false, maxLength: 8, nullable: true),
                    CUS_FX = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    AMTN_HX = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    AMTN_HX_MAX = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    HXJS_ID = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    CHK_CACHE = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    CHK_FULL_PAY = table.Column<bool>(nullable: true),
                    GROUP_DEP = table.Column<string>(unicode: false, maxLength: 8, nullable: true),
                    CHK_FULL_PAID = table.Column<bool>(nullable: true),
                    BusiNo = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    BilType = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    BilTypeName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    Usr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkMan = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkManName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    Rem = table.Column<string>(unicode: false, maxLength: 3500, nullable: true),
                    IsClose = table.Column<bool>(nullable: true, defaultValueSql: "((0))"),
                    ClsDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ClsUsr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ClsUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkMob = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    IsPrint = table.Column<bool>(nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_MF_POS", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "MF_PROMV",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    PMV_NO = table.Column<string>(unicode: false, maxLength: 30, nullable: false, defaultValueSql: "('')"),
                    Flag = table.Column<string>(unicode: false, maxLength: 2, nullable: false, defaultValueSql: "('')"),
                    Memo = table.Column<string>(unicode: false, maxLength: 3500, nullable: true, defaultValueSql: "('')"),
                    No = table.Column<string>(unicode: false, maxLength: 50, nullable: true, defaultValueSql: "('')"),
                    BillDate = table.Column<DateTime>(type: "datetime", nullable: false),
                    Rem = table.Column<string>(unicode: false, maxLength: 3500, nullable: true, defaultValueSql: "('')"),
                    BusiNo = table.Column<string>(unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')"),
                    BilType = table.Column<string>(unicode: false, maxLength: 20, nullable: true, defaultValueSql: "('')"),
                    BilTypeName = table.Column<string>(unicode: false, maxLength: 20, nullable: true, defaultValueSql: "('')"),
                    SO_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    WR_ID = table.Column<bool>(nullable: true, defaultValueSql: "((0))"),
                    Usr = table.Column<string>(unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')"),
                    UsrName = table.Column<string>(unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')"),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: false, defaultValueSql: "(getdate())"),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 50, nullable: true, defaultValueSql: "('')"),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 50, nullable: true, defaultValueSql: "('')"),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true, defaultValueSql: "(getdate())"),
                    ChkMan = table.Column<string>(unicode: false, maxLength: 50, nullable: true, defaultValueSql: "('')"),
                    ChkManName = table.Column<string>(unicode: false, maxLength: 50, nullable: true, defaultValueSql: "('')"),
                    ChkDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ChkMob = table.Column<string>(unicode: false, maxLength: 100, nullable: true, defaultValueSql: "('')"),
                    IsClose = table.Column<bool>(nullable: true, defaultValueSql: "((0))"),
                    ClsDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ClsUsr = table.Column<string>(unicode: false, maxLength: 50, nullable: true, defaultValueSql: "('')"),
                    ClsUsrName = table.Column<string>(unicode: false, maxLength: 50, nullable: true, defaultValueSql: "('')"),
                    IsPrint = table.Column<bool>(nullable: true, defaultValueSql: "((0))")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_MF_PROMV", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "MF_PSS",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    PS_ID = table.Column<string>(unicode: false, maxLength: 2, nullable: false),
                    PS_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    PS_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    PAY_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    CHK_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    TRAD_MTH = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    BAT_NO = table.Column<string>(unicode: false, maxLength: 40, nullable: true),
                    CUS_NO = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    VOH_ID = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    VOH_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    DEP = table.Column<string>(unicode: false, maxLength: 8, nullable: true),
                    INV_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    TAX_ID = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    OS_ID = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    OS_NO = table.Column<string>(unicode: false, maxLength: 25, nullable: true),
                    SEND_MTH = table.Column<string>(unicode: false, maxLength: 200, nullable: true),
                    SEND_WH = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    RP_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ZHANG_ID = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    CUR_ID = table.Column<string>(unicode: false, maxLength: 4, nullable: true),
                    EXC_RTO = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    SAL_NO = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    ARP_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    AMTN_IRP = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    AMT_IRP = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    RSV_PER = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    AMTN_RSV = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    AMT_RSV = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    ADR = table.Column<string>(type: "text", nullable: true),
                    REM = table.Column<string>(type: "text", nullable: true),
                    PAY_MTH = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    PAY_DAYS = table.Column<short>(nullable: true),
                    CHK_DAYS = table.Column<short>(nullable: true),
                    INT_DAYS = table.Column<short>(nullable: true),
                    PAY_REM = table.Column<string>(unicode: false, maxLength: 80, nullable: true),
                    CLS_ID = table.Column<bool>(nullable: true),
                    EP_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    AMTN_EP = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    TAX_IRP = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    USR = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    CHK_MAN = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    PRT_SW = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    CPY_SW = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    BIL_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    DIS_CNT = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CASH_ID = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    QTY_INV = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_CASH = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    AMTN_INV = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    AMTN_CASH = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CB_ID = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    CONTRACT = table.Column<string>(unicode: false, maxLength: 80, nullable: true),
                    LC_NO = table.Column<string>(unicode: false, maxLength: 30, nullable: true),
                    PK_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    CLS_REM = table.Column<string>(unicode: false, maxLength: 30, nullable: true),
                    SCUS_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    SOUTYPE = table.Column<short>(nullable: true),
                    SGTFLAG = table.Column<short>(nullable: true),
                    AMT = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    VOH_MKNO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    POS_NO = table.Column<string>(unicode: false, maxLength: 15, nullable: true),
                    BIL_ID = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    CLS_DATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    MM_ID = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    CUS_OS_NO = table.Column<string>(unicode: false, maxLength: 30, nullable: true),
                    PO_ID = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    CK_CLS_ID = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    LZ_CLS_ID = table.Column<bool>(nullable: true),
                    CLSCK = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    CLSLZ = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    AMTN_FT = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    POS_ID = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    YD_ID = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    IS_POS = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    BIL_TYPE = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    ACC_FP_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    CAS_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    PCTOSA = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    CNTT_NO = table.Column<string>(unicode: false, maxLength: 40, nullable: true),
                    PO_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    KP_ID = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    EP_NO1 = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    AMTN_EP1 = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    MOB_ID = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    LOCK_MAN = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    LOCK_DATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    ZB_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    FJ_NUM = table.Column<short>(nullable: true),
                    SYS_DATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    INV_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    INV_YM = table.Column<int>(nullable: true),
                    TITLE_BUY = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    METH_ID = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    AMTN_FL = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    AMT_INV = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    TAX_INV = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QC_SW = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    AMT_CLS = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    AMTN_NET_CLS = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    TAX_CLS = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    PH_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    CUST_YG = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    TOT_BOX = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    TOT_QTY = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    TASK_ID = table.Column<int>(nullable: true),
                    PRT_USR = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    TURN_ID = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    SIGN_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    ARP_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    BD_ID = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    CARD_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    SEND_AREA = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    JFEND_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    SG_ID = table.Column<string>(unicode: false, maxLength: 30, nullable: true),
                    ZC_FLAG = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    QTY_CLS = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CLSID = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    POPC_ID = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    HG_BH = table.Column<string>(unicode: false, maxLength: 30, nullable: true),
                    TZZG = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    BIL_MARK = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    HAS_FX = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    ISSVS = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    AMTN_CBAC = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CANCEL_ID = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    SG_ID1 = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    BIL_COMP = table.Column<string>(unicode: false, maxLength: 13, nullable: true),
                    SB_CHK = table.Column<bool>(nullable: true),
                    ISFLZL = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    TO_MJ = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    TO_SB = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    SUB_NO = table.Column<string>(unicode: false, maxLength: 30, nullable: true),
                    CUS_CARD_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    RTO_FQSK = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    DATEFLAG_FQSK = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    DATE_FQSK = table.Column<DateTime>(type: "datetime", nullable: true),
                    QS_FQSK = table.Column<int>(nullable: true),
                    CUS_NO_POS = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    INST_TEAM = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    AMTN_DS = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    POS_OS_ID = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    POS_OS_CLS = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    TB_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    PAYCARD_NO = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    CUR_ID_IFRS = table.Column<string>(unicode: false, maxLength: 4, nullable: true),
                    EXC_RTO_IFRS = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    WS_KD_CHK = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    WS_RCV_CHK = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    WS_CHK_PAY = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    AMTN_EP_IFRS = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    AMTN_EP1_IFRS = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    PRT_DATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    AMTN_SX = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY1_CLS = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    INV_BIL_ID = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    INV_BIL_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    OM_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    INV_BCODE_NO = table.Column<string>(unicode: false, maxLength: 15, nullable: true),
                    USR_AUTH = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    TT_TYPE_SET = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    TT_YM_B = table.Column<DateTime>(type: "datetime", nullable: true),
                    CB_ID_IFRS = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    AMT_POI = table.Column<short>(nullable: true),
                    LZ_CLS_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    CNT_MAN1 = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    SCAN_ID = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    MODIFY_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    MODIFY_MAN = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    SCAN_USR = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    SCAN_DATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    ACT_ID = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    CARD_CLS = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    DZ_USR = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    DZ_DATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    AUTH_CODE = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    AUTH_INFO = table.Column<string>(unicode: false, maxLength: 250, nullable: true),
                    CFM_ID = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    CFM_CLS_ID = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    SG_BIL_COMP = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    CUS_FH = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    DEP_FH = table.Column<string>(unicode: false, maxLength: 8, nullable: true),
                    CUS_FX = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    CHK_PKCHE = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    GROUP_TYPE_ID = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    GROUP_KEY = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    GROUP_CUS_NO = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    GROUP_AUTO_BIL = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    GROUP_DX = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    CHK_FULL_PAY = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    HZ_ID = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    ORG_LZ_ID = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    EC_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    AUTH_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    BusiNo = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    BilType = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    BilTypeName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkMan = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkManName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    IsClose = table.Column<bool>(nullable: true),
                    ClsDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ClsUsr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ClsUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkMob = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    IsPrint = table.Column<bool>(nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_MF_PSS", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "MF_PSS0_Z",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    MID = table.Column<int>(nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_MF_PSS0_Z", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "MF_QL",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    QL_ID = table.Column<string>(unicode: false, maxLength: 2, nullable: false),
                    QL_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    QL_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    BIL_ID = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    BIL_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    QL_TYPE = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    BAT_NO = table.Column<string>(unicode: false, maxLength: 40, nullable: true),
                    MO_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    MRP_NO = table.Column<string>(unicode: false, maxLength: 30, nullable: true),
                    PRD_NAME = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    PRD_MARK = table.Column<string>(unicode: false, maxLength: 40, nullable: true, defaultValueSql: "(space((0)))"),
                    UNIT = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    WH_MTL = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    QTY = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY1 = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_RTN = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY1_RTN = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_RTN_UNSH = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY1_RTN_UNSH = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    USR_NO = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    DEP = table.Column<string>(unicode: false, maxLength: 8, nullable: true),
                    REM = table.Column<string>(type: "text", nullable: true),
                    CUS_NO = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    CPY_SW = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    USR = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    CHK_MAN = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    PRT_SW = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    CLS_DATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    ID_NO = table.Column<string>(unicode: false, maxLength: 38, nullable: true),
                    BIL_TYPE = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    CNTT_NO = table.Column<string>(unicode: false, maxLength: 40, nullable: true),
                    MOB_ID = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    LOCK_DATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    LOCK_MAN = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    FJ_NUM = table.Column<short>(nullable: true),
                    SYS_DATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    CAS_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    TASK_ID = table.Column<int>(nullable: true),
                    CUS_OS_NO = table.Column<string>(unicode: false, maxLength: 30, nullable: true),
                    PRT_USR = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    LQ_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    TZ_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    SO_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    SO_ID = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    CLOSE_ID = table.Column<bool>(nullable: true),
                    CUR_ID = table.Column<string>(unicode: false, maxLength: 4, nullable: true),
                    AMTN_PC = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    AMTN_YZ = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    PRT_NUM = table.Column<int>(nullable: true),
                    CANCEL_ID = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    PO_OK = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    YL_ID = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    PRT_DATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    MODIFY_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    MODIFY_MAN = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    CLS_ID = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    BusiNo = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    BilType = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    BilTypeName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    Usr1 = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkMan = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkManName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    Rem1 = table.Column<string>(unicode: false, maxLength: 3500, nullable: true),
                    IsClose = table.Column<bool>(nullable: true, defaultValueSql: "((0))"),
                    ClsDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ClsUsr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ClsUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkMob = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    IsPrint = table.Column<bool>(nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_MF_QL", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "MF_QY_M",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    QY_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    QY_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    BIL_ID = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    BIL_NO = table.Column<string>(unicode: false, maxLength: 25, nullable: true),
                    SAL_NO = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    DEP = table.Column<string>(unicode: false, maxLength: 8, nullable: true),
                    CHK_MAN = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    CLS_DATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    SYS_DATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    USR = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    BIL_TYPE = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    MOB_ID = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    CPY_SW = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    PRT_SW = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    REM = table.Column<string>(type: "text", nullable: true),
                    LOCK_MAN = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    LOCK_DATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    PRT_USR = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    CANCEL_ID = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    PRT_DATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    MODIFY_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    MODIFY_MAN = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    BusiNo = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    BilType = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    BilTypeName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkMan = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkManName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    IsClose = table.Column<bool>(nullable: true),
                    ClsDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ClsUsr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ClsUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkMob = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    IsPrint = table.Column<bool>(nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_MF_QY_M", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "MF_QY_S",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    QY_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    QY_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    BIL_ID = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    BIL_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    DEP = table.Column<string>(unicode: false, maxLength: 8, nullable: true),
                    SAL_NO = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    PRT_SW = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    CPY_SW = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    LOCK_MAN = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    LOCK_DATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    PRT_USR = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    CANCEL_ID = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    PRT_DATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    Rem = table.Column<string>(unicode: false, maxLength: 4000, nullable: true),
                    BusiNo = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    BilType = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    BilTypeName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    Usr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkMan = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkManName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    IsClose = table.Column<bool>(nullable: true),
                    ClsDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ClsUsr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ClsUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkMob = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    IsPrint = table.Column<bool>(nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_MF_QY_S", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "MF_RSC",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    RSC_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    RSC_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    BIL_ID = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    BIL_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    SAL_NO = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    DEP = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    USR = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    CHK_MAN = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    CLS_DATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    SYS_DATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    BIL_TYPE = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    MOB_ID = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    PRT_SW = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    CPY_SW = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    REM = table.Column<string>(type: "text", nullable: true),
                    CLOSE_ID = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    LOCK_MAN = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    LOCK_DATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    PRT_USR = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    CANCEL_ID = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    PRT_DATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    MODIFY_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    MODIFY_MAN = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    BusiNo = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    BilType = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    BilTypeName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    Usr1 = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkMan = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkManName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    IsClose = table.Column<bool>(nullable: true),
                    ClsDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ClsUsr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ClsUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkMob = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    IsPrint = table.Column<bool>(nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_MF_RSC", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "MF_RX_M",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    RX_ID = table.Column<string>(unicode: false, maxLength: 2, nullable: false),
                    RX_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    RX_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    BIL_ID = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    BIL_NO = table.Column<string>(unicode: false, maxLength: 25, nullable: true),
                    SAL_NO = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    DEP = table.Column<string>(unicode: false, maxLength: 8, nullable: true),
                    WH = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    BIL_TYPE = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    USR = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    CHK_MAN = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    CLS_DATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    SYS_DATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    PRT_SW = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    CPY_SW = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    MOB_ID = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    REM = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    DEP_REP = table.Column<string>(unicode: false, maxLength: 8, nullable: true),
                    CUS_NO = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    VOH_ID = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    VOH_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    TAX_ID = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    LOCK_MAN = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    LOCK_DATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    CUR_ID = table.Column<string>(unicode: false, maxLength: 4, nullable: true),
                    EXC_RTO = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    ZHANG_ID = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    PRT_USR = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    CANCEL_ID = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    PRT_DATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    MODIFY_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    MODIFY_MAN = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    BusiNo = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    BilType = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    BilTypeName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    Usr1 = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkMan = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkManName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    IsClose = table.Column<bool>(nullable: true),
                    ClsDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ClsUsr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ClsUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkMob = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    IsPrint = table.Column<bool>(nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_MF_RX_M", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "MF_RX_S",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    RX_ID = table.Column<string>(unicode: false, maxLength: 2, nullable: false),
                    RX_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    RX_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    BIL_ID = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    BIL_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    DEP = table.Column<string>(unicode: false, maxLength: 8, nullable: true),
                    SAL_NO = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    CUS_NO = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    Rem = table.Column<string>(unicode: false, maxLength: 4000, nullable: true),
                    BusiNo = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    BilType = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    BilTypeName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    Usr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkMan = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkManName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    IsClose = table.Column<bool>(nullable: true),
                    ClsDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ClsUsr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ClsUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkMob = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    IsPrint = table.Column<bool>(nullable: true),
                    CHK_AUTOUSE = table.Column<bool>(nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_MF_RX_S", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "MF_SBAA",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    AA_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    AA_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    CK_ID = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    DEP = table.Column<string>(unicode: false, maxLength: 8, nullable: true),
                    SAL_NO = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    VOH_ID = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    VOH_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    BIL_ID = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    BIL_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    CPY_SW = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    PRT_SW = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    PRT_USR = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    LOCK_MAN = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    LOCK_DATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    PRT_DATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    MOD_ID = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    WX_ID = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    WX_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    Rem = table.Column<string>(unicode: false, maxLength: 4000, nullable: true),
                    BusiNo = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    BilType = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    BilTypeName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    Usr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkMan = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkManName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    IsClose = table.Column<bool>(nullable: true),
                    ClsDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ClsUsr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ClsUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkMob = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    IsPrint = table.Column<bool>(nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_MF_SBAA", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "MF_SBYCBG",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    YC_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    YC_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    SEB_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ITM_SB = table.Column<int>(nullable: true),
                    DEP = table.Column<string>(unicode: false, maxLength: 8, nullable: true),
                    SAL_NO = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    MRP_NO = table.Column<string>(unicode: false, maxLength: 30, nullable: true),
                    YC_REM = table.Column<string>(type: "text", nullable: true),
                    WX_FLAG = table.Column<bool>(nullable: true),
                    PRT_SW = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    PRT_USR = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    LOCK_MAN = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    LOCK_DATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    CPY_SW = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    CANCEL_ID = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    PRT_DATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    Rem = table.Column<string>(unicode: false, maxLength: 4000, nullable: true),
                    BusiNo = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    BilType = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    BilTypeName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    Usr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkMan = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkManName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    IsClose = table.Column<bool>(nullable: true),
                    ClsDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ClsUsr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ClsUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkMob = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    IsPrint = table.Column<bool>(nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_MF_SBYCBG", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "MF_SQ",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    SQ_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    SQ_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    DEP = table.Column<string>(unicode: false, maxLength: 8, nullable: true),
                    CUS_NO = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    SAL_NO = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    PO_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    INC_ID = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    REM = table.Column<string>(type: "text", nullable: true),
                    EST_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    BIL_ID = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    USR = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    CHK_MAN = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    PRT_SW = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    CPY_SW = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    BAT_NO = table.Column<string>(unicode: false, maxLength: 40, nullable: true),
                    BIL_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    CLS_DATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    PO_DEP = table.Column<string>(unicode: false, maxLength: 8, nullable: true),
                    CLS_ID = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    BACK_ID = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    BIL_TYPE = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    CUR_ID = table.Column<string>(unicode: false, maxLength: 4, nullable: true),
                    EXC_RTO = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    SO_NO = table.Column<string>(unicode: false, maxLength: 25, nullable: true),
                    MOB_ID = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    LOCK_MAN = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    LOCK_DATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    SYS_DATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    CAS_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    TASK_ID = table.Column<int>(nullable: true),
                    SO_ID = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    PRT_USR = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    CNTT_NO = table.Column<string>(unicode: false, maxLength: 40, nullable: true),
                    CANCEL_ID = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    PRT_DATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    MODIFY_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    MODIFY_MAN = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    BusiNo = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    BilType = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    BilTypeName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkMan = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkManName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    IsClose = table.Column<bool>(nullable: true),
                    ClsDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ClsUsr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ClsUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkMob = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    IsPrint = table.Column<bool>(nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_MF_SQ", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "MF_SQD",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    SQ_ID = table.Column<string>(unicode: false, maxLength: 2, nullable: false),
                    SQ_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    SQ_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    DEP = table.Column<string>(unicode: false, maxLength: 8, nullable: true),
                    DEP_ML = table.Column<string>(unicode: false, maxLength: 8, nullable: true),
                    BIL_TYPE = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    SAL_NO = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    REASON = table.Column<string>(unicode: false, maxLength: 60, nullable: true),
                    BIL_ID = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    BIL_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    CLS_ID = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    CHK_MAN = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    CLS_DATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    USR = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    SYS_DATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    PRT_SW = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    CPY_SW = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    REM = table.Column<string>(unicode: false, maxLength: 500, nullable: true),
                    MOB_ID = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    LOCK_MAN = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    LOCK_DATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    PRT_USR = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    BF_TYPE = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    CAS_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    TASK_ID = table.Column<int>(nullable: true),
                    BAT_NO = table.Column<string>(unicode: false, maxLength: 40, nullable: true),
                    JH_SO_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    CANCEL_ID = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    PO_OK = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    PRT_DATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    MODIFY_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    MODIFY_MAN = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    BusiNo = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    BilType = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    BilTypeName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkMan = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkManName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    IsClose = table.Column<bool>(nullable: true),
                    ClsDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ClsUsr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ClsUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkMob = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    IsPrint = table.Column<bool>(nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_MF_SQD", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "MF_ST_M",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    ST_ID = table.Column<string>(unicode: false, maxLength: 2, nullable: false),
                    ST_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    ST_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    BIL_ID = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    BIL_NO = table.Column<string>(unicode: false, maxLength: 25, nullable: true),
                    SAL_NO = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    USR = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    CHK_MAN = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    CLS_DATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    BIL_TYPE = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    SYS_DATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    DEP = table.Column<string>(unicode: false, maxLength: 8, nullable: true),
                    MOB_ID = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    PRT_SW = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    CPY_SW = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    REM = table.Column<string>(type: "text", nullable: true),
                    CLOSE_ID = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    LOCK_MAN = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    LOCK_DATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    PRT_USR = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    CANCEL_ID = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    VOH_ID = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    VOH_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    PRT_DATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    MODIFY_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    MODIFY_MAN = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    BusiNo = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    BilType = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    BilTypeName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkMan = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkManName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    IsClose = table.Column<bool>(nullable: true),
                    ClsDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ClsUsr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ClsUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkMob = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    IsPrint = table.Column<bool>(nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_MF_ST_M", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "MF_ST_S",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    ST_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    ST_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    BIL_ID = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    BIL_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    DEP = table.Column<string>(unicode: false, maxLength: 8, nullable: true),
                    SAL_NO = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    CPY_SW = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    PRT_SW = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    CLOSE_ID = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    Rem = table.Column<string>(type: "text", nullable: true),
                    LOCK_MAN = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    LOCK_DATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    PRT_USR = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    CANCEL_ID = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    PRT_DATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    BusiNo = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    BilType = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    BilTypeName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    Usr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkMan = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkManName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    IsClose = table.Column<bool>(nullable: true),
                    ClsDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ClsUsr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ClsUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkMob = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    IsPrint = table.Column<bool>(nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_MF_ST_S", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "MF_TB",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    TB_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    TB_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    PAY_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    CHK_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    TRAD_MTH = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    BAT_NO = table.Column<string>(unicode: false, maxLength: 40, nullable: true),
                    CUS_NO = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    VOH_ID = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    VOH_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    DEP = table.Column<string>(unicode: false, maxLength: 8, nullable: true),
                    INV_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    TAX_ID = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    TW_NO = table.Column<string>(unicode: false, maxLength: 25, nullable: true),
                    SEND_MTH = table.Column<string>(unicode: false, maxLength: 200, nullable: true),
                    SEND_WH = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    RP_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ZHANG_ID = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    CUR_ID = table.Column<string>(unicode: false, maxLength: 4, nullable: true),
                    EXC_RTO = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    SAL_NO = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    ARP_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    AMTN_IRP = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    AMT_IRP = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    TAX_IRP = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    PAY_MTH = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    PAY_DAYS = table.Column<short>(nullable: true),
                    CHK_DAYS = table.Column<short>(nullable: true),
                    INT_DAYS = table.Column<short>(nullable: true),
                    PAY_REM = table.Column<string>(unicode: false, maxLength: 80, nullable: true),
                    CLOSE_ID = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    REM = table.Column<string>(type: "text", nullable: true),
                    BIL_ID = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    BIL_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    CPY_SW = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    CLS_REM = table.Column<string>(unicode: false, maxLength: 30, nullable: true),
                    USR = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    CHK_MAN = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    PRT_SW = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    CLS_DATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    MMVOH_ID = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    EP_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    AMTN_EP = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    RTO_TAX = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    BIL_TYPE = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    KP_ID = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    LZ_CLS_ID = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    MOB_ID = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    LOCK_MAN = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    LOCK_DATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    FJ_NUM = table.Column<short>(nullable: true),
                    SYS_DATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    AMT_CLS = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    AMTN_NET_CLS = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    TAX_CLS = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CAS_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    TASK_ID = table.Column<int>(nullable: true),
                    TURN_ID = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    TW_ID = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    CUS_OS_NO = table.Column<string>(unicode: false, maxLength: 30, nullable: true),
                    PRT_USR = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    QTY_CLS = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CANCEL_ID = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    RTO_FQSK = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    DATEFLAG_FQSK = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    DATE_FQSK = table.Column<DateTime>(type: "datetime", nullable: true),
                    QS_FQSK = table.Column<int>(nullable: true),
                    CUR_ID_IFRS = table.Column<string>(unicode: false, maxLength: 4, nullable: true),
                    EXC_RTO_IFRS = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    AMTN_EP_IFRS = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    PRT_DATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    QTY1_CLS = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    INV_BIL_ID = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    INV_BIL_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    LZ_CLS_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    BIL_COMP = table.Column<string>(unicode: false, maxLength: 13, nullable: true),
                    MODIFY_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    MODIFY_MAN = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    SCAN_ID = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    SCAN_USR = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    SCAN_DATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    DZ_USR = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    DZ_DATE = table.Column<DateTime>(type: "datetime", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_MF_TB", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "MF_TI",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    TI_ID = table.Column<string>(unicode: false, maxLength: 4, nullable: false),
                    R_BusiNO = table.Column<string>(unicode: false, maxLength: 500, nullable: true),
                    TI_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    TI_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    BIL_ID = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    BIL_NO = table.Column<string>(unicode: false, maxLength: 25, nullable: true),
                    SAL_NO = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    CUS_NO = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    DEP = table.Column<string>(unicode: false, maxLength: 8, nullable: true),
                    BAT_NO = table.Column<string>(unicode: false, maxLength: 40, nullable: true),
                    PRT_SW = table.Column<bool>(nullable: true, defaultValueSql: "((0))"),
                    CPY_SW = table.Column<bool>(nullable: true, defaultValueSql: "((0))"),
                    OS_ID = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    OS_NO = table.Column<string>(unicode: false, maxLength: 25, nullable: true),
                    CHKTY_ID = table.Column<bool>(nullable: true, defaultValueSql: "((1))"),
                    CUS_OS_NO = table.Column<string>(unicode: false, maxLength: 30, nullable: true),
                    LOCK_MAN = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    LOCK_DATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    FX_WH = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    PRT_USR = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    CNTT_NO = table.Column<string>(unicode: false, maxLength: 40, nullable: true),
                    CHKTYPEID = table.Column<bool>(nullable: true, defaultValueSql: "((0))"),
                    CANCEL_ID = table.Column<bool>(nullable: true, defaultValueSql: "((0))"),
                    PRT_DATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    BACK_ID = table.Column<bool>(nullable: true, defaultValueSql: "((0))"),
                    BIL_COMP = table.Column<string>(unicode: false, maxLength: 13, nullable: true),
                    SCAN_ID = table.Column<bool>(nullable: true, defaultValueSql: "((0))"),
                    SCAN_USR = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    SCAN_DATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    ZJ_ID = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    Rem = table.Column<string>(unicode: false, maxLength: 3500, nullable: true),
                    BusiNo = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    BilType = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    BilTypeName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    Usr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkMan = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkManName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    IsClose = table.Column<bool>(nullable: true),
                    ClsDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ClsUsr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ClsUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkMob = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    IsPrint = table.Column<bool>(nullable: true),
                    TZ_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_MF_TI", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "MF_TW",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    TW_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    TW_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    BAT_NO = table.Column<string>(unicode: false, maxLength: 40, nullable: true),
                    BIL_ID = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    BIL_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    VOH_ID = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    VOH_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    SEND_MTH = table.Column<string>(unicode: false, maxLength: 200, nullable: true),
                    SEND_WH = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    EST_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    CUS_NO = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    SAL_NO = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    DEP = table.Column<string>(unicode: false, maxLength: 8, nullable: true),
                    CUR_ID = table.Column<string>(unicode: false, maxLength: 4, nullable: true),
                    EXC_RTO = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CLOSE_ID = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    TAX_ID = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    INV_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    RP_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    AMTN_NET = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    TAX = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    AMT = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    REM = table.Column<string>(type: "text", nullable: true),
                    ADR = table.Column<string>(type: "text", nullable: true),
                    MO_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ZC_NO = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    MRP_NO = table.Column<string>(unicode: false, maxLength: 30, nullable: true),
                    PRD_MARK = table.Column<string>(unicode: false, maxLength: 40, nullable: true, defaultValueSql: "(space((0)))"),
                    WH = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    UNIT = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    QTY = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    UP = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_RTN = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_RTN_UNSH = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_LOST = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_LOST_UNSH = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_ML = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_ML_UNSH = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    AMT_INT = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    AMTN_NET_INT = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    TAX_INT = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    ML_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    CONTRACT = table.Column<string>(unicode: false, maxLength: 80, nullable: true),
                    CPY_SW = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    CUS_UP = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    CUS_DOWN = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    ML_OK = table.Column<bool>(nullable: true),
                    USR = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    CHK_MAN = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    PRT_SW = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    QTY_RK = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_RK_UNSH = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    ZC_ITM = table.Column<int>(nullable: true),
                    FIN_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    CHK_ID = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    MV_ID = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    QTY_PRC = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_MV = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_MV_UNSH = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_CHK = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_CHK_UNSH = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    ZC_NO_UP = table.Column<string>(unicode: false, maxLength: 440, nullable: true),
                    ZC_NO_DN = table.Column<string>(unicode: false, maxLength: 440, nullable: true),
                    QTY_WH = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CLS_DATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    ID_NO = table.Column<string>(unicode: false, maxLength: 38, nullable: true),
                    CST = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    WT_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    QC_YN = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    MM_CURML = table.Column<bool>(nullable: true),
                    SO_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    EST_ITM = table.Column<int>(nullable: true),
                    QTY1 = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    TS_ID = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    ISFIRST = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    QTY_TC = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_TC_UNSH = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    RTO_TAX = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    UP1 = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    BIL_TYPE = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    CNTT_NO = table.Column<string>(unicode: false, maxLength: 40, nullable: true),
                    MOB_ID = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    LOCK_MAN = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    LOCK_DATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    FJ_NUM = table.Column<short>(nullable: true),
                    SYS_DATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    CAS_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    TASK_ID = table.Column<int>(nullable: true),
                    OLD_ID = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    QTY_SL = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_SL_UNSH = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    SCM_USR = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    SCM_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    CUS_OS_NO = table.Column<string>(unicode: false, maxLength: 30, nullable: true),
                    PRT_USR = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    QTY_QL = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_QL_UNSH = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QL_ID = table.Column<bool>(nullable: true),
                    Q2_ID = table.Column<bool>(nullable: true),
                    Q3_ID = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    QTY_DZ = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    ISSVS = table.Column<bool>(nullable: true),
                    PRT_NUM = table.Column<int>(nullable: true),
                    ML_BY_MM = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    QTY_DM = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_DM_UNSH = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CONTROL = table.Column<bool>(nullable: true),
                    PAY_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    CHK_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    PAY_MTH = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    PAY_DAYS = table.Column<short>(nullable: true),
                    CHK_DAYS = table.Column<short>(nullable: true),
                    INT_DAYS = table.Column<short>(nullable: true),
                    PAY_REM = table.Column<string>(unicode: false, maxLength: 80, nullable: true),
                    CLS_REM = table.Column<string>(unicode: false, maxLength: 30, nullable: true),
                    ZC_REM = table.Column<string>(type: "text", nullable: true),
                    PO_OK = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    CF_ID = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    ZT_ID = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    ZT_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    CV_ID = table.Column<bool>(nullable: true),
                    QTY_DZ_UNSH = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CANCEL_ID = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    RTO_FQSK = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    DATEFLAG_FQSK = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    DATE_FQSK = table.Column<DateTime>(type: "datetime", nullable: true),
                    QS_FQSK = table.Column<int>(nullable: true),
                    STA_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    FREE_ID = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    PRT_DATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    INV_BIL_ID = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    INV_BIL_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    SG_ID1 = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    DIS_CNT = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    AMT_DIS_CNT = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    MODIFY_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    MODIFY_MAN = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    SUP_PRD_NO = table.Column<string>(unicode: false, maxLength: 40, nullable: true),
                    SUP_PRD_MARK = table.Column<string>(unicode: false, maxLength: 40, nullable: true),
                    QTY_LOST_SZC = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_LOST_ZC = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_LOST_SZC_UNSH = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_LOST_ZC_UNSH = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CUS_NO_SO = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    ZHANG_ID = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    BACK_ID = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    RP_NO1 = table.Column<string>(type: "text", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_MF_TW", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "MF_TY",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    TY_ID = table.Column<string>(unicode: false, maxLength: 4, nullable: false),
                    TY_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    TY_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    SAL_NO = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    CUS_NO = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    TI_NO = table.Column<string>(unicode: false, maxLength: 25, nullable: true),
                    TB_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    PRJ_TYPE = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    PFA_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    PHOTO_ZC = table.Column<Guid>(nullable: true),
                    PRE_CLS_ID = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    PRD_LIST = table.Column<string>(unicode: false, maxLength: 80, nullable: true),
                    BIL_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    BIL_ID = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    OLEFIELD = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    DEP = table.Column<string>(unicode: false, maxLength: 8, nullable: true),
                    CUS_OS_NO = table.Column<string>(unicode: false, maxLength: 30, nullable: true),
                    BARCODE = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    TI_ID = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    FX_WH = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    CLS_ID_OK = table.Column<bool>(nullable: true),
                    CLS_ID_LOST = table.Column<bool>(nullable: true),
                    VOH_ID = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    VOH_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ZHANG_ID = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    TAX_ID = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    ARP_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    CUR_ID = table.Column<string>(unicode: false, maxLength: 4, nullable: true),
                    EXC_RTO = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CNTT_NO = table.Column<string>(unicode: false, maxLength: 40, nullable: true),
                    CHK_KND = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    CHK_RESULT = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    CANCEL_ID = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    PRT_DATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    SCAN_ID = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    SCAN_USR = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    SCAN_DATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    Rem = table.Column<string>(unicode: false, maxLength: 3500, nullable: true),
                    BusiNo = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    BilType = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    BilTypeName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    Usr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkMan = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkManName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    IsClose = table.Column<bool>(nullable: true),
                    ClsDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ClsUsr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ClsUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkMob = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    IsPrint = table.Column<bool>(nullable: true),
                    PRD_NO = table.Column<string>(unicode: false, maxLength: 30, nullable: true),
                    PRJ_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    QTY = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_ACT_CHK = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_OK = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_LOST = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_SCRAP = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QC_REPORT = table.Column<string>(unicode: false, maxLength: 200, nullable: true),
                    TZ_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    IsQualified = table.Column<bool>(nullable: true),
                    PRJ_FEATURE = table.Column<string>(unicode: false, maxLength: 10, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_MF_TY", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "MF_TYPROCJY_Z",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    MID = table.Column<int>(nullable: false),
                    uc_READ = table.Column<string>(maxLength: 2000, nullable: false, defaultValueSql: "('')")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_MF_TYPROCJY_Z", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "MF_TZ",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    TZ_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    TZ_DD = table.Column<DateTime>(type: "datetime", nullable: false),
                    MO_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    MRP_NO = table.Column<string>(unicode: false, maxLength: 30, nullable: false),
                    PRD_MARK = table.Column<string>(unicode: false, maxLength: 40, nullable: true, defaultValueSql: "(space((0)))"),
                    UNIT = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    QTY = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    ZC_NO = table.Column<string>(unicode: false, maxLength: 10, nullable: false),
                    STA_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    END_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    DEP_UP = table.Column<string>(unicode: false, maxLength: 8, nullable: true),
                    DEP_DOWN = table.Column<string>(unicode: false, maxLength: 8, nullable: true),
                    QTY_FIN = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    BIL_ID = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    BIL_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    DEP = table.Column<string>(unicode: false, maxLength: 8, nullable: true),
                    BAT_NO = table.Column<string>(unicode: false, maxLength: 40, nullable: true),
                    SO_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    QTY_ML = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    OPN_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    FIN_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    HEAT_NUM = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ML_OK = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    MD_NO = table.Column<string>(unicode: false, maxLength: 400, nullable: true),
                    ZC_ITM = table.Column<int>(nullable: true),
                    CHK_ID = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    MV_ID = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    QTY_PRC = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_CHK = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_MV = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_LOST = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    ZC_NO_UP = table.Column<string>(unicode: false, maxLength: 440, nullable: true),
                    ZC_NO_DN = table.Column<string>(unicode: false, maxLength: 440, nullable: true),
                    ID_NO = table.Column<string>(unicode: false, maxLength: 38, nullable: true),
                    QTY_RK = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CST_MAKE = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CST_PRD = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CST_OUT = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CST_MAN = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    USED_TIME = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CST = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    TIME_CNT = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY1 = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    EST_ITM = table.Column<int>(nullable: true),
                    PC_ITM = table.Column<int>(nullable: true),
                    SEB_NO = table.Column<string>(unicode: false, maxLength: 200, nullable: true),
                    GRP_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    OUT_DD_MOJ = table.Column<DateTime>(type: "datetime", nullable: true),
                    SAL_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    TASK_ID = table.Column<int>(nullable: true),
                    CUS_OS_NO = table.Column<string>(unicode: false, maxLength: 30, nullable: true),
                    CHKQCSJ = table.Column<bool>(nullable: true),
                    QTY_LOST_SZC = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_QS = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_QS_UNSH = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    ML_FIN = table.Column<bool>(nullable: true),
                    ZT_ID = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    ZT_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    QTY_CHK_UNSH = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    TZ_STATE = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    BusiNo = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    BilType = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    BilTypeName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    Usr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkMan = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkManName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    IsClose = table.Column<bool>(nullable: true),
                    ClsDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ClsUsr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ClsUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkMob = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    IsPrint = table.Column<bool>(nullable: true),
                    GP_ID = table.Column<bool>(nullable: true),
                    QTY_Scrap = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    PC_BAN = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    REM = table.Column<string>(unicode: false, maxLength: 500, nullable: true),
                    RREM = table.Column<string>(unicode: false, maxLength: 500, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_MF_TZ", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "MF_UNQC_RECORD",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    NO = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    DATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    SAL_NO = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    PRD_NO = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    ZC_NO = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    Rem = table.Column<string>(unicode: false, maxLength: 4000, nullable: true),
                    BusiNo = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    BilType = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    BilTypeName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    Usr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkMan = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkManName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    IsClose = table.Column<bool>(nullable: true),
                    ClsDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ClsUsr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ClsUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkMob = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    IsPrint = table.Column<bool>(nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_MF_UNQC_RECORD", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "MF_UNQCPRDHL",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    BIL_ID = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    BIL_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    SAL_NO = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    CUS_NO = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    ZC_NO = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    PRD_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    OP_CUS_NO = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    OP_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    MO_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    TZ_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    No = table.Column<string>(unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')"),
                    BillDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    Rem = table.Column<string>(unicode: false, maxLength: 200, nullable: true, defaultValueSql: "('')"),
                    BusiNo = table.Column<string>(unicode: false, maxLength: 50, nullable: true, defaultValueSql: "('')"),
                    BilType = table.Column<string>(unicode: false, maxLength: 20, nullable: true, defaultValueSql: "('')"),
                    BilTypeName = table.Column<string>(unicode: false, maxLength: 20, nullable: true, defaultValueSql: "('')"),
                    Usr = table.Column<string>(unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')"),
                    UsrName = table.Column<string>(unicode: false, maxLength: 50, nullable: true, defaultValueSql: "('')"),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: false, defaultValueSql: "(getdate())"),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 50, nullable: true, defaultValueSql: "('')"),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 50, nullable: true, defaultValueSql: "('')"),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true, defaultValueSql: "(getdate())"),
                    ChkMan = table.Column<string>(unicode: false, maxLength: 50, nullable: true, defaultValueSql: "('')"),
                    ChkManName = table.Column<string>(unicode: false, maxLength: 50, nullable: true, defaultValueSql: "('')"),
                    ChkDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ChkMob = table.Column<string>(unicode: false, maxLength: 100, nullable: true, defaultValueSql: "('')"),
                    IsClose = table.Column<bool>(nullable: true, defaultValueSql: "((0))"),
                    ClsDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ClsUsr = table.Column<string>(unicode: false, maxLength: 50, nullable: true, defaultValueSql: "('')"),
                    ClsUsrName = table.Column<string>(unicode: false, maxLength: 50, nullable: true, defaultValueSql: "('')"),
                    IsPrint = table.Column<bool>(nullable: true, defaultValueSql: "((0))"),
                    ID_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_MF_UNQCPRDHL", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "MF_VHID",
                columns: table => new
                {
                    BIL_ID = table.Column<string>(unicode: false, maxLength: 2, nullable: false),
                    VOH_ID = table.Column<string>(unicode: false, maxLength: 2, nullable: false),
                    NAME = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    REM_ID = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    DEP = table.Column<string>(unicode: false, maxLength: 8, nullable: true),
                    UP_DD = table.Column<byte[]>(nullable: true),
                    REDFLAG = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    A = table.Column<string>(unicode: false, maxLength: 1, nullable: true)
                },
                constraints: table =>
                {
                });

            migrationBuilder.CreateTable(
                name: "MF_WJ_M",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    WXJ_ID = table.Column<string>(unicode: false, maxLength: 2, nullable: false),
                    WXJ_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    WXJ_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    SAL_NO = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    CUS_NO = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    DEP_REP = table.Column<string>(unicode: false, maxLength: 8, nullable: true),
                    DEP = table.Column<string>(unicode: false, maxLength: 8, nullable: true),
                    USR = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    CHK_MAN = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    CLS_DATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    SYS_DATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    MOB_ID = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    PRT_SW = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    CPY_SW = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    BIL_TYPE = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    B_DD_REP = table.Column<DateTime>(type: "datetime", nullable: true),
                    E_DD_REP = table.Column<DateTime>(type: "datetime", nullable: true),
                    REP_NO = table.Column<string>(unicode: false, maxLength: 8, nullable: true),
                    REM = table.Column<string>(type: "text", nullable: true),
                    CLOSE_ID = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    LOCK_MAN = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    LOCK_DATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    PRT_USR = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    CANCEL_ID = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    PRT_DATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    MODIFY_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    MODIFY_MAN = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    BusiNo = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    BilType = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    BilTypeName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkMan = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkManName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    IsClose = table.Column<bool>(nullable: true),
                    ClsDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ClsUsr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ClsUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkMob = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    IsPrint = table.Column<bool>(nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_MF_WJ_M", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "MF_WJ_S",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    WXJ_ID = table.Column<string>(unicode: false, maxLength: 2, nullable: false),
                    WXJ_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    WXJ_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    SAL_NO = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    DEP_REP = table.Column<string>(unicode: false, maxLength: 8, nullable: true),
                    CUS_NO = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    DEP = table.Column<string>(unicode: false, maxLength: 8, nullable: true),
                    B_DD_REP = table.Column<DateTime>(type: "datetime", nullable: true),
                    E_DD_REP = table.Column<DateTime>(type: "datetime", nullable: true),
                    REP_NO = table.Column<string>(unicode: false, maxLength: 8, nullable: true),
                    BusiNo = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    BilType = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    BilTypeName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    Usr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkMan = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkManName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    IsClose = table.Column<bool>(nullable: true),
                    ClsDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ClsUsr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ClsUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkMob = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    IsPrint = table.Column<bool>(nullable: true),
                    Rem = table.Column<string>(unicode: false, maxLength: 3500, nullable: true),
                    SEB_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    SAL_REP = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    TIME_REP = table.Column<decimal>(type: "decimal(18, 4)", nullable: true),
                    Status = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    WS_SB_SAL = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    SAL_REP_Leader = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    SEB_Engineer = table.Column<string>(unicode: false, maxLength: 12, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_MF_WJ_S", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "MF_WX_M",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    WX_ID = table.Column<string>(unicode: false, maxLength: 2, nullable: false),
                    WX_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    WX_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    BIL_ID = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    BIL_NO = table.Column<string>(unicode: false, maxLength: 25, nullable: true),
                    SAL_NO = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    DEP_REP = table.Column<string>(unicode: false, maxLength: 8, nullable: true),
                    CUS_NO = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    USR = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    CHK_MAN = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    CLS_DATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    SYS_DATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    MOB_ID = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    PRT_SW = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    CPY_SW = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    BIL_TYPE = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    DEP = table.Column<string>(unicode: false, maxLength: 8, nullable: true),
                    REM = table.Column<string>(type: "text", nullable: true),
                    CLOSE_ID = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    CUR_ID = table.Column<string>(unicode: false, maxLength: 4, nullable: true),
                    EXC_RTO = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    AMTN = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    AMT = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    LOCK_MAN = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    LOCK_DATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    PRT_USR = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    CANCEL_ID = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    PRT_DATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    MODIFY_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    MODIFY_MAN = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    BusiNo = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    BilType = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    BilTypeName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkMan = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkManName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    IsClose = table.Column<bool>(nullable: true),
                    ClsDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ClsUsr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ClsUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkMob = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    IsPrint = table.Column<bool>(nullable: true),
                    WX_BE_DATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    WX_EN_DATE = table.Column<DateTime>(type: "datetime", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_MF_WX_M", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "MF_WX_S",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    WX_ID = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    WX_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    WX_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    BIL_ID = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    BIL_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    SAL_NO = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    CUS_NO = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    DEP_REP = table.Column<string>(unicode: false, maxLength: 8, nullable: true),
                    WX_RESULT = table.Column<string>(unicode: false, maxLength: 8, nullable: true),
                    WX_BE_DATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    WX_EN_DATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    WX_TOT_TIME = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    COMM_EN_DATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    DEP = table.Column<string>(unicode: false, maxLength: 8, nullable: true),
                    Rem = table.Column<string>(unicode: false, maxLength: 4000, nullable: true),
                    BusiNo = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    BilType = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    BilTypeName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    Usr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkMan = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkManName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    IsClose = table.Column<bool>(nullable: true),
                    ClsDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ClsUsr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ClsUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkMob = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    IsPrint = table.Column<bool>(nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_MF_WX_S", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "MF_ZC",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    BOM_NO = table.Column<string>(unicode: false, maxLength: 38, nullable: true),
                    PRD_NO = table.Column<string>(unicode: false, maxLength: 30, nullable: true),
                    PRD_MARK = table.Column<string>(unicode: false, maxLength: 40, nullable: true, defaultValueSql: "(space((0)))"),
                    SPC = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    UNIT = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    QTY = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    Rem = table.Column<string>(type: "text", nullable: true),
                    QTY_BAT = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    PF_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    NAME = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    DEP = table.Column<string>(unicode: false, maxLength: 8, nullable: true),
                    BusiNo = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    BilType = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    BilTypeName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    Usr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkMan = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkManName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    IsClose = table.Column<bool>(nullable: true),
                    ClsDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ClsUsr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ClsUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkMob = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    IsPrint = table.Column<bool>(nullable: true),
                    Effect_Date = table.Column<DateTime>(type: "datetime", nullable: true),
                    Expiry_Date = table.Column<DateTime>(type: "datetime", nullable: true),
                    NO = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Src_No = table.Column<string>(unicode: false, maxLength: 36, nullable: true),
                    Src_Type = table.Column<string>(unicode: false, maxLength: 30, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_MF_ZC", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "MF_ZG",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    ZG_ID = table.Column<string>(unicode: false, maxLength: 2, nullable: false),
                    ZG_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    ZG_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    TRAD_MTH = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    BAT_NO = table.Column<string>(unicode: false, maxLength: 40, nullable: true),
                    CUS_NO = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    VOH_ID = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    VOH_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    DEP = table.Column<string>(unicode: false, maxLength: 8, nullable: true),
                    TAX_ID = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    OS_ID = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    OS_NO = table.Column<string>(unicode: false, maxLength: 25, nullable: true),
                    SEND_MTH = table.Column<string>(unicode: false, maxLength: 200, nullable: true),
                    SEND_WH = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    ZHANG_ID = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    CUR_ID = table.Column<string>(unicode: false, maxLength: 4, nullable: true),
                    EXC_RTO = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    SAL_NO = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    ADR = table.Column<string>(type: "text", nullable: true),
                    REM = table.Column<string>(type: "text", nullable: true),
                    PAY_MTH = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    PAY_DAYS = table.Column<short>(nullable: true),
                    CHK_DAYS = table.Column<short>(nullable: true),
                    PAY_REM = table.Column<string>(unicode: false, maxLength: 80, nullable: true),
                    PAY_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    CHK_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    INT_DAYS = table.Column<short>(nullable: true),
                    CLS_REM = table.Column<string>(unicode: false, maxLength: 30, nullable: true),
                    PRT_SW = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    CPY_SW = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    DIS_CNT = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CONTRACT = table.Column<string>(unicode: false, maxLength: 80, nullable: true),
                    AMT = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CLS_DATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    CUS_OS_NO = table.Column<string>(unicode: false, maxLength: 30, nullable: true),
                    BIL_TYPE = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    CAS_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    CLS_ID = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    CLSID = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    USR = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    CHK_MAN = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    ZB_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    HC_ID = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    BIL_ID = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    BIL_NO = table.Column<string>(unicode: false, maxLength: 25, nullable: true),
                    PO_ID = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    MOB_ID = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    LOCK_MAN = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    LOCK_DATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    FJ_NUM = table.Column<short>(nullable: true),
                    SYS_DATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    TASK_ID = table.Column<int>(nullable: true),
                    PRT_USR = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    CNTT_NO = table.Column<string>(unicode: false, maxLength: 40, nullable: true),
                    CANCEL_ID = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    RTO_FQSK = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    DATEFLAG_FQSK = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    DATE_FQSK = table.Column<DateTime>(type: "datetime", nullable: true),
                    QS_FQSK = table.Column<int>(nullable: true),
                    CUR_ID_IFRS = table.Column<string>(unicode: false, maxLength: 4, nullable: true),
                    EXC_RTO_IFRS = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    PRT_DATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    AMT_POI = table.Column<short>(nullable: true),
                    MODIFY_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    MODIFY_MAN = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    SCAN_ID = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    SCAN_USR = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    SCAN_DATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    SG_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    SG_ID = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    BusiNo = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    BilType = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    BilTypeName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkMan = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkManName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    IsClose = table.Column<bool>(nullable: true),
                    ClsDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ClsUsr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ClsUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkMob = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    IsPrint = table.Column<bool>(nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_MF_ZG", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "MK_YG",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    MID = table.Column<int>(nullable: true),
                    ITM = table.Column<int>(nullable: true),
                    BIL_ID = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    BIL_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    YG_NO = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    SPC_NO = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    ZC_NO = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    MOD_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true, defaultValueSql: "(space((0)))"),
                    SEB_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true, defaultValueSql: "(space((0)))"),
                    QTY = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_LOST = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_Scrap = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    UNIT = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    USE_TIME = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    REM = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    PRD_NO = table.Column<string>(unicode: false, maxLength: 30, nullable: true),
                    PRD_MARK = table.Column<string>(unicode: false, maxLength: 40, nullable: true, defaultValueSql: "(space((0)))"),
                    BIL_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    BOM_NO = table.Column<string>(unicode: false, maxLength: 38, nullable: true),
                    QTY_ZC = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    KEY_ITM = table.Column<int>(nullable: true),
                    DJ_NO = table.Column<string>(unicode: false, maxLength: 4, nullable: true),
                    BAN_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    MO_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    TZ_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    BAT_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Barcode = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    STA_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    END_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    SAL_NO = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    DELIVERY_DEP = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    RESPONSIBILITY_DEP = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    BAN_GROUP_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    BACK_REASON = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    Usr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UsrName = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: true, defaultValueSql: "(getdate())"),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    IsClose = table.Column<bool>(nullable: true),
                    BusiNo = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    isDelete = table.Column<bool>(nullable: true),
                    StationNo = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    WorkGroup = table.Column<string>(unicode: false, maxLength: 20, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_MK_YG", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "MKPG",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    No = table.Column<string>(unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')"),
                    PG_DD = table.Column<DateTime>(type: "datetime", nullable: false),
                    SAL_No = table.Column<string>(unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')"),
                    DEP = table.Column<string>(unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')"),
                    MO_No = table.Column<string>(unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')"),
                    qtyMO = table.Column<decimal>(type: "numeric(18, 0)", nullable: false),
                    qtyMM = table.Column<decimal>(type: "decimal(18, 4)", nullable: false),
                    STA_DD = table.Column<DateTime>(type: "datetime", nullable: false),
                    END_DD = table.Column<DateTime>(type: "datetime", nullable: false),
                    PRD_No = table.Column<string>(unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')"),
                    BatNo = table.Column<string>(unicode: false, maxLength: 500, nullable: false),
                    qty = table.Column<decimal>(type: "decimal(18, 4)", nullable: false),
                    qtyPG = table.Column<decimal>(type: "decimal(18, 4)", nullable: false),
                    qtyPGN = table.Column<decimal>(type: "decimal(18, 4)", nullable: false),
                    BusiNo = table.Column<string>(unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')"),
                    PGNo = table.Column<string>(unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')"),
                    Rem = table.Column<string>(unicode: false, maxLength: 4000, nullable: true),
                    BilType = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    BilTypeName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    Usr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    BillDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkMan = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkManName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    IsClose = table.Column<bool>(nullable: true),
                    ClsDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ClsUsr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ClsUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkMob = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    IsPrint = table.Column<bool>(nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_MKPG", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "MKPGS",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    MID = table.Column<int>(nullable: false),
                    ZC_No = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    BAN_No = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    SAL_NoHead = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    SAL_No = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    MOD_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    SEB_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    PMHours = table.Column<decimal>(type: "numeric(18, 0)", nullable: false),
                    qty = table.Column<decimal>(type: "decimal(18, 4)", nullable: false),
                    STA_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    END_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    sMemo = table.Column<string>(unicode: false, maxLength: 500, nullable: false),
                    TZ_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    UP_FIX = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_PM = table.Column<decimal>(type: "decimal(18, 4)", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_MKPGS", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "MM_MaterielRequest",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    Station_No = table.Column<string>(maxLength: 50, nullable: true),
                    Wk_Center_No = table.Column<string>(maxLength: 50, nullable: true),
                    Process_No = table.Column<string>(maxLength: 50, nullable: true),
                    Prod_No = table.Column<string>(maxLength: 50, nullable: false),
                    PlanQuantity = table.Column<decimal>(type: "decimal(18, 2)", nullable: false),
                    RequestQuantity = table.Column<decimal>(type: "decimal(18, 2)", nullable: false),
                    SendQuantity = table.Column<decimal>(type: "decimal(18, 2)", nullable: true, defaultValueSql: "((0))"),
                    ReceiveQuantity = table.Column<decimal>(type: "decimal(18, 2)", nullable: true, defaultValueSql: "((0))"),
                    Unit = table.Column<string>(maxLength: 20, nullable: true),
                    TargetWH = table.Column<string>(maxLength: 50, nullable: false),
                    SourceWH = table.Column<string>(maxLength: 50, nullable: true),
                    SourceNo = table.Column<string>(maxLength: 50, nullable: true),
                    TransferNo = table.Column<string>(maxLength: 50, nullable: true),
                    RequestDate = table.Column<DateTime>(type: "datetime", nullable: false, defaultValueSql: "(getdate())"),
                    LatestDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    IsPlan = table.Column<bool>(nullable: true),
                    Status = table.Column<string>(maxLength: 20, nullable: true),
                    IsCall = table.Column<bool>(nullable: true),
                    Supplier = table.Column<string>(maxLength: 50, nullable: true),
                    CreateUser = table.Column<string>(maxLength: 50, nullable: true),
                    CreateDate = table.Column<DateTime>(type: "datetime", nullable: true, defaultValueSql: "(getdate())"),
                    UpdateUser = table.Column<string>(maxLength: 50, nullable: true),
                    UpdateDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    Type = table.Column<string>(unicode: false, maxLength: 50, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_MM_MaterielRequest", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "MM_MaterielRequestList",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    Call_Cause = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    CreateTime = table.Column<DateTime>(type: "datetime", nullable: true),
                    CreateUser = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    CST_PRD = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    PlanQuantity = table.Column<decimal>(type: "decimal(18, 2)", nullable: false),
                    Prod_No = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    Status = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    TZ_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    UpdateTime = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdateUser = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    WkCenter_No = table.Column<string>(unicode: false, maxLength: 50, nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_MM_MaterielRequestList", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "MOD_DISQUALREASON",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    NO = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    Name = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    Enabled = table.Column<bool>(nullable: false),
                    Sort = table.Column<int>(nullable: false),
                    Usr = table.Column<string>(unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')"),
                    UsrName = table.Column<string>(unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')"),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: false, defaultValueSql: "(getdate())"),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 50, nullable: true, defaultValueSql: "('')"),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 50, nullable: true, defaultValueSql: "('')"),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ChkMan = table.Column<string>(unicode: false, maxLength: 50, nullable: true, defaultValueSql: "('')"),
                    ChkManName = table.Column<string>(unicode: false, maxLength: 50, nullable: true, defaultValueSql: "('')"),
                    ChkDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ChkMob = table.Column<string>(unicode: false, maxLength: 100, nullable: true, defaultValueSql: "('')"),
                    IsPrint = table.Column<bool>(nullable: true, defaultValueSql: "((0))")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_MOD_DISQUALREASON", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "MOD_RECORD",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    MOD_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    MOD_NAME = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    Usr = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    USE_QTY = table.Column<int>(nullable: true),
                    TZ_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    MO_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    WR_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    WR_DD = table.Column<DateTime>(type: "datetime", nullable: false),
                    UsrName = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_MOD_RECORD", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "MOJ_GRP",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    GRP_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    MOD_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    QTY = table.Column<short>(nullable: true),
                    REM = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    NAME = table.Column<string>(unicode: false, maxLength: 30, nullable: true),
                    Usr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkMan = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkManName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ChkMob = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    IsPrint = table.Column<bool>(nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_MOJ_GRP", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "MOLD",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    MOD_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    MOD_ITM = table.Column<int>(nullable: false, defaultValueSql: "((1))"),
                    WH = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    PURPOSE = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    LIFT_YEAR = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    LIFT_TIME = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    LIFT_CROP = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    USE_SEB = table.Column<string>(type: "text", nullable: true),
                    MAINTENANCE_TIMES = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    RECHECK_TIMES = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    WARM_TIME = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    WARM_MT_TIME = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CUS_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    MOD_TYPE = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    MOD_STATUS = table.Column<string>(unicode: false, maxLength: 4, nullable: true),
                    MOD_USE_STATE = table.Column<string>(unicode: false, maxLength: 4, nullable: true),
                    MOD_STG_STATE = table.Column<string>(unicode: false, maxLength: 4, nullable: true),
                    MOD_USEDTIME = table.Column<string>(unicode: false, maxLength: 4, nullable: true),
                    LAST_STG_TIME = table.Column<DateTime>(type: "datetime", nullable: true),
                    CYCLE_TIME = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    SPC = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    GRAPH_NO = table.Column<string>(unicode: false, maxLength: 200, nullable: true),
                    MOD_QRCODE = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    UT = table.Column<string>(unicode: false, maxLength: 8, nullable: true),
                    USE_NUM = table.Column<int>(nullable: true),
                    MOD_ID = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    WX_TIMES = table.Column<int>(nullable: true),
                    WX_DD_L = table.Column<DateTime>(type: "datetime", nullable: true),
                    INVALID_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    DEP_USE = table.Column<string>(unicode: false, maxLength: 8, nullable: true),
                    SAL_NO_BG = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    OPN_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    STOP_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    STOCK = table.Column<string>(unicode: false, maxLength: 80, nullable: true),
                    QTY_CROP = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_DAY = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_LEN = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    QTY_CIR_IN = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_CIR_OUT = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_CROP_UT = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    SHOW_ID = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    GR_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    CST_GR = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    USE_TIMES = table.Column<int>(nullable: true),
                    HOURS_ALL = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CHK_QUALIFIED = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    QUALIFIED_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    PIC = table.Column<Guid>(nullable: true),
                    NAME = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    TAX_RTO = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    WEIGHT = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    HEIGHT = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    WIDTH = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    SPC_ID = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    UT_TIME = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    TIME_UNIT = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    LINES = table.Column<short>(nullable: true),
                    IDX_NO = table.Column<int>(nullable: true),
                    FT_TYPE = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    FT_MM = table.Column<short>(nullable: true),
                    DEP = table.Column<string>(unicode: false, maxLength: 8, nullable: true),
                    DEPRO_NO = table.Column<string>(unicode: false, maxLength: 8, nullable: true),
                    Usr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkMan = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkManName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ChkMob = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    IsPrint = table.Column<bool>(nullable: true),
                    PRD_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    JGQTY_CHGDATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    JGQTY_CHG = table.Column<int>(nullable: true),
                    USETIME_CHGDATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    USETIME_QTY_CHG = table.Column<int>(nullable: true),
                    REM = table.Column<string>(unicode: false, maxLength: 2000, nullable: true),
                    MOD_Spec = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    Warning_Num = table.Column<int>(nullable: true),
                    Vender_No = table.Column<string>(unicode: false, maxLength: 20, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_MOLD", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "MOLD_MAINTAIN_PLAN",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    NO = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    Name = table.Column<string>(unicode: false, maxLength: 100, nullable: false),
                    BillDate = table.Column<DateTime>(type: "datetime", nullable: false),
                    JH_Spec = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    MOD_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    SAL_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    DEP = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    Station_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    MOD_CycleUnit = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    Rem = table.Column<string>(unicode: false, maxLength: 200, nullable: true),
                    JH_Status = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    ActQTY_Cycle = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    BusiNo = table.Column<string>(unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')"),
                    BilType = table.Column<string>(unicode: false, maxLength: 50, nullable: true, defaultValueSql: "('')"),
                    BilTypeName = table.Column<string>(unicode: false, maxLength: 50, nullable: true, defaultValueSql: "('')"),
                    Usr = table.Column<string>(unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')"),
                    UsrName = table.Column<string>(unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')"),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: false, defaultValueSql: "(getdate())"),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 50, nullable: true, defaultValueSql: "('')"),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 50, nullable: true, defaultValueSql: "('')"),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ChkMan = table.Column<string>(unicode: false, maxLength: 50, nullable: true, defaultValueSql: "('')"),
                    ChkManName = table.Column<string>(unicode: false, maxLength: 50, nullable: true, defaultValueSql: "('')"),
                    ChkDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ChkMob = table.Column<string>(unicode: false, maxLength: 100, nullable: true, defaultValueSql: "('')"),
                    IsClose = table.Column<bool>(nullable: true, defaultValueSql: "((0))"),
                    ClsDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ClsUsr = table.Column<string>(unicode: false, maxLength: 50, nullable: true, defaultValueSql: "('')"),
                    ClsUsrName = table.Column<string>(unicode: false, maxLength: 50, nullable: true, defaultValueSql: "('')"),
                    IsPrint = table.Column<bool>(nullable: true, defaultValueSql: "((0))"),
                    CycelInfo = table.Column<Guid>(nullable: true),
                    QTY_Cycle = table.Column<int>(nullable: true),
                    Standard = table.Column<decimal>(type: "decimal(18, 4)", nullable: true, defaultValueSql: "((0))")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_MOLD_MAINTAIN_PLAN", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "MOLD_MAINTAIN_SPEC",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    NO = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    Name = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    MOD_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    MOD_Name = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    QTY_Cycle = table.Column<int>(nullable: false),
                    MOD_CycleUnit = table.Column<string>(unicode: false, maxLength: 1, nullable: false),
                    Enabled = table.Column<bool>(nullable: false),
                    DEP = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    POST_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    BillDate = table.Column<DateTime>(type: "datetime", nullable: false, defaultValueSql: "('')"),
                    Rem = table.Column<string>(unicode: false, maxLength: 3500, nullable: false, defaultValueSql: "('')"),
                    BusiNo = table.Column<string>(unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')"),
                    BilType = table.Column<string>(unicode: false, maxLength: 20, nullable: false, defaultValueSql: "('')"),
                    BilTypeName = table.Column<string>(unicode: false, maxLength: 20, nullable: false, defaultValueSql: "('')"),
                    Usr = table.Column<string>(unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')"),
                    UsrName = table.Column<string>(unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')"),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: false, defaultValueSql: "(getdate())"),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')"),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')"),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: false, defaultValueSql: "(getdate())"),
                    ChkMan = table.Column<string>(unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')"),
                    ChkManName = table.Column<string>(unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')"),
                    ChkDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ChkMob = table.Column<string>(unicode: false, maxLength: 100, nullable: false, defaultValueSql: "('')"),
                    IsClose = table.Column<bool>(nullable: false),
                    ClsDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ClsUsr = table.Column<string>(unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')"),
                    ClsUsrName = table.Column<string>(unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')"),
                    IsPrint = table.Column<bool>(nullable: false),
                    Version = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Standard = table.Column<decimal>(type: "numeric(18, 0)", nullable: true, defaultValueSql: "((0))")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_MOLD_MAINTAIN_SPEC", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "MOLD_MT_ORDER",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    NO = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    Name = table.Column<string>(maxLength: 120, nullable: true),
                    JH_DD = table.Column<DateTime>(type: "datetime", nullable: false),
                    SAL_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    MOD_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    Status = table.Column<string>(unicode: false, maxLength: 1, nullable: false),
                    END_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    Rem = table.Column<string>(unicode: false, maxLength: 1000, nullable: true),
                    BillDate = table.Column<DateTime>(type: "datetime", nullable: false, defaultValueSql: "(getdate())"),
                    BusiNo = table.Column<string>(unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')"),
                    BilType = table.Column<string>(unicode: false, maxLength: 20, nullable: true, defaultValueSql: "('')"),
                    BilTypeName = table.Column<string>(unicode: false, maxLength: 20, nullable: true, defaultValueSql: "('')"),
                    Usr = table.Column<string>(unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')"),
                    UsrName = table.Column<string>(unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')"),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: false, defaultValueSql: "(getdate())"),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 50, nullable: true, defaultValueSql: "('')"),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 50, nullable: true, defaultValueSql: "('')"),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true, defaultValueSql: "(getdate())"),
                    ChkMan = table.Column<string>(unicode: false, maxLength: 50, nullable: true, defaultValueSql: "('')"),
                    ChkManName = table.Column<string>(unicode: false, maxLength: 50, nullable: true, defaultValueSql: "('')"),
                    ChkDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ChkMob = table.Column<string>(unicode: false, maxLength: 100, nullable: true, defaultValueSql: "('')"),
                    IsClose = table.Column<bool>(nullable: true, defaultValueSql: "((0))"),
                    ClsDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ClsUsr = table.Column<string>(unicode: false, maxLength: 50, nullable: true, defaultValueSql: "('')"),
                    ClsUsrName = table.Column<string>(unicode: false, maxLength: 50, nullable: true, defaultValueSql: "('')"),
                    IsPrint = table.Column<int>(nullable: true, defaultValueSql: "((0))"),
                    BIL_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    Spec_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    Station_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    Standard = table.Column<decimal>(type: "decimal(18, 4)", nullable: true, defaultValueSql: "((0))"),
                    GD_Source = table.Column<string>(unicode: false, maxLength: 1, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_MOLD_MT_ORDER", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "MOLD_SPAREPARTS",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    MOD_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    MOD_Name = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    MOD_PartNo = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    SP_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    QTY_Cycle = table.Column<int>(nullable: false),
                    Usr = table.Column<string>(unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')"),
                    UsrName = table.Column<string>(unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')"),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: false, defaultValueSql: "(getdate())"),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 50, nullable: true, defaultValueSql: "('')"),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 50, nullable: true, defaultValueSql: "('')"),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ChkMan = table.Column<string>(unicode: false, maxLength: 50, nullable: true, defaultValueSql: "('')"),
                    ChkManName = table.Column<string>(unicode: false, maxLength: 50, nullable: true, defaultValueSql: "('')"),
                    ChkDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ChkMob = table.Column<string>(unicode: false, maxLength: 100, nullable: true, defaultValueSql: "('')"),
                    IsPrint = table.Column<bool>(nullable: true, defaultValueSql: "((0))"),
                    MOD_CycleUnit = table.Column<string>(unicode: false, maxLength: 1, nullable: true, defaultValueSql: "('0')")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_MOLD_SPAREPARTS", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "MOLD_TYPEINFO",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    NO = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    Name = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    Status = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    Rem = table.Column<string>(unicode: false, maxLength: 2000, nullable: true),
                    Enabled = table.Column<bool>(nullable: false),
                    Sort = table.Column<int>(nullable: false),
                    BusiNo = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    Usr = table.Column<string>(unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')"),
                    UsrName = table.Column<string>(unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')"),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: false, defaultValueSql: "(getdate())"),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 50, nullable: true, defaultValueSql: "('')"),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 50, nullable: true, defaultValueSql: "('')"),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ChkMan = table.Column<string>(unicode: false, maxLength: 50, nullable: true, defaultValueSql: "('')"),
                    ChkManName = table.Column<string>(unicode: false, maxLength: 50, nullable: true, defaultValueSql: "('')"),
                    ChkDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ChkMob = table.Column<string>(unicode: false, maxLength: 100, nullable: true, defaultValueSql: "('')"),
                    IsPrint = table.Column<bool>(nullable: true, defaultValueSql: "((0))")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_MOLD_TYPEINFO", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "MOLD_WH",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    MOD_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    MOD_ITM = table.Column<int>(nullable: false),
                    GR_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    CST_GR = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CUS_NO = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    STATE_ID = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    USE_TIMES = table.Column<int>(nullable: true),
                    HOURS_ALL = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_CROP = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    WX_TIMES = table.Column<int>(nullable: true),
                    WX_DD_L = table.Column<DateTime>(type: "datetime", nullable: true),
                    INVALID_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    DEP_USE = table.Column<string>(unicode: false, maxLength: 8, nullable: true),
                    SAL_NO_BG = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    OPN_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    WH = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    STOP_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    REM = table.Column<string>(type: "text", nullable: true),
                    NAME = table.Column<string>(unicode: false, maxLength: 40, nullable: true),
                    SPC = table.Column<string>(maxLength: 800, nullable: true),
                    USE_NUM = table.Column<int>(nullable: true),
                    MOD_ID = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    FT_TYPE = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    FT_MM = table.Column<short>(nullable: true),
                    AMTN_FT = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    FT_MM_LAST = table.Column<DateTime>(type: "datetime", nullable: true),
                    LIFT_YEAR = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    LIFT_TIME = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    LIFT_CROP = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CHK_QUALIFIED = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    QUALIFIED_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    Usr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkMan = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkManName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ChkMob = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    IsPrint = table.Column<bool>(nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_MOLD_WH", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "MOLDING_DEVIATE_T",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    SEB_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    PRD_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    PARA_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    PARA_NAME = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    UP_LIMIT = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    LOW_LIMIT = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    DEV_TYPE = table.Column<string>(unicode: false, maxLength: 10, nullable: false),
                    THRESHOLD = table.Column<decimal>(type: "numeric(18, 0)", nullable: false),
                    CUM_DEV = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    DEV_STA = table.Column<DateTime>(type: "datetime", nullable: true),
                    DEV_END = table.Column<DateTime>(type: "datetime", nullable: true),
                    STATUS = table.Column<string>(unicode: false, maxLength: 2, nullable: false),
                    SYSTEMDATE = table.Column<DateTime>(type: "datetime", nullable: false),
                    UPDDATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    DEV_UNIT = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    UPSYBOL = table.Column<string>(unicode: false, maxLength: 6, nullable: true),
                    LOWSYBOL = table.Column<string>(unicode: false, maxLength: 6, nullable: true),
                    COOL_MODE = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    MOD_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    PRD_TYPE = table.Column<string>(unicode: false, maxLength: 6, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_MOLDING_DEVIATE_T", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "MOLDING_RULES_T",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    PARA_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    SEB_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    PTYPE = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    PRD_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    UP_LIMIT = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    LOW_LIMIT = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    DEV_TYPE = table.Column<string>(unicode: false, maxLength: 10, nullable: false),
                    THRESHOLD = table.Column<decimal>(type: "numeric(18, 0)", nullable: false),
                    DEV_UNIT = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    SYSDATE = table.Column<DateTime>(type: "datetime", nullable: false),
                    UPDDATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    USR = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    PARA_NAME = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    LOWSYBOL = table.Column<string>(unicode: false, maxLength: 6, nullable: true),
                    UPSYBOL = table.Column<string>(unicode: false, maxLength: 6, nullable: true),
                    PARA_UNIT = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    COOL_MODE = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    MOD_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    PRD_TYPE = table.Column<string>(unicode: false, maxLength: 6, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_MOLDING_RULES_T", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "MS_ALERT",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    PID = table.Column<int>(nullable: false),
                    SortIndex = table.Column<int>(nullable: false),
                    ItemName = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    ItemCountSql = table.Column<string>(unicode: false, maxLength: 500, nullable: false),
                    QRYSql = table.Column<string>(unicode: false, maxLength: 500, nullable: false),
                    AheadQty = table.Column<int>(nullable: true),
                    AheadType = table.Column<string>(unicode: false, maxLength: 1, nullable: true, defaultValueSql: "((1))"),
                    IsSysProtect = table.Column<bool>(nullable: false),
                    DataBusiNo = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    Fields = table.Column<string>(unicode: false, maxLength: 1000, nullable: false),
                    FieldsName = table.Column<string>(unicode: false, maxLength: 1000, nullable: false),
                    QuryField = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    QuryFieldName = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    RpCalStatus = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    RpCalStatusName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    Usr = table.Column<string>(unicode: false, maxLength: 20, nullable: false, defaultValueSql: "('')"),
                    UsrName = table.Column<string>(unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')"),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: false, defaultValueSql: "(getdate())"),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 20, nullable: true, defaultValueSql: "('')"),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 50, nullable: true, defaultValueSql: "('')"),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ChkMan = table.Column<string>(unicode: false, maxLength: 20, nullable: true, defaultValueSql: "('')"),
                    ChkManName = table.Column<string>(unicode: false, maxLength: 50, nullable: true, defaultValueSql: "('')"),
                    ChkDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ChkMob = table.Column<string>(unicode: false, maxLength: 100, nullable: true, defaultValueSql: "('')"),
                    IsPrint = table.Column<bool>(nullable: true, defaultValueSql: "((0))")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_MS_ALERT", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "MS_BORROW",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    MsNO = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    MsName = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    MsType = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    MsTypeName = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    CalResult = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    MngType = table.Column<string>(unicode: false, maxLength: 1, nullable: false),
                    CalMode = table.Column<string>(unicode: false, maxLength: 1, nullable: false),
                    CalLocal = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    ReturnFlag = table.Column<bool>(nullable: false),
                    Borrower = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    BorrowerName = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    BorrowDEP = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    BorrowDEPName = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    UserNO = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    UserName = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    ChargeFlag = table.Column<bool>(nullable: false),
                    ChargeMan = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    ChargeManName = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    Amount = table.Column<decimal>(type: "numeric(18, 0)", nullable: false),
                    BorrowDate = table.Column<DateTime>(type: "datetime", nullable: false),
                    Reason = table.Column<string>(unicode: false, maxLength: 500, nullable: false),
                    ReturnDate = table.Column<DateTime>(type: "datetime", nullable: false),
                    Rem = table.Column<string>(unicode: false, maxLength: 1000, nullable: false, defaultValueSql: "('')"),
                    No = table.Column<string>(unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')"),
                    BillDate = table.Column<DateTime>(type: "datetime", nullable: false),
                    BusiNo = table.Column<string>(unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')"),
                    BilType = table.Column<string>(unicode: false, maxLength: 20, nullable: false, defaultValueSql: "('')"),
                    BilTypeName = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Usr = table.Column<string>(unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')"),
                    UsrName = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: false, defaultValueSql: "(getdate())"),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 50, nullable: true, defaultValueSql: "('')"),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true, defaultValueSql: "(getdate())"),
                    ChkMan = table.Column<string>(unicode: false, maxLength: 50, nullable: true, defaultValueSql: "('')"),
                    ChkManName = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    ChkDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ChkMob = table.Column<string>(unicode: false, maxLength: 100, nullable: true, defaultValueSql: "('')"),
                    IsClose = table.Column<bool>(nullable: true, defaultValueSql: "((0))"),
                    ClsDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ClsUsr = table.Column<string>(unicode: false, maxLength: 50, nullable: true, defaultValueSql: "('')"),
                    ClsUsrName = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    IsPrint = table.Column<bool>(nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_MS_BORROW", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "MS_CALCYC_CHANGE",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    MsNo = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    MsName = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    CalResult = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    Interval = table.Column<string>(unicode: false, maxLength: 1, nullable: false),
                    Interval_New = table.Column<string>(unicode: false, maxLength: 1, nullable: false),
                    CalCyc = table.Column<int>(nullable: true),
                    CycUnit = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    CalCyc_New = table.Column<int>(nullable: true),
                    CycUnit_New = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    CalDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    CalDate_New = table.Column<DateTime>(type: "datetime", nullable: true),
                    VLD = table.Column<DateTime>(type: "datetime", nullable: true),
                    VLD_New = table.Column<DateTime>(type: "datetime", nullable: true),
                    ChangeReason = table.Column<string>(unicode: false, maxLength: 200, nullable: true),
                    FromBusiNo = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    BusiID = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    Rem = table.Column<string>(unicode: false, maxLength: 200, nullable: true),
                    Usr = table.Column<string>(unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')"),
                    UsrName = table.Column<string>(unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')"),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: false, defaultValueSql: "(getdate())"),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 50, nullable: true, defaultValueSql: "('')"),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 50, nullable: true, defaultValueSql: "('')"),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ChkMan = table.Column<string>(unicode: false, maxLength: 50, nullable: true, defaultValueSql: "('')"),
                    ChkManName = table.Column<string>(unicode: false, maxLength: 50, nullable: true, defaultValueSql: "('')"),
                    ChkDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ChkMob = table.Column<string>(unicode: false, maxLength: 100, nullable: true, defaultValueSql: "('')"),
                    IsPrint = table.Column<int>(nullable: true, defaultValueSql: "((0))")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_MS_CALCYC_CHANGE", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "MS_CALINFO",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    MsNO = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    MsName = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    MsType = table.Column<int>(nullable: true),
                    MsStatus = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    Interval_New = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    CalCyc_New = table.Column<int>(nullable: true),
                    CycUnit_New = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    CalDate_New = table.Column<DateTime>(type: "datetime", nullable: true),
                    VLD_New = table.Column<DateTime>(type: "datetime", nullable: true),
                    CalResult_New = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    AfterCalStatus = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    CalInst_New = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Contact_New = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    CalCost = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CalContent = table.Column<string>(unicode: false, maxLength: 4000, nullable: true),
                    CalMan = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    CalLocal = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    CalType = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    CalNoteNo = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    Rem = table.Column<string>(unicode: false, maxLength: 4000, nullable: true),
                    CertNo1 = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    CertNo2 = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    CertNo3 = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    CertNo4 = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    CertNo5 = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    SendCalDep = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    MsStandardNo = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    MsStandardContent = table.Column<string>(unicode: false, maxLength: 4000, nullable: true),
                    CalRuleNo = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ReCalDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    CertType = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    CertTemp = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    OutterCert = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    CalStatus = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    CalStatusName = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    Usr = table.Column<string>(unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')"),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: false, defaultValueSql: "(getdate())"),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 50, nullable: true, defaultValueSql: "('')"),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ChkMan = table.Column<string>(unicode: false, maxLength: 50, nullable: true, defaultValueSql: "('')"),
                    ChkDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ChkMob = table.Column<string>(unicode: false, maxLength: 100, nullable: true, defaultValueSql: "('')"),
                    IsPrint = table.Column<bool>(nullable: false),
                    UsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkManName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    SO_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    SO_ID = table.Column<int>(nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_MS_CALINFO", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "MS_CALINSTITUTION",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    No = table.Column<string>(unicode: false, maxLength: 10, nullable: false),
                    InsName = table.Column<string>(unicode: false, maxLength: 100, nullable: false),
                    Contacts = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    Phone = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    Addres = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    Rem = table.Column<string>(unicode: false, maxLength: 3500, nullable: false),
                    Usr = table.Column<string>(unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')"),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: false, defaultValueSql: "(getdate())"),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')"),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: false),
                    ChkMan = table.Column<string>(unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')"),
                    ChkDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ChkMob = table.Column<string>(unicode: false, maxLength: 100, nullable: false, defaultValueSql: "('')"),
                    IsPrint = table.Column<bool>(nullable: false),
                    InsType = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    UsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkManName = table.Column<string>(unicode: false, maxLength: 20, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_MS_CALINSTITUTION", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "MS_CALNOTICE",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    SendCalDate = table.Column<DateTime>(type: "datetime", nullable: false),
                    Constitutor = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    SendCalMan = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    Received = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    ReceivedDate = table.Column<DateTime>(type: "datetime", nullable: false),
                    WaitCalQTY = table.Column<int>(nullable: false),
                    WaitNoteQTY = table.Column<int>(nullable: false),
                    NotedQTY = table.Column<int>(nullable: false),
                    SenderPhone = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    SenderMail = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    BillMonth = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    SenderDEP = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    Title = table.Column<string>(unicode: false, maxLength: 500, nullable: false),
                    No = table.Column<string>(unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')"),
                    BillDate = table.Column<DateTime>(type: "datetime", nullable: false),
                    Rem = table.Column<string>(unicode: false, maxLength: 3500, nullable: false, defaultValueSql: "('')"),
                    BusiNo = table.Column<string>(unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')"),
                    BilType = table.Column<string>(unicode: false, maxLength: 20, nullable: false, defaultValueSql: "('')"),
                    BilTypeName = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Usr = table.Column<string>(unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')"),
                    UsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: false, defaultValueSql: "(getdate())"),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')"),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: false, defaultValueSql: "(getdate())"),
                    ChkMan = table.Column<string>(unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')"),
                    ChkManName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ChkMob = table.Column<string>(unicode: false, maxLength: 100, nullable: false, defaultValueSql: "('')"),
                    IsClose = table.Column<bool>(nullable: false),
                    ClsDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ClsUsr = table.Column<string>(unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')"),
                    ClsUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    IsPrint = table.Column<bool>(nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_MS_CALNOTICE", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "MS_CALPLAN",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    YY = table.Column<int>(nullable: false),
                    MsNO = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    MsName = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    MsType = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    MsTypeName = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    No = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    Rem = table.Column<string>(unicode: false, maxLength: 4000, nullable: true),
                    BusiNo = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    BilType = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    BilTypeName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    BillDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    Usr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkMan = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkManName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    IsClose = table.Column<bool>(nullable: true),
                    ClsDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ClsUsr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ClsUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkMob = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    IsPrint = table.Column<bool>(nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_MS_CALPLAN", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "MS_CALRULE",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    MsType = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    No = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    RuleName = table.Column<string>(unicode: false, maxLength: 200, nullable: false),
                    Rem = table.Column<string>(unicode: false, maxLength: 4000, nullable: true),
                    Attachment = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Usr = table.Column<string>(unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')"),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: false, defaultValueSql: "(getdate())"),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 50, nullable: true, defaultValueSql: "('')"),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ChkMan = table.Column<string>(unicode: false, maxLength: 50, nullable: true, defaultValueSql: "('')"),
                    ChkDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ChkMob = table.Column<string>(unicode: false, maxLength: 100, nullable: true, defaultValueSql: "('')"),
                    IsPrint = table.Column<bool>(nullable: true, defaultValueSql: "((0))"),
                    UsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkManName = table.Column<string>(unicode: false, maxLength: 20, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_MS_CALRULE", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "MS_FLOW_STATUS",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    No = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    FlowStatusName = table.Column<string>(unicode: false, maxLength: 100, nullable: false),
                    Rem = table.Column<string>(unicode: false, maxLength: 500, nullable: false),
                    Usr = table.Column<string>(unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')"),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: false, defaultValueSql: "(getdate())"),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')"),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: false),
                    ChkMan = table.Column<string>(unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')"),
                    ChkDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ChkMob = table.Column<string>(unicode: false, maxLength: 100, nullable: false, defaultValueSql: "('')"),
                    IsPrint = table.Column<bool>(nullable: false),
                    UsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkManName = table.Column<string>(unicode: false, maxLength: 20, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_MS_FLOW_STATUS", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "MS_MEASURE_INFO",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    MsName = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    NO = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    MsType = table.Column<int>(nullable: true),
                    MsTypeName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    SPC = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Precision = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Scope = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Maker = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    FactoryNo = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    CalMode = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    MngType = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    IsBorrow = table.Column<bool>(nullable: true),
                    MsStatus = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    MsStatusName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    RpCalStatus = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    RpCalStatusName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    CalResult = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    RECORD = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    LastCalResult = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    Interval = table.Column<string>(unicode: false, maxLength: 1, nullable: false),
                    CalCyc = table.Column<int>(nullable: true),
                    CycUnit = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    CalDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    VLD = table.Column<DateTime>(type: "datetime", nullable: true),
                    FactoryDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    Start_Date = table.Column<DateTime>(type: "datetime", nullable: true),
                    UseDEP = table.Column<string>(unicode: false, maxLength: 8, nullable: true),
                    UseDEPName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UserNO = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    User_Name = table.Column<string>(fixedLength: true, maxLength: 1, nullable: true),
                    BorrowDEP = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    Borrower = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    BorrowerName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    CalDep = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    CalDepName = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Contact = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    CalLocal = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    CalMan = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    CalManName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    POPrice = table.Column<decimal>(type: "decimal(18, 4)", nullable: true),
                    MCP = table.Column<decimal>(type: "decimal(18, 4)", nullable: true),
                    MsPic = table.Column<Guid>(nullable: true),
                    ZJM = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Rem = table.Column<string>(unicode: false, maxLength: 2000, nullable: true),
                    Usr = table.Column<string>(unicode: false, maxLength: 50, nullable: true, defaultValueSql: "('')"),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: true, defaultValueSql: "(getdate())"),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 50, nullable: true, defaultValueSql: "('')"),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ChkMan = table.Column<string>(unicode: false, maxLength: 50, nullable: true, defaultValueSql: "('')"),
                    ChkDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ChkMob = table.Column<string>(unicode: false, maxLength: 100, nullable: true, defaultValueSql: "('')"),
                    IsPrint = table.Column<int>(nullable: true, defaultValueSql: "((0))"),
                    UsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkManName = table.Column<string>(unicode: false, maxLength: 20, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_MS_MEASURE_INFO", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "MS_MEASURE_INFO_OLD",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    Name = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    NO = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    SPC = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    MsType = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    Maker = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    FactoryNo = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    FactoryDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    DEP = table.Column<string>(unicode: false, maxLength: 8, nullable: true),
                    Precision = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Scope = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    CalMode = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    ABC = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    IsAlert = table.Column<bool>(nullable: true),
                    BuyDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    MsStatus = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    POPrice = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    Keeper = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    IsStandar = table.Column<bool>(nullable: true),
                    UseLocal = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    MsDrawingNo = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    MsPic = table.Column<byte[]>(type: "image", nullable: true),
                    ZJM = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Rem = table.Column<string>(unicode: false, maxLength: 3500, nullable: true),
                    Usr = table.Column<string>(unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')"),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: false, defaultValueSql: "(getdate())"),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 50, nullable: true, defaultValueSql: "('')"),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ChkMan = table.Column<string>(unicode: false, maxLength: 50, nullable: true, defaultValueSql: "('')"),
                    ChkDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ChkMob = table.Column<string>(unicode: false, maxLength: 100, nullable: true, defaultValueSql: "('')"),
                    IsPrint = table.Column<bool>(nullable: true, defaultValueSql: "((0))")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_MS_MEASURE_INFO_OLD", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "MS_MEASURE_STATUS",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    NO = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    StatusName = table.Column<string>(unicode: false, maxLength: 100, nullable: false),
                    TypeSort = table.Column<int>(nullable: false),
                    REM = table.Column<string>(unicode: false, maxLength: 3500, nullable: false),
                    Usr = table.Column<string>(unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')"),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: false, defaultValueSql: "(getdate())"),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')"),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: false),
                    ChkMan = table.Column<string>(unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')"),
                    ChkDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ChkMob = table.Column<string>(unicode: false, maxLength: 100, nullable: false, defaultValueSql: "('')"),
                    IsPrint = table.Column<int>(nullable: false),
                    UsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkManName = table.Column<string>(unicode: false, maxLength: 20, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_MS_MEASURE_STATUS", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "MS_MEASURE_TYPE",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    NO = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    TypeName = table.Column<string>(unicode: false, maxLength: 100, nullable: false),
                    TypeSort = table.Column<int>(nullable: false),
                    REM = table.Column<string>(unicode: false, maxLength: 3500, nullable: false),
                    Usr = table.Column<string>(unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')"),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: false, defaultValueSql: "(getdate())"),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')"),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: false),
                    ChkMan = table.Column<string>(unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')"),
                    ChkDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ChkMob = table.Column<string>(unicode: false, maxLength: 100, nullable: false, defaultValueSql: "('')"),
                    IsPrint = table.Column<int>(nullable: false),
                    UsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkManName = table.Column<string>(unicode: false, maxLength: 20, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_MS_MEASURE_TYPE", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "MS_REPAIR",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    NO = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    MsNO = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    MsName = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    MsType = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    CalResult = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    MngType = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    CalMode = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    CalLocal = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    RpDate = table.Column<DateTime>(type: "datetime", nullable: false),
                    RpMan = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    RpStatusBefore = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    RpStatusAfter = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    RpDepNo = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    RpCalStatus = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    RpInstNo = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    Contacts = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    Phone = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    RpDoneDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    RpCost = table.Column<decimal>(type: "decimal(18, 4)", nullable: true),
                    RpContent = table.Column<string>(unicode: false, maxLength: 2000, nullable: true),
                    Rem = table.Column<string>(unicode: false, maxLength: 3000, nullable: true),
                    CalNoteNo = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    Usr = table.Column<string>(unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')"),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: false, defaultValueSql: "(getdate())"),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 50, nullable: true, defaultValueSql: "('')"),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ChkMan = table.Column<string>(unicode: false, maxLength: 50, nullable: true, defaultValueSql: "('')"),
                    ChkDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ChkMob = table.Column<string>(unicode: false, maxLength: 100, nullable: true, defaultValueSql: "('')"),
                    IsPrint = table.Column<bool>(nullable: true, defaultValueSql: "((0))"),
                    UsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkManName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    IsToCal = table.Column<bool>(nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_MS_REPAIR", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "MSGCACHE",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    MsgSetID = table.Column<int>(nullable: false),
                    LevelNow = table.Column<int>(nullable: false),
                    NextLevel = table.Column<int>(nullable: false),
                    StartTime = table.Column<DateTime>(type: "datetime", nullable: false),
                    MsgTitle = table.Column<string>(unicode: false, maxLength: 200, nullable: true),
                    MsgContent = table.Column<string>(unicode: false, maxLength: 3500, nullable: true),
                    Bill_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    BillType = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    IsResp = table.Column<bool>(nullable: true),
                    IsTimeOut = table.Column<bool>(nullable: true),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_MSGCACHE", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "MSMNG_STATUSINFO",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    MsNO = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    MsName = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    Status = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    StatusName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    RpCalStatus = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    RpCalStatusName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    FromBusiNo = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    BusiID = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    Usr = table.Column<string>(unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')"),
                    UsrName = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: false, defaultValueSql: "(getdate())"),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')"),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: false),
                    ChkMan = table.Column<string>(unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')"),
                    ChkManName = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    ChkDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ChkMob = table.Column<string>(unicode: false, maxLength: 100, nullable: false, defaultValueSql: "('')"),
                    IsPrint = table.Column<bool>(nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_MSMNG_STATUSINFO", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "MY_WH",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    WH = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    NAME = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    ATTRIB = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    DEP = table.Column<string>(unicode: false, maxLength: 8, nullable: true),
                    ADR = table.Column<string>(unicode: false, maxLength: 200, nullable: true),
                    TEL_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    FAX_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UP_WH = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    CNT_MAN = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    INVALID = table.Column<bool>(nullable: true),
                    Dubious = table.Column<bool>(nullable: true),
                    STOP_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    CODE_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    CHK_WH = table.Column<bool>(nullable: true),
                    REM = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    SENDCUS_NAME = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    CON_MAN = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    CUS_NO = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    ISLC = table.Column<bool>(nullable: true),
                    SPC_ID = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    UP_DD = table.Column<byte[]>(nullable: true),
                    ISIOWH = table.Column<bool>(nullable: true),
                    ISYL = table.Column<bool>(nullable: true),
                    DEPRO_NO = table.Column<string>(unicode: false, maxLength: 8, nullable: true),
                    NAME_PY = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    Usr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkMan = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkManName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ChkMob = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    IsPrint = table.Column<bool>(nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_MY_WH", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "NYXH_RECORD",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    DEP = table.Column<string>(unicode: false, maxLength: 8, nullable: false),
                    PLAN_LEVEL = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    ACTUAL_LEVEL = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    DIFF_LEVEL = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CONSUM_TYPE = table.Column<string>(unicode: false, maxLength: 8, nullable: true),
                    CONSUM_DATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    USR = table.Column<string>(unicode: false, maxLength: 12, nullable: false),
                    USRNAME = table.Column<string>(unicode: false, maxLength: 12, nullable: false),
                    SYSDATE = table.Column<DateTime>(type: "datetime", nullable: false),
                    UPDUSR = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    UPDUSRNAME = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    UPDDATE = table.Column<DateTime>(type: "datetime", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_NYXH_RECORD", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "OP_WORKSTART",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    WO_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    Process_No = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    Dept = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    Prod_No = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    Usr_Exec = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    Shift_No = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    StartDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    EndDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    Used_Time = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    WorkState = table.Column<string>(unicode: false, maxLength: 2, nullable: false),
                    Sta_No = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    Dev_No = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    StationNo = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Usr = table.Column<string>(unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')"),
                    UsrName = table.Column<string>(unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')"),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: false, defaultValueSql: "(getdate())"),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 50, nullable: true, defaultValueSql: "('')"),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 50, nullable: true, defaultValueSql: "('')"),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OP_WORKSTART", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "OPSBALLOT",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    UserNo = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    SEB_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    SEB_NAME = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    Usr = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    UsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: false),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkMan = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkManName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ChkMOB = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    IsPrint = table.Column<bool>(nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OPSBALLOT", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "PC_BATCHReview",
                columns: table => new
                {
                    id = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    InspectSID = table.Column<int>(nullable: false),
                    DeviceNO = table.Column<string>(unicode: false, maxLength: 55, nullable: true),
                    TargetDeviceNO = table.Column<string>(unicode: false, maxLength: 55, nullable: true),
                    ADVANCESAMPLENO = table.Column<string>(unicode: false, maxLength: 55, nullable: true),
                    CastingBatchNo = table.Column<string>(unicode: false, maxLength: 55, nullable: true),
                    ProcessNo = table.Column<string>(unicode: false, maxLength: 55, nullable: true),
                    IsTransform = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    CreateUser = table.Column<string>(unicode: false, maxLength: 55, nullable: true),
                    CreateTime = table.Column<DateTime>(type: "datetime", nullable: true),
                    TransferDeviceNo = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    ZXMO_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    ZXPRODUCTCODE = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    JZMO_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    JZPRODUCTCODE = table.Column<string>(unicode: false, maxLength: 50, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_PC_BATCHReview", x => x.id);
                });

            migrationBuilder.CreateTable(
                name: "PC_Integrity_Check",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    BomNo = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Check_FQC = table.Column<bool>(nullable: true),
                    CheckPass_Rec = table.Column<bool>(nullable: true),
                    CheckPeople = table.Column<bool>(nullable: true),
                    Materials = table.Column<string>(unicode: false, maxLength: 200, nullable: true),
                    Parameters = table.Column<string>(unicode: false, maxLength: 500, nullable: true),
                    Prod_No = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: false),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    Usr = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    UsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    WkCenter_No = table.Column<string>(unicode: false, maxLength: 50, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_PC_Integrity_Check", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "PC_Order_HeaterNum",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    Dev_No = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    EndDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    Heater_No = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Process_No = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Shift_No = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    StartDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: false),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    Usr = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    UsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    WO_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Station_No = table.Column<string>(unicode: false, maxLength: 50, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_PC_Order_HeaterNum", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "PC_OutPut",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    Barcode = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    Batch_No = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    BilType = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    BilTypeName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    BusiNo = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ChkMan = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkManName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkMob = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    ClsDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ClsUsr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ClsUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    Dev_No = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    IsClose = table.Column<bool>(nullable: true),
                    IsPrint = table.Column<bool>(nullable: true),
                    MO_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Process_No = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Prod_No = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Qty = table.Column<decimal>(type: "decimal(22, 8)", nullable: true),
                    Qty_Lost = table.Column<decimal>(type: "decimal(22, 8)", nullable: true),
                    Qty_Scrap = table.Column<decimal>(type: "decimal(22, 8)", nullable: true),
                    Rem = table.Column<string>(unicode: false, maxLength: 500, nullable: true),
                    Report_Date = table.Column<DateTime>(type: "datetime", nullable: true),
                    Report_Guid = table.Column<string>(unicode: false, maxLength: 40, nullable: true),
                    StationNo = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: false),
                    Unit = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    Usr = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    Usr_Exec = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    UsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    Ver_No = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    WO_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    OutBarcode = table.Column<string>(unicode: false, maxLength: 50, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_PC_OutPut", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "PC_TraceabilityDataPortal",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    TraceCode = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    ProductNO = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    ProcessNO = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    CreateTime = table.Column<DateTime>(type: "datetime", nullable: true),
                    CreateUser = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    UpdateTime = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdateUser = table.Column<string>(unicode: false, maxLength: 50, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_PC_TraceabilityDataPortal", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "PC_TraceabilityLog",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    ProcessNO = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    DeviceNO = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    MainTraceCode = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    ProcessTraceCode = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    UpperTraceCode = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    SourceOrder = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    ProductNO = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Shifts = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    ProductionDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    CreateUser = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    CreateTime = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdateUser = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    UpdateTime = table.Column<DateTime>(type: "datetime", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_PC_TraceabilityLog", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "PC_Transfer",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    Dev_No = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Heater_No = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Process_No = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Rec_No = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Shift_No = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    StartDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: false),
                    Tran_No = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    Usr = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    UsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    WO_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_PC_Transfer", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "PC_UsrLogin",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    LoginTime = table.Column<DateTime>(type: "datetime", nullable: true),
                    LogoutTime = table.Column<DateTime>(type: "datetime", nullable: true),
                    Shift_No = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Station_No = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: false),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    Usr = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    Usr_Login = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    UsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    UsrName_Login = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    WkCenter_No = table.Column<string>(unicode: false, maxLength: 50, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_PC_UsrLogin", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "PC_WorkStationDeviceMapping",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    WorkStationCode = table.Column<string>(maxLength: 50, nullable: true),
                    WorkStationName = table.Column<string>(maxLength: 100, nullable: true),
                    DeviceCode = table.Column<string>(maxLength: 50, nullable: true),
                    DeviceName = table.Column<string>(maxLength: 100, nullable: true),
                    Factory_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_PC_WorkStationDeviceMapping", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "pd_Handover",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false),
                    BAN_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    Usr = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    UsrName = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    SYSDATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    Handover = table.Column<string>(unicode: false, maxLength: 1000, nullable: true),
                    ZC_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    DEP = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    IsDelete = table.Column<bool>(nullable: true),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 50, nullable: true)
                },
                constraints: table =>
                {
                });

            migrationBuilder.CreateTable(
                name: "PERF_LOSSTIME_T",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    SYS_DATE = table.Column<DateTime>(type: "datetime", nullable: false),
                    BAN_NO = table.Column<string>(maxLength: 20, nullable: false),
                    BAN_GROUP = table.Column<string>(maxLength: 20, nullable: true),
                    WORKSHOP = table.Column<string>(maxLength: 100, nullable: false),
                    ZC_NO = table.Column<string>(maxLength: 100, nullable: false),
                    SEB_NO = table.Column<string>(maxLength: 100, nullable: false),
                    PRD_NO = table.Column<string>(maxLength: 100, nullable: true),
                    PRD_NAME = table.Column<string>(maxLength: 400, nullable: true),
                    LOSSTIME = table.Column<int>(nullable: true),
                    LOSSREASON = table.Column<string>(maxLength: 400, nullable: true),
                    LOSSTYPE = table.Column<string>(maxLength: 400, nullable: true),
                    LOSSPROPERTY = table.Column<string>(maxLength: 400, nullable: true),
                    HANDLETYPE = table.Column<int>(nullable: true),
                    WORKSHOPNAME = table.Column<string>(maxLength: 100, nullable: true),
                    HGS = table.Column<int>(nullable: true),
                    BHGS = table.Column<int>(nullable: true),
                    FPS = table.Column<int>(nullable: true),
                    FPWORKSHOP = table.Column<string>(maxLength: 100, nullable: true),
                    BCJFGS = table.Column<int>(nullable: true),
                    FBCJFGS = table.Column<int>(nullable: true),
                    FGWORKSHOP = table.Column<string>(maxLength: 100, nullable: true),
                    CREATETIME = table.Column<DateTime>(type: "datetime", nullable: true),
                    FGCJNAME = table.Column<string>(unicode: false, maxLength: 200, nullable: true),
                    ZCNAME = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    SEBNAME = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    SPEC = table.Column<string>(unicode: false, maxLength: 200, nullable: true),
                    MOD_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    STA_DATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    END_DATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    SOURCE_ID = table.Column<int>(nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_PERF_LOSSTIME_T", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "PERF_OEE_T",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    SYS_DATE = table.Column<string>(maxLength: 20, nullable: true),
                    WORKSHOP = table.Column<string>(maxLength: 100, nullable: true),
                    ZC_NO = table.Column<string>(maxLength: 100, nullable: true),
                    BAN_NO = table.Column<string>(maxLength: 100, nullable: true),
                    SEB_NO = table.Column<string>(maxLength: 100, nullable: true),
                    TOTALCOUNT = table.Column<int>(nullable: true),
                    UNQUALIFIED = table.Column<int>(nullable: true),
                    QUALIFIED = table.Column<int>(nullable: true),
                    QTY_LOST = table.Column<int>(nullable: true),
                    QTY_LOST_HT = table.Column<int>(nullable: true),
                    TOTALTIME = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    LOSS_PLAN = table.Column<int>(nullable: true),
                    LOSS_SWITCH = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    LOSS_STOP = table.Column<int>(nullable: true),
                    LOSS_OTHER = table.Column<int>(nullable: true),
                    OUTPUTTIME = table.Column<int>(nullable: true),
                    AVAILRATIO = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    PERFORMRATIO = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    PASSRATIO = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    OEE = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    BAN_GROUP = table.Column<string>(maxLength: 100, nullable: true),
                    PRD_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    MOD_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_PERF_OEE_T", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "PERF_OUTPUT_T",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    SYS_DATE = table.Column<string>(maxLength: 20, nullable: true),
                    BAN_NO = table.Column<string>(maxLength: 20, nullable: true),
                    BAN_GROUP = table.Column<string>(maxLength: 20, nullable: true),
                    WORKSHOP = table.Column<string>(maxLength: 100, nullable: true),
                    ZC_NO = table.Column<string>(maxLength: 100, nullable: true),
                    SEB_NO = table.Column<string>(maxLength: 100, nullable: true),
                    PRD_NO = table.Column<string>(maxLength: 100, nullable: true),
                    PRD_NAME = table.Column<string>(maxLength: 400, nullable: true),
                    TOTALCOUNT = table.Column<int>(nullable: true),
                    QUALIFIED = table.Column<int>(nullable: true),
                    UNQUALIFIED = table.Column<int>(nullable: true),
                    SCRAP = table.Column<int>(nullable: true),
                    BACKOFF = table.Column<int>(nullable: true),
                    HANDLETYPE = table.Column<int>(nullable: true),
                    MOD_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_PERF_OUTPUT_T", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "PHOTO_TEMP",
                columns: table => new
                {
                    DATA = table.Column<Guid>(nullable: false)
                },
                constraints: table =>
                {
                });

            migrationBuilder.CreateTable(
                name: "PIDS_TEMP",
                columns: table => new
                {
                    PRD_NO = table.Column<string>(unicode: false, maxLength: 100, nullable: true)
                },
                constraints: table =>
                {
                });

            migrationBuilder.CreateTable(
                name: "POST",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    NO = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    NAME = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    Enabled = table.Column<bool>(nullable: true, defaultValueSql: "((1))"),
                    Rem = table.Column<string>(unicode: false, maxLength: 200, nullable: true),
                    Usr = table.Column<string>(unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')"),
                    UsrName = table.Column<string>(unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')"),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: false, defaultValueSql: "(getdate())"),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 50, nullable: true, defaultValueSql: "('')"),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 50, nullable: true, defaultValueSql: "('')"),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ChkMan = table.Column<string>(unicode: false, maxLength: 50, nullable: true, defaultValueSql: "('')"),
                    ChkManName = table.Column<string>(unicode: false, maxLength: 50, nullable: true, defaultValueSql: "('')"),
                    ChkDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ChkMob = table.Column<string>(unicode: false, maxLength: 100, nullable: true, defaultValueSql: "('')"),
                    IsPrint = table.Column<bool>(nullable: true, defaultValueSql: "((0))")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_POST", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "PP_MOSched_Temp",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    DailyCapacity = table.Column<int>(nullable: true),
                    EndDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    IsUrgent = table.Column<bool>(nullable: true),
                    LayoutNo = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    LineCount = table.Column<int>(nullable: true),
                    LineNos = table.Column<string>(unicode: false, maxLength: 1000, nullable: true),
                    MO_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Prod_Name = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    Prod_No = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Sched_Info = table.Column<string>(unicode: false, maxLength: 2000, nullable: true),
                    StartDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: false),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Usr = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    UsrName = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Item = table.Column<int>(nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_PP_MOSched_Temp", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "PP_Plan_Order",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    Plan_Date = table.Column<DateTime>(type: "datetime", nullable: false),
                    Plan_No = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    Layout_No = table.Column<string>(unicode: false, maxLength: 40, nullable: false),
                    LayoutName = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    Cust_No = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    Cust_Name = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    Usr_Exec = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    Usr_Name_Exec = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Dept_No = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    Dept_Name = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Src_No = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Req_Date = table.Column<DateTime>(type: "datetime", nullable: true),
                    Rem = table.Column<string>(unicode: false, maxLength: 500, nullable: true),
                    BusiNo = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    BilType = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    BilTypeName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    Usr = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    UsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: false),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    ChkMan = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkManName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    IsClose = table.Column<bool>(nullable: true),
                    ClsDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ClsUsr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ClsUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkMob = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    IsPrint = table.Column<bool>(nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_PP_Plan_Order", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "PP_Production_Order",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    MO_Date = table.Column<DateTime>(type: "datetime", nullable: true),
                    MO_No = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    Src_No = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Plan_No = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    Prod_No = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Prod_Name = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    Unit = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    Ver_No = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Qty = table.Column<decimal>(type: "numeric(18, 2)", nullable: true),
                    Dept_No = table.Column<string>(unicode: false, maxLength: 8, nullable: true),
                    Layout_No = table.Column<string>(unicode: false, maxLength: 40, nullable: true),
                    LayoutName = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Prod_Spec = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    Batch_No = table.Column<string>(unicode: false, maxLength: 40, nullable: true),
                    Cust_No = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    Whse_No = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    Prod_No_Parent = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Mo_No_Parent = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Src_ItemID = table.Column<int>(nullable: true),
                    StartDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    EndDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    StartDate_Act = table.Column<DateTime>(type: "datetime", nullable: true),
                    Req_Date = table.Column<DateTime>(type: "datetime", nullable: true),
                    MO_State = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    Prod_No_Sup = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Rem = table.Column<string>(unicode: false, maxLength: 500, nullable: true),
                    BusiNo = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    BilType = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    BilTypeName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    Usr = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    UsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: false),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    ChkMan = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkManName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    IsClose = table.Column<bool>(nullable: true),
                    ClsDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ClsUsr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ClsUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkMob = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    IsPrint = table.Column<bool>(nullable: true),
                    Src_Cat = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    EndDate_Act = table.Column<DateTime>(type: "datetime", nullable: true),
                    BOM_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Sched_Src_MO = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Sched_Status = table.Column<string>(unicode: false, maxLength: 10, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_PP_Production_Order", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "PP_Work_Calendar",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    Layout_No = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    Layout_Name = table.Column<string>(unicode: false, maxLength: 100, nullable: false),
                    Work_Date = table.Column<DateTime>(type: "datetime", nullable: true),
                    Shift_No = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    Shift_Name = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    WorkGroup = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    WorkGroup_Name = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    StartTime = table.Column<DateTime>(type: "datetime", nullable: false),
                    StartTime_Type = table.Column<string>(unicode: false, maxLength: 10, nullable: false),
                    EndTime = table.Column<DateTime>(type: "datetime", nullable: false),
                    EndTime_Type = table.Column<string>(unicode: false, maxLength: 10, nullable: false),
                    Effective_Hours = table.Column<decimal>(type: "decimal(12, 8)", nullable: true),
                    Usr = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    UsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: false),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    IsDelete = table.Column<bool>(nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_PP_Work_Calendar", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "PP_WorkOrder",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    WO_Date = table.Column<DateTime>(type: "datetime", nullable: false),
                    WO_No = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    WO_Type = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    Src_No = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    Src_BusiNo = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    Dept = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    MO_No = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    Plan_No = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    Prod_No = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Prod_Name = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    Prod_Mark = table.Column<string>(unicode: false, maxLength: 40, nullable: true),
                    Ver_No = table.Column<string>(unicode: false, maxLength: 38, nullable: true),
                    Qty = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    Qty_Fin = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    Unit = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    StartDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    EndDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    StartDate_Act = table.Column<DateTime>(type: "datetime", nullable: true),
                    EndDate_Act = table.Column<DateTime>(type: "datetime", nullable: true),
                    Batch_No = table.Column<string>(unicode: false, maxLength: 40, nullable: true),
                    Shift_No = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    Shift_Date = table.Column<DateTime>(type: "datetime", nullable: true),
                    Item = table.Column<int>(nullable: true),
                    Usr_Exec = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    MO_State = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    WkCenter_No = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    Layout_No = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    Src_ItemID = table.Column<int>(nullable: true),
                    Rem = table.Column<string>(unicode: false, maxLength: 500, nullable: true),
                    BusiNo = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    BilType = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    BilTypeName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    Usr = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    UsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: false),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    ChkMan = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkManName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    IsClose = table.Column<bool>(nullable: true),
                    ClsDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ClsUsr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ClsUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkMob = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    IsPrint = table.Column<bool>(nullable: true),
                    WorkOrder = table.Column<int>(nullable: true),
                    Add_Info = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    WO_Mode = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    Prod_Spec = table.Column<string>(unicode: false, maxLength: 80, nullable: true),
                    UniqueCode = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    End_Whse = table.Column<string>(unicode: false, maxLength: 50, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_PP_WorkOrder", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "PP_WorkPlan",
                columns: table => new
                {
                    id = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    PlanType = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    PlanTypeDesc = table.Column<string>(unicode: false, maxLength: 100, nullable: false),
                    No = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    WorkShop = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    WorkShopCode = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    PartNo = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Quantity = table.Column<decimal>(type: "numeric(18, 2)", nullable: true),
                    Unit = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    UnitDesc = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    CreateUser = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    UserName = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    PlanStartDate = table.Column<string>(unicode: false, maxLength: 30, nullable: true),
                    PlannEndDate = table.Column<string>(unicode: false, maxLength: 30, nullable: true),
                    WarehouseCode = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    WarehouseName = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    FactoryCode = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    FactoryName = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    IsDelete = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UpdateTime = table.Column<DateTime>(type: "datetime", nullable: true, defaultValueSql: "(getdate())"),
                    DocSTatus = table.Column<string>(unicode: false, maxLength: 10, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_PP_WorkPlan", x => x.id);
                });

            migrationBuilder.CreateTable(
                name: "PRD_PARAINFO",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    Para_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    Para_Name = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    Para_Type = table.Column<string>(unicode: false, maxLength: 10, nullable: false),
                    Usr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkMan = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkManName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ChkMob = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    IsPrint = table.Column<bool>(nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_PRD_PARAINFO", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "PRD_PARATYPE",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    NO = table.Column<string>(unicode: false, maxLength: 10, nullable: false),
                    NAME = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    Rem = table.Column<string>(unicode: false, maxLength: 200, nullable: false),
                    STOP_ID = table.Column<bool>(nullable: false),
                    Usr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkMan = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkManName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ChkMob = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    IsPrint = table.Column<bool>(nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_PRD_PARATYPE", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "PRD_SPC",
                columns: table => new
                {
                    SPC_ID = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    SPC_NAME = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    QTY_BOX = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    WG_UNIT = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_BOX_P = table.Column<short>(nullable: true),
                    QTY_TIER = table.Column<short>(nullable: true)
                },
                constraints: table =>
                {
                });

            migrationBuilder.CreateTable(
                name: "PRD_STANDARD",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    NO = table.Column<string>(unicode: false, maxLength: 30, nullable: false),
                    NAME = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    IS_USE = table.Column<bool>(nullable: false),
                    REM = table.Column<string>(unicode: false, maxLength: 12, nullable: false),
                    Usr = table.Column<string>(unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')"),
                    UsrName = table.Column<string>(unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')"),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: false, defaultValueSql: "(getdate())"),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 50, nullable: true, defaultValueSql: "('')"),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 50, nullable: true, defaultValueSql: "('')"),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ChkMan = table.Column<string>(unicode: false, maxLength: 50, nullable: true, defaultValueSql: "('')"),
                    ChkManName = table.Column<string>(unicode: false, maxLength: 50, nullable: true, defaultValueSql: "('')"),
                    ChkDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ChkMob = table.Column<string>(unicode: false, maxLength: 100, nullable: true, defaultValueSql: "('')"),
                    IsPrint = table.Column<bool>(nullable: true, defaultValueSql: "((0))")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_PRD_STANDARD", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "PRD_STATION",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    No = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    Name = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    PdLineNo = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    PdLineName = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    ZC_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    ZC_Name = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    STOP_ID = table.Column<bool>(nullable: false),
                    Usr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkMan = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkManName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ChkMob = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    IsPrint = table.Column<bool>(nullable: true),
                    Factory_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_PRD_STATION", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "PRD_STATION_PARA",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    PRD_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    PdLineNo = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    ZC_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    Station_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    Para_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    Para_Name = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    Up_Limit = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    Low_Limit = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    Para_Type = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    Sort = table.Column<int>(nullable: true),
                    Usr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkMan = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkManName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ChkMob = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    IsPrint = table.Column<bool>(nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_PRD_STATION_PARA", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "PRD_TOOLS",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    NO = table.Column<string>(unicode: false, maxLength: 30, nullable: false),
                    NAME = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    IS_USE = table.Column<bool>(nullable: false),
                    REM = table.Column<string>(unicode: false, maxLength: 12, nullable: false),
                    Usr = table.Column<string>(unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')"),
                    UsrName = table.Column<string>(unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')"),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: false, defaultValueSql: "(getdate())"),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 50, nullable: true, defaultValueSql: "('')"),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 50, nullable: true, defaultValueSql: "('')"),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ChkMan = table.Column<string>(unicode: false, maxLength: 50, nullable: true, defaultValueSql: "('')"),
                    ChkManName = table.Column<string>(unicode: false, maxLength: 50, nullable: true, defaultValueSql: "('')"),
                    ChkDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ChkMob = table.Column<string>(unicode: false, maxLength: 100, nullable: true, defaultValueSql: "('')"),
                    IsPrint = table.Column<bool>(nullable: true, defaultValueSql: "((0))")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_PRD_TOOLS", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "PRDANDWH",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    PRD_NO = table.Column<string>(unicode: false, maxLength: 30, nullable: false),
                    IDX_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    DEP = table.Column<string>(unicode: false, maxLength: 8, nullable: false),
                    WH = table.Column<string>(unicode: false, maxLength: 12, nullable: false),
                    PRD_MARK = table.Column<string>(unicode: false, maxLength: 40, nullable: false, defaultValueSql: "(space((0)))"),
                    QTY = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    REM = table.Column<string>(type: "text", nullable: true),
                    Usr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkMan = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkManName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ChkMob = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    IsPrint = table.Column<bool>(nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_PRDANDWH", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "PRDT",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    PRD_NO = table.Column<string>(unicode: false, maxLength: 30, nullable: false),
                    SNM = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    IDX1 = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UT = table.Column<string>(unicode: false, maxLength: 8, nullable: true),
                    UT1 = table.Column<string>(unicode: false, maxLength: 8, nullable: true),
                    UTNO = table.Column<string>(unicode: false, maxLength: 5, nullable: true),
                    NAME = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    SPC = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    KND = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    SPC_TAX = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    PK2_UT = table.Column<string>(unicode: false, maxLength: 8, nullable: true),
                    PK2_QTY = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    PK3_UT = table.Column<string>(unicode: false, maxLength: 8, nullable: true),
                    PK3_QTY = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    SUP1 = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    SUP2 = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    PAK_UNIT = table.Column<string>(unicode: false, maxLength: 8, nullable: true),
                    PAK_EXC = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    PAK_NW = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    PAK_WEIGHT_UNIT = table.Column<string>(unicode: false, maxLength: 8, nullable: true),
                    PAK_GW = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    PAK_MEAST = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    PAK_MEAST_UNIT = table.Column<string>(unicode: false, maxLength: 8, nullable: true),
                    STOP_ID = table.Column<bool>(nullable: true),
                    PRD_NO_EXC = table.Column<string>(unicode: false, maxLength: 30, nullable: true),
                    NEED_DAYS = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    NOUSE_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    FORMULA = table.Column<string>(unicode: false, maxLength: 210, nullable: true),
                    NAME_ENG = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    UT_TIME = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    IsBatch_Mng = table.Column<bool>(nullable: true),
                    UP_MAX = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    UP_MIN = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_LOW = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    BOM_ID = table.Column<bool>(nullable: true),
                    TIME_UNIT = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    WH = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    OLEFIELD = table.Column<string>(unicode: false, maxLength: 200, nullable: true),
                    TW_ID = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    IsPiece_Mng = table.Column<bool>(nullable: true),
                    SMALLPIC = table.Column<byte[]>(type: "image", nullable: true),
                    PRD_LEVEL = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    PRD_PACK = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    CHK_TAX = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    DEP = table.Column<string>(unicode: false, maxLength: 8, nullable: true),
                    VALID_DAYS = table.Column<short>(nullable: true),
                    NEED_DD = table.Column<short>(nullable: true),
                    IsBarcode_Mng = table.Column<bool>(nullable: true),
                    ABC = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    NOT_RTN = table.Column<bool>(nullable: true),
                    RTO_RTN = table.Column<short>(nullable: true),
                    RTO_CL = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    SAL_NO = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    OLD_CODE = table.Column<string>(unicode: false, maxLength: 30, nullable: true),
                    ML_UT = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    WH_LC = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    QTY_MIN = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    DZ_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    RTO_ID = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    XN_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    CHK_MTN = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    MTN_LTIME = table.Column<int>(nullable: true),
                    CHK_PC = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    CHK_TW = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    WEIGHT = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CADNAME = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    QTY_MIN1 = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_MAX = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    TL_ID = table.Column<bool>(nullable: true),
                    RTO_PC = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    RTO_SA = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    RTO_MM = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    RTO_TB = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    ML_BY_MM = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    CHK_SA = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    CHK_SB = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    CHK_MM = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    CHK_ML = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    CHK_M2 = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    NAME_PY = table.Column<string>(unicode: false, maxLength: 200, nullable: true),
                    QTY_LOST_FIX = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    WC_MONTH = table.Column<int>(nullable: true),
                    BIL_ML = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    Usr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkMan = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkManName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ChkMob = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    IsPrint = table.Column<bool>(nullable: true),
                    REM = table.Column<string>(unicode: false, maxLength: 1000, nullable: true),
                    OnTrayQty = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    IsFirstinout = table.Column<bool>(nullable: true),
                    EffectiveDate = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    IsDelete = table.Column<bool>(nullable: true),
                    FigureNo = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Multiple = table.Column<decimal>(type: "numeric(18, 2)", nullable: true),
                    IsBOM = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    IsAutoRequest = table.Column<bool>(nullable: true),
                    RequestAdvance = table.Column<decimal>(type: "decimal(18, 0)", nullable: true),
                    MinRequestQuantity = table.Column<decimal>(type: "decimal(18, 0)", nullable: true),
                    Unit_Conv = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    MaterialType = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    IIType = table.Column<int>(nullable: true),
                    OIType = table.Column<int>(nullable: true),
                    DIType = table.Column<int>(nullable: true),
                    RMIType = table.Column<int>(nullable: true),
                    StorageType = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    InspectionControl = table.Column<bool>(nullable: true),
                    SelfMadePartsType = table.Column<string>(unicode: false, maxLength: 55, nullable: true),
                    SmallestPackage = table.Column<decimal>(type: "decimal(18, 0)", nullable: true),
                    VALID_UNIT = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    ValidDate = table.Column<int>(nullable: true),
                    PlanLead = table.Column<decimal>(type: "decimal(12, 3)", nullable: true),
                    DeliveryLead = table.Column<decimal>(type: "decimal(18, 0)", nullable: true),
                    IsGroupPickMaterial = table.Column<bool>(nullable: true),
                    DrawNo_His = table.Column<string>(unicode: false, maxLength: 50, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_PRDT", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "PRDT_CHANGE_INFOS",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    SEB_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    PRD_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    STA_TIME = table.Column<DateTime>(type: "datetime", nullable: false),
                    END_TIME = table.Column<DateTime>(type: "datetime", nullable: false),
                    USR = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    USRNAME = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    SYSDATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    UPDDATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    UPDUSR = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UPDUSRNAME = table.Column<string>(unicode: false, maxLength: 50, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_PRDT_CHANGE_INFOS", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "PRDT_CUS1",
                columns: table => new
                {
                    PRD_NO = table.Column<string>(unicode: false, maxLength: 30, nullable: false),
                    PRD_MARK = table.Column<string>(unicode: false, maxLength: 40, nullable: false, defaultValueSql: "(space((0)))"),
                    AREA_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    CUS_NO = table.Column<string>(unicode: false, maxLength: 12, nullable: false),
                    SUP_PRD_NO = table.Column<string>(unicode: false, maxLength: 40, nullable: false),
                    SUP_PRD_MARK = table.Column<string>(unicode: false, maxLength: 40, nullable: false),
                    SUP_PRD_NAME = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    REM = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    LEN_CUS = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    TYPE_CUS = table.Column<string>(unicode: false, maxLength: 40, nullable: true),
                    REM_CUS = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    UP = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    ZC_TYPE = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    STOP_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    SYS_DATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    BZ_KND = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    SPC = table.Column<string>(unicode: false, maxLength: 200, nullable: true),
                    IDX1 = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    CPY_SW = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    QTY_LOW = table.Column<decimal>(type: "numeric(18, 0)", nullable: true)
                },
                constraints: table =>
                {
                });

            migrationBuilder.CreateTable(
                name: "PRDT_CUS2",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    CUS_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    PRD_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    SUP_PRD_NO = table.Column<string>(unicode: false, maxLength: 500, nullable: false),
                    SUP_PRD_NAME = table.Column<string>(unicode: false, maxLength: 500, nullable: false),
                    REM = table.Column<string>(unicode: false, maxLength: 500, nullable: true),
                    PAK_GW = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    NeedChkBarCode = table.Column<bool>(nullable: true),
                    SmallPackageQTY = table.Column<decimal>(type: "decimal(18, 0)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_PRDT_CUS2", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "PRDT_UT",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    No = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    UT_ID = table.Column<string>(unicode: false, maxLength: 4, nullable: false),
                    UT = table.Column<string>(unicode: false, maxLength: 8, nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_PRDT_UT", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "PRDT1",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    WH = table.Column<string>(unicode: false, maxLength: 12, nullable: false),
                    PRD_NO = table.Column<string>(unicode: false, maxLength: 30, nullable: false),
                    PRD_MARK = table.Column<string>(unicode: false, maxLength: 40, nullable: false, defaultValueSql: "(space((0)))"),
                    QTY_INT = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY1 = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    AMT_CST = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_MAX = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_MIN = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_LRN = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_BRW = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_ON_WAY = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_ON_PRC = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_ON_RSV = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_ON_ODR = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    LST_OTD = table.Column<DateTime>(type: "datetime", nullable: true),
                    LST_IND = table.Column<DateTime>(type: "datetime", nullable: true),
                    LST_SFD = table.Column<DateTime>(type: "datetime", nullable: true),
                    UP_INT = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CST_INT = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CST_STD = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CST_PO = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CST_SAL = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    UP_STD = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    UP_SAL = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY1_LRN = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY1_BRW = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    UP_PO = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_SA = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_RK = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_ZG = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_CK = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_SQ = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    REM = table.Column<string>(unicode: false, maxLength: 60, nullable: true),
                    CHQC_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    QTY_SW = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_WX = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_WS = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_WS_KC = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_QL = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_Q2 = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_Q2_YL = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_Q3 = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CST_BX = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_SQR = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_SQC = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_LOCK = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_JH = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    SC_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    LST_OTD_QC = table.Column<DateTime>(type: "datetime", nullable: true),
                    LST_IND_QC = table.Column<DateTime>(type: "datetime", nullable: true),
                    UP_DD = table.Column<byte[]>(nullable: true),
                    QTY1_LOCK = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    Usr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkMan = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkManName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ChkMob = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    IsPrint = table.Column<bool>(nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_PRDT1", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "PRDT1_INFO",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    PRD_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    PRD_NAME = table.Column<string>(unicode: false, maxLength: 200, nullable: true),
                    PRD_SPC = table.Column<string>(unicode: false, maxLength: 200, nullable: true),
                    Unit = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    WH = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    InOut = table.Column<byte>(nullable: true),
                    QTY = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_PRDT1_INFO", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "PREDEFREASON",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    No = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    Name = table.Column<string>(unicode: false, maxLength: 100, nullable: false),
                    CallTypeNo = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    Sort = table.Column<int>(nullable: true),
                    ZC_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_PREDEFREASON", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "PROCESSINFO",
                columns: table => new
                {
                    BARCODE = table.Column<string>(maxLength: 200, nullable: true),
                    PROCESS = table.Column<string>(maxLength: 100, nullable: false),
                    EQUIPMENT = table.Column<string>(maxLength: 200, nullable: true),
                    PERSON = table.Column<string>(maxLength: 100, nullable: true),
                    SHIFT = table.Column<string>(maxLength: 100, nullable: true),
                    SFHG = table.Column<string>(maxLength: 100, nullable: true),
                    DEPARTMENT = table.Column<string>(maxLength: 100, nullable: true),
                    STARTTIME = table.Column<string>(maxLength: 100, nullable: true),
                    PRDNO = table.Column<string>(maxLength: 100, nullable: true),
                    ZC_NO = table.Column<string>(maxLength: 100, nullable: true),
                    SEB_NO = table.Column<string>(maxLength: 100, nullable: true),
                    SAL_NO = table.Column<string>(maxLength: 100, nullable: true),
                    DEP_NO = table.Column<string>(maxLength: 100, nullable: true),
                    ZC_NUM = table.Column<int>(nullable: true),
                    LU_NO = table.Column<string>(maxLength: 100, nullable: true),
                    LSB_NO = table.Column<string>(maxLength: 100, nullable: true),
                    ZYB_NO = table.Column<string>(maxLength: 100, nullable: true),
                    TZ_NO = table.Column<string>(maxLength: 100, nullable: true)
                },
                constraints: table =>
                {
                });

            migrationBuilder.CreateTable(
                name: "QC_BARCODE",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    BARCODE = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    FLAG = table.Column<int>(nullable: true),
                    SYSDATE = table.Column<DateTime>(type: "datetime", nullable: true, defaultValueSql: "(getdate())")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_QC_BARCODE", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "QC_DefectType",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    BilType = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    BilTypeName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    BusiNo = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ChkMan = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkManName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkMob = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    ClsDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ClsUsr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ClsUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    IsClose = table.Column<bool>(nullable: true),
                    IsDeleted = table.Column<bool>(nullable: true),
                    IsPrint = table.Column<bool>(nullable: true),
                    Name = table.Column<string>(unicode: false, maxLength: 60, nullable: true),
                    No = table.Column<string>(unicode: false, maxLength: 40, nullable: true),
                    Rem = table.Column<string>(unicode: false, maxLength: 500, nullable: true),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: false),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    Usr = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    UsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_QC_DefectType", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "qc_finished",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    PFA_NO = table.Column<string>(maxLength: 50, nullable: true, comment: "表单"),
                    PRD_NO = table.Column<string>(maxLength: 50, nullable: true, comment: "产品"),
                    FromDate = table.Column<DateTime>(type: "datetime", nullable: true, comment: "起始日期"),
                    ToDate = table.Column<DateTime>(type: "datetime", nullable: true, comment: "结束日期"),
                    QTY = table.Column<decimal>(type: "numeric(18, 0)", nullable: true, comment: "送检数量"),
                    Usr = table.Column<string>(unicode: false, maxLength: 20, nullable: true, comment: "用户编号"),
                    UsrName = table.Column<string>(unicode: false, maxLength: 50, nullable: true, comment: "用户名"),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: true, defaultValueSql: "(getdate())", comment: "创建时间"),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true, comment: "修改时间"),
                    Comment = table.Column<string>(maxLength: 500, nullable: true, comment: "备注"),
                    CycleType = table.Column<int>(nullable: true, comment: "周期类别 10.首件 20.末件 30.件数 40.分钟 50.小时 60.天"),
                    Cycle = table.Column<int>(nullable: true, comment: "周期")
                },
                constraints: table =>
                {
                });

            migrationBuilder.CreateTable(
                name: "QC_INSP_FREQ",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    FREQ_NAME = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    RREQ_VALUE = table.Column<int>(nullable: true),
                    UNIT = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    SYSDATE = table.Column<DateTime>(type: "datetime", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_QC_INSP_FREQ", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "QC_ITEM",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    QC_ITM = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    NAME = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    PRJ_TYPE = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Usr = table.Column<string>(unicode: false, maxLength: 20, nullable: false, defaultValueSql: "('')"),
                    UsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: false, defaultValueSql: "('')"),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: false, defaultValueSql: "((1))"),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true, defaultValueSql: "('')"),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 20, nullable: true, defaultValueSql: "('')"),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true, defaultValueSql: "('')"),
                    ChkMan = table.Column<string>(unicode: false, maxLength: 20, nullable: true, defaultValueSql: "('')"),
                    ChkManName = table.Column<string>(unicode: false, maxLength: 20, nullable: true, defaultValueSql: "('')"),
                    ChkDate = table.Column<DateTime>(type: "datetime", nullable: true, defaultValueSql: "('')"),
                    ChkMOB = table.Column<string>(unicode: false, maxLength: 100, nullable: true, defaultValueSql: "('')"),
                    IsPrint = table.Column<bool>(nullable: true, defaultValueSql: "((0))"),
                    Unit = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ParameterCode = table.Column<string>(maxLength: 50, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_QC_ITEM", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "QC_PRD_INSPECT_SCHEMES",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    WS_SPC = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    IS_WS_FIRST_INSPECT = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    IS_WS_LAST_INSPECT = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    IS_WS_INSPECT = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    WS_INSPECT_HZ = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    WS_INSPECT_TYPE = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    WS_INSPECT_CNT = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    WS_COLLECT_METHOD = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    QC_SPC = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    IS_QC_FIRST_INSPECT = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    IS_QC_LAST_INSPECT = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    IS_QC_INSPECT = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    QC_INSPECT_HZ = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    QC_INSPECT_TYPE = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    QC_INSPECT_CNT = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    QC_COLLECT_METHOD = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    PRD_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    ZC_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    DEVICE_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    MOULD = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    WEATHER_CONDITION = table.Column<string>(unicode: false, maxLength: 200, nullable: true),
                    MONTH_CONDITION = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    INSPECT_PROJECT_NAME = table.Column<string>(unicode: false, maxLength: 500, nullable: true),
                    MIN_TOLERANCE_1 = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    MAX_TOLERANCE_1 = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    MIN_SCOPE_1 = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    MAX_SCOPE_1 = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    MIN_TOLERANCE_2 = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    MAX_TOLERANCE_2 = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    MIN_SCOPE_2 = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    MAX_SCOPE_2 = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    STANDARD_SCOPE_VALUE = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    INSPECT_TYPE = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    CREATE_DATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    ZC_NAME = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    EFF_DATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    INSPECT_PROJECT_NO = table.Column<string>(unicode: false, maxLength: 200, nullable: true),
                    SORT = table.Column<int>(nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_QC_PRD_INSPECT_SCHEMES", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "QC_PRD_MEASURE_RECORD",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    PART_NAME = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    REVISIONNUMBER = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    SERIALNUMBER = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    DDATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    DTIME = table.Column<string>(unicode: false, maxLength: 5, nullable: true),
                    CREATE_DATE = table.Column<DateTime>(type: "datetime", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_QC_PRD_MEASURE_RECORD", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "QC_PRD_MEASURE_RECORD_ITEM",
                columns: table => new
                {
                    ID = table.Column<long>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    MID = table.Column<long>(nullable: false),
                    DIMENSION = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    DESCRIPTION = table.Column<string>(unicode: false, maxLength: 200, nullable: true),
                    AXIS = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    MEAS = table.Column<decimal>(type: "decimal(18, 4)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_QC_PRD_MEASURE_RECORD_ITEM", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "QC_PRD_MEASURE_SCHEMES",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    PART_NAME = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    REVISIONNUMBER = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    DDATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    DTIME = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    CREATE_DATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    SERIALNUMBER = table.Column<string>(unicode: false, maxLength: 50, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_QC_PRD_MEASURE_SCHEMES", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "QC_PRD_MEASURE_SCHEMES_ITEM",
                columns: table => new
                {
                    ID = table.Column<long>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    MID = table.Column<long>(nullable: false),
                    DIMENSION = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    DESCRIPTION = table.Column<string>(unicode: false, maxLength: 200, nullable: true),
                    AXIS = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    NUM_MIN_IN = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    NUM_MAX_IN = table.Column<decimal>(type: "decimal(18, 4)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_QC_PRD_MEASURE_SCHEMES_ITEM", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "QC_PRD_SQC",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    PFA_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    PFA_NAME = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    PRJ_CATEGORY = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    PRJ_FEATURE = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    IMP_BY = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    PRD_NO = table.Column<string>(unicode: false, maxLength: 30, nullable: true),
                    PRJ_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    GRAPH_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    CHK_MODEL = table.Column<int>(nullable: true),
                    CHK_QTY = table.Column<int>(nullable: true),
                    PRJ_TYPE = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    ZC_NO = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    PHOTO_ZC = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    FILE_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    AQL = table.Column<decimal>(type: "numeric(18, 5)", nullable: true),
                    PRD_MARK = table.Column<string>(unicode: false, maxLength: 40, nullable: true),
                    REM = table.Column<string>(type: "text", nullable: true),
                    Usr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UsrName = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ChkMan = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkManName = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    ChkDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ChkMOB = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    IsPrint = table.Column<bool>(nullable: true),
                    PrintBillNo = table.Column<bool>(nullable: true),
                    PrintTpName = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    EFF_DATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    SuppCode = table.Column<string>(maxLength: 50, nullable: true),
                    EndDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    MaterialType = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    FrequencyType = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Frequency = table.Column<int>(nullable: true),
                    InspectUnit = table.Column<int>(nullable: true),
                    RecordQty = table.Column<int>(nullable: true),
                    SampleQty = table.Column<decimal>(type: "decimal(18, 4)", nullable: true),
                    SampleRule = table.Column<int>(nullable: true),
                    Version = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    EFI = table.Column<bool>(nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_QC_PRD_SQC", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "QC_PRD_SQC_ITEM",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    MID = table.Column<int>(nullable: false),
                    QC_ITM = table.Column<string>(unicode: false, maxLength: 10, nullable: false),
                    QC_MODEL = table.Column<int>(nullable: false),
                    QC_Enum_BusiNo = table.Column<string>(unicode: false, maxLength: 500, nullable: true),
                    QC_SPC = table.Column<string>(unicode: false, maxLength: 500, nullable: true),
                    QC_MTH = table.Column<string>(unicode: false, maxLength: 500, nullable: true),
                    QC_STANDARD = table.Column<string>(unicode: false, maxLength: 30, nullable: true),
                    QC_TOOLS = table.Column<string>(unicode: false, maxLength: 30, nullable: true),
                    ITM = table.Column<int>(nullable: false),
                    LowSybol = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    StandardValue = table.Column<decimal>(type: "numeric(18, 4)", nullable: true),
                    NUM_MIN = table.Column<decimal>(type: "numeric(18, 4)", nullable: true),
                    UpSybol = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    NUM_MAX = table.Column<decimal>(type: "decimal(18, 4)", nullable: true),
                    NUM_MIN_IN = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    NUM_MAX_IN = table.Column<decimal>(type: "decimal(18, 4)", nullable: true),
                    SAMP_LEVEL = table.Column<string>(unicode: false, maxLength: 4, nullable: true),
                    QTY_AQLCR = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_AQLMAJ = table.Column<decimal>(type: "decimal(18, 4)", nullable: true),
                    QTY_AQLMIN = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    ERF_FILE = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    REM = table.Column<string>(unicode: false, maxLength: 500, nullable: true),
                    UNIT = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    UpDesignTolerance = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    LowDesignTolerance = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    LowDesignScope = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    UpDesignScope = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    LowTechScope = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    UpTechScope = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    ParameterType = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    FrequencyType = table.Column<string>(unicode: false, maxLength: 4, nullable: true),
                    Frequency = table.Column<int>(nullable: true),
                    ItemID = table.Column<int>(nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_QC_PRD_SQC_ITEM", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "QC_PRJ",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    PRJ_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    PRJ_NAME = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    PRJ_VER = table.Column<int>(nullable: false),
                    PRJ_CATEGORY = table.Column<string>(unicode: false, maxLength: 10, nullable: false),
                    PRJ_TYPE = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    CHK_MODEL = table.Column<int>(nullable: false),
                    REM = table.Column<string>(type: "text", nullable: true),
                    Usr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UsrName = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ChkMan = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkManName = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    ChkDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ChkMOB = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    IsPrint = table.Column<bool>(nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_QC_PRJ", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "QC_PRJ_ITEM",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    MID = table.Column<int>(nullable: false),
                    QC_ITM = table.Column<string>(unicode: false, maxLength: 10, nullable: false),
                    QC_MODEL = table.Column<int>(nullable: false),
                    QC_SPC = table.Column<string>(unicode: false, maxLength: 500, nullable: true),
                    QC_MTH = table.Column<string>(unicode: false, maxLength: 500, nullable: true),
                    ITM = table.Column<int>(nullable: false),
                    NUM_MIN = table.Column<decimal>(type: "decimal(18, 4)", nullable: true),
                    LowSybol = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    NUM_MAX = table.Column<decimal>(type: "decimal(18, 4)", nullable: true),
                    UpSybol = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    NUM_MIN_IN = table.Column<decimal>(type: "decimal(18, 4)", nullable: true),
                    NUM_MAX_IN = table.Column<decimal>(type: "decimal(18, 4)", nullable: true),
                    SAMP_LEVEL = table.Column<string>(unicode: false, maxLength: 4, nullable: true),
                    QTY_AQLCR = table.Column<decimal>(type: "decimal(18, 4)", nullable: true),
                    QTY_AQLMAJ = table.Column<decimal>(type: "decimal(18, 4)", nullable: true),
                    QTY_AQLMIN = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    ERF_FILE = table.Column<string>(unicode: false, maxLength: 500, nullable: true),
                    REM = table.Column<string>(type: "text", nullable: true),
                    MS_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_QC_PRJ_ITEM", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "QC_PRJ_TYPE",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    TYPE_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    TYPE_NAME = table.Column<string>(unicode: false, maxLength: 300, nullable: true),
                    REM = table.Column<string>(unicode: false, maxLength: 200, nullable: true),
                    Usr = table.Column<string>(unicode: false, maxLength: 20, nullable: false, defaultValueSql: "('')"),
                    UsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: false, defaultValueSql: "('')"),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: false, defaultValueSql: "((1))"),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true, defaultValueSql: "('')"),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 20, nullable: true, defaultValueSql: "('')"),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true, defaultValueSql: "('')"),
                    ChkMan = table.Column<string>(unicode: false, maxLength: 20, nullable: true, defaultValueSql: "('')"),
                    ChkManName = table.Column<string>(unicode: false, maxLength: 20, nullable: true, defaultValueSql: "('')"),
                    ChkDate = table.Column<DateTime>(type: "datetime", nullable: true, defaultValueSql: "('')"),
                    ChkMOB = table.Column<string>(unicode: false, maxLength: 100, nullable: true, defaultValueSql: "('')"),
                    IsPrint = table.Column<bool>(nullable: true, defaultValueSql: "((0))")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_QC_PRJ_TYPE", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "QC_RECORD",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    SourceBillNo = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    SourceType = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    ZC_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    PRD_NO = table.Column<string>(unicode: false, maxLength: 30, nullable: true),
                    PRJ_TYPE = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    PRJ_CATEGORY = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    PFA_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    QC_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    SY_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    GRAPH_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    FILE_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    DEP_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    BAN_NO = table.Column<string>(unicode: false, maxLength: 4, nullable: true),
                    SEB_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    BARCODE = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    PHOTO = table.Column<Guid>(nullable: true),
                    SU_Date = table.Column<DateTime>(type: "datetime", nullable: true),
                    QC_Date = table.Column<DateTime>(type: "datetime", nullable: true),
                    FUR_BAT_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    FUR_Number = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QC_QTY = table.Column<decimal>(type: "decimal(18, 4)", nullable: true),
                    QC_POSITION = table.Column<string>(unicode: false, maxLength: 3500, nullable: true),
                    IMP_BY = table.Column<string>(unicode: false, maxLength: 3500, nullable: true),
                    IMP_STD = table.Column<string>(unicode: false, maxLength: 3500, nullable: true),
                    QC_DEV = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    No = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    BillDate = table.Column<DateTime>(type: "datetime", nullable: false),
                    Rem = table.Column<string>(unicode: false, maxLength: 3500, nullable: true),
                    BusiNo = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    BilType = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    BilTypeName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    Usr = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    UsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: false),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkMan = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkManName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    IsClose = table.Column<bool>(nullable: true),
                    ClsDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ClsUsr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ClsUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkMob = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    IsPrint = table.Column<bool>(nullable: true),
                    QC_Result = table.Column<string>(maxLength: 50, nullable: true),
                    TZ_NO = table.Column<string>(maxLength: 50, nullable: true),
                    BillStatus = table.Column<int>(nullable: true),
                    InspectTC = table.Column<int>(nullable: true),
                    QualifiedQty = table.Column<int>(nullable: true),
                    UnqualifiedQty = table.Column<int>(nullable: true),
                    SamplingRule = table.Column<int>(nullable: true),
                    Priority = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    Attachment = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    BatchNo = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    SuppCode = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    AQL = table.Column<decimal>(type: "numeric(18, 5)", nullable: true),
                    SampleQty = table.Column<decimal>(type: "decimal(18, 4)", nullable: true),
                    RecordQty = table.Column<decimal>(type: "decimal(18, 4)", nullable: true),
                    SchemeID = table.Column<int>(nullable: true),
                    InspectionType = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    RelationID = table.Column<int>(nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_QC_RECORD", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "QC_TOOL",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    TOOL_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    NAME = table.Column<string>(unicode: false, maxLength: 100, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_QC_TOOL", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "QCINTERFACERECORDD",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    batNo = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    BillTime = table.Column<DateTime>(type: "datetime", nullable: true),
                    ChkDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ChkTemplate = table.Column<int>(nullable: true),
                    ChkUser = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    depID = table.Column<int>(nullable: true),
                    dInputDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    iFlag = table.Column<byte>(nullable: true),
                    IsPrint = table.Column<byte>(nullable: true),
                    LockUser = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    MID = table.Column<int>(nullable: true),
                    prdID = table.Column<int>(nullable: true),
                    PrintDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    PrintUser = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    qty = table.Column<int>(nullable: true),
                    qtyLost = table.Column<int>(nullable: true),
                    qtyOK = table.Column<int>(nullable: true),
                    REM = table.Column<string>(unicode: false, maxLength: 1000, nullable: true),
                    Sort = table.Column<int>(nullable: true),
                    sUserID = table.Column<string>(unicode: false, maxLength: 30, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_QCINTERFACERECORDD", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "QCINTERFACERECORDM",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    BillDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    BillNo = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    ChkDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ChkTemplate = table.Column<int>(nullable: true),
                    ChkUser = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    dInputDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    empID = table.Column<int>(nullable: true),
                    iFlag = table.Column<byte>(nullable: true),
                    IsPrint = table.Column<byte>(nullable: true),
                    LockUser = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    PrintDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    PrintUser = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    qcTypeID = table.Column<int>(nullable: true),
                    REM = table.Column<string>(unicode: false, maxLength: 1000, nullable: true),
                    sUserID = table.Column<string>(unicode: false, maxLength: 30, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_QCINTERFACERECORDM", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "QCINTERFACERECORDV",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    ChkDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ChkTemplate = table.Column<int>(nullable: true),
                    ChkUser = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    dInputDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    iFlag = table.Column<byte>(nullable: true),
                    IsPrint = table.Column<byte>(nullable: true),
                    LockUser = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    MeasureType = table.Column<int>(nullable: true),
                    MID = table.Column<int>(nullable: true),
                    PrintDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    PrintUser = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    qcItemID = table.Column<int>(nullable: true),
                    Sort = table.Column<int>(nullable: true),
                    sUserID = table.Column<string>(unicode: false, maxLength: 30, nullable: true),
                    Value = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    ValueMax = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    ValueMin = table.Column<decimal>(type: "decimal(18, 4)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_QCINTERFACERECORDV", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "QCITEMINTERFACE",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    ChkDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ChkTemplate = table.Column<int>(nullable: true),
                    ChkUser = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    dInputDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    iFlag = table.Column<byte>(nullable: true),
                    IsPrint = table.Column<byte>(nullable: true),
                    LockUser = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    PrintDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    PrintUser = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    qcItemInterfaceName = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    qcItemInterfaceNo = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    REM = table.Column<string>(unicode: false, maxLength: 4000, nullable: true),
                    sUserID = table.Column<string>(unicode: false, maxLength: 30, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_QCITEMINTERFACE", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "QM_InspectBill",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    PID = table.Column<int>(nullable: true, comment: "检验计划ID"),
                    TID = table.Column<int>(nullable: true, comment: "检验单模板ID"),
                    BillNo = table.Column<string>(unicode: false, maxLength: 30, nullable: true, comment: "检验单据号"),
                    ProcedureCode = table.Column<string>(unicode: false, maxLength: 20, nullable: true, comment: "工序代码"),
                    BAN_NO = table.Column<string>(unicode: false, maxLength: 55, nullable: true),
                    InspectUser = table.Column<string>(unicode: false, maxLength: 20, nullable: true, comment: "送检人"),
                    BillStatus = table.Column<string>(unicode: false, maxLength: 20, nullable: true, comment: "状态"),
                    Result = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    Usr = table.Column<string>(unicode: false, maxLength: 20, nullable: false, comment: "创建人"),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: false, defaultValueSql: "(getdate())", comment: "创建日期"),
                    InspectDate = table.Column<DateTime>(type: "datetime", nullable: true, comment: "样本送检时间"),
                    PlanDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    InspectNum = table.Column<decimal>(type: "numeric(18, 2)", nullable: true, comment: "送检数量"),
                    ManualSubmitUser = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ManualsubmitTime = table.Column<DateTime>(type: "datetime", nullable: true),
                    SamplingTime = table.Column<DateTime>(type: "datetime", nullable: true),
                    BillType = table.Column<int>(nullable: true),
                    SourceBillNo = table.Column<string>(unicode: false, maxLength: 200, nullable: true),
                    Dept = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    SuppCode = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    InspectTC = table.Column<int>(nullable: true),
                    Comment = table.Column<string>(unicode: false, maxLength: 200, nullable: true),
                    SourceType = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    InspectionMode = table.Column<string>(maxLength: 10, nullable: true),
                    Attachment = table.Column<string>(unicode: false, maxLength: 50, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_QM_InspectBill", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "QM_InspectingOrder",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    BizNo = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    BillNoSource = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    InspectingNo = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    PrdNo = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    PrdName = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    InspectingTime = table.Column<int>(nullable: true),
                    InspectingDevice = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    InspectingType = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    BillStatus = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    InspectingInstructor = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Result = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    BatchNo = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ProducedDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    PartnerNo = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    DeptNo = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    SendInspectingQty = table.Column<int>(nullable: true),
                    InspectingSchemesNo = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    Attachment = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    SampleRule = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    IsSample = table.Column<bool>(nullable: true),
                    Priority = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    QualifiedQty = table.Column<int>(nullable: true),
                    DisqualificationQty = table.Column<int>(nullable: true),
                    Usr = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    UsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: false),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 50, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_QM_InspectingOrder", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "QM_InspectionTypeDevice",
                columns: table => new
                {
                    id = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    DeviceNo = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    InspectionType = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    Usr = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_QM_InspectionTypeDevice", x => x.id);
                });

            migrationBuilder.CreateTable(
                name: "QM_InspectPlan",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    ProcedureCode = table.Column<string>(unicode: false, maxLength: 20, nullable: false, comment: "工序代码"),
                    JobType = table.Column<string>(unicode: false, maxLength: 20, nullable: false, comment: "计划任务类型【自动、手动】"),
                    InspectPlanNum = table.Column<decimal>(type: "numeric(18, 2)", nullable: false, comment: "计划送检数量"),
                    TemplateId = table.Column<int>(nullable: true, comment: "检验表单模板"),
                    Cycle = table.Column<int>(nullable: true, comment: "检验周期"),
                    CycleUnit = table.Column<string>(unicode: false, maxLength: 10, nullable: true, comment: "检验周期单位[秒、分钟、日、周]"),
                    Priority = table.Column<string>(unicode: false, maxLength: 10, nullable: false, comment: "优先级【可选、必检】"),
                    EffectiveDate = table.Column<DateTime>(type: "datetime", nullable: false, comment: "计划生效日期"),
                    PlanStatus = table.Column<string>(unicode: false, maxLength: 10, nullable: false, comment: "计划状态"),
                    PlanNo = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    PlanName = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    InspectType = table.Column<string>(unicode: false, maxLength: 50, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_QM_InspectPlan", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "QM_InspectSD",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    MID = table.Column<int>(nullable: false, comment: "检验样本ID"),
                    DeviceNo = table.Column<string>(unicode: false, maxLength: 50, nullable: true, comment: "设备号"),
                    ProductNo = table.Column<string>(unicode: false, maxLength: 50, nullable: true, comment: "产品编码"),
                    InspectDate = table.Column<DateTime>(type: "datetime", nullable: true, comment: "检测时间"),
                    InspectName = table.Column<string>(unicode: false, maxLength: 50, nullable: false, comment: "检查项中文名"),
                    InspectCode = table.Column<string>(unicode: false, maxLength: 20, nullable: false, comment: "检测项代码"),
                    LowerLimit = table.Column<string>(unicode: false, maxLength: 20, nullable: true, comment: "检测值下限"),
                    UpperLimit = table.Column<string>(unicode: false, maxLength: 20, nullable: true, comment: "检测值上限"),
                    StandardValue = table.Column<string>(unicode: false, maxLength: 20, nullable: true, comment: "检测标准值"),
                    RealValue = table.Column<string>(unicode: false, maxLength: 20, nullable: true, comment: "实测值"),
                    Unit = table.Column<string>(unicode: false, maxLength: 20, nullable: true, comment: "单位"),
                    InspectType = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    BarCode = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    InputDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    castingBatchNo = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    StoveNo = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Remark = table.Column<string>(unicode: false, maxLength: 50, nullable: true, comment: "备注"),
                    Result = table.Column<string>(unicode: false, maxLength: 20, nullable: true, comment: "是否合格"),
                    UpdateStamp = table.Column<byte[]>(rowVersion: true, nullable: false, comment: "更新时间戳"),
                    SYSDATE = table.Column<DateTime>(type: "datetime", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_QM_InspectSD", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "QM_InspectT",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    Name = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    ProcedureCode = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    ProductNo = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    InspectType = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    Remark = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    Usr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    Pdline = table.Column<string>(unicode: false, maxLength: 55, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_QM_InspectT", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "QM_MF_QC_XJ",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    PG_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: true, defaultValueSql: "('')"),
                    MO_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: true, defaultValueSql: "('')"),
                    DEP = table.Column<string>(unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')"),
                    PRD_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: true, defaultValueSql: "('')"),
                    BAT_NO = table.Column<string>(unicode: false, maxLength: 500, nullable: true),
                    SAL_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')"),
                    BAN_NO = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    NO = table.Column<string>(unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')"),
                    Rem = table.Column<string>(unicode: false, maxLength: 4000, nullable: true),
                    BusiNo = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    BillDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    BilType = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    BilTypeName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    Usr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkMan = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkManName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    IsClose = table.Column<bool>(nullable: true),
                    ClsDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ClsUsr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ClsUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkMob = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    IsPrint = table.Column<bool>(nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_QM_MF_QC_XJ", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "QM_ProcessInspection",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    Attachment = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    No = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    ProcessNo = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    PROD_NAME = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    PROD_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    PROD_SPC = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    StartDate = table.Column<DateTime>(type: "datetime", nullable: false),
                    WkCenter_No = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    WO_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_QM_ProcessInspection", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "QM_SendInspectingOrder",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    SendInspectingOrderNo = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    BillType = table.Column<int>(nullable: true),
                    InspectingTime = table.Column<int>(nullable: true),
                    BillNoSource = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    BillSourceLineNo = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    BizNo = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    BillSourceType = table.Column<int>(nullable: true),
                    PartnerNo = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    DeptNo = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    PrdNo = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    PrdName = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    BillSourceQty = table.Column<int>(nullable: true),
                    BillStatus = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    InspectingResult = table.Column<int>(nullable: true),
                    ReworkQty = table.Column<int>(nullable: true),
                    AcceptOnDeviationQty = table.Column<int>(nullable: true),
                    ReturnQty = table.Column<int>(nullable: true),
                    QualifiedQty = table.Column<int>(nullable: true),
                    ScrapQty = table.Column<int>(nullable: true),
                    AccomplishDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    BatchNo = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    RawMaterialBatch = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ProducedDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    IsSample = table.Column<bool>(nullable: true),
                    ProcessNo = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    DeviceNo = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    StationNo = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ShiftNo = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    NonconformityHandlingAdvice = table.Column<int>(nullable: true),
                    Usr = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    UsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: false),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 50, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_QM_SendInspectingOrder", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "QM_TF_QC_XJ",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    MID = table.Column<int>(nullable: false),
                    PG_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')"),
                    MO_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')"),
                    DEP = table.Column<string>(unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')"),
                    PRD_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')"),
                    BAT_NO = table.Column<string>(unicode: false, maxLength: 500, nullable: false),
                    ZC_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')"),
                    SPC_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')"),
                    SAL_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')"),
                    QTY = table.Column<decimal>(type: "decimal(18, 4)", nullable: false),
                    sMEMO = table.Column<string>(unicode: false, maxLength: 500, nullable: false, defaultValueSql: "('')"),
                    PRC_ID = table.Column<int>(nullable: false),
                    REM1 = table.Column<string>(unicode: false, maxLength: 500, nullable: false, defaultValueSql: "('')")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_QM_TF_QC_XJ", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "qmTI",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    BillNo = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    BillStatus = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    BilType = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    BilTypeName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    BusiNo = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ChkMan = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkManName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkMob = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    ClsDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ClsUsr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ClsUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    DeptNo = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    InspectTC = table.Column<int>(nullable: true),
                    IsCheck = table.Column<bool>(nullable: true),
                    IsClose = table.Column<bool>(nullable: true),
                    IsPrint = table.Column<bool>(nullable: true),
                    Rem = table.Column<string>(unicode: false, maxLength: 500, nullable: true),
                    SendInspectorID = table.Column<int>(nullable: true),
                    SourceBillNo = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    SuppCode = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: false),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    Usr = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    UsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    IsEFI = table.Column<bool>(nullable: true),
                    Attachment = table.Column<string>(unicode: false, maxLength: 50, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_qmTI", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "qmTY",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    BillNo = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    BillStatus = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    BilType = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    BilTypeName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    BusiNo = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ChkMan = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkManName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkMob = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    ClsDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ClsUsr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ClsUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    DeptNo = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    InspectorID = table.Column<int>(nullable: true),
                    IsClose = table.Column<bool>(nullable: true),
                    IsPrint = table.Column<bool>(nullable: true),
                    Rem = table.Column<string>(unicode: false, maxLength: 500, nullable: true),
                    SourceBillNo = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    SuppCode = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: false),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    Usr = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    UsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    CHK_KND = table.Column<int>(nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_qmTY", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "QPIS_PIC_MAP",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    PRD_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    ZC_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    INSPECT_TYPE = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    EFF_DATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    PICID = table.Column<int>(nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_QPIS_PIC_MAP", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "RESP_INFO",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    MID = table.Column<int>(nullable: false),
                    RESP_SAL_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    RESP_DATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    RESET_SAL_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    RESET_DATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: false),
                    Usr = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    UsrName = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    BusiNo = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    Source_No = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Rem = table.Column<string>(unicode: false, maxLength: 500, nullable: true),
                    Resp_Comment = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    TO_BillNo = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    FC_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    FC_NAME = table.Column<string>(unicode: false, maxLength: 100, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_RESP_INFO", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "RJG_TZ_MAP",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    RL_ID = table.Column<int>(nullable: true),
                    RL_TZ = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    MRP_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    MO_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    SYS_DATE = table.Column<DateTime>(type: "datetime", nullable: false),
                    JL_TZ = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ZY_CAPACITY = table.Column<decimal>(type: "decimal(18, 2)", nullable: true, comment: "转运容量"),
                    SEB_NO = table.Column<string>(maxLength: 50, nullable: true),
                    BAN_NO = table.Column<string>(fixedLength: true, maxLength: 50, nullable: true),
                    ZC_NO = table.Column<string>(maxLength: 50, nullable: true),
                    LSB_SEB_NO = table.Column<string>(maxLength: 50, nullable: true),
                    LSB_TZ = table.Column<string>(maxLength: 100, nullable: true),
                    JLJ_SEB_NO = table.Column<string>(maxLength: 50, nullable: true),
                    ZY_Surplus = table.Column<decimal>(type: "decimal(18, 2)", nullable: true),
                    UNIT = table.Column<string>(maxLength: 20, nullable: true),
                    TEMPERATURE = table.Column<decimal>(type: "decimal(18, 2)", nullable: true),
                    JL_ID = table.Column<int>(nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_RJG_TZ_MAP", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "RL_SBEI",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    MID = table.Column<int>(nullable: true),
                    RL_TZ = table.Column<string>(maxLength: 100, nullable: true),
                    BEGIN_DATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    END_DATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    CREATE_USERID = table.Column<int>(nullable: true),
                    CREATE_USERNAME = table.Column<string>(fixedLength: true, maxLength: 20, nullable: true),
                    END_USERID = table.Column<int>(nullable: true),
                    END_USERNAME = table.Column<string>(fixedLength: true, maxLength: 20, nullable: true),
                    SEB_NO = table.Column<string>(maxLength: 100, nullable: true),
                    BAN_NO = table.Column<string>(maxLength: 50, nullable: true),
                    ZC_NO = table.Column<string>(maxLength: 50, nullable: true),
                    STATE = table.Column<int>(nullable: true),
                    SYSDATE = table.Column<DateTime>(type: "datetime", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_RL_SBEI", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "RM_CutterProdectMapping",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    Name = table.Column<string>(unicode: false, maxLength: 100, nullable: false),
                    ProdectCode = table.Column<string>(fixedLength: true, maxLength: 50, nullable: true),
                    ProdectName = table.Column<string>(fixedLength: true, maxLength: 100, nullable: true),
                    CutterCode = table.Column<string>(fixedLength: true, maxLength: 50, nullable: true),
                    CutterName = table.Column<string>(fixedLength: true, maxLength: 100, nullable: true),
                    TypeNature = table.Column<string>(fixedLength: true, maxLength: 50, nullable: true),
                    TypeCode = table.Column<string>(fixedLength: true, maxLength: 50, nullable: true),
                    TypeName = table.Column<string>(fixedLength: true, maxLength: 100, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_RM_CutterProdectMapping", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "RM_Cutters_Code",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    Cutter_No = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    Cutter_Name = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    Cutter_Desc = table.Column<string>(unicode: false, maxLength: 500, nullable: true),
                    TypeNo = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Qty_Standard = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    Factor_Max = table.Column<decimal>(type: "numeric(18, 2)", nullable: true),
                    Factor_Warn = table.Column<decimal>(type: "numeric(18, 2)", nullable: true),
                    Usr = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    UsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: false),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 20, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_RM_Cutters_Code", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "RM_Cutters_Loss",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    TypeNo = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    CutterSize = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    LossFactor = table.Column<decimal>(type: "numeric(18, 0)", nullable: false),
                    Usr = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    UsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: false),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 20, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_RM_Cutters_Loss", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "RM_Cutters_SerialNumber",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    SerialNo = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    Cutter_No = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    Cutter_Name = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    STATE = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    Qty_Standard = table.Column<int>(nullable: true),
                    Qty_Max = table.Column<int>(nullable: true),
                    Qty_Warn = table.Column<int>(nullable: true),
                    Qty_Machining = table.Column<int>(nullable: true),
                    Storage_Loc = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    Whse_Date = table.Column<DateTime>(type: "datetime", nullable: true),
                    ScrapedDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    Sup_No = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    Usr = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    UsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: false),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 20, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_RM_Cutters_SerialNumber", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "RM_Cutters_Trace",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    OPType = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    Usr = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: false),
                    WO_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    SEB_NO = table.Column<string>(unicode: false, maxLength: 100, nullable: false),
                    Cutter_No = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    Cutter_SN = table.Column<string>(unicode: false, maxLength: 100, nullable: false),
                    ZC_STEP = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    INSTALL_SITE = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    StationNo = table.Column<string>(unicode: false, maxLength: 50, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_RM_Cutters_Trace", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "RM_Cutters_Use",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    SEB_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    ZC_STEP = table.Column<string>(unicode: false, maxLength: 100, nullable: false),
                    CUTTER_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    CUTTER_NAME = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    INSTALL_SITE = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    CUTTER_SN = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    PRD_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    ZC_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    SYSDATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    USR = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    WO_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    StationNo = table.Column<string>(unicode: false, maxLength: 50, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_RM_Cutters_Use", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "RM_CuttersProd_Map",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    PRD_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    PRD_NAME = table.Column<string>(unicode: false, maxLength: 500, nullable: false),
                    ZC_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    ZC_NAME = table.Column<string>(unicode: false, maxLength: 500, nullable: false),
                    ZC_STEP = table.Column<string>(unicode: false, maxLength: 500, nullable: false),
                    Cutter_No = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    Cutter_Name = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    IsAvailable = table.Column<bool>(nullable: true),
                    ZC_GROUP = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    ZC_Type = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    Usr = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    UsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: false),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 20, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_RM_CuttersProd_Map", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "RM_Fixtrue_His",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    Fixture_SN = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    FixtureCode = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    FixtureName = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    OP_Type = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    OP_Usr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    Process_No = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Station_No = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: false),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    Usr = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    UsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_RM_Fixtrue_His", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "RM_Fixtrue_Use",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    Fixture_SN = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    FixtureCode = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    FixtureName = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    Process_No = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Station_No = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: false),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    Usr = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    UsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_RM_Fixtrue_Use", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "RM_FixtureLedger",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    FixtureCode = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    FixtureName = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Customers = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Supplier = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    NumberOfWorkingLife = table.Column<int>(nullable: true),
                    FixtureType = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Factory = table.Column<string>(unicode: false, maxLength: 50, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_RM_FixtureLedger", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "RM_FixtureProdectMapping",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    Name = table.Column<string>(unicode: false, maxLength: 100, nullable: false),
                    ProdectCode = table.Column<string>(fixedLength: true, maxLength: 50, nullable: true),
                    ProdectName = table.Column<string>(fixedLength: true, maxLength: 100, nullable: true),
                    FixtureCode = table.Column<string>(fixedLength: true, maxLength: 50, nullable: true),
                    FixtureName = table.Column<string>(fixedLength: true, maxLength: 100, nullable: true),
                    TypeNature = table.Column<string>(fixedLength: true, maxLength: 50, nullable: true),
                    TypeCode = table.Column<string>(fixedLength: true, maxLength: 50, nullable: true),
                    TypeName = table.Column<string>(fixedLength: true, maxLength: 100, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_RM_FixtureProdectMapping", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "RM_FixtureSerialNumber",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    FixturelNo = table.Column<string>(maxLength: 55, nullable: true),
                    FixtureCode = table.Column<string>(maxLength: 55, nullable: true),
                    Location = table.Column<string>(maxLength: 55, nullable: true),
                    Status = table.Column<string>(maxLength: 55, nullable: true),
                    UsingStatus = table.Column<string>(maxLength: 55, nullable: true),
                    ProcessingNumber = table.Column<int>(nullable: true),
                    NumberOfWorkingLife = table.Column<int>(nullable: true),
                    StartDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    EndDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    LossDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    LastCheckDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    NextCheckDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ProlongLifeProdNum = table.Column<int>(nullable: true),
                    Quantity = table.Column<decimal>(type: "decimal(18, 0)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_RM_FixtureSerialNumber", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "RM_MeasuringLedger",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    MeasuringCode = table.Column<string>(maxLength: 50, nullable: true),
                    MeasuringName = table.Column<string>(maxLength: 100, nullable: true),
                    Parent = table.Column<string>(maxLength: 50, nullable: true),
                    Customers = table.Column<string>(maxLength: 50, nullable: true),
                    Supplier = table.Column<string>(maxLength: 50, nullable: true),
                    MeasuringType = table.Column<string>(maxLength: 50, nullable: true),
                    Factory = table.Column<string>(maxLength: 50, nullable: true),
                    ISDELETE = table.Column<bool>(nullable: true),
                    CREATEUSER = table.Column<string>(maxLength: 55, nullable: true),
                    CREATETIME = table.Column<DateTime>(type: "datetime", nullable: true),
                    UPDATEUSER = table.Column<string>(maxLength: 55, nullable: true),
                    UPDATETIME = table.Column<DateTime>(type: "datetime", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_RM_MeasuringLedger", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "RM_MeasuringProdectMapping",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    Name = table.Column<string>(unicode: false, maxLength: 100, nullable: false),
                    ProdectCode = table.Column<string>(fixedLength: true, maxLength: 50, nullable: true),
                    ProdectName = table.Column<string>(fixedLength: true, maxLength: 100, nullable: true),
                    MeasuringCode = table.Column<string>(fixedLength: true, maxLength: 50, nullable: true),
                    MeasuringName = table.Column<string>(fixedLength: true, maxLength: 100, nullable: true),
                    TypeNature = table.Column<string>(fixedLength: true, maxLength: 50, nullable: true),
                    TypeCode = table.Column<string>(fixedLength: true, maxLength: 50, nullable: true),
                    TypeName = table.Column<string>(fixedLength: true, maxLength: 100, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_RM_MeasuringProdectMapping", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "RM_MeasuringSerialNumber",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    MeasuringSerialNo = table.Column<string>(maxLength: 55, nullable: true),
                    MeasuringCode = table.Column<string>(maxLength: 55, nullable: true),
                    Status = table.Column<string>(maxLength: 55, nullable: true),
                    UsingStatus = table.Column<string>(maxLength: 55, nullable: true),
                    Location = table.Column<string>(maxLength: 55, nullable: true),
                    StartDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    EndDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    LastCheckDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    SealingDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ExpiredDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    EffectiveDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    LossDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    MeasuringType = table.Column<string>(maxLength: 55, nullable: true),
                    supplier = table.Column<string>(maxLength: 55, nullable: true),
                    Quantity = table.Column<decimal>(type: "decimal(18, 0)", nullable: true),
                    ISDELETE = table.Column<bool>(nullable: true),
                    CreateUser = table.Column<string>(maxLength: 55, nullable: true),
                    CreateTime = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdateUser = table.Column<string>(maxLength: 55, nullable: true),
                    UpdateTime = table.Column<DateTime>(type: "datetime", nullable: true),
                    CheckResult = table.Column<string>(maxLength: 55, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_RM_MeasuringSerialNumber", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "RM_Mold_FaultDef",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    Disable = table.Column<bool>(nullable: true),
                    NAME = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    NO = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Sort = table.Column<int>(nullable: true),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: false),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    Usr = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    UsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_RM_Mold_FaultDef", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "RM_Mold_FaultReason",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    Disable = table.Column<bool>(nullable: true),
                    NAME = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    NO = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Sort = table.Column<int>(nullable: true),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: false),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    Usr = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    UsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_RM_Mold_FaultReason", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "RM_Mold_His",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    MOD_NO = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    MOD_SN = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    Src_ItemID = table.Column<int>(nullable: true),
                    Src_No = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Status = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    Status_New = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: false),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    Usr = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    UsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_RM_Mold_His", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "RM_Mold_Insp_Program",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    Attachment = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    BilType = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    BilTypeName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    BusiNo = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    ChkDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ChkMan = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkManName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkMob = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    ClsDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ClsUsr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ClsUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    CycelInfo = table.Column<byte[]>(maxLength: 1, nullable: true),
                    CycleUnit = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    End_Date = table.Column<DateTime>(type: "datetime", nullable: true),
                    IsClose = table.Column<bool>(nullable: true),
                    IsPrint = table.Column<bool>(nullable: true),
                    MOD_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    NAME = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    NO = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    QTY_Cycle = table.Column<decimal>(type: "decimal(16, 8)", nullable: true),
                    Rem = table.Column<string>(unicode: false, maxLength: 500, nullable: true),
                    Start_Date = table.Column<DateTime>(type: "datetime", nullable: true),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    Usr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    Ver_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    MOD_Type = table.Column<string>(unicode: false, maxLength: 20, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_RM_Mold_Insp_Program", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "RM_Mold_Insp_Task",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    BillDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    BilType = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    BilTypeName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    BusiNo = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ChkMan = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkManName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkMob = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    ClsDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ClsUsr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ClsUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    Dept = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    IsClose = table.Column<bool>(nullable: true),
                    IsPrint = table.Column<bool>(nullable: true),
                    MOD_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    NO = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Qty = table.Column<int>(nullable: true),
                    Qty_Test = table.Column<int>(nullable: true),
                    Rem = table.Column<string>(unicode: false, maxLength: 500, nullable: true),
                    Source = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Src_No = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Src_Type = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Status = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: false),
                    Target = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Test_DevNo = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    TestResult = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    Usr = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    Usr_Exec = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    UsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    MOD_SN = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Date_Exec = table.Column<DateTime>(type: "datetime", nullable: true),
                    Date_Finish = table.Column<DateTime>(type: "datetime", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_RM_Mold_Insp_Task", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "RM_Mold_Parts",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    Disable = table.Column<bool>(nullable: true),
                    MOD_NO = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    NAME = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    NO = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    ParentNo = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Sort = table.Column<int>(nullable: true),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: false),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    Usr = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    UsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    Dept = table.Column<string>(unicode: false, maxLength: 50, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_RM_Mold_Parts", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "RM_Mold_RepairRecord",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    App_Date = table.Column<DateTime>(type: "datetime", nullable: true),
                    BilType = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    BilTypeName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    BusiNo = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ChkMan = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkManName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkMob = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    ClsDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ClsUsr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ClsUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    Dept = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    IsClose = table.Column<bool>(nullable: true),
                    IsPrint = table.Column<bool>(nullable: true),
                    NAME = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    NO = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Rem = table.Column<string>(unicode: false, maxLength: 500, nullable: true),
                    RepairType = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    Src_No = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Src_Type = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    Status = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: false),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    Usr = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    Usr_Exec = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    UsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    Disp_Date = table.Column<DateTime>(type: "datetime", nullable: true),
                    MOD_Name = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    MOD_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    MOD_SN = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    MOD_TYPE = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    ShiftNo = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    Src_ItemID = table.Column<int>(nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_RM_Mold_RepairRecord", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "RM_Mold_RepairRequest",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    App_Date = table.Column<DateTime>(type: "datetime", nullable: true),
                    BilType = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    BilTypeName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    BusiNo = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ChkMan = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkManName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkMob = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    ClsDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ClsUsr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ClsUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    Dept = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    IsClose = table.Column<bool>(nullable: true),
                    IsPrint = table.Column<bool>(nullable: true),
                    NAME = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    NO = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Rem = table.Column<string>(unicode: false, maxLength: 500, nullable: true),
                    RepairType = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    Src_No = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Src_Type = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    Status = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: false),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    Usr = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    Usr_Exec = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    UsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_RM_Mold_RepairRequest", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "RM_Mold_Whse",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    EndDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    Last_Maint_Date = table.Column<DateTime>(type: "datetime", nullable: true),
                    Location = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    Maint_Times = table.Column<int>(nullable: true),
                    MOD_NO = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    MOD_SN = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    MOD_TYPE = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    ScrapDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    StartDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    Status = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: false),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    USE_ACT = table.Column<int>(nullable: true),
                    USE_EXT = table.Column<int>(nullable: true),
                    USE_EXT_ACT = table.Column<int>(nullable: true),
                    USE_NUM = table.Column<int>(nullable: true),
                    Usr = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    UsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    Vender_No = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Cust_No = table.Column<string>(unicode: false, maxLength: 50, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_RM_Mold_Whse", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "RM_MoldProdectMapping",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    Name = table.Column<string>(unicode: false, maxLength: 100, nullable: false),
                    ProdectCode = table.Column<string>(fixedLength: true, maxLength: 50, nullable: true),
                    ProdectName = table.Column<string>(fixedLength: true, maxLength: 100, nullable: true),
                    MoldCode = table.Column<string>(fixedLength: true, maxLength: 50, nullable: true),
                    MoldName = table.Column<string>(fixedLength: true, maxLength: 100, nullable: true),
                    TypeNature = table.Column<string>(fixedLength: true, maxLength: 50, nullable: true),
                    TypeCode = table.Column<string>(fixedLength: true, maxLength: 50, nullable: true),
                    TypeName = table.Column<string>(fixedLength: true, maxLength: 100, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_RM_MoldProdectMapping", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "RM_ToolType",
                columns: table => new
                {
                    id = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    Code = table.Column<string>(maxLength: 55, nullable: false),
                    Name = table.Column<string>(maxLength: 55, nullable: false),
                    Type = table.Column<string>(maxLength: 55, nullable: true),
                    ISDELETE = table.Column<bool>(nullable: true),
                    CreateUser = table.Column<string>(maxLength: 55, nullable: true),
                    CreateTime = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdateUser = table.Column<string>(maxLength: 55, nullable: true),
                    UpdateTime = table.Column<DateTime>(type: "datetime", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_RM_ToolType", x => x.id);
                });

            migrationBuilder.CreateTable(
                name: "SALM",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    SAL_NO = table.Column<string>(unicode: false, maxLength: 12, nullable: false),
                    NAME = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    SEX = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    ID_NUM = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    MAR = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    BRD_NUM = table.Column<short>(nullable: true),
                    B_TYPE = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    TRIED_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    NAT_PLC = table.Column<string>(unicode: false, maxLength: 60, nullable: true),
                    CON_ADR = table.Column<string>(unicode: false, maxLength: 120, nullable: true),
                    EDU = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    GRD = table.Column<string>(unicode: false, maxLength: 60, nullable: true),
                    FORN = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    DRV = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    SPC = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    TEL1 = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    TEL2 = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    DEP = table.Column<string>(unicode: false, maxLength: 8, nullable: true),
                    POST_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    POS = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    BTH = table.Column<DateTime>(type: "datetime", nullable: true),
                    DUT_IN_D = table.Column<DateTime>(type: "datetime", nullable: true),
                    DUT_OT_D = table.Column<DateTime>(type: "datetime", nullable: true),
                    UP_SAL_NO = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    E_MAIL = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    PHOTO_PIC = table.Column<byte[]>(type: "image", nullable: true),
                    CARD_NO = table.Column<string>(unicode: false, maxLength: 16, nullable: true),
                    ENG_NAME = table.Column<string>(unicode: false, maxLength: 40, nullable: true),
                    GROUP_JJ = table.Column<string>(unicode: false, maxLength: 3, nullable: true),
                    IC = table.Column<string>(unicode: false, maxLength: 400, nullable: true),
                    SYS_USR = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Usr = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    Sys_Date = table.Column<DateTime>(type: "datetime", nullable: true),
                    LOGON = table.Column<bool>(nullable: true),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    DEPRO_NO = table.Column<string>(unicode: false, maxLength: 8, nullable: true),
                    NAME_PY = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    BNK_NO = table.Column<string>(unicode: false, maxLength: 7, nullable: true),
                    ID_CODE = table.Column<string>(unicode: false, maxLength: 30, nullable: true),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    ChkMan = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    ChkDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ChkMOB = table.Column<DateTime>(type: "datetime", nullable: true),
                    IsPrint = table.Column<bool>(nullable: true),
                    UsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkManName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    WECHAT = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    HOM_ADR = table.Column<string>(unicode: false, maxLength: 200, nullable: true),
                    RES = table.Column<string>(unicode: false, maxLength: 1000, nullable: true),
                    REM = table.Column<string>(unicode: false, maxLength: 500, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SALM", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "SB_DISQUALREASON",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    NO = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    Name = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    Enabled = table.Column<bool>(nullable: true),
                    Sort = table.Column<int>(nullable: false),
                    Usr = table.Column<string>(unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')"),
                    UsrName = table.Column<string>(unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')"),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: false, defaultValueSql: "(getdate())"),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 50, nullable: true, defaultValueSql: "('')"),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 50, nullable: true, defaultValueSql: "('')"),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ChkMan = table.Column<string>(unicode: false, maxLength: 50, nullable: true, defaultValueSql: "('')"),
                    ChkManName = table.Column<string>(unicode: false, maxLength: 50, nullable: true, defaultValueSql: "('')"),
                    ChkDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ChkMob = table.Column<string>(unicode: false, maxLength: 100, nullable: true, defaultValueSql: "('')"),
                    IsPrint = table.Column<bool>(nullable: true, defaultValueSql: "((0))")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SB_DISQUALREASON", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "SB_FAULT_MEASURE",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    SEB_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    SEB_PartNo = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    Fault_Rem = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    EXC_Measure = table.Column<int>(nullable: false),
                    Usr = table.Column<string>(unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')"),
                    UsrName = table.Column<string>(unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')"),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: false, defaultValueSql: "(getdate())"),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 50, nullable: true, defaultValueSql: "('')"),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 50, nullable: true, defaultValueSql: "('')"),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ChkMan = table.Column<string>(unicode: false, maxLength: 50, nullable: true, defaultValueSql: "('')"),
                    ChkManName = table.Column<string>(unicode: false, maxLength: 50, nullable: true, defaultValueSql: "('')"),
                    ChkDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ChkMob = table.Column<string>(unicode: false, maxLength: 100, nullable: true, defaultValueSql: "('')"),
                    IsPrint = table.Column<bool>(nullable: true, defaultValueSql: "((0))")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SB_FAULT_MEASURE", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "SB_LHJL",
                columns: table => new
                {
                    ID = table.Column<long>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    TZ_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    BAT_NO = table.Column<string>(unicode: false, maxLength: 40, nullable: true),
                    ISCLOSE = table.Column<byte>(nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SB_LHJL", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "SB_MAINTAIN_PLAN",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    NO = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    Name = table.Column<string>(unicode: false, maxLength: 100, nullable: false),
                    BillDate = table.Column<DateTime>(type: "datetime", nullable: false),
                    JH_Spec = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    SEB_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    SAL_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    DEP = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    Station_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    SEB_CycleUnit = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    Rem = table.Column<string>(unicode: false, maxLength: 200, nullable: true),
                    JH_Status = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    ActQTY_Cycle = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    BusiNo = table.Column<string>(unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')"),
                    BilType = table.Column<string>(unicode: false, maxLength: 50, nullable: true, defaultValueSql: "('')"),
                    BilTypeName = table.Column<string>(unicode: false, maxLength: 50, nullable: true, defaultValueSql: "('')"),
                    Usr = table.Column<string>(unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')"),
                    UsrName = table.Column<string>(unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')"),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: false, defaultValueSql: "(getdate())"),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 50, nullable: true, defaultValueSql: "('')"),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 50, nullable: true, defaultValueSql: "('')"),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ChkMan = table.Column<string>(unicode: false, maxLength: 50, nullable: true, defaultValueSql: "('')"),
                    ChkManName = table.Column<string>(unicode: false, maxLength: 50, nullable: true, defaultValueSql: "('')"),
                    ChkDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ChkMob = table.Column<string>(unicode: false, maxLength: 100, nullable: true, defaultValueSql: "('')"),
                    IsClose = table.Column<bool>(nullable: true, defaultValueSql: "((0))"),
                    ClsDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ClsUsr = table.Column<string>(unicode: false, maxLength: 50, nullable: true, defaultValueSql: "('')"),
                    ClsUsrName = table.Column<string>(unicode: false, maxLength: 50, nullable: true, defaultValueSql: "('')"),
                    IsPrint = table.Column<bool>(nullable: true, defaultValueSql: "((0))"),
                    CycelInfo = table.Column<byte[]>(nullable: true),
                    QTY_Cycle = table.Column<int>(nullable: true),
                    Standard = table.Column<decimal>(type: "numeric(18, 0)", nullable: true, defaultValueSql: "((0))"),
                    LAST_RELEASE_TIME = table.Column<DateTime>(type: "datetime", nullable: true),
                    ISALL_RELEASE = table.Column<bool>(nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SB_MAINTAIN_PLAN", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "SB_MAINTAIN_RUN_RECORD",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    NO = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    SEB_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    SEB_Name = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    SAL_NO = table.Column<string>(unicode: false, maxLength: 51, nullable: false),
                    RecordDate = table.Column<DateTime>(type: "datetime", nullable: false),
                    MT_Type = table.Column<int>(nullable: false),
                    Enabled = table.Column<bool>(nullable: false),
                    DEP = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    POST_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    BillDate = table.Column<DateTime>(type: "datetime", nullable: false),
                    Rem = table.Column<string>(unicode: false, maxLength: 4000, nullable: false, defaultValueSql: "('')"),
                    BusiNo = table.Column<string>(unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')"),
                    BilType = table.Column<string>(unicode: false, maxLength: 20, nullable: false, defaultValueSql: "('')"),
                    BilTypeName = table.Column<string>(unicode: false, maxLength: 20, nullable: false, defaultValueSql: "('')"),
                    Usr = table.Column<string>(unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')"),
                    UsrName = table.Column<string>(unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')"),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: false, defaultValueSql: "(getdate())"),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')"),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')"),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: false, defaultValueSql: "(getdate())"),
                    ChkMan = table.Column<string>(unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')"),
                    ChkManName = table.Column<string>(unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')"),
                    ChkDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ChkMob = table.Column<string>(unicode: false, maxLength: 100, nullable: false, defaultValueSql: "('')"),
                    IsClose = table.Column<bool>(nullable: false),
                    ClsDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ClsUsr = table.Column<string>(unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')"),
                    ClsUsrName = table.Column<string>(unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')"),
                    IsPrint = table.Column<bool>(nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SB_MAINTAIN_RUN_RECORD", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "SB_MAINTAIN_SPEC",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    NO = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    Name = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    SEB_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    SEB_Name = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    QTY_Cycle = table.Column<int>(nullable: true),
                    SEB_CycleUnit = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    Enabled = table.Column<bool>(nullable: false),
                    DEP = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    POST_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    BillDate = table.Column<DateTime>(type: "datetime", nullable: false, defaultValueSql: "('')"),
                    Rem = table.Column<string>(unicode: false, maxLength: 4000, nullable: true, defaultValueSql: "('')"),
                    BusiNo = table.Column<string>(unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')"),
                    BilType = table.Column<string>(unicode: false, maxLength: 20, nullable: true, defaultValueSql: "('')"),
                    BilTypeName = table.Column<string>(unicode: false, maxLength: 20, nullable: true, defaultValueSql: "('')"),
                    Usr = table.Column<string>(unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')"),
                    UsrName = table.Column<string>(unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')"),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: false, defaultValueSql: "(getdate())"),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 50, nullable: true, defaultValueSql: "('')"),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 50, nullable: true, defaultValueSql: "('')"),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true, defaultValueSql: "(getdate())"),
                    ChkMan = table.Column<string>(unicode: false, maxLength: 50, nullable: true, defaultValueSql: "('')"),
                    ChkManName = table.Column<string>(unicode: false, maxLength: 50, nullable: true, defaultValueSql: "('')"),
                    ChkDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ChkMob = table.Column<string>(unicode: false, maxLength: 100, nullable: true, defaultValueSql: "('')"),
                    IsClose = table.Column<bool>(nullable: true, defaultValueSql: "((0))"),
                    ClsDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ClsUsr = table.Column<string>(unicode: false, maxLength: 50, nullable: true, defaultValueSql: "('')"),
                    ClsUsrName = table.Column<string>(unicode: false, maxLength: 50, nullable: true, defaultValueSql: "('')"),
                    IsPrint = table.Column<bool>(nullable: true, defaultValueSql: "((0))"),
                    Version = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Standard = table.Column<decimal>(type: "numeric(18, 0)", nullable: true, defaultValueSql: "((0))"),
                    guide = table.Column<string>(unicode: false, maxLength: 100, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SB_MAINTAIN_SPEC", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "SB_MT_ORDER",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    NO = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    Name = table.Column<string>(maxLength: 120, nullable: true),
                    JH_DD = table.Column<DateTime>(type: "datetime", nullable: false),
                    SAL_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    SEB_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    Status = table.Column<string>(unicode: false, maxLength: 1, nullable: false),
                    END_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    Rem = table.Column<string>(unicode: false, maxLength: 1000, nullable: true),
                    BillDate = table.Column<DateTime>(type: "datetime", nullable: false, defaultValueSql: "(getdate())"),
                    BusiNo = table.Column<string>(unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')"),
                    BilType = table.Column<string>(unicode: false, maxLength: 20, nullable: true, defaultValueSql: "('')"),
                    BilTypeName = table.Column<string>(unicode: false, maxLength: 20, nullable: true, defaultValueSql: "('')"),
                    Usr = table.Column<string>(unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')"),
                    UsrName = table.Column<string>(unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')"),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: false, defaultValueSql: "(getdate())"),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 50, nullable: true, defaultValueSql: "('')"),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 50, nullable: true, defaultValueSql: "('')"),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true, defaultValueSql: "(getdate())"),
                    ChkMan = table.Column<string>(unicode: false, maxLength: 50, nullable: true, defaultValueSql: "('')"),
                    ChkManName = table.Column<string>(unicode: false, maxLength: 50, nullable: true, defaultValueSql: "('')"),
                    ChkDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ChkMob = table.Column<string>(unicode: false, maxLength: 100, nullable: true, defaultValueSql: "('')"),
                    IsClose = table.Column<bool>(nullable: true, defaultValueSql: "((0))"),
                    ClsDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ClsUsr = table.Column<string>(unicode: false, maxLength: 50, nullable: true, defaultValueSql: "('')"),
                    ClsUsrName = table.Column<string>(unicode: false, maxLength: 50, nullable: true, defaultValueSql: "('')"),
                    IsPrint = table.Column<int>(nullable: true, defaultValueSql: "((0))"),
                    BIL_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    Spec_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    Station_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    Standard = table.Column<decimal>(type: "numeric(18, 0)", nullable: true, defaultValueSql: "((0))"),
                    GD_Source = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    BAN_NO = table.Column<string>(unicode: false, maxLength: 10, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SB_MT_ORDER", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "SB_MT_RUNTIME",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    SEB_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    Spec_Type = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    Spec_No = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    Sta_No = table.Column<string>(unicode: false, maxLength: 10, nullable: false),
                    TotalRunTime = table.Column<decimal>(type: "numeric(18, 0)", nullable: false),
                    TimeFromLatestMT = table.Column<decimal>(type: "numeric(18, 0)", nullable: false),
                    MtTimes = table.Column<int>(nullable: true),
                    QTY_Cycle = table.Column<int>(nullable: false),
                    Usr = table.Column<string>(unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')"),
                    UsrName = table.Column<string>(unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')"),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: false, defaultValueSql: "(getdate())"),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 50, nullable: true, defaultValueSql: "('')"),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 50, nullable: true, defaultValueSql: "('')"),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SB_MT_RUNTIME", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "SB_OP_MAPPING",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    SEB_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    SAL_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    DEP = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    Usr = table.Column<string>(unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')"),
                    UsrName = table.Column<string>(unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')"),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: false, defaultValueSql: "(getdate())"),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 50, nullable: true, defaultValueSql: "('')"),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 50, nullable: true, defaultValueSql: "('')"),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ChkMan = table.Column<string>(unicode: false, maxLength: 50, nullable: true, defaultValueSql: "('')"),
                    ChkManName = table.Column<string>(unicode: false, maxLength: 50, nullable: true, defaultValueSql: "('')"),
                    ChkDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ChkMob = table.Column<string>(unicode: false, maxLength: 100, nullable: true, defaultValueSql: "('')"),
                    IsPrint = table.Column<bool>(nullable: true, defaultValueSql: "((0))")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SB_OP_MAPPING", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "SB_PARA_BASE",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    SEB_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    NO = table.Column<string>(unicode: false, maxLength: 8, nullable: true),
                    VALUE = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    Usr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkMan = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkManName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ChkMob = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    IsPrint = table.Column<bool>(nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SB_PARA_BASE", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "SB_PARA_RECORD",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    No = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    PA_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    PA_Name = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    SEB_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    SEB_Name = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    PRD_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    PRD_Name = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    BAT_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    TZ_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Para_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    Para_Name = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    Para_Value = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    PType = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    UT = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Up_Limit = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    Low_Limit = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    LowSybol = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    UpSybol = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    Standard = table.Column<decimal>(type: "decimal(18, 4)", nullable: true),
                    Rem = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    Usr = table.Column<string>(unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')"),
                    UsrName = table.Column<string>(unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')"),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: false, defaultValueSql: "(getdate())"),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    IsPrint = table.Column<bool>(nullable: true, defaultValueSql: "((0))"),
                    ZC_NO = table.Column<string>(maxLength: 100, nullable: true),
                    MO_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    BAN_NO = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    CL_ID = table.Column<int>(nullable: true),
                    CL_TB = table.Column<string>(unicode: false, maxLength: 50, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SB_PARA_RECORD", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "SB_PARA_SET",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    SEB_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    SEB_NAME = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    No = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    Name = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    UT = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    PType = table.Column<string>(unicode: false, maxLength: 1, nullable: false),
                    Manner = table.Column<string>(unicode: false, maxLength: 1, nullable: false),
                    Formula = table.Column<string>(unicode: false, maxLength: 2000, nullable: true),
                    Rem = table.Column<string>(unicode: false, maxLength: 1000, nullable: true),
                    UT_ID = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    DefaultVal = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    FieldName = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    DBName = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    TableName = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Usr = table.Column<string>(unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')"),
                    UsrName = table.Column<string>(unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')"),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: false, defaultValueSql: "(getdate())"),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 50, nullable: true, defaultValueSql: "('')"),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 50, nullable: true, defaultValueSql: "('')"),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ChkMan = table.Column<string>(unicode: false, maxLength: 50, nullable: true, defaultValueSql: "('')"),
                    ChkManName = table.Column<string>(unicode: false, maxLength: 50, nullable: true, defaultValueSql: "('')"),
                    ChkDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ChkMob = table.Column<string>(unicode: false, maxLength: 100, nullable: true, defaultValueSql: "('')"),
                    IsPrint = table.Column<bool>(nullable: true, defaultValueSql: "((0))"),
                    OFFSET_TIME = table.Column<int>(nullable: false),
                    TIME_SCOPE = table.Column<int>(nullable: false),
                    Interval = table.Column<decimal>(type: "numeric(12, 0)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SB_PARA_SET", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "SB_PARTCHANGE_RECORD",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    MID = table.Column<int>(nullable: false),
                    Part_No = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    Part_Name = table.Column<string>(unicode: false, maxLength: 100, nullable: false),
                    QTY = table.Column<decimal>(type: "numeric(18, 0)", nullable: false),
                    Rem = table.Column<string>(unicode: false, maxLength: 1000, nullable: true),
                    ITM = table.Column<int>(nullable: true),
                    SAL_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    SYSDATE = table.Column<DateTime>(type: "datetime", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SB_PARTCHANGE_RECORD", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "SB_PARTINFO",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    NO = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    Name = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    IsKey = table.Column<bool>(nullable: false),
                    Enabled = table.Column<bool>(nullable: false),
                    Sort = table.Column<int>(nullable: false),
                    Usr = table.Column<string>(unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')"),
                    UsrName = table.Column<string>(unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')"),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: false, defaultValueSql: "(getdate())"),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 50, nullable: true, defaultValueSql: "('')"),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 50, nullable: true, defaultValueSql: "('')"),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ChkMan = table.Column<string>(unicode: false, maxLength: 50, nullable: true, defaultValueSql: "('')"),
                    ChkManName = table.Column<string>(unicode: false, maxLength: 50, nullable: true, defaultValueSql: "('')"),
                    ChkDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ChkMob = table.Column<string>(unicode: false, maxLength: 100, nullable: true, defaultValueSql: "('')"),
                    IsPrint = table.Column<bool>(nullable: true, defaultValueSql: "((0))")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SB_PARTINFO", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "SB_PRDT_PARA",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    No = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    Name = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    SEB_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    SEB_Name = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    PRD_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    PRD_Name = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Rem = table.Column<string>(unicode: false, maxLength: 500, nullable: true),
                    BillDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    BusiNo = table.Column<string>(unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')"),
                    BilType = table.Column<string>(unicode: false, maxLength: 20, nullable: true, defaultValueSql: "('')"),
                    BilTypeName = table.Column<string>(unicode: false, maxLength: 20, nullable: true, defaultValueSql: "('')"),
                    Usr = table.Column<string>(unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')"),
                    UsrName = table.Column<string>(unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')"),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: false, defaultValueSql: "(getdate())"),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ChkMan = table.Column<string>(unicode: false, maxLength: 50, nullable: true, defaultValueSql: "('')"),
                    ChkManName = table.Column<string>(unicode: false, maxLength: 50, nullable: true, defaultValueSql: "('')"),
                    ChkDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ChkMob = table.Column<string>(unicode: false, maxLength: 100, nullable: true, defaultValueSql: "('')"),
                    IsClose = table.Column<bool>(nullable: true, defaultValueSql: "((0))"),
                    ClsDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ClsUsr = table.Column<string>(unicode: false, maxLength: 50, nullable: true, defaultValueSql: "('')"),
                    ClsUsrName = table.Column<string>(unicode: false, maxLength: 50, nullable: true, defaultValueSql: "('')"),
                    IsPrint = table.Column<bool>(nullable: true, defaultValueSql: "((0))"),
                    MOULD_NO = table.Column<string>(unicode: false, maxLength: 500, nullable: true),
                    TEMPERATURE = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    MONTHS = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    MOULD_NAME = table.Column<string>(unicode: false, maxLength: 500, nullable: true),
                    COOL_MODE = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    EFF_DATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    ZC_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    TimeStamp = table.Column<byte[]>(rowVersion: true, nullable: true),
                    DataModel = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Version = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Frequency = table.Column<int>(nullable: true),
                    FrequencyType = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    Expiry_Date = table.Column<DateTime>(type: "datetime", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SB_PRDT_PARA", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "SB_QRCODERECORD",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    IP = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    QRCODE = table.Column<string>(unicode: false, maxLength: 500, nullable: true),
                    ISMATCH = table.Column<bool>(nullable: true),
                    SYS_DATE = table.Column<DateTime>(type: "datetime", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SB_QRCODERECORD", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "SB_RECORD",
                columns: table => new
                {
                    ID = table.Column<long>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    SEB_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    NO = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    VALUE = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    SYS_DATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    ITM = table.Column<int>(nullable: true),
                    TYPE = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    BARCODE = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    INPUTDATE = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    MINLIMIT = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    MAXLIMIT = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    castingBatchNo = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    StoveNo = table.Column<string>(unicode: false, maxLength: 50, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SB_RECORD", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "SB_RUN_RECORD",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    SEB_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    SEB_Name = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    STD_Time = table.Column<DateTime>(type: "datetime", nullable: false),
                    END_Time = table.Column<DateTime>(type: "datetime", nullable: true),
                    Time_Diff = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    Time_Unit = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    Sta_No = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    Sta_Prop = table.Column<string>(unicode: false, maxLength: 2, nullable: false),
                    Rem = table.Column<string>(unicode: false, maxLength: 1000, nullable: true),
                    Usr = table.Column<string>(unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')"),
                    UsrName = table.Column<string>(unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')"),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: false, defaultValueSql: "(getdate())"),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ChkMan = table.Column<string>(unicode: false, maxLength: 50, nullable: true, defaultValueSql: "('')"),
                    ChkManName = table.Column<string>(unicode: false, maxLength: 50, nullable: true, defaultValueSql: "('')"),
                    ChkDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ChkMob = table.Column<string>(unicode: false, maxLength: 100, nullable: true, defaultValueSql: "('')"),
                    IsPrint = table.Column<bool>(nullable: true, defaultValueSql: "((0))")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SB_RUN_RECORD", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "SB_RUN_RECORD_INFO",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    MID = table.Column<int>(nullable: false),
                    ITM = table.Column<int>(nullable: false),
                    Part_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    BIL_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    Ord_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    OilsName = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Content = table.Column<string>(unicode: false, maxLength: 1000, nullable: false),
                    Standard = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    StandardAddAmount = table.Column<decimal>(type: "decimal(18, 4)", nullable: true),
                    ActualAddAmount = table.Column<decimal>(type: "decimal(18, 4)", nullable: true),
                    Method = table.Column<string>(unicode: false, maxLength: 2000, nullable: false),
                    SpecImage = table.Column<Guid>(nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SB_RUN_RECORD_INFO", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "SB_RUN_STATUS",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    NO = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    Name = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    RunStatus = table.Column<string>(unicode: false, maxLength: 2, nullable: false),
                    Enabled = table.Column<bool>(nullable: false),
                    Sort = table.Column<int>(nullable: false),
                    Rem = table.Column<string>(unicode: false, maxLength: 2000, nullable: true),
                    Usr = table.Column<string>(unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')"),
                    UsrName = table.Column<string>(unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')"),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: false, defaultValueSql: "(getdate())"),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 50, nullable: true, defaultValueSql: "('')"),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 50, nullable: true, defaultValueSql: "('')"),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ChkMan = table.Column<string>(unicode: false, maxLength: 50, nullable: true, defaultValueSql: "('')"),
                    ChkManName = table.Column<string>(unicode: false, maxLength: 50, nullable: true, defaultValueSql: "('')"),
                    ChkDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ChkMob = table.Column<string>(unicode: false, maxLength: 100, nullable: true, defaultValueSql: "('')"),
                    IsPrint = table.Column<bool>(nullable: true, defaultValueSql: "((0))")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SB_RUN_STATUS", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "SB_SP_RECORD",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    MID = table.Column<int>(nullable: false),
                    ITM = table.Column<int>(nullable: false),
                    SP_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    NAME = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    QTY = table.Column<decimal>(type: "decimal(18, 4)", nullable: true),
                    Rem = table.Column<string>(unicode: false, maxLength: 1000, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SB_SP_RECORD", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "SB_SPAREPARTS",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    SEB_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    SEB_Name = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    SEB_PartNo = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    SP_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    QTY_Cycle = table.Column<int>(nullable: false),
                    Usr = table.Column<string>(unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')"),
                    UsrName = table.Column<string>(unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')"),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: false, defaultValueSql: "(getdate())"),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 50, nullable: true, defaultValueSql: "('')"),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 50, nullable: true, defaultValueSql: "('')"),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ChkMan = table.Column<string>(unicode: false, maxLength: 50, nullable: true, defaultValueSql: "('')"),
                    ChkManName = table.Column<string>(unicode: false, maxLength: 50, nullable: true, defaultValueSql: "('')"),
                    ChkDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ChkMob = table.Column<string>(unicode: false, maxLength: 100, nullable: true, defaultValueSql: "('')"),
                    IsPrint = table.Column<bool>(nullable: true, defaultValueSql: "((0))"),
                    SEB_CycleUnit = table.Column<string>(unicode: false, maxLength: 1, nullable: false, defaultValueSql: "('0')")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SB_SPAREPARTS", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "SB_STATUS_CHANGE",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    No = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    Rem = table.Column<string>(unicode: false, maxLength: 2000, nullable: true),
                    BillDate = table.Column<DateTime>(type: "datetime", nullable: false),
                    BusiNo = table.Column<string>(unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')"),
                    BilType = table.Column<string>(unicode: false, maxLength: 20, nullable: true, defaultValueSql: "('')"),
                    BilTypeName = table.Column<string>(unicode: false, maxLength: 20, nullable: true, defaultValueSql: "('')"),
                    Usr = table.Column<string>(unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')"),
                    UsrName = table.Column<string>(unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')"),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: false, defaultValueSql: "(getdate())"),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 50, nullable: true, defaultValueSql: "('')"),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 50, nullable: true, defaultValueSql: "('')"),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ChkMan = table.Column<string>(unicode: false, maxLength: 50, nullable: true, defaultValueSql: "('')"),
                    ChkManName = table.Column<string>(unicode: false, maxLength: 50, nullable: true, defaultValueSql: "('')"),
                    ChkDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ChkMob = table.Column<string>(unicode: false, maxLength: 100, nullable: true, defaultValueSql: "('')"),
                    IsClose = table.Column<bool>(nullable: true, defaultValueSql: "((0))"),
                    ClsDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ClsUsr = table.Column<string>(unicode: false, maxLength: 50, nullable: true, defaultValueSql: "('')"),
                    ClsUsrName = table.Column<string>(unicode: false, maxLength: 50, nullable: true, defaultValueSql: "('')"),
                    IsPrint = table.Column<bool>(nullable: true, defaultValueSql: "((0))")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SB_STATUS_CHANGE", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "SB_TYPEINFO",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    NO = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    Name = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    Status = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    Rem = table.Column<string>(unicode: false, maxLength: 2000, nullable: true),
                    Enabled = table.Column<bool>(nullable: true),
                    Sort = table.Column<int>(nullable: false),
                    BusiNo = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    Usr = table.Column<string>(unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')"),
                    UsrName = table.Column<string>(unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')"),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: false, defaultValueSql: "(getdate())"),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 50, nullable: true, defaultValueSql: "('')"),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 50, nullable: true, defaultValueSql: "('')"),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ChkMan = table.Column<string>(unicode: false, maxLength: 50, nullable: true, defaultValueSql: "('')"),
                    ChkManName = table.Column<string>(unicode: false, maxLength: 50, nullable: true, defaultValueSql: "('')"),
                    ChkDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ChkMob = table.Column<string>(unicode: false, maxLength: 100, nullable: true, defaultValueSql: "('')"),
                    IsPrint = table.Column<bool>(nullable: true, defaultValueSql: "((0))")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SB_TYPEINFO", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "SBB",
                columns: table => new
                {
                    ID = table.Column<long>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    TZ_DD = table.Column<string>(unicode: false, maxLength: 40, nullable: false),
                    TZ_TIME = table.Column<string>(unicode: false, maxLength: 40, nullable: false),
                    BAT_NO = table.Column<string>(unicode: false, maxLength: 40, nullable: false),
                    ISCLOSE = table.Column<byte>(nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SBB", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "SBBY",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    MID = table.Column<int>(nullable: false),
                    SEB_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    BYDJ_NO = table.Column<string>(unicode: false, maxLength: 2, nullable: false),
                    ITM = table.Column<int>(nullable: false),
                    BYNR_NO = table.Column<string>(unicode: false, maxLength: 4, nullable: true),
                    Usr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkMan = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkManName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ChkMob = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    IsPrint = table.Column<bool>(nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SBBY", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "SBBY_DJ",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    BYDJ_NO = table.Column<string>(unicode: false, maxLength: 8, nullable: false),
                    BYDJ_NAME = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    Usr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkMan = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkManName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ChkMob = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    IsPrint = table.Column<bool>(nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SBBY_DJ", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "SBBY_NR",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    BYNR_NO = table.Column<string>(unicode: false, maxLength: 8, nullable: false),
                    BYNR_NAME = table.Column<string>(type: "text", nullable: true),
                    Usr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkMan = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkManName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ChkMob = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    IsPrint = table.Column<bool>(nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SBBY_NR", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "SBBY_PLAN",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    YY = table.Column<int>(nullable: false),
                    SEB_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    SEB_Name = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    FX_KND = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    ITM_SB = table.Column<int>(nullable: true),
                    No = table.Column<string>(unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')"),
                    BillDate = table.Column<DateTime>(type: "datetime", nullable: false),
                    Rem = table.Column<string>(unicode: false, maxLength: 4000, nullable: false, defaultValueSql: "('')"),
                    BusiNo = table.Column<string>(unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')"),
                    BilType = table.Column<string>(unicode: false, maxLength: 20, nullable: false, defaultValueSql: "('')"),
                    BilTypeName = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Usr = table.Column<string>(unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')"),
                    UsrName = table.Column<string>(unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')"),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: false, defaultValueSql: "(getdate())"),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')"),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')"),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: false, defaultValueSql: "(getdate())"),
                    ChkMan = table.Column<string>(unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')"),
                    ChkManName = table.Column<string>(unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')"),
                    ChkDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ChkMob = table.Column<string>(unicode: false, maxLength: 100, nullable: true, defaultValueSql: "('')"),
                    IsClose = table.Column<bool>(nullable: false),
                    ClsDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ClsUsr = table.Column<string>(unicode: false, maxLength: 50, nullable: true, defaultValueSql: "('')"),
                    ClsUsrName = table.Column<string>(unicode: false, maxLength: 50, nullable: true, defaultValueSql: "('')"),
                    IsPrint = table.Column<int>(nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SBBY_PLAN", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "SBBY_PRJ",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    MID = table.Column<int>(nullable: false),
                    YY = table.Column<short>(nullable: false),
                    MM = table.Column<short>(nullable: false),
                    DD = table.Column<short>(nullable: false),
                    BYDJ_NO = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    RUN_FLAG = table.Column<string>(unicode: false, maxLength: 1, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SBBY_PRJ", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "SC_SBXXB",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    SBBH = table.Column<string>(maxLength: 200, nullable: false),
                    SBMC = table.Column<string>(maxLength: 200, nullable: false),
                    CSBH = table.Column<string>(maxLength: 200, nullable: false),
                    CSMC = table.Column<string>(maxLength: 200, nullable: true),
                    CSLX = table.Column<byte>(nullable: true),
                    XSW = table.Column<string>(maxLength: 20, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SC_SBXXB", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "SEASON_DEF",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    SNAME = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    STA_DD = table.Column<DateTime>(type: "datetime", nullable: false),
                    END_DD = table.Column<DateTime>(type: "datetime", nullable: false),
                    USR = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    USRNAME = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    SYSDATE = table.Column<DateTime>(type: "datetime", nullable: false),
                    UPDUSR = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UPDUSRNAME = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    UPDDATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    SCode = table.Column<string>(maxLength: 50, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SEASON_DEF", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "SEB_IDX2",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    IDX2_NO = table.Column<string>(unicode: false, maxLength: 8, nullable: false),
                    IDX2_REM = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Usr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkMan = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkManName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ChkMob = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    IsPrint = table.Column<bool>(nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SEB_IDX2", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "SEB_MOJ_PW",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    SEB_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    MOD_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    QTY = table.Column<short>(nullable: true),
                    ENERGY = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    TIME_USE = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    TIME_UNIT = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    LINES_HIGH = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    DJ_NO = table.Column<string>(unicode: false, maxLength: 4, nullable: true),
                    SPC_ID = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    REM = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    MD_ID = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    UT_TIME = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    Usr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkMan = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkManName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ChkMob = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    IsPrint = table.Column<bool>(nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SEB_MOJ_PW", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "SEB_SCOPE",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    SEB_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    WIDTH1 = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    WIDTH2 = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    HIGHT1 = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    HIGHT2 = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    REM = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Usr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkMan = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkManName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ChkMob = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    IsPrint = table.Column<bool>(nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SEB_SCOPE", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "SEB_STATE",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    SEB_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    ITM_SB = table.Column<int>(nullable: false),
                    GR_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    CST = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CUS_NO = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    STATE_ID = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    SAL_NO_BG = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    OPN_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    WX_DD_L = table.Column<DateTime>(type: "datetime", nullable: true),
                    INVALID_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    REM = table.Column<string>(type: "text", nullable: true),
                    DEP = table.Column<string>(unicode: false, maxLength: 8, nullable: true),
                    NAME = table.Column<string>(unicode: false, maxLength: 40, nullable: true),
                    OLD_STATE = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    SEB_ID = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    SPC = table.Column<string>(type: "text", nullable: true),
                    Usr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkMan = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkManName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ChkMob = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    IsPrint = table.Column<bool>(nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SEB_STATE", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "SEB_WR",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    SEB_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    ITM = table.Column<int>(nullable: true),
                    WORK_DD = table.Column<DateTime>(type: "datetime", nullable: false),
                    TIME_BEG = table.Column<DateTime>(type: "datetime", nullable: true),
                    TIME_END = table.Column<DateTime>(type: "datetime", nullable: true),
                    QTY_TIME_CNT = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    Usr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkMan = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkManName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ChkMob = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    IsPrint = table.Column<bool>(nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SEB_WR", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "SEBEI",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    SEB_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    NAME = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    DEP = table.Column<string>(unicode: false, maxLength: 8, nullable: true),
                    MODEL = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    ABCType = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    STATE = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    HEIGHT = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CIR_IN = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    WEIGHT = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    XYZ_STROKE = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    SPINDLE_POWER = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    MIN_DISTANCE = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    ATC_CONTENT = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    TABLE_SIZE = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    CONTOUR_SIZE = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    MESA_LOAD = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    EQPT_WEIGHT = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    SPEED = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    EQPT_POW_C = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    GR_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    SPC = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    CUS_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ServiceLife = table.Column<int>(nullable: true),
                    POWER = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    REL_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    SET_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    OPN_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    BF_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    OEC = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    Rem = table.Column<string>(unicode: false, maxLength: 300, nullable: true),
                    LEN_B = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    LEN_E = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    UT = table.Column<string>(unicode: false, maxLength: 8, nullable: true),
                    QTY_DAY = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    FX_KND = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    FX_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    UP_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    SBImage = table.Column<byte[]>(type: "image", nullable: true),
                    ECUse = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    TAX = table.Column<decimal>(type: "decimal(18, 4)", nullable: true),
                    AMTN_NET = table.Column<decimal>(type: "decimal(18, 4)", nullable: true),
                    CostCenter = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    InstallSite = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    MFNO = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Responsible = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    PdLine = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    TotalRunTime = table.Column<decimal>(type: "numeric(18, 0)", nullable: true, defaultValueSql: "((0))"),
                    TimeFromLatestMT = table.Column<decimal>(type: "numeric(18, 0)", nullable: true, defaultValueSql: "((0))"),
                    MtTimes = table.Column<int>(nullable: true, defaultValueSql: "((0))"),
                    Usr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkMan = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkManName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ChkMob = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    IsPrint = table.Column<bool>(nullable: true),
                    ABB_NAME = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    SerialNo = table.Column<string>(unicode: false, maxLength: 50, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SEBEI", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "SEBEI_RECORD",
                columns: table => new
                {
                    ID = table.Column<long>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    SEB_NO = table.Column<string>(unicode: false, maxLength: 10, nullable: false),
                    DEP = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    StateReason = table.Column<string>(unicode: false, maxLength: 8, nullable: false),
                    EventType = table.Column<byte>(nullable: false),
                    State = table.Column<byte>(nullable: false),
                    Record_DD = table.Column<DateTime>(type: "datetime", nullable: false, defaultValueSql: "(getdate())"),
                    CostCenter = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    OrderID = table.Column<int>(nullable: true, defaultValueSql: "((0))"),
                    ProcessID = table.Column<int>(nullable: true, defaultValueSql: "((0))"),
                    ProductID = table.Column<int>(nullable: true, defaultValueSql: "((0))"),
                    PersonalID = table.Column<int>(nullable: true, defaultValueSql: "((0))"),
                    SurName = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    Name = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    MaintainType = table.Column<int>(nullable: true, defaultValueSql: "((0))"),
                    MaintainDurationTime = table.Column<decimal>(type: "decimal(18, 4)", nullable: false),
                    MaintainQty = table.Column<int>(nullable: false),
                    MaintainUsrID = table.Column<int>(nullable: false),
                    TargetCycle = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    ActualCycle = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    PlanProcessDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ActualProcessDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    NextDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    Enabled = table.Column<byte>(nullable: true, defaultValueSql: "((0))"),
                    Measures = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    Describe = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    Tabs = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    Header = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    SolveDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    Priority = table.Column<int>(nullable: true),
                    Usr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkMan = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkManName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ChkMob = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    IsPrint = table.Column<bool>(nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SEBEI_RECORD", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "SETDEFVALUES",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    Usr = table.Column<string>(unicode: false, maxLength: 12, nullable: false),
                    BusiID = table.Column<string>(unicode: false, maxLength: 30, nullable: false),
                    ITM = table.Column<int>(nullable: false),
                    FLAG = table.Column<string>(unicode: false, maxLength: 1, nullable: false),
                    BusiNo = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    Rem = table.Column<string>(unicode: false, maxLength: 200, nullable: false),
                    CONTENT = table.Column<byte[]>(type: "image", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SETDEFVALUES", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "SH_DJ",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    Busi_No = table.Column<string>(unicode: false, maxLength: 100, nullable: false),
                    BIL_NO = table.Column<string>(unicode: false, maxLength: 100, nullable: false),
                    BIL_ITM = table.Column<int>(nullable: false),
                    BillDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    YN = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    DEP = table.Column<string>(unicode: false, maxLength: 8, nullable: true),
                    USR_MAKE = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    USR_CHECK = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    USR_CHECK_MAIN = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    USR_CLOSE = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    REM = table.Column<string>(unicode: false, maxLength: 500, nullable: true),
                    PRE_CHK_MAN = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    ChkMob = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    OT_ID = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    OT_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    USR_N = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    SH_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    OTHUSR = table.Column<string>(unicode: false, maxLength: 250, nullable: true),
                    SH_ITM = table.Column<int>(nullable: true),
                    PRE_SH_ITM = table.Column<int>(nullable: true),
                    PRE_PRE_SH_ITM = table.Column<int>(nullable: true),
                    USR_REJIGGER = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    START_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    CHK_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    LAST_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    OT_ID2 = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    OT_NO2 = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    CUS_NO = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    DEP_BIL = table.Column<string>(unicode: false, maxLength: 8, nullable: true),
                    BilType = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    SAL_NO = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    CUS_OS_NO = table.Column<string>(unicode: false, maxLength: 30, nullable: true),
                    BAT_NO = table.Column<string>(unicode: false, maxLength: 40, nullable: true),
                    EIP_STS = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    DTSH_SW = table.Column<string>(unicode: false, maxLength: 1, nullable: true, defaultValueSql: "('N')"),
                    DTSH_NO = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    VER_NO = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    NOT_RETURN = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    SYS_DATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    TYPE_NO = table.Column<string>(unicode: false, maxLength: 6, nullable: true),
                    UNSUBMIT = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    IS_REMODIFY = table.Column<bool>(nullable: true),
                    REM_BIL = table.Column<string>(unicode: false, maxLength: 500, nullable: true),
                    BilNoFieldName = table.Column<string>(unicode: false, maxLength: 50, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SH_DJ", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "SH_LIST",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    Busi_No = table.Column<string>(unicode: false, maxLength: 100, nullable: false),
                    BIL_NO = table.Column<string>(unicode: false, maxLength: 100, nullable: false),
                    BIL_ITM = table.Column<int>(nullable: false),
                    ITM = table.Column<int>(nullable: false),
                    YN = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    CHK_MAN = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    CHK_DATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    REM = table.Column<string>(unicode: false, maxLength: 200, nullable: true),
                    SH_ITM = table.Column<int>(nullable: true),
                    CHK_MAN_MAIN = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    YN1 = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    PRE_TAG = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    CHK_MAN1 = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    CHK_MAN_MAIN1 = table.Column<string>(unicode: false, maxLength: 12, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SH_LIST", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "SHIFT_SCHEDULING",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    NO = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    NAME = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    SSDATE = table.Column<DateTime>(type: "datetime", nullable: false),
                    DEPTNO = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    ShiftNO = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    TeamNO = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    USRNAME = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    SYSDATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    UPDUSR = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UPDDATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    CHKMAN = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    CHKMANNAME = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    CHKDATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    CHKMOB = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    ISPRINT = table.Column<bool>(nullable: true),
                    UPDUSRNAME = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    USR = table.Column<string>(unicode: false, maxLength: 50, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SHIFT_SCHEDULING", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "SPC_LST",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    SPC_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    NAME = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    QC_ITM = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    PRJ_TYPE = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    ZC_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    Usr = table.Column<string>(unicode: false, maxLength: 20, nullable: false, defaultValueSql: "('')"),
                    UsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: false, defaultValueSql: "('')"),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: false, defaultValueSql: "((1))"),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true, defaultValueSql: "('')"),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 20, nullable: true, defaultValueSql: "('')"),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true, defaultValueSql: "('')"),
                    ChkMan = table.Column<string>(unicode: false, maxLength: 20, nullable: true, defaultValueSql: "('')"),
                    ChkManName = table.Column<string>(unicode: false, maxLength: 20, nullable: true, defaultValueSql: "('')"),
                    ChkDate = table.Column<DateTime>(type: "datetime", nullable: true, defaultValueSql: "('')"),
                    ChkMOB = table.Column<string>(unicode: false, maxLength: 100, nullable: true, defaultValueSql: "('')"),
                    IsPrint = table.Column<bool>(nullable: true, defaultValueSql: "((0))"),
                    SPC_TYPE = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    SPC_GRADE = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    RESP_ZCNO = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    ISCOLLECT = table.Column<bool>(nullable: true),
                    DutyDept = table.Column<string>(maxLength: 50, nullable: true),
                    Comment = table.Column<string>(maxLength: 100, nullable: true),
                    DefectGrade = table.Column<string>(unicode: false, maxLength: 10, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SPC_LST", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "SpectrumTemp",
                columns: table => new
                {
                    id = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    SEB_NO = table.Column<string>(unicode: false, maxLength: 55, nullable: true),
                    NO = table.Column<string>(unicode: false, maxLength: 55, nullable: true),
                    VALUE = table.Column<string>(unicode: false, maxLength: 55, nullable: true),
                    SYS_DATE = table.Column<string>(unicode: false, maxLength: 55, nullable: true),
                    ITM = table.Column<string>(unicode: false, maxLength: 55, nullable: true),
                    TYPE = table.Column<string>(unicode: false, maxLength: 55, nullable: true),
                    BARCODE = table.Column<string>(unicode: false, maxLength: 55, nullable: true),
                    INPUTDATE = table.Column<string>(unicode: false, maxLength: 55, nullable: true),
                    MINLIMIT = table.Column<string>(unicode: false, maxLength: 55, nullable: true),
                    MAXLIMIT = table.Column<string>(unicode: false, maxLength: 55, nullable: true),
                    CASTINGBATCHNO = table.Column<string>(unicode: false, maxLength: 55, nullable: true),
                    STOVENO = table.Column<string>(unicode: false, maxLength: 55, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SpectrumTemp", x => x.id);
                });

            migrationBuilder.CreateTable(
                name: "SPRD",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    WH = table.Column<string>(unicode: false, maxLength: 12, nullable: false),
                    PRD_NO = table.Column<string>(unicode: false, maxLength: 30, nullable: false),
                    PRD_MARK = table.Column<string>(unicode: false, maxLength: 40, nullable: false, defaultValueSql: "(space((0)))"),
                    YY = table.Column<short>(nullable: false),
                    MM = table.Column<short>(nullable: false),
                    QTY = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY1 = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_LN = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_BR = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY1_LN = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY1_BR = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CST = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    UUP = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CST_STD = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    REM = table.Column<string>(unicode: false, maxLength: 40, nullable: true),
                    QTY_BOX_ITM = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CST_IFRS = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CST_STD_IFRS = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    UUP_IFRS = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    Usr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkMan = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkManName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ChkMob = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    IsPrint = table.Column<bool>(nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SPRD", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "SPRD1",
                columns: table => new
                {
                    BAT_NO = table.Column<string>(unicode: false, maxLength: 40, nullable: false),
                    WH = table.Column<string>(unicode: false, maxLength: 12, nullable: false),
                    PRD_NO = table.Column<string>(unicode: false, maxLength: 30, nullable: false),
                    PRD_MARK = table.Column<string>(unicode: false, maxLength: 40, nullable: false, defaultValueSql: "(space((0)))"),
                    YY = table.Column<short>(nullable: false),
                    MM = table.Column<short>(nullable: false),
                    QTY = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY1 = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_LN = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_BR = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY1_LN = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY1_BR = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CST = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    UUP = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CST_STD = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    VALID_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    REM = table.Column<string>(unicode: false, maxLength: 40, nullable: true),
                    CST_IFRS = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CST_STD_IFRS = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    UUP_IFRS = table.Column<decimal>(type: "numeric(18, 0)", nullable: true)
                },
                constraints: table =>
                {
                });

            migrationBuilder.CreateTable(
                name: "ST_BARCODECHANGE",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    BillNo = table.Column<string>(unicode: false, maxLength: 30, nullable: true),
                    DEP_NO = table.Column<string>(unicode: false, maxLength: 30, nullable: true),
                    DEP_NAME = table.Column<string>(unicode: false, maxLength: 30, nullable: true),
                    BarcodeNO = table.Column<string>(unicode: false, maxLength: 200, nullable: false, defaultValueSql: "('')"),
                    ZC_NO = table.Column<string>(unicode: false, maxLength: 30, nullable: false, defaultValueSql: "('')"),
                    ZC_NAME = table.Column<string>(unicode: false, maxLength: 30, nullable: false, defaultValueSql: "('')"),
                    PRD_NO = table.Column<string>(unicode: false, maxLength: 30, nullable: false, defaultValueSql: "('')"),
                    PRD_NAME = table.Column<string>(unicode: false, maxLength: 100, nullable: false, defaultValueSql: "('')"),
                    PRD_SPC = table.Column<string>(unicode: false, maxLength: 200, nullable: true, defaultValueSql: "('')"),
                    BAT_NO = table.Column<string>(unicode: false, maxLength: 30, nullable: false, defaultValueSql: "('')"),
                    YQTY = table.Column<decimal>(type: "numeric(18, 0)", nullable: false),
                    YQTY1 = table.Column<decimal>(type: "decimal(18, 4)", nullable: true, defaultValueSql: "((0))"),
                    QTY = table.Column<decimal>(type: "decimal(18, 4)", nullable: false),
                    QTY1 = table.Column<decimal>(type: "numeric(18, 0)", nullable: true, defaultValueSql: "((0))"),
                    UNIT = table.Column<string>(unicode: false, maxLength: 10, nullable: false, defaultValueSql: "('')"),
                    RBILL_TYPE = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    RBILL_NO = table.Column<string>(unicode: false, maxLength: 100, nullable: true, defaultValueSql: "('')"),
                    ITM = table.Column<int>(nullable: false),
                    No = table.Column<string>(unicode: false, maxLength: 50, nullable: true, defaultValueSql: "('')"),
                    BillDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    Rem = table.Column<string>(unicode: false, maxLength: 4000, nullable: true, defaultValueSql: "('')"),
                    BusiNo = table.Column<string>(unicode: false, maxLength: 50, nullable: true, defaultValueSql: "('')"),
                    BilType = table.Column<string>(unicode: false, maxLength: 20, nullable: true, defaultValueSql: "('')"),
                    BilTypeName = table.Column<string>(unicode: false, maxLength: 20, nullable: true, defaultValueSql: "('')"),
                    Usr = table.Column<string>(unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')"),
                    UsrName = table.Column<string>(unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')"),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: true, defaultValueSql: "(getdate())"),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 50, nullable: true, defaultValueSql: "('')"),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 50, nullable: true, defaultValueSql: "('')"),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true, defaultValueSql: "(getdate())"),
                    ChkMan = table.Column<string>(unicode: false, maxLength: 50, nullable: true, defaultValueSql: "('')"),
                    ChkManName = table.Column<string>(unicode: false, maxLength: 50, nullable: true, defaultValueSql: "('')"),
                    ChkDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ChkMob = table.Column<string>(unicode: false, maxLength: 100, nullable: true, defaultValueSql: "('')"),
                    IsClose = table.Column<bool>(nullable: true, defaultValueSql: "((0))"),
                    ClsDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ClsUsr = table.Column<string>(unicode: false, maxLength: 50, nullable: true, defaultValueSql: "('')"),
                    ClsUsrName = table.Column<string>(unicode: false, maxLength: 50, nullable: true, defaultValueSql: "('')"),
                    IsPrint = table.Column<bool>(nullable: true, defaultValueSql: "((0))")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ST_BARCODECHANGE", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "ST_BARCODEINFO",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    NO = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    BillDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    BusiNO = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Memo = table.Column<string>(unicode: false, maxLength: 3500, nullable: true),
                    billclsID = table.Column<int>(nullable: false),
                    userID = table.Column<int>(nullable: false),
                    InputDate = table.Column<DateTime>(type: "datetime", nullable: false, defaultValueSql: "(getdate())"),
                    Flag = table.Column<int>(nullable: false),
                    auNo = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    ChkUserID = table.Column<int>(nullable: false),
                    ChkDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    IsPrint = table.Column<int>(nullable: false),
                    CloseUserID = table.Column<int>(nullable: false),
                    CloseDate = table.Column<DateTime>(type: "datetime", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ST_BARCODEINFO", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "ST_BARCODEMERGEINFO",
                columns: table => new
                {
                    BARCODE_OLD = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    BARCODE_NEW = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    CREATETIME = table.Column<DateTime>(type: "datetime", nullable: true)
                },
                constraints: table =>
                {
                });

            migrationBuilder.CreateTable(
                name: "ST_BARCODERES",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    MID = table.Column<int>(nullable: false),
                    RBILL_TYPE = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    RBILL_NO = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    ITM = table.Column<int>(nullable: true),
                    EST_ITM = table.Column<int>(nullable: true),
                    BILL_DATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    CUS_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    PRD_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    UNIT = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    UNIT1 = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    BAT_NO = table.Column<string>(unicode: false, maxLength: 500, nullable: true),
                    QTY = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY1 = table.Column<decimal>(type: "decimal(18, 4)", nullable: true),
                    UNITPK2 = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    QTYPK2 = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTYPAK = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    SAL_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    DEP = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    BusiNO = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Memo = table.Column<string>(unicode: false, maxLength: 3500, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ST_BARCODERES", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "ST_BARCODESPLIT",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    SourceBarcode = table.Column<string>(unicode: false, maxLength: 100, nullable: false),
                    ToBarcode = table.Column<string>(unicode: false, maxLength: 100, nullable: false),
                    PRD_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ST_BARCODESPLIT", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "ST_PALLETCODE_INFO",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    BARCODE = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    TZ_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    MO_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    PRD_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    QTY = table.Column<int>(nullable: true),
                    ZC_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    SAL_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    BAN_NO = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    SYSDATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    STATUS = table.Column<string>(unicode: false, fixedLength: true, maxLength: 1, nullable: false),
                    SEB_NO = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    ID_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    NOLOADINGQTY = table.Column<int>(nullable: true),
                    CHK_NUM = table.Column<string>(unicode: false, fixedLength: true, maxLength: 1, nullable: true),
                    LOCATION = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    WR_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ST_PALLETCODE_INFO", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "ST_TDCODE_BUSI",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    BARCODE = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    PRD_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    ZC_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    TZ_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    STA_TIME = table.Column<DateTime>(type: "datetime", nullable: true),
                    SEB_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    BAN_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    SAL_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    CODE_STATUS = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    WR_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ST_TDCODE_BUSI", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "ST_TDCODE_BUSI_Record",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    MID = table.Column<int>(nullable: true),
                    OLD_CODE_STATUS = table.Column<string>(maxLength: 50, nullable: true),
                    CH_DATE = table.Column<DateTime>(type: "datetime", nullable: false),
                    CODE_STATUS = table.Column<string>(maxLength: 50, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ST_TDCODE_BUSI_Record", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "ST_TDCODE_INFO",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    BARCODE = table.Column<string>(unicode: false, maxLength: 100, nullable: false),
                    EFF_TIME = table.Column<DateTime>(type: "datetime", nullable: true),
                    CODE_STATUS = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    MAKER_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    PRD_NO_ORI = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    MOD_NO_ORI = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    PRD_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    SYSDATE = table.Column<DateTime>(type: "datetime", nullable: false),
                    ID_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    DCNO = table.Column<string>(unicode: false, maxLength: 50, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ST_TDCODE_INFO", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "ST_TDCODE_TEMP",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    ENTRYID = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    BARCODE = table.Column<string>(unicode: false, maxLength: 100, nullable: false),
                    TZ_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    USRNO = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    CODE_STATUS = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    SPC_NO = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    SCAN_TIME = table.Column<DateTime>(type: "datetime", nullable: true),
                    SEB_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    IsBatTray = table.Column<bool>(nullable: true),
                    ZC_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    BAN_NO = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    MO_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    Station_No = table.Column<string>(unicode: false, maxLength: 20, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ST_TDCODE_TEMP", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "STATION_SEB",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    No = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    Name = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    SEB_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    SEB_NAME = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    Rem = table.Column<string>(unicode: false, maxLength: 200, nullable: false),
                    STOP_ID = table.Column<bool>(nullable: false),
                    Usr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkMan = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkManName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ChkMob = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    IsPrint = table.Column<bool>(nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_STATION_SEB", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "SYS_Account_Close",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    BillDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    BilType = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    BilTypeName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    BusiNo = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ChkMan = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkManName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkMob = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    Close_Date = table.Column<DateTime>(type: "datetime", nullable: true),
                    ClsDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ClsUsr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ClsUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    IsClose = table.Column<bool>(nullable: true),
                    IsCloseAll = table.Column<bool>(nullable: true),
                    IsPrint = table.Column<bool>(nullable: true),
                    IsValid = table.Column<bool>(nullable: true),
                    No = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Rem = table.Column<string>(unicode: false, maxLength: 500, nullable: true),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: false),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    Usr = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    UsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SYS_Account_Close", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "SYS_ATTACHMENT",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    MenuNo = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    BillID = table.Column<int>(nullable: false),
                    FileID = table.Column<int>(nullable: false),
                    BUSINO = table.Column<string>(unicode: false, maxLength: 30, nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SYS_ATTACHMENT", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "sys_AudBill_Info",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    Aud_No = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    Aud_Date = table.Column<DateTime>(type: "datetime", nullable: true),
                    BusiNo = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    BillNo = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    BillDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    Bill_ID = table.Column<int>(nullable: true),
                    Bill_Usr_Dept = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    Bill_CreateUser = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    BillType = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Bill_Remark = table.Column<string>(unicode: false, maxLength: 500, nullable: true),
                    Cust_No = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Usr_Exec = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    Usr_Exec_Dept = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    SubMit_Date = table.Column<DateTime>(type: "datetime", nullable: true),
                    Usr_Cur = table.Column<string>(unicode: false, maxLength: 200, nullable: true),
                    Usr_Cur_Agent = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Usr_Pre = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Usr_Close = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Usr_Other = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Aud_State = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    Usr = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    UsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: false),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    MenuNo = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Result = table.Column<string>(unicode: false, maxLength: 30, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_sys_AudBill_Info", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "sys_Audit_Flow",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    BusiNo = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    ChkMob = table.Column<string>(unicode: false, maxLength: 30, nullable: false),
                    BusiName = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    BusiNo_Next = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    BusiName_Next = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    Type_No = table.Column<string>(unicode: false, maxLength: 6, nullable: true),
                    FORM_ID = table.Column<string>(unicode: false, maxLength: 8, nullable: true),
                    Rem = table.Column<string>(unicode: false, maxLength: 200, nullable: true),
                    BilType = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    SUBMIT_Manual = table.Column<bool>(nullable: true),
                    CDT_SQL = table.Column<string>(unicode: false, maxLength: 4000, nullable: true),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    Usr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    Factory_No = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Enabled = table.Column<bool>(nullable: true),
                    NoField_Name = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    MenuNo = table.Column<string>(unicode: false, maxLength: 50, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_sys_Audit_Flow", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "SYS_BARCODE_INFO",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    RuleID = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Variable = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    PrevDate = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    MaxSN = table.Column<int>(nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SYS_BARCODE_INFO", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "SYS_BARCODE_RULE",
                columns: table => new
                {
                    RuleID = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    RuleOrder = table.Column<int>(nullable: true),
                    CombiID = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    CombiType = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    CombiOrder = table.Column<int>(nullable: true),
                    ItemType = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    FixChar = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    ItemLen = table.Column<int>(nullable: true),
                    Format = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Align = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    CoverChar = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    UpdateTime = table.Column<string>(unicode: false, maxLength: 20, nullable: true)
                },
                constraints: table =>
                {
                });

            migrationBuilder.CreateTable(
                name: "SYS_BILLNO_INFO",
                columns: table => new
                {
                    BillID = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    SelfID = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    PrevDate = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    MaxSN = table.Column<int>(nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SYS_BILLNO_INFO", x => x.BillID);
                });

            migrationBuilder.CreateTable(
                name: "SYS_BILLNO_INFO_DEL",
                columns: table => new
                {
                    BillID = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    BillNO = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    USR = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    DELDate = table.Column<DateTime>(type: "datetime", nullable: false)
                },
                constraints: table =>
                {
                });

            migrationBuilder.CreateTable(
                name: "SYS_BILLNO_RULE",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    BillID = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    BillDesc = table.Column<string>(maxLength: 200, nullable: true),
                    DateFormat = table.Column<string>(unicode: false, maxLength: 8, nullable: true),
                    BillType = table.Column<byte>(nullable: true),
                    Dept = table.Column<byte>(nullable: true),
                    Maker = table.Column<byte>(nullable: true),
                    DB = table.Column<byte>(nullable: true),
                    Other = table.Column<byte>(nullable: true),
                    SelfIdCode = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    SerialNum = table.Column<byte>(nullable: true),
                    GetDelBill = table.Column<string>(unicode: false, fixedLength: true, maxLength: 1, nullable: true),
                    BillModifiable = table.Column<string>(unicode: false, fixedLength: true, maxLength: 1, nullable: true),
                    IsSelfIdCode = table.Column<string>(unicode: false, fixedLength: true, maxLength: 1, nullable: true),
                    ActCodeBits = table.Column<byte>(nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SYS_BILLNO_RULE", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "SYS_BILLNO_RULE_SET",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    Encoded = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    CanOrder = table.Column<bool>(nullable: true),
                    DefaultOrder = table.Column<int>(nullable: true),
                    Enabled = table.Column<bool>(nullable: true),
                    BitsSet = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    MaxBits = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    MinBits = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    DataType = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    CodeBits = table.Column<byte>(nullable: true),
                    EncodeType = table.Column<string>(maxLength: 400, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SYS_BILLNO_RULE_SET", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "SYS_BILLNO_TEMP",
                columns: table => new
                {
                    ENTRYID = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    BILLID = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    NO = table.Column<string>(unicode: false, maxLength: 30, nullable: false),
                    CREATEDATE = table.Column<DateTime>(type: "datetime", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SYS_BILLNO_TEMP", x => x.ENTRYID);
                });

            migrationBuilder.CreateTable(
                name: "SYS_BILLSOURCE",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    MenuNo = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    QueryNo = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    InputDate = table.Column<DateTime>(type: "datetime", nullable: false, defaultValueSql: "(getdate())")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SYS_BILLSOURCE", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "SYS_BUSINO",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    BusiKND = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    BusiNo = table.Column<string>(unicode: false, maxLength: 50, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SYS_BUSINO", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "SYS_CODENO_RULE",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    RuleID = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    RuleOrder = table.Column<int>(nullable: false),
                    RuleType = table.Column<int>(nullable: false),
                    LastUpdate = table.Column<DateTime>(type: "datetime", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SYS_CODENO_RULE", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "sys_Data_Rules",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    BusiNo = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    TableName = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    MenuNo = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Rules = table.Column<string>(unicode: false, maxLength: 8000, nullable: true),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: false),
                    Usr = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    UsrName = table.Column<string>(unicode: false, maxLength: 30, nullable: false),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 30, nullable: true),
                    IsValid = table.Column<bool>(nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_sys_Data_Rules", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "SYS_FILE",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    FileName = table.Column<string>(unicode: false, maxLength: 500, nullable: false),
                    FileSize = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    UploadTime = table.Column<DateTime>(type: "datetime", nullable: false, defaultValueSql: "(getdate())"),
                    CreateTime = table.Column<DateTime>(type: "datetime", nullable: false),
                    LastEditTime = table.Column<DateTime>(type: "datetime", nullable: true),
                    Remark = table.Column<string>(unicode: false, maxLength: 500, nullable: true),
                    FileBytes = table.Column<byte[]>(type: "image", nullable: false),
                    USERNO = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    FilePath = table.Column<string>(unicode: false, maxLength: 300, nullable: false),
                    SrcBusiNo = table.Column<string>(unicode: false, maxLength: 50, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SYS_FILE", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "SYS_FLOW",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    No = table.Column<string>(unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')"),
                    Name = table.Column<string>(unicode: false, maxLength: 100, nullable: false, defaultValueSql: "('')"),
                    Flow = table.Column<Guid>(nullable: false),
                    Memo = table.Column<string>(unicode: false, maxLength: 500, nullable: false, defaultValueSql: "('')"),
                    UserID = table.Column<int>(nullable: false),
                    InputDate = table.Column<DateTime>(type: "datetime", nullable: false, defaultValueSql: "(getdate())"),
                    Flag = table.Column<int>(nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SYS_FLOW", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "SYS_FLOWCHART",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    BackImage = table.Column<Guid>(nullable: true),
                    BackImgLayOut = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    FlowChart = table.Column<Guid>(nullable: true),
                    Name = table.Column<string>(unicode: false, maxLength: 100, nullable: false),
                    No = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    MenuNo = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ShowTipType = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    FlowType = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    BOM_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Usr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkMan = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkManName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ChkMob = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    IsPrint = table.Column<bool>(nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SYS_FLOWCHART", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "SYS_FLOWCHARTAUTHSET",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    FCID = table.Column<int>(nullable: false),
                    JID = table.Column<int>(nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SYS_FLOWCHARTAUTHSET", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "SYS_FORMNO_INFO",
                columns: table => new
                {
                    FormNO = table.Column<string>(maxLength: 120, nullable: false),
                    PrefixNO = table.Column<string>(maxLength: 120, nullable: true),
                    DTFormat = table.Column<string>(maxLength: 120, nullable: true),
                    DateValue = table.Column<string>(maxLength: 120, nullable: true),
                    PostfixNO = table.Column<string>(maxLength: 120, nullable: true),
                    SNLength = table.Column<int>(nullable: true),
                    MaxSN = table.Column<int>(nullable: true),
                    MaxFormNO = table.Column<string>(maxLength: 800, nullable: true),
                    Remark = table.Column<string>(maxLength: 800, nullable: true)
                },
                constraints: table =>
                {
                });

            migrationBuilder.CreateTable(
                name: "SYS_InterfaceLog",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    IsIn = table.Column<bool>(nullable: false),
                    LogTime = table.Column<DateTime>(type: "datetime", nullable: false),
                    SerialNo = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    InterfaceCode = table.Column<string>(unicode: false, maxLength: 200, nullable: false),
                    InterfaceName = table.Column<string>(maxLength: 200, nullable: true),
                    FunctionName = table.Column<string>(unicode: false, maxLength: 80, nullable: true),
                    RequestBody = table.Column<string>(nullable: false),
                    ResponseCode = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    ResponseMessage = table.Column<string>(nullable: false),
                    ResponseBody = table.Column<string>(nullable: false),
                    CreateTime = table.Column<DateTime>(type: "datetime", nullable: true, defaultValueSql: "(getdate())"),
                    UpdateTime = table.Column<DateTime>(type: "datetime", nullable: true),
                    Uc01 = table.Column<string>(maxLength: 500, nullable: true),
                    Uc02 = table.Column<string>(maxLength: 500, nullable: true),
                    Uc03 = table.Column<string>(maxLength: 500, nullable: true),
                    Uc04 = table.Column<string>(maxLength: 500, nullable: true),
                    Uc05 = table.Column<string>(maxLength: 500, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SYS_InterfaceLog", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "SYS_InterfaceQueue",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    SerialNo = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    FunctionName = table.Column<string>(unicode: false, maxLength: 80, nullable: true),
                    InterfaceCode = table.Column<string>(unicode: false, maxLength: 200, nullable: false),
                    RequestBody = table.Column<string>(nullable: true),
                    Status = table.Column<int>(nullable: true),
                    ObjectID = table.Column<Guid>(nullable: true),
                    SendCount = table.Column<int>(nullable: true),
                    ResponseCode = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    ResponseMessage = table.Column<string>(nullable: true),
                    ResponseBody = table.Column<string>(nullable: true),
                    CreateUserNo = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    CreateTime = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdateUserNo = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    UpdateTime = table.Column<DateTime>(type: "datetime", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SYS_InterfaceQueue", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "SYS_InterfaceURL",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    InterfaceName = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    InterfaceCode = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    Environment = table.Column<int>(nullable: false),
                    Url = table.Column<string>(unicode: false, maxLength: 500, nullable: false),
                    Account = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Password = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    IsDeleted = table.Column<bool>(nullable: true),
                    CreateUserNO = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    CreateTime = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdateUserID = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    UpdateTime = table.Column<DateTime>(type: "datetime", nullable: true),
                    Uc01 = table.Column<string>(maxLength: 1000, nullable: true),
                    Uc02 = table.Column<string>(maxLength: 1000, nullable: true),
                    Uc03 = table.Column<string>(maxLength: 1000, nullable: true),
                    Uc04 = table.Column<string>(maxLength: 1000, nullable: true),
                    Uc05 = table.Column<string>(maxLength: 1000, nullable: true),
                    ErpFormTyoe = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    ErpFormType = table.Column<string>(unicode: false, maxLength: 50, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SYS_InterfaceURL", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "sys_Lang_Data",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    TableName = table.Column<string>(unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')"),
                    ItemNo = table.Column<string>(unicode: false, maxLength: 100, nullable: false, defaultValueSql: "('')"),
                    ItemName = table.Column<string>(unicode: false, maxLength: 100, nullable: true, defaultValueSql: "('')"),
                    L0 = table.Column<string>(unicode: false, maxLength: 500, nullable: false, defaultValueSql: "('')"),
                    L1 = table.Column<string>(unicode: false, maxLength: 500, nullable: false, defaultValueSql: "('')"),
                    L2 = table.Column<string>(unicode: false, maxLength: 500, nullable: true, defaultValueSql: "('')"),
                    L3 = table.Column<string>(unicode: false, maxLength: 500, nullable: true, defaultValueSql: "('')"),
                    Korean = table.Column<string>(unicode: false, maxLength: 500, nullable: true, defaultValueSql: "('')")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_sys_Lang_Data", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "sys_Menu_LocalSet",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    MenuNo = table.Column<string>(unicode: false, maxLength: 60, nullable: false),
                    Disable = table.Column<bool>(nullable: false),
                    SortIndex = table.Column<int>(nullable: true),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Usr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UsrName = table.Column<string>(unicode: false, maxLength: 50, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_sys_Menu_LocalSet", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "sys_menu_zc",
                columns: table => new
                {
                    MenuNo = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    ZC_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    Usr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UsrName = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    SYSDATE = table.Column<DateTime>(type: "datetime", nullable: false),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_sys_menu_zc", x => new { x.MenuNo, x.ZC_NO });
                });

            migrationBuilder.CreateTable(
                name: "sys_OuterDB_ConnString",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    No = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    Name = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    ConnString = table.Column<string>(unicode: false, maxLength: 500, nullable: false),
                    Remark = table.Column<string>(unicode: false, maxLength: 200, nullable: true),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: false),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    Usr = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    UsrName = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    DataBase_Type = table.Column<byte>(nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_sys_OuterDB_ConnString", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "SYS_ParamGroups",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    PARAMGROUPCODE = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    PARAMGROUPDESC = table.Column<string>(unicode: false, maxLength: 500, nullable: true),
                    ISAVAILABLE = table.Column<bool>(nullable: true),
                    USR = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    USRNAME = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    SYSDATE = table.Column<DateTime>(type: "datetime", nullable: false),
                    UPDDATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    UPDUSRNAME = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UPDUSR = table.Column<string>(unicode: false, maxLength: 20, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SYS_ParamGroups", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "SYS_Params",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    PARAMGROUPCODE = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    PARAMGROUPDESC = table.Column<string>(unicode: false, maxLength: 500, nullable: false),
                    PARAMCODE = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    PARAMDESC = table.Column<string>(unicode: false, maxLength: 500, nullable: true),
                    PARAMVALUE = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    ISAVAILABLE = table.Column<bool>(nullable: true),
                    USR = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    USRNAME = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    SYSDATE = table.Column<DateTime>(type: "datetime", nullable: false),
                    UPDDATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    UPDUSRNAME = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UPDUSR = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    SortIndex = table.Column<int>(nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SYS_Params", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "SYS_PROPERTY",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    MenuNo = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    ItemNo = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    ItemName = table.Column<string>(unicode: false, maxLength: 200, nullable: false),
                    ItemValue = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    ItemValueType = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    ItemSort = table.Column<int>(nullable: false, defaultValueSql: "((1))"),
                    edit_Type = table.Column<int>(nullable: false),
                    edit_No = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    edit_Field = table.Column<string>(unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')"),
                    IsSystem = table.Column<bool>(nullable: false),
                    Rem = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 20, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SYS_PROPERTY", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "SYS_PROPERTY_SET",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    PropertyID = table.Column<int>(nullable: false),
                    iUserID = table.Column<int>(nullable: false),
                    Value = table.Column<string>(unicode: false, maxLength: 500, nullable: false),
                    USR = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SYS_PROPERTY_SET", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "SYS_ROLE",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    ParentID = table.Column<int>(nullable: false),
                    No = table.Column<string>(unicode: false, maxLength: 30, nullable: false),
                    Name = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    CUS_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Remark = table.Column<string>(unicode: false, maxLength: 200, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SYS_ROLE", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "SYS_ROLE_DATA_BUSI",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    BusiNo = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    FieldNo = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    FieldName = table.Column<string>(unicode: false, maxLength: 100, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SYS_ROLE_DATA_BUSI", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "SYS_SUMMARY",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    MenuNo = table.Column<string>(unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')"),
                    BusiNo = table.Column<string>(unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')"),
                    InputDate = table.Column<DateTime>(type: "datetime", nullable: false, defaultValueSql: "(getdate())")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SYS_SUMMARY", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "SYS_SUMMARY_REPORTTEMPLATE",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    BusiNo = table.Column<string>(unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')"),
                    Category = table.Column<string>(unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')"),
                    UserID = table.Column<int>(nullable: false),
                    ViewData = table.Column<Guid>(nullable: false),
                    IsDefault = table.Column<bool>(nullable: false),
                    Remark = table.Column<string>(unicode: false, maxLength: 200, nullable: false, defaultValueSql: "('')")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SYS_SUMMARY_REPORTTEMPLATE", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "SYS_SUMMARY_SET",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    UserID = table.Column<string>(unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')"),
                    BusiNo = table.Column<string>(unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')"),
                    SummaryObject = table.Column<byte[]>(type: "image", nullable: true),
                    InputDate = table.Column<DateTime>(type: "datetime", nullable: false, defaultValueSql: "(getdate())")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SYS_SUMMARY_SET", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "SYS_Terminal",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    IPAdd = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    LOCAL = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    NAME = table.Column<string>(unicode: false, maxLength: 100, nullable: false),
                    NO = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    Password = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Rem = table.Column<string>(unicode: false, maxLength: 500, nullable: true),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: false, defaultValueSql: "(getdate())"),
                    TMType = table.Column<string>(unicode: false, maxLength: 1, nullable: false),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 50, nullable: true, defaultValueSql: "('')"),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 50, nullable: true, defaultValueSql: "('')"),
                    Usr = table.Column<string>(unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')"),
                    UsrName = table.Column<string>(unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SYS_Terminal", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "SYS_UNIQUESET",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    BusiNo = table.Column<string>(unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')"),
                    GroupNo = table.Column<string>(unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')"),
                    FieldName = table.Column<string>(unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')"),
                    Memo = table.Column<string>(unicode: false, maxLength: 4000, nullable: true, defaultValueSql: "('')")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SYS_UNIQUESET", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "SYS_UPDATE_LOG",
                columns: table => new
                {
                    ID = table.Column<string>(unicode: false, fixedLength: true, maxLength: 36, nullable: false),
                    BUSINO = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    TABLENAME = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    UPDID = table.Column<int>(nullable: true),
                    DELID = table.Column<int>(nullable: true),
                    INSID = table.Column<int>(nullable: true),
                    TIME = table.Column<DateTime>(type: "datetime", nullable: true)
                },
                constraints: table =>
                {
                });

            migrationBuilder.CreateTable(
                name: "SYS_USER",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    ParentID = table.Column<int>(nullable: false),
                    No = table.Column<string>(unicode: false, maxLength: 30, nullable: false),
                    Name = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    Pwd = table.Column<string>(unicode: false, maxLength: 100, nullable: false),
                    EmpID = table.Column<int>(nullable: true, defaultValueSql: "((0))"),
                    DeptID = table.Column<int>(nullable: true, defaultValueSql: "((0))"),
                    UserType = table.Column<int>(nullable: false),
                    IsLock = table.Column<bool>(nullable: false),
                    Remark = table.Column<string>(unicode: false, maxLength: 200, nullable: true, defaultValueSql: "('')"),
                    dInputDate = table.Column<DateTime>(type: "datetime", nullable: false, defaultValueSql: "(getdate())"),
                    DEP = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    CARD_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    E_MAIL = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    SEX = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    LOGON = table.Column<bool>(nullable: true),
                    WECHAT = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    ENG_NAME = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    WorkGroup = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Superior = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    Phone_Number = table.Column<string>(unicode: false, maxLength: 12, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SYS_USER", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "SYS_WARNING",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    No = table.Column<string>(unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')"),
                    Name = table.Column<string>(unicode: false, maxLength: 100, nullable: false, defaultValueSql: "('')"),
                    WarningSQL = table.Column<string>(unicode: false, maxLength: 4000, nullable: false, defaultValueSql: "('')"),
                    ItemCount = table.Column<int>(nullable: false),
                    Memo = table.Column<string>(unicode: false, maxLength: 500, nullable: false, defaultValueSql: "('')"),
                    UserID = table.Column<int>(nullable: false),
                    InputDate = table.Column<DateTime>(type: "datetime", nullable: false, defaultValueSql: "(getdate())"),
                    Flag = table.Column<int>(nullable: false),
                    KND = table.Column<int>(nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SYS_WARNING", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "SYSAUDIT_FIELD",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    BusiNo = table.Column<string>(unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')"),
                    BillID = table.Column<string>(unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')"),
                    BillNo = table.Column<string>(unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')"),
                    BillDate = table.Column<string>(unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')"),
                    userID = table.Column<string>(unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')"),
                    DID = table.Column<string>(unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')"),
                    BillDID = table.Column<string>(unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')"),
                    CusID = table.Column<string>(unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')"),
                    EmpID = table.Column<string>(unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')"),
                    SubmitDate = table.Column<string>(unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')"),
                    BILInputDate = table.Column<string>(unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')"),
                    AMTN = table.Column<string>(unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')"),
                    AMTNtax = table.Column<string>(unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SYSAUDIT_FIELD", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "SYSBILLNOSET",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    BusiNo = table.Column<string>(unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')"),
                    PreFix = table.Column<string>(unicode: false, maxLength: 10, nullable: false, defaultValueSql: "('')"),
                    DateFormat = table.Column<string>(unicode: false, maxLength: 20, nullable: false, defaultValueSql: "('')"),
                    Pattern = table.Column<string>(unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')"),
                    IsDel = table.Column<bool>(nullable: false),
                    IsModi = table.Column<bool>(nullable: false),
                    Memo = table.Column<string>(unicode: false, maxLength: 500, nullable: false, defaultValueSql: "('')"),
                    NextSerialNumber = table.Column<int>(nullable: false),
                    InputDate = table.Column<DateTime>(type: "datetime", nullable: false, defaultValueSql: "(getdate())")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SYSBILLNOSET", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "SYSMSG",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    ToUsr = table.Column<string>(unicode: false, maxLength: 20, nullable: false, defaultValueSql: "((0))"),
                    FromUsr = table.Column<string>(unicode: false, maxLength: 20, nullable: false, defaultValueSql: "((0))"),
                    SendDate = table.Column<DateTime>(type: "datetime", nullable: false, defaultValueSql: "(getdate())"),
                    Level = table.Column<int>(nullable: false),
                    Caption = table.Column<string>(unicode: false, maxLength: 500, nullable: false, defaultValueSql: "('')"),
                    Content = table.Column<string>(unicode: false, maxLength: 3500, nullable: true, defaultValueSql: "('')"),
                    IsRead = table.Column<bool>(nullable: false),
                    DelFlag = table.Column<bool>(nullable: true, defaultValueSql: "((0))"),
                    Rem = table.Column<string>(unicode: false, maxLength: 4000, nullable: true, defaultValueSql: "('')"),
                    RespondDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    Respond = table.Column<string>(unicode: false, maxLength: 4000, nullable: true, defaultValueSql: "('')"),
                    Bill_No = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    MsgBillType = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    MsgBusiNo = table.Column<string>(unicode: false, maxLength: 50, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SYSMSG", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "SYSMSGCONFIG",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    BusiNo = table.Column<string>(unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')"),
                    BillType = table.Column<string>(unicode: false, maxLength: 50, nullable: true, defaultValueSql: "('')"),
                    BillTypeName = table.Column<string>(unicode: false, maxLength: 50, nullable: true, defaultValueSql: "('')"),
                    BillState = table.Column<int>(nullable: false),
                    FromUsr = table.Column<string>(unicode: false, maxLength: 10, nullable: false, defaultValueSql: "('')"),
                    ToUsrs = table.Column<string>(unicode: false, maxLength: 2000, nullable: true, defaultValueSql: "('')"),
                    ToRole = table.Column<int>(nullable: true),
                    CaptionFormat = table.Column<string>(unicode: false, maxLength: 500, nullable: true, defaultValueSql: "('')"),
                    ContentFormat = table.Column<string>(unicode: false, maxLength: 3500, nullable: true, defaultValueSql: "('')"),
                    Rem = table.Column<string>(unicode: false, maxLength: 1000, nullable: true, defaultValueSql: "('')"),
                    Usr = table.Column<string>(unicode: false, maxLength: 20, nullable: false, defaultValueSql: "('')"),
                    dInputDate = table.Column<DateTime>(type: "datetime", nullable: false, defaultValueSql: "(getdate())"),
                    ToMails = table.Column<string>(unicode: false, maxLength: 4000, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SYSMSGCONFIG", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "SYSMSGSETUP",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    MsgBusiNo = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    MsgBillType = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    BillTypeName = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    BillState = table.Column<int>(nullable: false),
                    CaptionFormat = table.Column<string>(unicode: false, maxLength: 500, nullable: true),
                    ContentFormat = table.Column<string>(unicode: false, maxLength: 3500, nullable: true),
                    Rem = table.Column<string>(unicode: false, maxLength: 500, nullable: true),
                    Usr = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    UsrName = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: false),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 50, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SYSMSGSETUP", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "SYSMSGSETUPINFO",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    MID = table.Column<int>(nullable: false),
                    RecLevel = table.Column<int>(nullable: false),
                    ToRole = table.Column<int>(nullable: true),
                    ToUsrs = table.Column<string>(unicode: false, maxLength: 500, nullable: true),
                    ToMails = table.Column<string>(unicode: false, maxLength: 500, nullable: true),
                    VALID_TIME = table.Column<int>(nullable: true),
                    DELAY_TIME = table.Column<int>(nullable: true),
                    TONEXT = table.Column<string>(unicode: false, maxLength: 10, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SYSMSGSETUPINFO", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "SZB_DELETE_BAK_20181019",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    STAT_DATE = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    BAN_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    SEB_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    CSBH = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    STARTVALUE = table.Column<int>(nullable: true),
                    ENDVALUE = table.Column<int>(nullable: true),
                    BEYONDCOUNT = table.Column<int>(nullable: true),
                    VALUE = table.Column<int>(nullable: true),
                    HANDLETYPE = table.Column<int>(nullable: true),
                    CREATETIME = table.Column<DateTime>(type: "datetime", nullable: true),
                    PRD_NO = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    PRD_TIME = table.Column<int>(nullable: true),
                    STA_TIME = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    END_TIME = table.Column<string>(unicode: false, maxLength: 50, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SZB_DELETE_BAK_20181019", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "T_BASEUSER_DEVICE",
                columns: table => new
                {
                    DeviceID = table.Column<int>(nullable: false),
                    RegistrationId = table.Column<string>(maxLength: 200, nullable: false),
                    UserNo = table.Column<string>(maxLength: 200, nullable: false),
                    CreateTime = table.Column<DateTime>(type: "datetime", nullable: false, defaultValueSql: "(getdate())"),
                    ModifyTime = table.Column<DateTime>(type: "datetime", nullable: false, defaultValueSql: "(getdate())"),
                    DeviceType = table.Column<string>(maxLength: 200, nullable: false, defaultValueSql: "('')")
                },
                constraints: table =>
                {
                });

            migrationBuilder.CreateTable(
                name: "T_DEVICEBINDLOG",
                columns: table => new
                {
                    LogID = table.Column<int>(nullable: false),
                    RegistrationId = table.Column<string>(maxLength: 200, nullable: false),
                    UserNo = table.Column<string>(maxLength: 200, nullable: false),
                    CreateTime = table.Column<DateTime>(type: "datetime", nullable: false, defaultValueSql: "(getdate())"),
                    ModifyTime = table.Column<DateTime>(type: "datetime", nullable: false, defaultValueSql: "(getdate())"),
                    DeviceType = table.Column<string>(maxLength: 200, nullable: false, defaultValueSql: "('')")
                },
                constraints: table =>
                {
                });

            migrationBuilder.CreateTable(
                name: "T_TEST",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    Order_No = table.Column<string>(maxLength: 200, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_T_TEST", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "T_USER",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    USERID = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    LOGINPASSWORD = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ISDISABLE = table.Column<int>(nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_T_USER", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "T1",
                columns: table => new
                {
                    SJ = table.Column<string>(unicode: false, fixedLength: true, maxLength: 19, nullable: true),
                    SBBH = table.Column<string>(unicode: false, fixedLength: true, maxLength: 50, nullable: true),
                    CSBH = table.Column<string>(unicode: false, fixedLength: true, maxLength: 50, nullable: true),
                    CSSZ = table.Column<string>(unicode: false, fixedLength: true, maxLength: 127, nullable: true),
                    CSZT = table.Column<byte>(nullable: true)
                },
                constraints: table =>
                {
                });

            migrationBuilder.CreateTable(
                name: "Table_1",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    MID = table.Column<int>(nullable: false),
                    Name = table.Column<string>(fixedLength: true, maxLength: 10, nullable: true),
                    InspectCode = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    Unit = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    LowerLimit = table.Column<string>(fixedLength: true, maxLength: 10, nullable: true),
                    UpperLimit = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    StandardValue = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    BillIndex = table.Column<int>(nullable: true),
                    IsRequiredFields = table.Column<bool>(nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_Table_1", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "TASK",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    CAS_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    TASK_ID = table.Column<int>(nullable: false),
                    UP = table.Column<int>(nullable: true),
                    SQ_ITM = table.Column<int>(nullable: true),
                    NAME = table.Column<string>(unicode: false, maxLength: 255, nullable: true),
                    PERIOD_ID = table.Column<string>(unicode: false, maxLength: 1, nullable: true, defaultValueSql: "('F')"),
                    START_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    END_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    RESTRICT_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    DONE_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    TYPE = table.Column<string>(unicode: false, maxLength: 1, nullable: true, defaultValueSql: "('0')"),
                    MILE_ID = table.Column<string>(unicode: false, maxLength: 1, nullable: true, defaultValueSql: "('F')"),
                    REM = table.Column<string>(type: "text", nullable: true),
                    PRIORITY = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    DURATION = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    DUR_INPUT = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CLS_ID = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    PR_STATUS = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    USR = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    RUN_USR = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    QC_USR = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    DELEGATE_ID = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    WBS = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    LAYER_NUM = table.Column<short>(nullable: true),
                    UPDATING_ID = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    DUR_KEY = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    IDX_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    GANTT_ID = table.Column<string>(unicode: false, maxLength: 1, nullable: true, defaultValueSql: "('T')"),
                    DENY_ID = table.Column<string>(unicode: false, maxLength: 1, nullable: true, defaultValueSql: "('F')"),
                    WORK_CNT = table.Column<short>(nullable: true),
                    SUM_ID = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    STATUS = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    UP_PERIOD = table.Column<int>(nullable: true),
                    CLS_MAN = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    PRD_NO = table.Column<string>(unicode: false, maxLength: 30, nullable: true),
                    CUS_NO = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    OS_NAME = table.Column<string>(unicode: false, maxLength: 30, nullable: true),
                    PGM = table.Column<string>(unicode: false, maxLength: 30, nullable: true),
                    TASK_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    DEP = table.Column<string>(unicode: false, maxLength: 8, nullable: true),
                    SAL_NO = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    TASK_NO = table.Column<string>(unicode: false, maxLength: 30, nullable: true),
                    CHK_MAN = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    CLS_DATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    PMT_ID_YR = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    AMTN_ACT_YR = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    RTN_RTO_YR = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    PAY_RTO_YR = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    BIZ_RTO_YR = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    MOB_ID = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    PRT_SW = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    UP_DEF_CHK = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    TASK_NO_COPY = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    EP_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    LOCK_MAN = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    LOCK_DATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    CHK_FL = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    SYS_DATE = table.Column<DateTime>(type: "datetime", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TASK", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "TB_BL",
                columns: table => new
                {
                    RN = table.Column<int>(nullable: true),
                    RQ = table.Column<string>(unicode: false, maxLength: 50, nullable: true)
                },
                constraints: table =>
                {
                });

            migrationBuilder.CreateTable(
                name: "TB_CPMXRB",
                columns: table => new
                {
                    CJ = table.Column<string>(maxLength: 200, nullable: true),
                    INPUTDATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    PRD_NO = table.Column<string>(maxLength: 200, nullable: true),
                    PRD_NAME = table.Column<string>(maxLength: 200, nullable: true),
                    PRD_SNM = table.Column<string>(maxLength: 200, nullable: true),
                    PRD_SPC = table.Column<string>(maxLength: 200, nullable: true),
                    INITNUM = table.Column<int>(nullable: true),
                    HEADINNUM = table.Column<int>(nullable: true),
                    INNUM = table.Column<int>(nullable: true),
                    OUTNUM = table.Column<int>(nullable: true),
                    RZHT_WASTE = table.Column<int>(nullable: true),
                    PRE_WASTE = table.Column<int>(nullable: true),
                    CUR_WASTE = table.Column<int>(nullable: true),
                    POST_WASTE = table.Column<int>(nullable: true),
                    TRAILWASTE = table.Column<int>(nullable: true),
                    OTHERWASTE = table.Column<int>(nullable: true),
                    B_TYPE = table.Column<byte>(nullable: true),
                    RN = table.Column<int>(nullable: true),
                    RJG_SUMINITNUM = table.Column<int>(nullable: true),
                    JJG_SUMINITNUM = table.Column<int>(nullable: true),
                    TZ_SUMINITNUM = table.Column<int>(nullable: true)
                },
                constraints: table =>
                {
                });

            migrationBuilder.CreateTable(
                name: "TB_INITWIP",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    INPUTDATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    DEP_NO = table.Column<string>(maxLength: 200, nullable: true),
                    DEP_NAME = table.Column<string>(maxLength: 200, nullable: true),
                    PRD_NO = table.Column<string>(maxLength: 200, nullable: true),
                    PRD_NAME = table.Column<string>(maxLength: 200, nullable: true),
                    PRD_SNM = table.Column<string>(maxLength: 200, nullable: true),
                    PRD_SPC = table.Column<string>(maxLength: 200, nullable: true),
                    PRODUCESTATUS = table.Column<string>(maxLength: 200, nullable: true),
                    INITNUM = table.Column<int>(nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TB_INITWIP", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "TB_JOBBOOKING",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    INPUTDATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    BAN = table.Column<string>(unicode: false, fixedLength: true, maxLength: 20, nullable: true),
                    BANGROUP = table.Column<string>(unicode: false, fixedLength: true, maxLength: 20, nullable: true),
                    EQUIPMENTCODE = table.Column<string>(maxLength: 200, nullable: true),
                    EQUIPMENTNAME = table.Column<string>(maxLength: 200, nullable: true),
                    PRODUCTCODE = table.Column<string>(maxLength: 200, nullable: true),
                    PRODUCTNAME = table.Column<string>(maxLength: 200, nullable: true),
                    MOULD = table.Column<string>(maxLength: 200, nullable: true),
                    DIECASTNUMBER = table.Column<int>(nullable: true),
                    WASTENUMBER = table.Column<int>(nullable: true),
                    QUALIFIEDNUMBER = table.Column<int>(nullable: true),
                    NOQUALIFIEDNUMBER = table.Column<int>(nullable: true),
                    UPNUMBER = table.Column<int>(nullable: true),
                    DOWNNUMBER = table.Column<int>(nullable: true),
                    TOTALNUMBER = table.Column<int>(nullable: true),
                    DATASOURCE = table.Column<int>(nullable: true),
                    CREATOR = table.Column<string>(maxLength: 200, nullable: true),
                    CREATEDATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    MODIFYUSER = table.Column<string>(maxLength: 200, nullable: true),
                    MODIFYDATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    WORKSHOPNO = table.Column<string>(maxLength: 200, nullable: true),
                    WORKSHOP = table.Column<string>(maxLength: 200, nullable: true),
                    ZCNO = table.Column<string>(maxLength: 200, nullable: true),
                    ZCNAME = table.Column<string>(maxLength: 200, nullable: true),
                    BAN_NO = table.Column<string>(unicode: false, fixedLength: true, maxLength: 20, nullable: true),
                    SPEC = table.Column<string>(maxLength: 200, nullable: true),
                    PRODUCESTATUS = table.Column<string>(maxLength: 200, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TB_JOBBOOKING", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "TB_OEE_CQ",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    STAT_DATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    BAN_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    SEB_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ITEM_1 = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    ITEM_2 = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    ITEM_3 = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    ITEM_4 = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    ITEM_5 = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    TOTALTIME = table.Column<long>(nullable: true),
                    LOSSTIME = table.Column<long>(nullable: true),
                    VALUE = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    OEE = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    CREATETIME = table.Column<DateTime>(type: "datetime", nullable: true),
                    JXNAME = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    ITEM_6 = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    ITEM_7 = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    ITEM_8 = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    HANDLETYPE = table.Column<byte>(nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TB_OEE_CQ", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "TB_PAINTENTRY",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    INPUTDATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    BAN = table.Column<string>(unicode: false, fixedLength: true, maxLength: 20, nullable: true),
                    BANGROUP = table.Column<string>(unicode: false, fixedLength: true, maxLength: 20, nullable: true),
                    WORKSHOP = table.Column<string>(maxLength: 200, nullable: true),
                    PRODUCTCODE = table.Column<string>(maxLength: 200, nullable: true),
                    PRODUCTNAME = table.Column<string>(maxLength: 200, nullable: true),
                    PRODUCTSPEC = table.Column<string>(maxLength: 200, nullable: true),
                    PRODUCTSTATUS = table.Column<string>(maxLength: 200, nullable: true),
                    ENTRYNUMBER = table.Column<int>(nullable: true),
                    WORKSHOPNO = table.Column<string>(maxLength: 200, nullable: true),
                    BAN_NO = table.Column<string>(maxLength: 200, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TB_PAINTENTRY", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "TB_PERF_TIMESERVICELOG",
                columns: table => new
                {
                    BAN_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    STARTDATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    ENDDATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    CREATETIME = table.Column<DateTime>(type: "datetime", nullable: true)
                },
                constraints: table =>
                {
                });

            migrationBuilder.CreateTable(
                name: "TB_QUOTA",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    SEB_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    BAN_NO = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    SYS_DATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    QUOTA_NAME = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    NUMERATOR = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    DENOMINATOR = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    RATE = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    SEB_TYPE = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    BIL_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    MID = table.Column<int>(nullable: true),
                    THEORYCOUNT = table.Column<decimal>(type: "numeric(18, 0)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TB_QUOTA", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "TB_RATE",
                columns: table => new
                {
                    ID = table.Column<long>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    SEB_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    BAN_NO = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    SYS_DATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    RATE = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    TYPE = table.Column<string>(unicode: false, maxLength: 20, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TB_RATE", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "TB_RB_HZ",
                columns: table => new
                {
                    INPUTDATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    PRD_NO = table.Column<string>(maxLength: 200, nullable: true),
                    PRD_NAME = table.Column<string>(maxLength: 200, nullable: true),
                    PRD_SNM = table.Column<string>(maxLength: 200, nullable: true),
                    PRD_SPC = table.Column<string>(maxLength: 200, nullable: true),
                    INITNUM = table.Column<int>(nullable: true),
                    INNUM = table.Column<int>(nullable: true),
                    OUTNUM = table.Column<int>(nullable: true),
                    PRE_WASTE = table.Column<int>(nullable: true),
                    CUR_WASTE = table.Column<int>(nullable: true),
                    POST_WASTE = table.Column<int>(nullable: true),
                    TRAILWASTE = table.Column<int>(nullable: true),
                    OTHERWASTE = table.Column<int>(nullable: true),
                    RN = table.Column<int>(nullable: true),
                    HEADINNUM = table.Column<int>(nullable: true),
                    RZHT_WASTE = table.Column<int>(nullable: true)
                },
                constraints: table =>
                {
                });

            migrationBuilder.CreateTable(
                name: "TB_RB_MX",
                columns: table => new
                {
                    INPUTDATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    PRD_NO = table.Column<string>(maxLength: 200, nullable: true),
                    PRD_NAME = table.Column<string>(maxLength: 200, nullable: true),
                    PRD_SNM = table.Column<string>(maxLength: 200, nullable: true),
                    PRD_SPC = table.Column<string>(maxLength: 200, nullable: true),
                    INITNUM = table.Column<int>(nullable: true),
                    INNUM = table.Column<int>(nullable: true),
                    OUTNUM = table.Column<int>(nullable: true),
                    PRE_WASTE = table.Column<int>(nullable: true),
                    CUR_WASTE = table.Column<int>(nullable: true),
                    POST_WASTE = table.Column<int>(nullable: true),
                    TRAILWASTE = table.Column<int>(nullable: true),
                    OTHERWASTE = table.Column<int>(nullable: true),
                    HEADINNUM = table.Column<int>(nullable: true),
                    RZHT_WASTE = table.Column<int>(nullable: true)
                },
                constraints: table =>
                {
                });

            migrationBuilder.CreateTable(
                name: "TB_RB_MX_MONTH",
                columns: table => new
                {
                    INPUTDATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    PRD_NO = table.Column<string>(maxLength: 200, nullable: true),
                    PRD_NAME = table.Column<string>(maxLength: 200, nullable: true),
                    PRD_SNM = table.Column<string>(maxLength: 200, nullable: true),
                    PRD_SPC = table.Column<string>(maxLength: 200, nullable: true),
                    INITNUM = table.Column<int>(nullable: true),
                    INNUM = table.Column<int>(nullable: true),
                    OUTNUM = table.Column<int>(nullable: true),
                    PRE_WASTE = table.Column<int>(nullable: true),
                    CUR_WASTE = table.Column<int>(nullable: true),
                    POST_WASTE = table.Column<int>(nullable: true),
                    TRAILWASTE = table.Column<int>(nullable: true),
                    OTHERWASTE = table.Column<int>(nullable: true),
                    RN = table.Column<int>(nullable: true),
                    HEADINNUM = table.Column<int>(nullable: true),
                    RZHT_WASTE = table.Column<int>(nullable: true)
                },
                constraints: table =>
                {
                });

            migrationBuilder.CreateTable(
                name: "TB_REWORKDAYHZ",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    INPUTDATE = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    PRD_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    PRD_NAME = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    PRD_SPC = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    RESPONSHOP = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    DEFECTTYPE = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    LJREWORKNUMBER = table.Column<int>(nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TB_REWORKDAYHZ", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "TB_SBRECORD_CAMERA_MAP",
                columns: table => new
                {
                    ID = table.Column<long>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    SBRECORD_ID = table.Column<long>(nullable: true),
                    CAMERA_QRCODE = table.Column<long>(nullable: true),
                    CAMERA_SJ = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    CAMERA_SBBH = table.Column<string>(unicode: false, maxLength: 50, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TB_SBRECORD_CAMERA_MAP", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "TB_SZB_DAYSTATISTICLOG",
                columns: table => new
                {
                    LOGID = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    PHASE = table.Column<string>(maxLength: 200, nullable: true),
                    EXECUTEBEGIN = table.Column<DateTime>(type: "datetime", nullable: true),
                    EXECUTEEND = table.Column<DateTime>(type: "datetime", nullable: true)
                },
                constraints: table =>
                {
                });

            migrationBuilder.CreateTable(
                name: "TB_SZBHZ_CQ",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    STAT_DATE = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    BAN_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    SEB_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    CSBH = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    STARTVALUE = table.Column<int>(nullable: true),
                    ENDVALUE = table.Column<int>(nullable: true),
                    BEYONDCOUNT = table.Column<int>(nullable: true),
                    VALUE = table.Column<int>(nullable: true),
                    HANDLETYPE = table.Column<int>(nullable: true),
                    CREATETIME = table.Column<DateTime>(type: "datetime", nullable: true),
                    PRD_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    PRD_TIME = table.Column<int>(nullable: true),
                    STA_TIME = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    END_TIME = table.Column<string>(unicode: false, maxLength: 50, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TB_SZBHZ_CQ", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "TB_SZDATA",
                columns: table => new
                {
                    STAT_DATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    BAN_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    CJBH = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    CJMC = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    SEB_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    SEB_NAME = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    PRD_NO = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    PRD_NAME = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    XJS = table.Column<int>(nullable: true),
                    SJS = table.Column<int>(nullable: true),
                    ZGS = table.Column<int>(nullable: true),
                    ZJZS = table.Column<int>(nullable: true),
                    XJFPS = table.Column<int>(nullable: true),
                    HGS = table.Column<int>(nullable: true)
                },
                constraints: table =>
                {
                });

            migrationBuilder.CreateTable(
                name: "TB_TRANSFERINOUT",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    INPUTDATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    DATATYPE = table.Column<string>(maxLength: 200, nullable: true),
                    PRODUCESTATUS = table.Column<string>(maxLength: 200, nullable: true),
                    DEP_NO = table.Column<string>(maxLength: 200, nullable: true),
                    DEP_NAME = table.Column<string>(maxLength: 200, nullable: true),
                    PRD_NO = table.Column<string>(maxLength: 200, nullable: true),
                    PRD_NAME = table.Column<string>(maxLength: 200, nullable: true),
                    PRD_SNM = table.Column<string>(maxLength: 200, nullable: true),
                    PRD_SPC = table.Column<string>(maxLength: 200, nullable: true),
                    DATASOURCE = table.Column<string>(maxLength: 200, nullable: true),
                    NUM = table.Column<int>(nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TB_TRANSFERINOUT", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "TB_TZRB_HZ",
                columns: table => new
                {
                    INPUTDATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    PRD_NO = table.Column<string>(maxLength: 200, nullable: true),
                    PRD_NAME = table.Column<string>(maxLength: 200, nullable: true),
                    PRD_SNM = table.Column<string>(maxLength: 200, nullable: true),
                    PRD_SPC = table.Column<string>(maxLength: 200, nullable: true),
                    INITNUM = table.Column<int>(nullable: true),
                    INNUM = table.Column<int>(nullable: true),
                    OUTNUM = table.Column<int>(nullable: true),
                    PRE_WASTE = table.Column<int>(nullable: true),
                    CUR_WASTE = table.Column<int>(nullable: true),
                    TRAILWASTE = table.Column<int>(nullable: true),
                    OTHERWASTE = table.Column<int>(nullable: true),
                    RN = table.Column<int>(nullable: true)
                },
                constraints: table =>
                {
                });

            migrationBuilder.CreateTable(
                name: "TB_TZRB_MX",
                columns: table => new
                {
                    INPUTDATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    PRD_NO = table.Column<string>(maxLength: 200, nullable: true),
                    PRD_NAME = table.Column<string>(maxLength: 200, nullable: true),
                    PRD_SNM = table.Column<string>(maxLength: 200, nullable: true),
                    PRD_SPC = table.Column<string>(maxLength: 200, nullable: true),
                    INITNUM = table.Column<int>(nullable: true),
                    INNUM = table.Column<int>(nullable: true),
                    OUTNUM = table.Column<int>(nullable: true),
                    PRE_WASTE = table.Column<int>(nullable: true),
                    CUR_WASTE = table.Column<int>(nullable: true),
                    TRAILWASTE = table.Column<int>(nullable: true),
                    OTHERWASTE = table.Column<int>(nullable: true)
                },
                constraints: table =>
                {
                });

            migrationBuilder.CreateTable(
                name: "TB_TZRB_MX_MONTH",
                columns: table => new
                {
                    INPUTDATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    PRD_NO = table.Column<string>(maxLength: 200, nullable: true),
                    PRD_NAME = table.Column<string>(maxLength: 200, nullable: true),
                    PRD_SNM = table.Column<string>(maxLength: 200, nullable: true),
                    PRD_SPC = table.Column<string>(maxLength: 200, nullable: true),
                    INITNUM = table.Column<int>(nullable: true),
                    INNUM = table.Column<int>(nullable: true),
                    OUTNUM = table.Column<int>(nullable: true),
                    PRE_WASTE = table.Column<int>(nullable: true),
                    CUR_WASTE = table.Column<int>(nullable: true),
                    TRAILWASTE = table.Column<int>(nullable: true),
                    OTHERWASTE = table.Column<int>(nullable: true),
                    RN = table.Column<int>(nullable: true)
                },
                constraints: table =>
                {
                });

            migrationBuilder.CreateTable(
                name: "TB_WASTE",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    INPUTDATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    BAN = table.Column<string>(unicode: false, fixedLength: true, maxLength: 20, nullable: true),
                    BANGROUP = table.Column<string>(unicode: false, fixedLength: true, maxLength: 20, nullable: true),
                    DELIVERYSHOP = table.Column<string>(maxLength: 200, nullable: true),
                    PRODUCTCODE = table.Column<string>(maxLength: 200, nullable: true),
                    PRODUCTNAME = table.Column<string>(maxLength: 200, nullable: true),
                    PRODUCTSPEC = table.Column<string>(maxLength: 200, nullable: true),
                    PRODUCTSTATUS = table.Column<string>(maxLength: 200, nullable: true),
                    WASTENUMBER = table.Column<int>(nullable: true),
                    DEFECTTYPE = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    RESPONSHOP = table.Column<string>(maxLength: 200, nullable: true),
                    RESPONPROCESS = table.Column<string>(maxLength: 200, nullable: true),
                    RESPONEQUIPMENT = table.Column<string>(maxLength: 200, nullable: true),
                    CREATOR = table.Column<string>(maxLength: 200, nullable: true),
                    CREATEDATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    MODIFYUSER = table.Column<string>(maxLength: 200, nullable: true),
                    MODIFYDATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    REWORKNUMBER = table.Column<int>(nullable: true),
                    TYPE = table.Column<string>(unicode: false, fixedLength: true, maxLength: 10, nullable: true),
                    DELIVERYSHOPNO = table.Column<string>(maxLength: 200, nullable: true),
                    RESPONSHOPNO = table.Column<string>(maxLength: 200, nullable: true),
                    RESPONPROCESSNO = table.Column<string>(maxLength: 200, nullable: true),
                    RESPONEQUIPMENTNO = table.Column<string>(maxLength: 200, nullable: true),
                    BAN_NO = table.Column<string>(maxLength: 200, nullable: true),
                    LIABLEMANNO = table.Column<string>(maxLength: 200, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TB_WASTE", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "TB_WASTETIME",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    INPUTDATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    BAN = table.Column<string>(unicode: false, fixedLength: true, maxLength: 20, nullable: true),
                    BANGROUP = table.Column<string>(unicode: false, fixedLength: true, maxLength: 20, nullable: true),
                    WORKSHOP = table.Column<string>(maxLength: 200, nullable: true),
                    PROCESS = table.Column<string>(maxLength: 200, nullable: true),
                    PRODUCTCODE = table.Column<string>(maxLength: 200, nullable: true),
                    PRODUCTNAME = table.Column<string>(maxLength: 200, nullable: true),
                    EQUIPMENT = table.Column<string>(maxLength: 200, nullable: true),
                    PLANSTOP = table.Column<int>(nullable: true),
                    SWITCHSTOP = table.Column<int>(nullable: true),
                    FAULTSTOP = table.Column<int>(nullable: true),
                    OTHERSTOP = table.Column<int>(nullable: true),
                    CREATOR = table.Column<string>(maxLength: 200, nullable: true),
                    CREATEDATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    MODIFYUSER = table.Column<string>(maxLength: 200, nullable: true),
                    MODIFYDATE = table.Column<DateTime>(type: "datetime", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TB_WASTETIME", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "TB_XRAY",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    INPUTDATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    BAN = table.Column<string>(unicode: false, fixedLength: true, maxLength: 20, nullable: true),
                    BANGROUP = table.Column<string>(unicode: false, fixedLength: true, maxLength: 20, nullable: true),
                    EQUIPMENT = table.Column<string>(maxLength: 200, nullable: true),
                    PRODUCTCODE = table.Column<string>(maxLength: 200, nullable: true),
                    PRODUCTNAME = table.Column<string>(maxLength: 200, nullable: true),
                    MOULD = table.Column<string>(maxLength: 200, nullable: true),
                    PRODUCTSPEC = table.Column<string>(maxLength: 200, nullable: true),
                    QUALIFIEDNUMBER = table.Column<int>(nullable: true),
                    NOQUALIFIEDNUMBER = table.Column<int>(nullable: true),
                    CHECKTOTAL = table.Column<int>(nullable: true),
                    PRODUCESTATUS = table.Column<string>(unicode: false, fixedLength: true, maxLength: 20, nullable: true),
                    CREATOR = table.Column<string>(maxLength: 200, nullable: true),
                    CREATEDATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    MODIFYUSER = table.Column<string>(maxLength: 200, nullable: true),
                    MODIFYDATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    EQUIPMENTNO = table.Column<string>(maxLength: 200, nullable: true),
                    MIDHUBDEFECT = table.Column<int>(nullable: true),
                    SPOKEDEFECT = table.Column<int>(nullable: true),
                    RIMDEFECT = table.Column<int>(nullable: true),
                    BAN_NO = table.Column<string>(maxLength: 200, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TB_XRAY", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "TB_XRAY_ZB",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    MID = table.Column<int>(nullable: true),
                    DEFECTTYPE = table.Column<string>(maxLength: 200, nullable: true),
                    DEFECTNUMBER = table.Column<int>(nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TB_XRAY_ZB", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "TB_XRAYHGL",
                columns: table => new
                {
                    DAYNO = table.Column<string>(maxLength: 100, nullable: true),
                    ITEM = table.Column<string>(maxLength: 100, nullable: true),
                    VALUE = table.Column<string>(maxLength: 100, nullable: true)
                },
                constraints: table =>
                {
                });

            migrationBuilder.CreateTable(
                name: "TBL_BARCODE",
                columns: table => new
                {
                    RN = table.Column<int>(nullable: true),
                    BARCODE = table.Column<string>(maxLength: 100, nullable: true)
                },
                constraints: table =>
                {
                });

            migrationBuilder.CreateTable(
                name: "TBL_PROCESSINFO",
                columns: table => new
                {
                    BARCODE = table.Column<string>(maxLength: 100, nullable: true),
                    PROCESS = table.Column<string>(maxLength: 100, nullable: true),
                    EQUIPMENT = table.Column<string>(maxLength: 100, nullable: true),
                    PERSON = table.Column<string>(maxLength: 100, nullable: true),
                    SHIFT = table.Column<string>(maxLength: 100, nullable: true),
                    SFHG = table.Column<string>(maxLength: 100, nullable: true),
                    DEPARTMENT = table.Column<string>(maxLength: 100, nullable: true),
                    STA_TIME = table.Column<string>(maxLength: 100, nullable: true),
                    PRD_NO = table.Column<string>(maxLength: 100, nullable: true),
                    ZC_NO = table.Column<string>(maxLength: 100, nullable: true),
                    SEB_NO = table.Column<string>(maxLength: 100, nullable: true),
                    SAL_NO = table.Column<string>(maxLength: 100, nullable: true),
                    DEP = table.Column<string>(maxLength: 100, nullable: true),
                    ITM = table.Column<int>(nullable: true)
                },
                constraints: table =>
                {
                });

            migrationBuilder.CreateTable(
                name: "TERMINAL_ALLOT",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    TM_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    TM_NAME = table.Column<string>(unicode: false, maxLength: 100, nullable: false),
                    SEB_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    SEB_NAME = table.Column<string>(unicode: false, maxLength: 100, nullable: false),
                    Rem = table.Column<string>(unicode: false, maxLength: 500, nullable: true),
                    Usr = table.Column<string>(unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')"),
                    UsrName = table.Column<string>(unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')"),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: false, defaultValueSql: "(getdate())"),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 50, nullable: true, defaultValueSql: "('')"),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 50, nullable: true, defaultValueSql: "('')"),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ChkMan = table.Column<string>(unicode: false, maxLength: 50, nullable: true, defaultValueSql: "('')"),
                    ChkManName = table.Column<string>(unicode: false, maxLength: 50, nullable: true, defaultValueSql: "('')"),
                    ChkDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ChkMob = table.Column<string>(unicode: false, maxLength: 100, nullable: true, defaultValueSql: "('')"),
                    IsPrint = table.Column<bool>(nullable: true, defaultValueSql: "((0))")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TERMINAL_ALLOT", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "TERMINAL_SETUP",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    NO = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    NAME = table.Column<string>(unicode: false, maxLength: 100, nullable: false),
                    LOCAL = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    TMType = table.Column<string>(unicode: false, maxLength: 1, nullable: false),
                    IPAdd = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    Rem = table.Column<string>(unicode: false, maxLength: 500, nullable: true),
                    Usr = table.Column<string>(unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')"),
                    UsrName = table.Column<string>(unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')"),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: false, defaultValueSql: "(getdate())"),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 50, nullable: true, defaultValueSql: "('')"),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 50, nullable: true, defaultValueSql: "('')"),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ChkMan = table.Column<string>(unicode: false, maxLength: 50, nullable: true, defaultValueSql: "('')"),
                    ChkManName = table.Column<string>(unicode: false, maxLength: 50, nullable: true, defaultValueSql: "('')"),
                    ChkDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ChkMob = table.Column<string>(unicode: false, maxLength: 100, nullable: true, defaultValueSql: "('')"),
                    IsPrint = table.Column<bool>(nullable: true, defaultValueSql: "((0))")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TERMINAL_SETUP", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "TESTI",
                columns: table => new
                {
                    ID = table.Column<Guid>(nullable: true, defaultValueSql: "(newid())"),
                    NO = table.Column<string>(unicode: false, maxLength: 50, nullable: true)
                },
                constraints: table =>
                {
                });

            migrationBuilder.CreateTable(
                name: "TF_BOM2",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    MID = table.Column<int>(nullable: false),
                    BOM_NO = table.Column<string>(unicode: false, maxLength: 38, nullable: false),
                    ITM = table.Column<int>(nullable: false),
                    PRD_NO = table.Column<string>(unicode: false, maxLength: 30, nullable: true),
                    PRD_NAME = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    PRD_MARK = table.Column<string>(unicode: false, maxLength: 40, nullable: true),
                    WH = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    UNIT = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    QTY = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY1 = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_BAS = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    PRE_ITM = table.Column<int>(nullable: true),
                    UP_STD = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CST_MAKE = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CST_PRD = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CST_OUT = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CST = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    REM = table.Column<string>(unicode: false, maxLength: 200, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TF_BOM2", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "TF_MP1",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    MID = table.Column<int>(nullable: false),
                    MP_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    ITM = table.Column<int>(nullable: false),
                    PRD_NO = table.Column<string>(unicode: false, maxLength: 30, nullable: true),
                    PRD_NAME = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    PRD_MARK = table.Column<string>(unicode: false, maxLength: 40, nullable: true, defaultValueSql: "(space((0)))"),
                    WH = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    UNIT = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    UP = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_MAX_SO = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_SO = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_NON = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    BAT_NO = table.Column<string>(unicode: false, maxLength: 40, nullable: true),
                    SO_NO = table.Column<string>(unicode: false, maxLength: 25, nullable: true),
                    Rem = table.Column<string>(unicode: false, maxLength: 400, nullable: true),
                    EST_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    QTY_MIN = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_ON_WAY = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_ON_PRC = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_ON_RSV = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_ON_ODR = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_LRN = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_BRW = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CPY_SW = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    EST_ITM = table.Column<int>(nullable: true),
                    NUMBER = table.Column<string>(unicode: false, maxLength: 8, nullable: true),
                    STA_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    ID_NO = table.Column<string>(unicode: false, maxLength: 38, nullable: true),
                    PO_YES = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    EST_ITMSTR = table.Column<string>(unicode: false, maxLength: 200, nullable: true),
                    QTY_STD = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_LOST = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    BIL_ID = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    PRD_NO1 = table.Column<string>(unicode: false, maxLength: 30, nullable: true),
                    PRD_MARK1 = table.Column<string>(unicode: false, maxLength: 40, nullable: true, defaultValueSql: "(space((0)))"),
                    ECN_ID = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    BOM_NO = table.Column<string>(unicode: false, maxLength: 38, nullable: true),
                    OS_ITM = table.Column<int>(nullable: true),
                    QTY_PO = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CUS_OS_NO = table.Column<string>(unicode: false, maxLength: 30, nullable: true),
                    CHG_RTO = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    ZC_PRD = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    QTY_SQ = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    LLC = table.Column<int>(nullable: true),
                    QTY_CTL = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    DRC = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    CNTT_NO = table.Column<string>(unicode: false, maxLength: 40, nullable: true),
                    CHG_ID = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    PRD_NO_CHG = table.Column<string>(unicode: false, maxLength: 255, nullable: true),
                    BOM_NO_P = table.Column<string>(unicode: false, maxLength: 38, nullable: true),
                    QTY_SW = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_Q3 = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_WX = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_Q2_YL = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_WS_KC = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CHG_RTO_STR = table.Column<string>(unicode: false, maxLength: 200, nullable: true),
                    QTY_ADD = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    MRP_NO = table.Column<string>(unicode: false, maxLength: 30, nullable: true),
                    QTY_SQC = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_SQR = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_JH = table.Column<decimal>(type: "numeric(18, 0)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TF_MP1", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "TF_MP2",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    MID = table.Column<int>(nullable: false),
                    MP_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    ITM = table.Column<int>(nullable: false),
                    PRD_NO = table.Column<string>(unicode: false, maxLength: 30, nullable: true),
                    PRD_NAME = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    PRD_MARK = table.Column<string>(unicode: false, maxLength: 40, nullable: true, defaultValueSql: "(space((0)))"),
                    WH = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    CUS_NO = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    UNIT = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    QTY = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY1 = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    UP_PO = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    UP_SO = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    AMTN_PO = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    AMTN_SO = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    SO_NO = table.Column<string>(unicode: false, maxLength: 25, nullable: true),
                    PO_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    BAT_NO = table.Column<string>(unicode: false, maxLength: 40, nullable: true),
                    EST_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    Rem = table.Column<string>(unicode: false, maxLength: 400, nullable: true),
                    QTY_AD = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    STA_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    END_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    QTY_PO = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CPY_SW = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    AMT_PO = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    DIS_CNT = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CUR_ID = table.Column<string>(unicode: false, maxLength: 4, nullable: true),
                    PO_ID = table.Column<int>(nullable: true),
                    SAL_NO = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    EST_ITM = table.Column<int>(nullable: true),
                    QTY_STD = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_LOST = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    UP_QTY1 = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CUS_OS_NO = table.Column<string>(unicode: false, maxLength: 30, nullable: true),
                    PRE_ITM = table.Column<int>(nullable: true),
                    SO_ID = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    QTY_SO = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_NON = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_MAX_SO = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    DZ_ID = table.Column<bool>(nullable: true),
                    CNTT_NO = table.Column<string>(unicode: false, maxLength: 40, nullable: true),
                    QTY_AL = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    PRD_NO_CHG = table.Column<string>(unicode: false, maxLength: 255, nullable: true),
                    QTY1_AL = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    FREE_ID = table.Column<bool>(nullable: true),
                    SUP_PRD_MARK = table.Column<string>(unicode: false, maxLength: 40, nullable: true),
                    CHG_RTO = table.Column<string>(unicode: false, maxLength: 200, nullable: true),
                    MRP_NOS = table.Column<string>(unicode: false, maxLength: 800, nullable: true),
                    KND_CL = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    GROUP_BY = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    ADD_ID = table.Column<bool>(nullable: true),
                    SUP_PRD_NO = table.Column<string>(unicode: false, maxLength: 40, nullable: true),
                    TFlag = table.Column<bool>(nullable: true, defaultValueSql: "((0))")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TF_MP2", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "TF_MP3",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    MID = table.Column<int>(nullable: false),
                    MP_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    ITM = table.Column<int>(nullable: false),
                    PRD_NO = table.Column<string>(unicode: false, maxLength: 30, nullable: true),
                    PRD_NAME = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    PRD_MARK = table.Column<string>(unicode: false, maxLength: 40, nullable: true, defaultValueSql: "(space((0)))"),
                    WH = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    UNIT = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    QTY = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY1 = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    UP = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CST = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    UP_SO = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    AMTN_SO = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    SO_NO = table.Column<string>(unicode: false, maxLength: 25, nullable: true),
                    EST_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    BAT_NO = table.Column<string>(unicode: false, maxLength: 40, nullable: true),
                    REM = table.Column<string>(unicode: false, maxLength: 400, nullable: true),
                    MO_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    QTY_AD = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_MO = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    STA_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    END_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    DEP = table.Column<string>(unicode: false, maxLength: 8, nullable: true),
                    MO_NO_ADD = table.Column<string>(unicode: false, maxLength: 38, nullable: true),
                    CPY_SW = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    CUS_NO = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    TW_ID = table.Column<bool>(nullable: true),
                    EST_ITM = table.Column<int>(nullable: true),
                    CUR_ID = table.Column<string>(unicode: false, maxLength: 4, nullable: true),
                    AMT_TW = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    UP_TW = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    ID_NO = table.Column<string>(unicode: false, maxLength: 38, nullable: true),
                    OS_ITM = table.Column<int>(nullable: true),
                    CUS_OS_NO = table.Column<string>(unicode: false, maxLength: 30, nullable: true),
                    SO_ID = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    CF_ID = table.Column<bool>(nullable: true),
                    ML_BY_MM = table.Column<bool>(nullable: true),
                    DZ_ID = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    LLC = table.Column<int>(nullable: true),
                    DRC = table.Column<bool>(nullable: true),
                    BOM_NO = table.Column<string>(unicode: false, maxLength: 38, nullable: true),
                    CNTT_NO = table.Column<string>(unicode: false, maxLength: 40, nullable: true),
                    PRE_ITM = table.Column<int>(nullable: true),
                    QTY_AM = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    UP_QTY1 = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_STD = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY1_AM = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    BIL_TYPE = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    DEC_ITM = table.Column<int>(nullable: true),
                    HB_ITM = table.Column<int>(nullable: true),
                    DG_MO_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    HB_ID = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    TFlag = table.Column<bool>(nullable: true, defaultValueSql: "((0))")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TF_MP3", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "TF_SBYCBG1",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    MID = table.Column<int>(nullable: false),
                    YC_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    ITM = table.Column<int>(nullable: false),
                    YC_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    GJ_REA = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    REM = table.Column<string>(type: "text", nullable: true),
                    PRE_ITM = table.Column<int>(nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TF_SBYCBG1", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "TF_VHID",
                columns: table => new
                {
                    BIL_ID = table.Column<string>(unicode: false, maxLength: 2, nullable: false),
                    VOH_ID = table.Column<string>(unicode: false, maxLength: 2, nullable: false),
                    ITM = table.Column<int>(nullable: false),
                    DC = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    ACC_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    DSR = table.Column<string>(unicode: false, maxLength: 40, nullable: true),
                    ACC_EXP = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    REM_ID = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    GET_HEADREM = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    REM_FROM = table.Column<string>(unicode: false, maxLength: 60, nullable: true),
                    PRE_ITM = table.Column<int>(nullable: true),
                    REM_SEL = table.Column<string>(unicode: false, maxLength: 1, nullable: true)
                },
                constraints: table =>
                {
                });

            migrationBuilder.CreateTable(
                name: "TI_TYPE",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    No = table.Column<string>(unicode: false, maxLength: 4, nullable: false),
                    Name = table.Column<string>(unicode: false, maxLength: 100, nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TI_TYPE", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "TMP_DPH_HGL",
                columns: table => new
                {
                    SEB_NO = table.Column<string>(maxLength: 100, nullable: true),
                    RQ = table.Column<string>(maxLength: 100, nullable: true),
                    BAN_NO = table.Column<string>(maxLength: 100, nullable: true),
                    NUMERATOR = table.Column<int>(nullable: true),
                    DENOMINATOR = table.Column<int>(nullable: true),
                    RATE = table.Column<int>(nullable: true)
                },
                constraints: table =>
                {
                });

            migrationBuilder.CreateTable(
                name: "TMP_HJ_HGL",
                columns: table => new
                {
                    SEB_NO = table.Column<string>(maxLength: 100, nullable: true),
                    RQ = table.Column<string>(maxLength: 100, nullable: true),
                    BAN_NO = table.Column<string>(maxLength: 100, nullable: true),
                    NUMERATOR = table.Column<int>(nullable: true),
                    DENOMINATOR = table.Column<int>(nullable: true),
                    RATE = table.Column<int>(nullable: true)
                },
                constraints: table =>
                {
                });

            migrationBuilder.CreateTable(
                name: "TMP_HUANMO",
                columns: table => new
                {
                    ID = table.Column<string>(maxLength: 40, nullable: true),
                    STA_TIME = table.Column<string>(maxLength: 40, nullable: true),
                    END_TIME = table.Column<string>(maxLength: 40, nullable: true),
                    PRD_NO = table.Column<string>(maxLength: 200, nullable: true),
                    RN = table.Column<int>(nullable: true),
                    HM_DATE = table.Column<string>(maxLength: 40, nullable: true)
                },
                constraints: table =>
                {
                });

            migrationBuilder.CreateTable(
                name: "TMP_JJG_HGL",
                columns: table => new
                {
                    SEB_NO = table.Column<string>(maxLength: 100, nullable: true),
                    RQ = table.Column<string>(maxLength: 100, nullable: true),
                    BAN_NO = table.Column<string>(maxLength: 100, nullable: true),
                    NUMERATOR = table.Column<int>(nullable: true),
                    DENOMINATOR = table.Column<int>(nullable: true),
                    RATE = table.Column<int>(nullable: true)
                },
                constraints: table =>
                {
                });

            migrationBuilder.CreateTable(
                name: "TMP_MATERIALS",
                columns: table => new
                {
                    RN = table.Column<int>(nullable: true),
                    PRD_NO = table.Column<string>(maxLength: 100, nullable: true),
                    PRD_NAME = table.Column<string>(maxLength: 100, nullable: true),
                    UNIT = table.Column<string>(maxLength: 100, nullable: true)
                },
                constraints: table =>
                {
                });

            migrationBuilder.CreateTable(
                name: "TMP_SZB",
                columns: table => new
                {
                    RQ = table.Column<string>(maxLength: 40, nullable: true),
                    MINQTY = table.Column<int>(nullable: true),
                    MAXQTY = table.Column<int>(nullable: true),
                    QTY = table.Column<int>(nullable: true),
                    SETFLAG = table.Column<int>(nullable: true),
                    BAN = table.Column<string>(maxLength: 40, nullable: true)
                },
                constraints: table =>
                {
                });

            migrationBuilder.CreateTable(
                name: "TMP_SZBDATA",
                columns: table => new
                {
                    SJ = table.Column<string>(unicode: false, fixedLength: true, maxLength: 19, nullable: true),
                    SBBH = table.Column<string>(unicode: false, fixedLength: true, maxLength: 50, nullable: true),
                    CSBH = table.Column<string>(unicode: false, fixedLength: true, maxLength: 50, nullable: true),
                    CSSZ = table.Column<string>(unicode: false, fixedLength: true, maxLength: 127, nullable: true),
                    CSZT = table.Column<byte>(nullable: true),
                    BAN_NO = table.Column<string>(unicode: false, maxLength: 4, nullable: true),
                    SYS_DATE = table.Column<string>(unicode: false, fixedLength: true, maxLength: 10, nullable: true)
                },
                constraints: table =>
                {
                });

            migrationBuilder.CreateTable(
                name: "TMP_TZZMXL",
                columns: table => new
                {
                    RQ = table.Column<string>(maxLength: 40, nullable: true),
                    SEB_NO = table.Column<string>(maxLength: 100, nullable: true),
                    GJSL = table.Column<int>(nullable: true),
                    ZGJSL = table.Column<int>(nullable: true)
                },
                constraints: table =>
                {
                });

            migrationBuilder.CreateTable(
                name: "TOMES_YPLACEBAR",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    BillCodeVch = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    RBillCodeVch = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    RBillTypeVch = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    MasterCodeVch = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    MasterNameVch = table.Column<string>(unicode: false, maxLength: 100, nullable: false),
                    PlaceBarVch = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    PlaceNameVch = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    ConIdVch = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    TrayCodeVch = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    BarNumDbl = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    BarCodeVch = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    LotNoVch = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    LotSelfNoVch = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    PlaceBarStatusVch = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    OperateDt = table.Column<DateTime>(type: "datetime", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TOMES_YPLACEBAR", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "Tool",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    TOOLNO = table.Column<string>(unicode: false, maxLength: 55, nullable: false),
                    TOOLNAME = table.Column<string>(unicode: false, maxLength: 55, nullable: false),
                    STRATDATE = table.Column<DateTime>(type: "datetime", nullable: false),
                    ENDDATE = table.Column<DateTime>(type: "datetime", nullable: false),
                    TOOLTYPE = table.Column<string>(unicode: false, maxLength: 55, nullable: false),
                    TOOLLIFE = table.Column<decimal>(type: "decimal(18, 2)", nullable: true),
                    ToolUseNum = table.Column<decimal>(type: "decimal(18, 2)", nullable: true),
                    USR = table.Column<string>(unicode: false, maxLength: 55, nullable: true),
                    InspectionUnit = table.Column<string>(unicode: false, maxLength: 55, nullable: true),
                    InspectionSpec = table.Column<string>(unicode: false, maxLength: 55, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_Tool", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "Tool_Prdt",
                columns: table => new
                {
                    id = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    PRDNO = table.Column<string>(unicode: false, maxLength: 55, nullable: false),
                    PRDNAME = table.Column<string>(unicode: false, maxLength: 55, nullable: true),
                    TOOLNO = table.Column<string>(unicode: false, maxLength: 55, nullable: false),
                    TOOLNAME = table.Column<string>(unicode: false, maxLength: 55, nullable: true),
                    ZCNO = table.Column<string>(unicode: false, maxLength: 55, nullable: false),
                    ZCNAME = table.Column<string>(unicode: false, maxLength: 55, nullable: true),
                    USR = table.Column<string>(unicode: false, maxLength: 55, nullable: true),
                    SYSDATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    IsDelete = table.Column<bool>(nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_Tool_Prdt", x => x.id);
                });

            migrationBuilder.CreateTable(
                name: "TRAY_BARCODEBINDING",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    BarcodeNO_CPX = table.Column<string>(unicode: false, maxLength: 200, nullable: false, defaultValueSql: "('')"),
                    BarcodeNO_LZX = table.Column<string>(unicode: false, maxLength: 200, nullable: false, defaultValueSql: "('')"),
                    Usr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    QTY = table.Column<decimal>(type: "decimal(18, 4)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TRAY_BARCODEBINDING", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "TRAY_BARCODEINFOS",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    MID = table.Column<int>(nullable: false),
                    BARCODE = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    MRP_BARCODE = table.Column<string>(unicode: false, maxLength: 100, nullable: false),
                    QTY_Bind = table.Column<decimal>(type: "decimal(18, 4)", nullable: true),
                    IsOut = table.Column<bool>(nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TRAY_BARCODEINFOS", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "TT",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    INPUTDATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    BAN = table.Column<string>(unicode: false, fixedLength: true, maxLength: 20, nullable: true),
                    BANGROUP = table.Column<string>(unicode: false, fixedLength: true, maxLength: 20, nullable: true),
                    DELIVERYSHOP = table.Column<string>(maxLength: 200, nullable: true),
                    PRODUCTCODE = table.Column<string>(maxLength: 200, nullable: true),
                    PRODUCTNAME = table.Column<string>(maxLength: 200, nullable: true),
                    PRODUCTSPEC = table.Column<string>(maxLength: 200, nullable: true),
                    PRODUCTSTATUS = table.Column<string>(maxLength: 200, nullable: true),
                    WASTENUMBER = table.Column<int>(nullable: true),
                    DEFECTTYPE = table.Column<string>(maxLength: 200, nullable: true),
                    RESPONSHOP = table.Column<string>(maxLength: 200, nullable: true),
                    RESPONPROCESS = table.Column<string>(maxLength: 200, nullable: true),
                    RESPONEQUIPMENT = table.Column<string>(maxLength: 200, nullable: true),
                    CREATOR = table.Column<string>(maxLength: 200, nullable: true),
                    CREATEDATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    MODIFYUSER = table.Column<string>(maxLength: 200, nullable: true),
                    MODIFYDATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    REWORKNUMBER = table.Column<int>(nullable: true),
                    TYPE = table.Column<string>(unicode: false, fixedLength: true, maxLength: 10, nullable: true),
                    DELIVERYSHOPNO = table.Column<string>(maxLength: 200, nullable: true),
                    RESPONSHOPNO = table.Column<string>(maxLength: 200, nullable: true),
                    RESPONPROCESSNO = table.Column<string>(maxLength: 200, nullable: true),
                    RESPONEQUIPMENTNO = table.Column<string>(maxLength: 200, nullable: true),
                    BAN_NO = table.Column<string>(maxLength: 200, nullable: true),
                    LIABLEMANNO = table.Column<string>(maxLength: 200, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TT", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "TT1",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    NAME = table.Column<string>(unicode: false, maxLength: 50, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TT1", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "TT2",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    NAME = table.Column<string>(unicode: false, maxLength: 50, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TT2", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "TypeUnqualified",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    HandlingSuggestion = table.Column<int>(nullable: false),
                    IsDelete = table.Column<bool>(nullable: true),
                    SIType = table.Column<int>(nullable: false),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: false),
                    UnqualifiedType = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    Usr = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    UsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    GenreateFormType = table.Column<string>(unicode: false, maxLength: 50, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TypeUnqualified", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "TZ_BARCODEINFOS",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    TZ_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    PRD_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    MO_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    ZC_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    SO_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    BARCODE = table.Column<string>(unicode: false, maxLength: 100, nullable: false),
                    Usr = table.Column<string>(unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')"),
                    UsrName = table.Column<string>(unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')"),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: false, defaultValueSql: "(getdate())"),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 50, nullable: true, defaultValueSql: "('')"),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 50, nullable: true, defaultValueSql: "('')"),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TZ_BARCODEINFOS", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "TZ_MOD",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    TZ_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    MOD_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TZ_MOD", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "TZ_SEB",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    TZ_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    SEB_NO = table.Column<string>(unicode: false, maxLength: 100, nullable: false),
                    MID = table.Column<int>(nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TZ_SEB", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "TZ_SPECTRUM_INFO",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    SEB_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    NO = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    TZ_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    TZ_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    VALUE = table.Column<decimal>(type: "numeric(18, 0)", nullable: false),
                    LOWSYBOL = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    NUM_MIN = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    UPSYBOL = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    NUM_MAX = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    BAT_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    SCOPE = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    OUTRNG = table.Column<bool>(nullable: true),
                    SYSDATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    ZC_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    QC_MODEL = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    TYPENO = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    IMPDATE = table.Column<DateTime>(type: "datetime", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TZ_SPECTRUM_INFO", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "TZSC_MAP",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    TZ_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    ZC_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    SEB_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    PA_NO = table.Column<string>(unicode: false, maxLength: 60, nullable: false),
                    PA_VALUE = table.Column<string>(unicode: false, maxLength: 60, nullable: true),
                    TZ_ID = table.Column<int>(nullable: false),
                    MAP_DATE = table.Column<DateTime>(type: "datetime", nullable: false),
                    PA_DATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    OPN_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    PA_NAME = table.Column<string>(unicode: false, maxLength: 100, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TZSC_MAP", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "TZSC_MAP_20184",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    TZ_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    ZC_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    SEB_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    PA_NO = table.Column<string>(unicode: false, maxLength: 60, nullable: false),
                    PA_VALUE = table.Column<string>(unicode: false, maxLength: 60, nullable: true),
                    TZ_ID = table.Column<int>(nullable: false),
                    MAP_DATE = table.Column<DateTime>(type: "datetime", nullable: false),
                    PA_DATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    OPN_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    PA_NAME = table.Column<string>(unicode: false, maxLength: 100, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TZSC_MAP_20184", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "UnacceptedProductionHandle",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    Attachment = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    BillNo = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    BillStatus = table.Column<int>(nullable: true),
                    BilType = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    BilTypeName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    BusiNo = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ChkMan = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkManName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkMob = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    ClsDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ClsUsr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ClsUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    IsClose = table.Column<bool>(nullable: true),
                    IsPrint = table.Column<bool>(nullable: true),
                    ProcessNo = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Qty = table.Column<int>(nullable: true),
                    Rem = table.Column<string>(unicode: false, maxLength: 500, nullable: true),
                    SourceBillNo = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: false),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    Usr = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    UsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    WorkCenter = table.Column<string>(unicode: false, maxLength: 50, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_UnacceptedProductionHandle", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "WH_ENTRY_BARCODE",
                columns: table => new
                {
                    EntryItemID = table.Column<string>(maxLength: 144, nullable: false),
                    BarcodeNO = table.Column<string>(maxLength: 800, nullable: true),
                    StorageNO = table.Column<string>(maxLength: 120, nullable: true),
                    EntryNO = table.Column<string>(maxLength: 120, nullable: true),
                    PRD_NO = table.Column<string>(maxLength: 120, nullable: true),
                    PRD_NAME = table.Column<string>(maxLength: 400, nullable: true),
                    PRD_SPC = table.Column<string>(maxLength: 800, nullable: true),
                    BAT_NO = table.Column<string>(maxLength: 120, nullable: true),
                    QTY = table.Column<decimal>(type: "decimal(18, 4)", nullable: true),
                    QTY1 = table.Column<decimal>(type: "decimal(18, 4)", nullable: true),
                    UNIT = table.Column<string>(maxLength: 120, nullable: true),
                    RK_DATE = table.Column<string>(unicode: false, maxLength: 19, nullable: true),
                    SW_Flag = table.Column<string>(unicode: false, maxLength: 4, nullable: true),
                    SW_OPDate = table.Column<DateTime>(type: "datetime", nullable: true)
                },
                constraints: table =>
                {
                });

            migrationBuilder.CreateTable(
                name: "WH_ENTRY_INFO",
                columns: table => new
                {
                    EntryNO = table.Column<string>(maxLength: 120, nullable: false),
                    EntryType = table.Column<int>(nullable: true),
                    INOUT = table.Column<string>(maxLength: 8, nullable: true),
                    EntDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    EntState = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    WH = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    BILLNO = table.Column<string>(unicode: false, maxLength: 200, nullable: true),
                    BILLTYPE = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    PartnerNO = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    ToBilNo = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    ToBusiNo = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    CreateUserID = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    CreateTime = table.Column<string>(unicode: false, maxLength: 19, nullable: true),
                    UpdateUserID = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UpdateTime = table.Column<DateTime>(type: "datetime", nullable: true)
                },
                constraints: table =>
                {
                });

            migrationBuilder.CreateTable(
                name: "WH_ENTRY_TEMP",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    BarcodeNO = table.Column<string>(maxLength: 400, nullable: true),
                    EntryID = table.Column<string>(maxLength: 144, nullable: true),
                    WHNO = table.Column<string>(maxLength: 80, nullable: true),
                    StorageNO = table.Column<string>(maxLength: 40, nullable: true),
                    billNO = table.Column<string>(maxLength: 400, nullable: true),
                    billType = table.Column<string>(maxLength: 80, nullable: true),
                    TempTime = table.Column<DateTime>(type: "datetime", nullable: true),
                    USERMAC = table.Column<string>(maxLength: 192, nullable: true),
                    CreateUserID = table.Column<string>(maxLength: 144, nullable: true),
                    SourceBarCode = table.Column<string>(maxLength: 400, nullable: true),
                    BusiClassName = table.Column<string>(maxLength: 200, nullable: true),
                    IDNO = table.Column<string>(maxLength: 80, nullable: true),
                    CUS_NO = table.Column<string>(maxLength: 80, nullable: true),
                    QTY_ADJ = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_Out = table.Column<decimal>(type: "numeric(18, 0)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_WH_ENTRY_TEMP", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "WH_INVENTORY_BARCODE",
                columns: table => new
                {
                    InventoryBarcodeID = table.Column<string>(maxLength: 144, nullable: false),
                    BarcodeNO = table.Column<string>(unicode: false, maxLength: 200, nullable: true),
                    WHNO = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    InventoryTime = table.Column<DateTime>(type: "datetime", nullable: true),
                    StorageNO = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    PRD_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    PRD_NAME = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    PRD_SPC = table.Column<string>(unicode: false, maxLength: 200, nullable: true),
                    BAT_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    QTY = table.Column<decimal>(type: "decimal(18, 4)", nullable: true),
                    QTY1 = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    UNIT = table.Column<string>(unicode: false, maxLength: 50, nullable: true)
                },
                constraints: table =>
                {
                });

            migrationBuilder.CreateTable(
                name: "WH_INVENTORY_PART",
                columns: table => new
                {
                    InventoryPartID = table.Column<string>(maxLength: 144, nullable: false),
                    PRD_NO = table.Column<string>(maxLength: 120, nullable: true),
                    StorageNO = table.Column<string>(maxLength: 120, nullable: true),
                    WHNO = table.Column<string>(maxLength: 120, nullable: true),
                    PartnerNO = table.Column<string>(maxLength: 120, nullable: true),
                    PRD_NAME = table.Column<string>(maxLength: 400, nullable: true),
                    PRD_SPC = table.Column<string>(maxLength: 400, nullable: true),
                    BAT_NO = table.Column<string>(maxLength: 400, nullable: true),
                    QTY = table.Column<decimal>(type: "decimal(18, 4)", nullable: true),
                    QTY1 = table.Column<decimal>(type: "decimal(18, 4)", nullable: true),
                    UNIT = table.Column<string>(maxLength: 120, nullable: true)
                },
                constraints: table =>
                {
                });

            migrationBuilder.CreateTable(
                name: "WM_Asn",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    No = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    Source_No = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Type = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    Status = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    Dept = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    SourceNo_Form = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    TargetNo_Form = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    AcceptingDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    Rem = table.Column<string>(unicode: false, maxLength: 500, nullable: true),
                    BusiNo = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    BilType = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    BilTypeName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    Usr = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    UsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: false),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    ChkMan = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkManName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    IsClose = table.Column<bool>(nullable: true),
                    ClsDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ClsUsr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ClsUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkMob = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    IsPrint = table.Column<bool>(nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_WM_Asn", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "WM_Barcode_Source",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    Src_Type = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    Src_No = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    Src_Barcode = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Item = table.Column<int>(nullable: true),
                    Vendor_No = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    Prod_No = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Prod_Name = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    Unit = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    Batch_No = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Qty = table.Column<decimal>(type: "decimal(12, 8)", nullable: true),
                    Pkg_Conver = table.Column<decimal>(type: "decimal(12, 8)", nullable: true),
                    Qty_Pkg = table.Column<decimal>(type: "decimal(12, 8)", nullable: true),
                    Dept = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    Src_ItemID = table.Column<int>(nullable: true),
                    No = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    BillDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    Rem = table.Column<string>(unicode: false, maxLength: 500, nullable: true),
                    BusiNo = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    BilType = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    BilTypeName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    Usr = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    UsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: false),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    ChkMan = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkManName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    IsClose = table.Column<bool>(nullable: true),
                    ClsDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ClsUsr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ClsUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkMob = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    IsPrint = table.Column<bool>(nullable: true),
                    BarcodeType = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    Prod_Spec = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Mold_No = table.Column<string>(unicode: false, maxLength: 50, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_WM_Barcode_Source", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "WM_BarCodeScan_Temp",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    EntryID = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    Barcode = table.Column<string>(unicode: false, maxLength: 100, nullable: false),
                    WO_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    USRNO = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    Quality_State = table.Column<string>(unicode: false, maxLength: 10, nullable: false),
                    Defect_No = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    ScanTime = table.Column<DateTime>(type: "datetime", nullable: false),
                    Dev_No = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    IsBatTray = table.Column<bool>(nullable: true),
                    Process_No = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    BAN_NO = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    MO_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    Station_No = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    Batch_No = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Qty = table.Column<int>(nullable: true),
                    QtyUnOk = table.Column<int>(nullable: true),
                    QtyScrap = table.Column<int>(nullable: true),
                    PkgNo = table.Column<string>(unicode: false, maxLength: 50, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_WM_BarCodeScan_Temp", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "WM_Feeding",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    Batch_No = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    BilType = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    BilTypeName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    BusiNo = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ChkMan = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkManName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkMob = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    ClsDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ClsUsr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ClsUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    FeedType = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    FinishQuantity = table.Column<decimal>(type: "decimal(18, 4)", nullable: true),
                    IsClose = table.Column<bool>(nullable: true),
                    IsPrint = table.Column<bool>(nullable: true),
                    MPROD_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    PackageNo = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Process = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    PROD_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    ProductionDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    Quantity = table.Column<decimal>(type: "decimal(18, 4)", nullable: true),
                    Rem = table.Column<string>(unicode: false, maxLength: 500, nullable: true),
                    ReturnQuantity = table.Column<decimal>(type: "decimal(18, 4)", nullable: true),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: false),
                    TraceNo = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    Usr = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    UsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    WO_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    WorkStation = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Shift_No = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    MO_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Plan_No = table.Column<string>(unicode: false, maxLength: 50, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_WM_Feeding", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "WM_FeedingDetail",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    Batch_No = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    BillDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    BilType = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    BilTypeName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    BusiNo = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ChkMan = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkManName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkMob = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    ClsDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ClsUsr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ClsUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    IsClose = table.Column<bool>(nullable: true),
                    IsPrint = table.Column<bool>(nullable: true),
                    MProd_No = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    No = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    PackageNo = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Process_No = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Prod_No = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Quantity = table.Column<decimal>(type: "decimal(18, 4)", nullable: true),
                    Rem = table.Column<string>(unicode: false, maxLength: 500, nullable: true),
                    Source_No = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: false),
                    Trace_No = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Unit = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    Usr = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    UsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    WorkStation = table.Column<string>(unicode: false, maxLength: 50, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_WM_FeedingDetail", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "WM_Form",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    No = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    Source_No = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Type = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    Status = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    Dept = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    SourceNo_Form = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    TargetNo_Form = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    AcceptingDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    Rem = table.Column<string>(unicode: false, maxLength: 500, nullable: true),
                    BusiNo = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    BilType = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    BilTypeName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    Usr = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    UsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: false),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    ChkMan = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkManName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    IsClose = table.Column<bool>(nullable: true),
                    ClsDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ClsUsr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ClsUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkMob = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    IsPrint = table.Column<bool>(nullable: true),
                    Location = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    OrderNumber = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    ERPSingle = table.Column<string>(unicode: false, maxLength: 50, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_WM_Form", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "WM_FormScene",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    CLASS = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    NO = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    NAME = table.Column<string>(unicode: false, maxLength: 50, nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_WM_FormScene", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "WM_FormType",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    No = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    NAME = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Class = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Usr = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    UsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: false),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    IsDelete = table.Column<bool>(nullable: true),
                    Scene = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    IsHandover = table.Column<bool>(nullable: true, defaultValueSql: "((0))"),
                    ERPNo = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    isEffective = table.Column<bool>(nullable: true),
                    Remark = table.Column<string>(unicode: false, maxLength: 500, nullable: true),
                    InspectionType = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    IsCompleteConfirmInspection = table.Column<bool>(nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_WM_FormType", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "WM_FreezeStorage",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    Batch_No = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    BilType = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    BilTypeName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    BusiNo = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ChkMan = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkManName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkMob = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    ClsDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ClsUsr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ClsUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    FreezeQuantity = table.Column<decimal>(type: "decimal(22, 8)", nullable: true),
                    FreezeReason = table.Column<string>(unicode: false, maxLength: 200, nullable: true),
                    FreezeTime = table.Column<DateTime>(type: "datetime", nullable: true),
                    IsClose = table.Column<bool>(nullable: true),
                    IsPrint = table.Column<bool>(nullable: true),
                    LiftTime = table.Column<DateTime>(type: "datetime", nullable: true),
                    PackageNo = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    PROD_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Rem = table.Column<string>(unicode: false, maxLength: 500, nullable: true),
                    Status = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: false),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    Usr = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    UsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    WareHouseNo = table.Column<string>(unicode: false, maxLength: 50, nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_WM_FreezeStorage", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "WM_FrozenStorage",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    Batch_No = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    FrozenQuantity = table.Column<decimal>(type: "decimal(18, 4)", nullable: true),
                    Prod_No = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    ProductionDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    Source_No = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: false),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    Usr = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    UsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    WareHouseNo = table.Column<string>(unicode: false, maxLength: 50, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_WM_FrozenStorage", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "WM_InventoryPlan",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    BilType = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    BilTypeName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    BusiNo = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ChkMan = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkManName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkMob = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    ClsDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ClsUsr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ClsUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    InventoryWay = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    IsClose = table.Column<bool>(nullable: true),
                    IsPrint = table.Column<bool>(nullable: true),
                    No = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    Prod_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Rem = table.Column<string>(unicode: false, maxLength: 500, nullable: true),
                    Status = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: false),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    Usr = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    UsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    WareHouse = table.Column<string>(unicode: false, maxLength: 50, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_WM_InventoryPlan", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "WM_ItemPageAge",
                columns: table => new
                {
                    id = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    Item = table.Column<string>(unicode: false, maxLength: 55, nullable: true),
                    Pageage = table.Column<string>(unicode: false, maxLength: 55, nullable: true),
                    CreateUser = table.Column<string>(unicode: false, maxLength: 55, nullable: true),
                    CreateTime = table.Column<DateTime>(type: "datetime", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_WM_ItemPageAge", x => x.id);
                });

            migrationBuilder.CreateTable(
                name: "WM_MaterialPreparaPlan",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    No = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    Source_No = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Type = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    Status = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    Dept = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    SourceNo_Form = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    TargetNo_Form = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    CreateDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    Rem = table.Column<string>(unicode: false, maxLength: 500, nullable: true),
                    BusiNo = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    BilType = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    BilTypeName = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Usr = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    UsrName = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: false),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    ChkMan = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    ChkManName = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    ChkDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    IsClose = table.Column<bool>(nullable: true),
                    ClsDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ClsUsr = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    ClsUsrName = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    ChkMob = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    IsPrint = table.Column<bool>(nullable: true),
                    PriorityOrder = table.Column<int>(nullable: true),
                    StartDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    WkCenter_No = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    EndDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    MaterialRequestID = table.Column<int>(nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_WM_MaterialPreparaPlan", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "WM_OnShelfGuide",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    No = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    Source_No = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Type = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    Status = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    Dept = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    SourceNo_Form = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    Rem = table.Column<string>(unicode: false, maxLength: 500, nullable: true),
                    BusiNo = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    BilType = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    BilTypeName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    Usr = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    UsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: false),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    ChkMan = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkManName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    IsClose = table.Column<bool>(nullable: true),
                    ClsDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ClsUsr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ClsUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkMob = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    IsPrint = table.Column<bool>(nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_WM_OnShelfGuide", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "WM_OnShelfGuideRule",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    Capacity = table.Column<decimal>(type: "decimal(22, 8)", nullable: true),
                    IsDelete = table.Column<bool>(nullable: true),
                    IsSingle = table.Column<bool>(nullable: true),
                    Location = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Priority = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Prod_No = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: false),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Usr = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    UsrName = table.Column<string>(unicode: false, maxLength: 50, nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_WM_OnShelfGuideRule", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "WM_OrderBars_Qty",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    Batch_No = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Feeding_Time = table.Column<DateTime>(type: "datetime", nullable: true),
                    Process_No = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Prod_No = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    Prod_No_Mat = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    Qty = table.Column<int>(nullable: true),
                    QtyBars = table.Column<int>(nullable: true),
                    QtyPrint = table.Column<int>(nullable: true),
                    Station_No = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    Status = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: false),
                    TraceNo = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    User_Exec = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    Usr = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    UsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    WO_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_WM_OrderBars_Qty", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "WM_OutFormApply",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    No = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    Source_No = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Type = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    Status = table.Column<string>(unicode: false, maxLength: 50, nullable: true, defaultValueSql: "((10))"),
                    Dept = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    SourceNo_Form = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    TargetNo_Form = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Rem = table.Column<string>(unicode: false, maxLength: 500, nullable: true),
                    BusiNo = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    BilType = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    BilTypeName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    Usr = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    UsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: false),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    ChkMan = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkManName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    IsClose = table.Column<bool>(nullable: true),
                    ClsDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ClsUsr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ClsUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkMob = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    IsPrint = table.Column<bool>(nullable: true),
                    ExpectHandoverDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    OrderNumber = table.Column<string>(unicode: false, maxLength: 50, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_WM_OutFormApply", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "WM_Package",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    No = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    ParentPackageID = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    EnterFormDetailID = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Material = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Quantity = table.Column<decimal>(type: "decimal(22, 8)", nullable: true),
                    Unit = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    IsLock = table.Column<bool>(nullable: true),
                    PackageType = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    IsSnp = table.Column<bool>(nullable: true),
                    Capacity = table.Column<decimal>(type: "decimal(22, 8)", nullable: true),
                    ProBatch_No = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    ProductionDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    Supplier = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Sort = table.Column<decimal>(type: "decimal(22, 8)", nullable: true),
                    Location = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Storage = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    AsnItemID = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    IsUnfinishedProduct = table.Column<bool>(nullable: true),
                    LockFormNo = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    TransferFormItem = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Rem = table.Column<string>(unicode: false, maxLength: 500, nullable: true),
                    BusiNo = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    BilType = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    BilTypeName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    Usr = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    UsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: false),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    ChkMan = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkManName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    IsClose = table.Column<bool>(nullable: true),
                    ClsDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ClsUsr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ClsUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkMob = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    IsPrint = table.Column<bool>(nullable: true),
                    LockReason = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Remark = table.Column<string>(unicode: false, maxLength: 200, nullable: true),
                    CustomerTag = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    OrderNumber = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    IsStorage = table.Column<bool>(nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_WM_Package", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "WM_Package_BOM",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    BilType = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    BilTypeName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    BOM_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    BOM_NO_Sub = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    BusiNo = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ChkMan = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkManName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkMob = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    ClsDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ClsUsr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ClsUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    Effective_Date = table.Column<DateTime>(type: "datetime", nullable: true),
                    IsClose = table.Column<bool>(nullable: true),
                    IsPrint = table.Column<bool>(nullable: true),
                    Pkg_SN = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    Pkg_SN_Sub = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Pkg_Type = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    Pkg_Type_Sub = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    Prod_Name = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    Prod_No = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    Prod_Spec = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Prod_Type = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Qty = table.Column<int>(nullable: true),
                    Qty_Sub = table.Column<int>(nullable: true),
                    Rem = table.Column<string>(unicode: false, maxLength: 500, nullable: true),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: false),
                    Unit = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    Usr = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    UsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    VER_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    IsSmallestPackage = table.Column<bool>(nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_WM_Package_BOM", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "WM_Package_SN_Mng",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    Capacity = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    IsCycle_Box = table.Column<bool>(nullable: true),
                    Pkg_SN = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    Pkg_Type = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    Qty = table.Column<int>(nullable: true),
                    Status = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: false),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    Usr = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    UsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_WM_Package_SN_Mng", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "WM_PackageBarcode",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    PackageNo = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Barcode = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    CreateDate = table.Column<DateTime>(type: "datetime", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_WM_PackageBarcode", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "WM_PackageBarcodeHistory",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    Barcode = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    IOType = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    IsDelete = table.Column<bool>(nullable: true),
                    PackageNo = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Source_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: false),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    Usr = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    UsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    IsReturn = table.Column<bool>(nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_WM_PackageBarcodeHistory", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "WM_PackageChange",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    SourcePackageNo = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    TargetPackageNo = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    ProductSn = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    ChangeType = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Quantity = table.Column<decimal>(type: "decimal(22, 8)", nullable: true),
                    Usr = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    UsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: false),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    IsDelete = table.Column<bool>(nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_WM_PackageChange", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "WM_PackageFeed",
                columns: table => new
                {
                    id = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    PackageNo = table.Column<string>(unicode: false, maxLength: 55, nullable: true),
                    masterProductionCode = table.Column<string>(unicode: false, maxLength: 55, nullable: true),
                    masterProductionName = table.Column<string>(unicode: false, maxLength: 55, nullable: true),
                    MaterialCode = table.Column<string>(unicode: false, maxLength: 55, nullable: true),
                    MaterialName = table.Column<string>(unicode: false, maxLength: 55, nullable: true),
                    Quality = table.Column<decimal>(type: "decimal(18, 2)", nullable: true),
                    BatchNumber = table.Column<string>(unicode: false, maxLength: 55, nullable: true),
                    UNIT = table.Column<string>(unicode: false, maxLength: 55, nullable: true),
                    FeedDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_WM_PackageFeed", x => x.id);
                });

            migrationBuilder.CreateTable(
                name: "WM_PackageType",
                columns: table => new
                {
                    id = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    Code = table.Column<string>(maxLength: 55, nullable: false),
                    Name = table.Column<string>(maxLength: 55, nullable: false),
                    Capacity = table.Column<decimal>(type: "decimal(18, 0)", nullable: true),
                    ISDELETE = table.Column<bool>(nullable: true),
                    CreateUser = table.Column<string>(maxLength: 55, nullable: true),
                    CreateTime = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdateUser = table.Column<string>(maxLength: 55, nullable: true),
                    UpdateTime = table.Column<DateTime>(type: "datetime", nullable: true),
                    UP = table.Column<string>(maxLength: 55, nullable: true),
                    Specs = table.Column<string>(maxLength: 55, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_WM_PackageType", x => x.id);
                });

            migrationBuilder.CreateTable(
                name: "WM_PackageTypeProduct",
                columns: table => new
                {
                    id = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    PackageTypeCode = table.Column<string>(maxLength: 55, nullable: false),
                    ProductCode = table.Column<string>(maxLength: 55, nullable: false),
                    ISDELETE = table.Column<bool>(nullable: true),
                    CREATEUSER = table.Column<string>(maxLength: 55, nullable: true),
                    CREATETIME = table.Column<DateTime>(type: "datetime", nullable: true),
                    UPDATEUSER = table.Column<string>(maxLength: 55, nullable: true),
                    UPDATETIME = table.Column<DateTime>(type: "datetime", nullable: true),
                    Capacity = table.Column<decimal>(type: "decimal(18, 0)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_WM_PackageTypeProduct", x => x.id);
                });

            migrationBuilder.CreateTable(
                name: "WM_PackageTypeRelation",
                columns: table => new
                {
                    id = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    TypeCode = table.Column<string>(maxLength: 50, nullable: false),
                    ParentTypeCode = table.Column<string>(maxLength: 50, nullable: false),
                    ISDELETE = table.Column<bool>(nullable: true),
                    CreateUser = table.Column<string>(maxLength: 50, nullable: true),
                    CreateTime = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdateUser = table.Column<string>(maxLength: 50, nullable: true),
                    UpdateTime = table.Column<DateTime>(type: "datetime", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_WM_PackageTypeRelation", x => x.id);
                });

            migrationBuilder.CreateTable(
                name: "WM_ShelfGuide",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    No = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    Source_No = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Type = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    Status = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    Dept = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    SourceNo_Form = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    Rem = table.Column<string>(unicode: false, maxLength: 500, nullable: true),
                    BusiNo = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    BilType = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    BilTypeName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    Usr = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    UsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: false),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    ChkMan = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkManName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    IsClose = table.Column<bool>(nullable: true),
                    ClsDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ClsUsr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ClsUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkMob = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    IsPrint = table.Column<bool>(nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_WM_ShelfGuide", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "WM_Stock",
                columns: table => new
                {
                    id = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    FactoryNo = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    WarehouseNo = table.Column<string>(unicode: false, maxLength: 100, nullable: false),
                    MaterialNo = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    Quantity = table.Column<decimal>(type: "numeric(18, 2)", nullable: false),
                    BatchNo = table.Column<string>(unicode: false, maxLength: 55, nullable: true),
                    IsDelete = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UpdateTime = table.Column<DateTime>(type: "datetime", nullable: true, defaultValueSql: "(getdate())")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_WM_Stock", x => x.id);
                });

            migrationBuilder.CreateTable(
                name: "WM_Storage",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    Location = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Prod_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Quantity = table.Column<decimal>(type: "decimal(18, 4)", nullable: true),
                    Unit = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Batch_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    LateStorageDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    LateDeliveryDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    Rem = table.Column<string>(unicode: false, maxLength: 500, nullable: true),
                    BusiNo = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    BilType = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    BilTypeName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    Usr = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    UsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: false),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    ChkMan = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkManName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    IsClose = table.Column<bool>(nullable: true),
                    ClsDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ClsUsr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ClsUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkMob = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    IsPrint = table.Column<bool>(nullable: true),
                    FrozenQuantity = table.Column<decimal>(type: "decimal(18, 4)", nullable: true),
                    ProductionDate = table.Column<DateTime>(type: "datetime", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_WM_Storage", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "WM_StorageBarcode",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    Location = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Prod_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    PackageNO = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Quantity = table.Column<decimal>(type: "decimal(18, 4)", nullable: true),
                    Batch_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    ProductionDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    Unit = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Rem = table.Column<string>(unicode: false, maxLength: 500, nullable: true),
                    BusiNo = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    BilType = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    BilTypeName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    Usr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    ChkMan = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkManName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    IsClose = table.Column<bool>(nullable: true),
                    ClsDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ClsUsr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ClsUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkMob = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    IsPrint = table.Column<bool>(nullable: true),
                    Source_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    FrozenQuantity = table.Column<decimal>(type: "decimal(18, 4)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_WM_StorageBarcode", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "WM_StorageBarcodeLock",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    WareHouseNo = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    PROD_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Batch_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    LockQuantity = table.Column<decimal>(type: "decimal(22, 8)", nullable: true),
                    SourceNo = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    PackageNo = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    Usr = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    UsrName = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    ProductionDate = table.Column<DateTime>(type: "datetime", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_WM_StorageBarcodeLock", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "WM_WareHouse",
                columns: table => new
                {
                    id = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    WarehouseNo = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    WarehouseName = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    CreateUser = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    CreateTime = table.Column<DateTime>(type: "datetime", nullable: true),
                    Remark = table.Column<string>(unicode: false, maxLength: 500, nullable: true),
                    Address = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    IsEffective = table.Column<bool>(nullable: true),
                    EffectiveDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ExpirationDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    IsDelete = table.Column<bool>(nullable: true),
                    FactoryCode = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    IsWm = table.Column<bool>(nullable: true),
                    IsEnterBatch = table.Column<bool>(nullable: true),
                    IsSn = table.Column<bool>(nullable: true),
                    ISFIFO = table.Column<bool>(nullable: true),
                    WareHouseType = table.Column<string>(maxLength: 50, nullable: true),
                    WareHouseAttribute = table.Column<string>(maxLength: 50, nullable: true),
                    UP = table.Column<string>(maxLength: 50, nullable: true),
                    UpdateUser = table.Column<string>(maxLength: 50, nullable: true),
                    UpdateTime = table.Column<DateTime>(type: "datetime", nullable: true),
                    Long = table.Column<decimal>(type: "decimal(18, 0)", nullable: true),
                    Width = table.Column<decimal>(type: "decimal(18, 0)", nullable: true),
                    Height = table.Column<decimal>(type: "decimal(18, 0)", nullable: true),
                    Bearing = table.Column<decimal>(type: "decimal(18, 0)", nullable: true),
                    Customer = table.Column<string>(maxLength: 55, nullable: true),
                    MasterWareHouseNo = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    IsSuspected = table.Column<bool>(nullable: true),
                    IsWaste = table.Column<bool>(nullable: true),
                    IsLine = table.Column<bool>(nullable: true),
                    InspectArea = table.Column<string>(unicode: false, maxLength: 55, nullable: true),
                    IsOnShelfGuideRule = table.Column<bool>(nullable: true),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    TempLocation = table.Column<string>(unicode: false, maxLength: 55, nullable: true),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdUsr = table.Column<string>(maxLength: 50, nullable: true),
                    Usr = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Supplier = table.Column<string>(unicode: false, maxLength: 55, nullable: true),
                    IsInspectArea = table.Column<bool>(nullable: true),
                    FeedPriority = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    IsProductionFeeding = table.Column<bool>(nullable: true),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    UsrName = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    IsShipmentWareHouse = table.Column<bool>(nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_WM_WareHouse", x => x.id);
                },
                comment: "仓库");

            migrationBuilder.CreateTable(
                name: "WM_WareHouseProduct",
                columns: table => new
                {
                    id = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    ProductCode = table.Column<string>(maxLength: 55, nullable: false),
                    WareHouseCode = table.Column<string>(maxLength: 55, nullable: false),
                    MinQuantity = table.Column<decimal>(type: "decimal(18, 0)", nullable: true),
                    MaxQuantity = table.Column<decimal>(type: "decimal(18, 0)", nullable: true),
                    MinRequestQuantity = table.Column<decimal>(type: "decimal(18, 0)", nullable: true),
                    ISDELETE = table.Column<bool>(nullable: true),
                    CreateUser = table.Column<string>(maxLength: 55, nullable: true),
                    CreateTime = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdateUser = table.Column<string>(maxLength: 55, nullable: true),
                    UpdateTime = table.Column<DateTime>(type: "datetime", nullable: true),
                    IsBarcode_Mng = table.Column<bool>(nullable: true),
                    IsBatch_Mng = table.Column<bool>(nullable: true),
                    IsPiece_Mng = table.Column<bool>(nullable: true),
                    IsForcedOffShelves = table.Column<bool>(nullable: true),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdUsr = table.Column<string>(maxLength: 55, nullable: true),
                    Usr = table.Column<string>(maxLength: 55, nullable: true),
                    IsOnly = table.Column<bool>(nullable: true),
                    InventoryReplenishment = table.Column<decimal>(type: "decimal(18, 4)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_WM_WareHouseProduct", x => x.id);
                });

            migrationBuilder.CreateTable(
                name: "WORK_GROUP",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    NO = table.Column<string>(unicode: false, maxLength: 10, nullable: false),
                    NAME = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    Rem = table.Column<string>(unicode: false, maxLength: 200, nullable: true),
                    STOP_ID = table.Column<bool>(nullable: true),
                    Usr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkMan = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkManName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ChkMob = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    IsPrint = table.Column<bool>(nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_WORK_GROUP", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "WORK_SHIFT",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    NO = table.Column<string>(unicode: false, maxLength: 10, nullable: false),
                    NAME = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    Rem = table.Column<string>(unicode: false, maxLength: 200, nullable: false),
                    STOP_ID = table.Column<bool>(nullable: false),
                    Usr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkMan = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkManName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ChkMob = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    IsPrint = table.Column<bool>(nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_WORK_SHIFT", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "WS_RETURN_MATERIAL",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    BARCODE = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    PRD_NO = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    Status = table.Column<byte>(nullable: true),
                    UpdateTime = table.Column<DateTime>(type: "datetime", nullable: true),
                    QTY = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Usr = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    BARCODE_NEW = table.Column<string>(unicode: false, maxLength: 100, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_WS_RETURN_MATERIAL", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "ychj",
                columns: table => new
                {
                    序号 = table.Column<int>(nullable: false),
                    日期 = table.Column<DateTime>(type: "datetime", nullable: true),
                    时间 = table.Column<string>(unicode: false, fixedLength: true, maxLength: 10, nullable: true),
                    标识号 = table.Column<string>(unicode: false, fixedLength: true, maxLength: 10, nullable: true),
                    炉号 = table.Column<string>(unicode: false, fixedLength: true, maxLength: 10, nullable: true),
                    班号 = table.Column<string>(unicode: false, fixedLength: true, maxLength: 10, nullable: true),
                    FeMn = table.Column<decimal>(type: "numeric(18, 1)", nullable: true),
                    FeS = table.Column<decimal>(type: "numeric(18, 1)", nullable: true),
                    FeCr = table.Column<decimal>(type: "numeric(18, 1)", nullable: true),
                    C = table.Column<decimal>(type: "numeric(18, 1)", nullable: true),
                    B1 = table.Column<decimal>(type: "numeric(18, 1)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ychj", x => x.序号);
                });

            migrationBuilder.CreateTable(
                name: "yctl",
                columns: table => new
                {
                    序号 = table.Column<int>(nullable: false),
                    日期 = table.Column<DateTime>(type: "datetime", nullable: true),
                    时间 = table.Column<string>(unicode: false, fixedLength: true, maxLength: 10, nullable: true),
                    标识号 = table.Column<string>(unicode: false, fixedLength: true, maxLength: 10, nullable: true),
                    炉号 = table.Column<string>(unicode: false, fixedLength: true, maxLength: 10, nullable: true),
                    班号 = table.Column<string>(unicode: false, fixedLength: true, maxLength: 10, nullable: true),
                    _1号料 = table.Column<int>(name: "1号料", nullable: true),
                    _2号料 = table.Column<int>(name: "2号料", nullable: true),
                    _3号料 = table.Column<int>(name: "3号料", nullable: true),
                    _4号料 = table.Column<int>(name: "4号料", nullable: true),
                    _5号料 = table.Column<int>(name: "5号料", nullable: true),
                    合计 = table.Column<int>(nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_yctl", x => x.序号);
                });

            migrationBuilder.CreateTable(
                name: "ZC_NO",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    ZC_NO = table.Column<string>(unicode: false, maxLength: 10, nullable: false),
                    NAME = table.Column<string>(unicode: false, maxLength: 40, nullable: true),
                    STOP_ID = table.Column<bool>(nullable: true),
                    ZC_UP = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    BAN_NO = table.Column<string>(unicode: false, maxLength: 200, nullable: true),
                    SPC_ID = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    IDX_NO = table.Column<string>(unicode: false, maxLength: 500, nullable: true),
                    MTN_ID = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    DEP = table.Column<string>(unicode: false, maxLength: 8, nullable: true),
                    UP_DD = table.Column<byte[]>(nullable: true),
                    TW_ID = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    WorkType = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    SelectedOver = table.Column<bool>(nullable: true),
                    Usr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkMan = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkManName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ChkMob = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    IsPrint = table.Column<bool>(nullable: true),
                    REM = table.Column<string>(unicode: false, maxLength: 500, nullable: true),
                    IsBindBat_NO = table.Column<bool>(nullable: true),
                    SortIdx = table.Column<int>(nullable: true),
                    isCheckWorkOrder = table.Column<bool>(nullable: true),
                    IsFeeding = table.Column<bool>(nullable: false, defaultValueSql: "((1))"),
                    UNWRINTERFACE = table.Column<bool>(nullable: true, defaultValueSql: "((0))"),
                    UNFDINTERFACE = table.Column<bool>(nullable: true, defaultValueSql: "((0))")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ZC_NO", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "ZZ_SBMOD_BC",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    SEB_NO = table.Column<string>(unicode: false, maxLength: 100, nullable: false),
                    MOD_NO = table.Column<string>(unicode: false, maxLength: 100, nullable: false),
                    BAN_NO = table.Column<string>(unicode: false, maxLength: 10, nullable: false),
                    SYS_DATE = table.Column<DateTime>(type: "datetime", nullable: false),
                    UPDDATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    QTY = table.Column<int>(nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ZZ_SBMOD_BC", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "BF_RPT_TEMPLETS",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    MID = table.Column<int>(nullable: false),
                    PARENTBUSINO = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    CHILDBUSINO = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    PARENTKEYNAME = table.Column<string>(unicode: false, maxLength: 30, nullable: true),
                    CHILDFKEYNAME = table.Column<string>(unicode: false, maxLength: 30, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_BF_RPT_TEMPLETS", x => x.ID);
                    table.ForeignKey(
                        name: "FK_BF_RPT_TEMPLETS_BF_RPT_TEMPLET_C",
                        column: x => x.MID,
                        principalTable: "BF_RPT_TEMPLET_C",
                        principalColumn: "ID",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "CMM_MEASURE_REC_ITEM",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    MID = table.Column<int>(nullable: false),
                    DIMENSION = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    DESCRIPTION = table.Column<string>(unicode: false, maxLength: 200, nullable: true),
                    AXIS = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    MEAS = table.Column<decimal>(type: "numeric(18, 4)", nullable: true),
                    STANDARD = table.Column<decimal>(type: "numeric(18, 4)", nullable: true),
                    UP_LIMIT = table.Column<decimal>(type: "decimal(18, 4)", nullable: true),
                    LOW_LIMIT = table.Column<decimal>(type: "numeric(18, 4)", nullable: true),
                    ISOUT = table.Column<bool>(nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_CMM_MEASURE_REC_ITEM", x => x.ID);
                    table.ForeignKey(
                        name: "FK_CMM_MEASURE_REC_ITEM_CMM_MEASURE_REC",
                        column: x => x.MID,
                        principalTable: "CMM_MEASURE_REC",
                        principalColumn: "ID",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "EQP_MTSPEC_INFO",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    CHK_ENUM_BUSINO = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    CHK_MODEL = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    Content = table.Column<string>(maxLength: 2000, nullable: true),
                    FaultHandle = table.Column<string>(unicode: false, maxLength: 500, nullable: true),
                    ITM = table.Column<int>(nullable: false),
                    Low_Limit = table.Column<decimal>(type: "decimal(18, 3)", nullable: true),
                    LowSybol = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    Lubrication = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    Method = table.Column<string>(maxLength: 2000, nullable: true),
                    MID = table.Column<int>(nullable: false),
                    NO = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    OilsName = table.Column<string>(maxLength: 200, nullable: true),
                    Opportunity = table.Column<string>(unicode: false, maxLength: 200, nullable: true),
                    OPType = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    Part_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    RHPoints = table.Column<int>(nullable: true),
                    RHType = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    SpecImage = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Standard = table.Column<string>(unicode: false, maxLength: 1000, nullable: true),
                    StandardValue = table.Column<decimal>(type: "decimal(18, 3)", nullable: true),
                    Unit = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    Up_Limit = table.Column<decimal>(type: "decimal(18, 3)", nullable: true),
                    UpSybol = table.Column<string>(unicode: false, maxLength: 2, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_EQP_MTSPEC_INFO", x => x.ID);
                    table.ForeignKey(
                        name: "FK_EQP_MTSPEC_INFO_EQP_MAINTAIN_SPEC",
                        column: x => x.MID,
                        principalTable: "EQP_MAINTAIN_SPEC",
                        principalColumn: "ID",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "EQP_Spare_Part",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    MID = table.Column<int>(nullable: false),
                    MITM = table.Column<int>(nullable: false),
                    NAME = table.Column<string>(unicode: false, maxLength: 100, nullable: false),
                    QTY = table.Column<decimal>(type: "decimal(18, 4)", nullable: false),
                    Rem = table.Column<string>(unicode: false, maxLength: 2000, nullable: true),
                    SP_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    Spec_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_EQP_Spare_Part", x => x.ID);
                    table.ForeignKey(
                        name: "FK_EQP_SPARE_PART_EQP_MAINTAIN_SPEC",
                        column: x => x.MID,
                        principalTable: "EQP_MAINTAIN_SPEC",
                        principalColumn: "ID",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "EQP_RUN_RECORD",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    DEV_Name = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    DEV_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    EndTime = table.Column<DateTime>(type: "datetime", nullable: true),
                    Rem = table.Column<string>(unicode: false, maxLength: 1000, nullable: true),
                    StartTime = table.Column<DateTime>(type: "datetime", nullable: false),
                    Status_No = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    Status_Prop = table.Column<string>(unicode: false, maxLength: 2, nullable: false),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: false, defaultValueSql: "(getdate())"),
                    Time_Diff = table.Column<decimal>(type: "numeric(18, 3)", nullable: true),
                    Time_Unit = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Usr = table.Column<string>(unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')"),
                    UsrName = table.Column<string>(unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')"),
                    MID = table.Column<int>(nullable: true),
                    UsrEnd = table.Column<string>(unicode: false, maxLength: 50, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_EQP_RUN_RECORD", x => x.ID);
                    table.ForeignKey(
                        name: "FK_EQP_Run_Record_EQP_DevStatus",
                        column: x => x.MID,
                        principalTable: "EQP_RunStatus",
                        principalColumn: "ID",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "GX_Other_Items",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    GWNAME = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    GWNO = table.Column<int>(nullable: true),
                    MID = table.Column<int>(nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_GX_Other_Items", x => x.ID);
                    table.ForeignKey(
                        name: "FK_GX_Other_Items_GX_Other_Main",
                        column: x => x.MID,
                        principalTable: "GX_Other_Main",
                        principalColumn: "ID",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "LE_TestItems",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    ITEM = table.Column<int>(nullable: true),
                    MID = table.Column<int>(nullable: true),
                    Prod_No = table.Column<string>(unicode: false, maxLength: 50, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_LE_TestItems", x => x.ID);
                    table.ForeignKey(
                        name: "FK_LE_TestItems_LE_Test_Main",
                        column: x => x.MID,
                        principalTable: "LE_Test_Main",
                        principalColumn: "ID",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "Student",
                columns: table => new
                {
                    StudentID = table.Column<string>(maxLength: 50, nullable: false),
                    MajorID = table.Column<int>(nullable: true),
                    Name = table.Column<string>(maxLength: 50, nullable: false),
                    Sex = table.Column<bool>(nullable: false),
                    Age = table.Column<int>(nullable: true),
                    Remark = table.Column<string>(nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_Student", x => x.StudentID);
                    table.ForeignKey(
                        name: "FK_STUDENT_REFERENCE_MAJOR",
                        column: x => x.MajorID,
                        principalTable: "Major",
                        principalColumn: "MajorID",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "MDM_Fixture_FaultBOMDetail",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    CycleUnit = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    MID = table.Column<int>(nullable: true),
                    Qty = table.Column<decimal>(type: "decimal(22, 8)", nullable: true),
                    Rem = table.Column<string>(unicode: false, maxLength: 500, nullable: true),
                    Rep_Cycle = table.Column<int>(nullable: true),
                    SerialNumber = table.Column<int>(nullable: true),
                    SP_Name = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    SP_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_MDM_Fixture_FaultBOMDetail", x => x.ID);
                    table.ForeignKey(
                        name: "FK_MDM_Fixture_FaultBOMDetail_MDM_Fixture_FaultBOM",
                        column: x => x.MID,
                        principalTable: "MDM_Fixture_FaultBOM",
                        principalColumn: "ID",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "TF_BAN",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    MID = table.Column<int>(nullable: false),
                    BAN_NO = table.Column<string>(unicode: false, maxLength: 4, nullable: false),
                    RNG_ITM = table.Column<int>(nullable: false),
                    STR_TIME1 = table.Column<string>(unicode: false, maxLength: 5, nullable: true),
                    STR_TIME2 = table.Column<string>(unicode: false, maxLength: 5, nullable: true),
                    STR_TIME3 = table.Column<string>(unicode: false, maxLength: 5, nullable: true),
                    STR_TIME4 = table.Column<string>(unicode: false, maxLength: 5, nullable: true),
                    STR_TIME5 = table.Column<string>(unicode: false, maxLength: 5, nullable: true),
                    STR_TIME6 = table.Column<string>(unicode: false, maxLength: 5, nullable: true),
                    STR_TIME7 = table.Column<string>(unicode: false, maxLength: 5, nullable: true),
                    RNG_NAME = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    IO_ID = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    OVER_MIN = table.Column<short>(nullable: true),
                    KQ_ID = table.Column<bool>(nullable: true),
                    CARD_ID = table.Column<bool>(nullable: true),
                    VLD_MIN = table.Column<short>(nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TF_BAN", x => x.ID);
                    table.ForeignKey(
                        name: "FK_TF_BAN_MF_BAN",
                        column: x => x.MID,
                        principalTable: "MF_BAN",
                        principalColumn: "ID",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "TF_BOM",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    MID = table.Column<int>(nullable: false),
                    BOM_NO = table.Column<string>(unicode: false, maxLength: 38, nullable: false),
                    ITM = table.Column<int>(nullable: false),
                    PRD_NO = table.Column<string>(unicode: false, maxLength: 30, nullable: true),
                    PRD_MARK = table.Column<string>(unicode: false, maxLength: 40, nullable: true, defaultValueSql: "(space((0)))"),
                    ID_NO = table.Column<string>(unicode: false, maxLength: 38, nullable: true),
                    NAME = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    WH_NO = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    BOM_ID = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    UNIT = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    QTY = table.Column<decimal>(type: "numeric(18, 4)", nullable: true),
                    QTY1 = table.Column<decimal>(type: "numeric(18, 4)", nullable: true),
                    UpLimit = table.Column<decimal>(type: "numeric(18, 4)", nullable: true),
                    LowLimit = table.Column<decimal>(type: "numeric(18, 4)", nullable: true),
                    LOS_RTO = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CST = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    ID_NO_UP = table.Column<string>(unicode: false, maxLength: 38, nullable: true),
                    MO_ID = table.Column<bool>(nullable: true),
                    PRD_NO_CHG = table.Column<string>(unicode: false, maxLength: 255, nullable: true),
                    REM = table.Column<string>(unicode: false, maxLength: 200, nullable: true),
                    START_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    END_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    ZC_NO = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    TW_ID = table.Column<bool>(nullable: true),
                    USEIN_NO = table.Column<string>(unicode: false, maxLength: 1000, nullable: true),
                    QTY_BAS = table.Column<decimal>(type: "numeric(18, 4)", nullable: true),
                    PZ_ID = table.Column<string>(unicode: false, maxLength: 30, nullable: true),
                    UP_STD = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CHG_RTO = table.Column<string>(unicode: false, maxLength: 200, nullable: true),
                    BL_RTO = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_LOST_FIX = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_BL_FIX = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    BatchCheck = table.Column<bool>(nullable: true),
                    Feedmode = table.Column<string>(unicode: false, maxLength: 55, nullable: true),
                    ISEFFECTIVE = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    Accuracy_Trace = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    IsGenerateTraceBarcode = table.Column<bool>(nullable: true),
                    Mateial_Type = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    Proc_VerNo = table.Column<string>(unicode: false, maxLength: 200, nullable: true),
                    Prod_Alternate = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Wastage_Qty = table.Column<decimal>(type: "numeric(18, 2)", nullable: true),
                    Wastage_Rate = table.Column<decimal>(type: "numeric(18, 2)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TF_BOM", x => x.ID);
                    table.ForeignKey(
                        name: "FK_TF_BOM_MF_BOM",
                        column: x => x.MID,
                        principalTable: "MF_BOM",
                        principalColumn: "ID",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "TF_BYJL",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    MID = table.Column<int>(nullable: false),
                    BY_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    ITM = table.Column<int>(nullable: false),
                    BY_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    BYNR_NO = table.Column<string>(unicode: false, maxLength: 8, nullable: true),
                    BYNR_NAME = table.Column<string>(unicode: false, maxLength: 80, nullable: true),
                    BY_FLAG = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    PRE_ITM = table.Column<int>(nullable: true),
                    Rem = table.Column<string>(unicode: false, maxLength: 1000, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TF_BYJL", x => x.ID);
                    table.ForeignKey(
                        name: "FK_TF_BYJL_MF_BYJL",
                        column: x => x.MID,
                        principalTable: "MF_BYJL",
                        principalColumn: "ID",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "TF_CK",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    MID = table.Column<int>(nullable: false),
                    CK_ID = table.Column<string>(unicode: false, maxLength: 2, nullable: false),
                    CK_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    ITM = table.Column<int>(nullable: false),
                    CK_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    WH = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    BAT_NO = table.Column<string>(unicode: false, maxLength: 40, nullable: true),
                    OS_ID = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    OS_NO = table.Column<string>(unicode: false, maxLength: 25, nullable: true),
                    PRD_NO = table.Column<string>(unicode: false, maxLength: 30, nullable: true),
                    PRD_NAME = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    PRD_MARK = table.Column<string>(unicode: false, maxLength: 40, nullable: true, defaultValueSql: "(space((0)))"),
                    UNIT = table.Column<string>(unicode: false, maxLength: 8, nullable: true),
                    QTY = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY1 = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CSTN_SAL = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    UP = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    AMTN_NET = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    AMT = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    TAX = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    DIS_CNT = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    VALID_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    REM = table.Column<string>(unicode: false, maxLength: 200, nullable: true),
                    EST_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    TAX_RTO = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CST_STD = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    UP_QTY1 = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    EST_ITM = table.Column<int>(nullable: true),
                    QTY_PS = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_PS_UNSH = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    ID_NO = table.Column<string>(unicode: false, maxLength: 38, nullable: true),
                    FREE_ID = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    QTY_RK = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_RK_UNSH = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    AMT_FP = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    AMTN_NET_FP = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    TAX_FP = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    PRICE_ID = table.Column<string>(unicode: false, maxLength: 4, nullable: true),
                    OTH_ITM = table.Column<int>(nullable: true),
                    PAK_UNIT = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    PAK_EXC = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    PAK_NW = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    PAK_WEIGHT_UNIT = table.Column<string>(unicode: false, maxLength: 8, nullable: true),
                    PAK_GW = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    PAK_MEAST = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    PAK_MEAST_UNIT = table.Column<string>(unicode: false, maxLength: 8, nullable: true),
                    PRE_ITM = table.Column<int>(nullable: true),
                    ZHANG_ID = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    CHK_TAX = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    SUP_PRD_NO = table.Column<string>(unicode: false, maxLength: 40, nullable: true),
                    COMPOSE_IDNO = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    CUS_OS_NO = table.Column<string>(unicode: false, maxLength: 30, nullable: true),
                    REM2 = table.Column<string>(unicode: false, maxLength: 40, nullable: true),
                    QTY_FP = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    FH_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    QTY_ARK = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_PRE = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_PRE_UNSH = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY1_PRE = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY1_PRE_UNSH = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    RK_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    DEP_RK = table.Column<string>(unicode: false, maxLength: 8, nullable: true),
                    PW_ITM = table.Column<int>(nullable: true),
                    CNTT_NO = table.Column<string>(unicode: false, maxLength: 40, nullable: true),
                    BZ_KND = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    WH_SEND = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    AMT_DIS_CNT = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    FREE_ID_DEF = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    UP_STD = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    SUP_PRD_MARK = table.Column<string>(unicode: false, maxLength: 40, nullable: true),
                    QTY1_FP = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CF_ID = table.Column<string>(unicode: false, maxLength: 4, nullable: true),
                    TT_RNG = table.Column<int>(nullable: true),
                    TT_TYPE_IFRS = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    TT_YM_E = table.Column<DateTime>(type: "datetime", nullable: true),
                    QTY_OS = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    XPM_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    XPM_NO1 = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    XPPRD_ITM = table.Column<int>(nullable: true),
                    XPPRD_ITM1 = table.Column<int>(nullable: true),
                    YH_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    YH_ITM = table.Column<int>(nullable: true),
                    PRM_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    MAI_NO = table.Column<string>(unicode: false, maxLength: 60, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TF_CK", x => x.ID);
                    table.ForeignKey(
                        name: "FK_TF_CK_MF_CK",
                        column: x => x.MID,
                        principalTable: "MF_CK",
                        principalColumn: "ID",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "TF_CS",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    MID = table.Column<int>(nullable: false),
                    CS_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    ITM = table.Column<int>(nullable: false),
                    CHG_ID = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    SO_NO_OLD = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    MO_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    MRP_NO = table.Column<string>(unicode: false, maxLength: 30, nullable: true),
                    UNIT = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    QTY_SO = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_FIN = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    SO_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    QTY = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CUS_NO_OLD = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    CUS_NO = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    EST_DD_OLD = table.Column<DateTime>(type: "datetime", nullable: true),
                    EST_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    REM = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    EST_ITM_OLD = table.Column<int>(nullable: true),
                    EST_ITM = table.Column<int>(nullable: true),
                    TW_ID = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    COMPOSE_IDNO = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    PRD_MARK = table.Column<string>(unicode: false, maxLength: 40, nullable: true, defaultValueSql: "(space((0)))"),
                    DEP_OLD = table.Column<string>(unicode: false, maxLength: 8, nullable: true),
                    DEP = table.Column<string>(unicode: false, maxLength: 8, nullable: true),
                    STA_DD_OLD = table.Column<DateTime>(type: "datetime", nullable: true),
                    STA_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    END_DD_OLD = table.Column<DateTime>(type: "datetime", nullable: true),
                    END_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    CAS_NO_OLD = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    CAS_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    TASK_ID_OLD = table.Column<int>(nullable: true),
                    TASK_ID = table.Column<int>(nullable: true),
                    UP = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    UP_OLD = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    REASON = table.Column<string>(unicode: false, maxLength: 500, nullable: true),
                    PRE_ITM = table.Column<int>(nullable: true),
                    BIL_ID = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    CUR_ID = table.Column<string>(unicode: false, maxLength: 4, nullable: true),
                    CUR_ID_OLD = table.Column<string>(unicode: false, maxLength: 4, nullable: true),
                    RTO_TAX = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    RTO_TAX_OLD = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    REM_MO = table.Column<string>(unicode: false, maxLength: 200, nullable: true),
                    REM_MO_OLD = table.Column<string>(unicode: false, maxLength: 200, nullable: true),
                    TAX_ID = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    TAX_ID_OLD = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    WH = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    WH_OLD = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    BIL_ID_OLD = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    BIL_NO_OLD = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ZC_NO = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    DEP_UP = table.Column<string>(unicode: false, maxLength: 8, nullable: true),
                    DEP_DOWN = table.Column<string>(unicode: false, maxLength: 8, nullable: true),
                    CUS_UP = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    CUS_DOWN = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    ZC_NO_UP = table.Column<string>(unicode: false, maxLength: 440, nullable: true),
                    ZC_NO_DN = table.Column<string>(unicode: false, maxLength: 440, nullable: true),
                    MD_NO = table.Column<string>(unicode: false, maxLength: 200, nullable: true),
                    SEB_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    SEB_NO_OLD = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    BAT_NO = table.Column<string>(unicode: false, maxLength: 40, nullable: true),
                    MO_NO_ADD = table.Column<string>(unicode: false, maxLength: 38, nullable: true),
                    CUS_OS_NO = table.Column<string>(unicode: false, maxLength: 30, nullable: true),
                    CUS_OS_NO_OLD = table.Column<string>(unicode: false, maxLength: 30, nullable: true),
                    BillDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    BilType = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    USED_TIME = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    TIME_CNT = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QC_YN = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    ZC_REM = table.Column<string>(unicode: false, maxLength: 200, nullable: true),
                    BAT_NO_OLD = table.Column<string>(unicode: false, maxLength: 40, nullable: true),
                    BAT_NO_NEW = table.Column<string>(unicode: false, maxLength: 40, nullable: true),
                    QTY1 = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY1_SO = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    FIN_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    Add_Info = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Add_Info_OLD = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    WkCenter_No = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    WkCenter_No_OLD = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    WorkOrder = table.Column<int>(nullable: true),
                    WorkOrder_OLD = table.Column<int>(nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TF_CS", x => x.ID);
                    table.ForeignKey(
                        name: "FK_TF_CS_MF_CS",
                        column: x => x.MID,
                        principalTable: "MF_CS",
                        principalColumn: "ID",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "TF_DS",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    MID = table.Column<int>(nullable: false),
                    DS_ID = table.Column<string>(unicode: false, maxLength: 2, nullable: false),
                    DS_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    ITM = table.Column<int>(nullable: false),
                    DS_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    PRD_NO = table.Column<string>(unicode: false, maxLength: 30, nullable: true),
                    PRD_MARK = table.Column<string>(unicode: false, maxLength: 40, nullable: true, defaultValueSql: "(space((0)))"),
                    SUP_PRD_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    UNIT = table.Column<string>(unicode: false, maxLength: 8, nullable: true),
                    QTY = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY1 = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    WH1 = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    WH2 = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    BAT_NO = table.Column<string>(unicode: false, maxLength: 40, nullable: true),
                    REM = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    BAT_NO2 = table.Column<string>(unicode: false, maxLength: 40, nullable: true),
                    UP = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    AMTN = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    DEP = table.Column<string>(unicode: false, maxLength: 8, nullable: true),
                    SOURCE_ID = table.Column<int>(nullable: true),
                    BIL_ID = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    BIL_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    MO_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    SO_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    FIX_CST = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    CST = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CST_STD = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    EST_ITM = table.Column<int>(nullable: true),
                    PRE_ITM = table.Column<short>(nullable: true),
                    QTY_PS = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_PS_UNSH = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    INVO_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ZK_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    REV = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    GP_ID = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    SQ_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    QTY1_PS = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY1_PS_UNSH = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    MRP_NO = table.Column<string>(unicode: false, maxLength: 30, nullable: true),
                    QTY_DM = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    PRD_MARK2 = table.Column<string>(unicode: false, maxLength: 40, nullable: true, defaultValueSql: "(space((0)))"),
                    ID_NO = table.Column<string>(unicode: false, maxLength: 38, nullable: true),
                    UP_STD = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CUS_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    PRD_NAME = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    QTY_FH = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_FH_UNSH = table.Column<decimal>(type: "numeric(18, 0)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TF_DS", x => x.ID);
                    table.ForeignKey(
                        name: "FK_TF_DS_MF_DS",
                        column: x => x.MID,
                        principalTable: "MF_DS",
                        principalColumn: "ID",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "TF_GR_M",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    MID = table.Column<int>(nullable: false),
                    GR_ID = table.Column<string>(unicode: false, maxLength: 2, nullable: false),
                    GR_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    ITM = table.Column<int>(nullable: false),
                    GR_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    MOD_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    ITM_MJ = table.Column<int>(nullable: true),
                    UT = table.Column<string>(unicode: false, maxLength: 8, nullable: true),
                    SAL_NO_BG = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    DEP_USE = table.Column<string>(unicode: false, maxLength: 8, nullable: true),
                    AMTN_NET = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    TAX_RTO = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    TAX = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    AMTN = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    AMT = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    OPN_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    WH = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    EXP_NO = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    EP_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    REM = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    NAME = table.Column<string>(unicode: false, maxLength: 40, nullable: true),
                    TO_OTH = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    SPC = table.Column<string>(type: "text", nullable: true),
                    BIL_ID = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    BIL_NO = table.Column<string>(unicode: false, maxLength: 25, nullable: true),
                    BIL_PRE_ITM = table.Column<int>(nullable: true),
                    AMT_FP = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    AMTN_NET_FP = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    TAX_FP = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_FP = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    BACK_ID = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    PRE_ITM = table.Column<int>(nullable: true),
                    FT_TYPE = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    FT_MM = table.Column<short>(nullable: true),
                    QTY1_FP = table.Column<decimal>(type: "numeric(18, 0)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TF_GR_M", x => x.ID);
                    table.ForeignKey(
                        name: "FK_TF_GR_M_MF_GR_M",
                        column: x => x.MID,
                        principalTable: "MF_GR_M",
                        principalColumn: "ID",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "TF_GR_S",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    MID = table.Column<int>(nullable: false),
                    GR_ID = table.Column<string>(unicode: false, maxLength: 2, nullable: false),
                    GR_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    ITM = table.Column<int>(nullable: false),
                    GR_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    SEB_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ITM_SB = table.Column<int>(nullable: true),
                    UT = table.Column<string>(unicode: false, maxLength: 8, nullable: true),
                    SAL_NO_BG = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    DEP_USE = table.Column<string>(unicode: false, maxLength: 8, nullable: true),
                    NAME = table.Column<string>(unicode: false, maxLength: 40, nullable: true),
                    AMTN_NET = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    TAX_RTO = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    TAX = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    AMT = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    AMTN = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    OPN_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    EXP_NO = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    EP_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    REM = table.Column<string>(unicode: false, maxLength: 40, nullable: true),
                    TO_OTH = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    BIL_ID = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    BIL_NO = table.Column<string>(unicode: false, maxLength: 25, nullable: true),
                    BIL_PRE_ITM = table.Column<int>(nullable: true),
                    MARK = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    AMT_FP = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    AMTN_NET_FP = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    TAX_FP = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_FP = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    BACK_ID = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    PRE_ITM = table.Column<int>(nullable: true),
                    FX_NAME = table.Column<string>(unicode: false, maxLength: 40, nullable: true),
                    FX_KND = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    FX_SPC = table.Column<string>(unicode: false, maxLength: 400, nullable: true),
                    ADR = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    SHARE_MTH = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    USE_YEARS = table.Column<short>(nullable: true),
                    SHARE_REST = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    YT_NO = table.Column<string>(unicode: false, maxLength: 8, nullable: true),
                    QTY1_FP = table.Column<decimal>(type: "numeric(18, 0)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TF_GR_S", x => x.ID);
                    table.ForeignKey(
                        name: "FK_TF_GR_S_MF_GR_S",
                        column: x => x.MID,
                        principalTable: "MF_GR_S",
                        principalColumn: "ID",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "TF_IC",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    MID = table.Column<int>(nullable: false),
                    IC_ID = table.Column<string>(unicode: false, maxLength: 2, nullable: false),
                    IC_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    ITM = table.Column<int>(nullable: false),
                    IC_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    PRD_NO = table.Column<string>(unicode: false, maxLength: 30, nullable: true),
                    PRD_NAME = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    PRD_MARK = table.Column<string>(unicode: false, maxLength: 40, nullable: true, defaultValueSql: "(space((0)))"),
                    UNIT = table.Column<string>(unicode: false, maxLength: 8, nullable: true),
                    QTY = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY1 = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    WH1 = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    WH2 = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    CST = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    FIX_CST = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    BAT_NO = table.Column<string>(unicode: false, maxLength: 40, nullable: true),
                    REM = table.Column<string>(unicode: false, maxLength: 200, nullable: true),
                    CST_STD = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    BAT_NO2 = table.Column<string>(unicode: false, maxLength: 40, nullable: true),
                    NAME = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    UTNAME = table.Column<string>(unicode: false, maxLength: 4, nullable: true),
                    UPR = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    RL_RECEV = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    COMPOSE_IDNO = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    PRE_ITM = table.Column<int>(nullable: true),
                    QTY_FA = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    RTN_ID = table.Column<string>(unicode: false, maxLength: 4, nullable: true),
                    KEY_ITM = table.Column<int>(nullable: true),
                    UP = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    AMTN_NET = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    BOX_ITM = table.Column<int>(nullable: true),
                    AMTN_NET_FP = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    AMT_FP = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    TAX_FP = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_FP = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    BIL_ID = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    BIL_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    BIL_ITM = table.Column<int>(nullable: true),
                    UP_CST = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    DIS_CNT = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    OS_ID = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    ID_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    EST_ITM = table.Column<short>(nullable: true),
                    AMTN_NET_FP2 = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    AMT_FP2 = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    TAX_FP2 = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_FP2 = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    VALID_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    RK_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    DEP_RK1 = table.Column<string>(unicode: false, maxLength: 8, nullable: true),
                    DEP_RK2 = table.Column<string>(unicode: false, maxLength: 8, nullable: true),
                    MO_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    CST_ML_O = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CST_MAN_O = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CST_MAK_O = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CST_PRD_O = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CST_OUT_O = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CST_ML_I = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CST_MAN_I = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CST_MAK_I = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CST_PRD_I = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CST_OUT_I = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CST_STD_ML = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CST_SMAN = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CST_SMAK = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CST_SPRD = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CST_SOUT = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    PAK_UNIT = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    PAK_EXC = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    PAK_NW_N = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    PAK_NW = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    PAK_WEIGHT_UNIT = table.Column<string>(unicode: false, maxLength: 8, nullable: true),
                    PAK_GW_N = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    PAK_GW = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    PAK_MEAST = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    PAK_MEAST_UNIT = table.Column<string>(unicode: false, maxLength: 8, nullable: true),
                    UP_QTY1 = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    UP_QTY1_CST = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    UP_STD = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_CFM_UNSH = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_LOST_UNSH = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CST_O_IFRS = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CST_I_IFRS = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CST_STD_IFRS = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    UP_MAIN_I_IFRS = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    UP_MAIN_O_IFRS = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    UP_STD_IFRS = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    AMTN_NET_IFRS = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CST_IFRS = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    SUP_PRD_MARK = table.Column<string>(unicode: false, maxLength: 40, nullable: true),
                    FREE_ID = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    DEF_NO = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    FIX_CST1 = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    UP_SO = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    AMT_SO = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY1_FP = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY1_FP2 = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CST_ML_O_IFRS = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CST_MAN_O_IFRS = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CST_MAK_O_IFRS = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CST_PRD_O_IFRS = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CST_OUT_O_IFRS = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CST_OUT = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CST_ML_I_IFRS = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CST_MAN_I_IFRS = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CST_MAK_I_IFRS = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CST_PRD_I_IFRS = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CST_OUT_I_IFRS = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    EP_ID = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    UP_IC = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    AMTN_IC = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    PW_ITM = table.Column<int>(nullable: true),
                    AMTN_EP = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_CFM = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_LOST = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    EST_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    QTY1_CFM = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY1_LOST = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    SUP_PRD_NO = table.Column<string>(unicode: false, maxLength: 40, nullable: true),
                    UP_MAIN_I = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    UP_MAIN_O = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    PRD_MARK2 = table.Column<string>(unicode: false, maxLength: 40, nullable: true, defaultValueSql: "(space((0)))"),
                    QC_FLAG = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    CST_STD_ML_IFRS = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CST_SMAN_IFRS = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CST_SMAK_IFRS = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CST_SPRD_IFRS = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CST_SOUT_IFRS = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    BZ_KND = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UP_QTY1_SO = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    UP_IN = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    AMTN_NET_IN = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    UP_CST_OUT = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    MATRIX_ITM = table.Column<int>(nullable: true),
                    TASK_NO = table.Column<string>(unicode: false, maxLength: 30, nullable: true),
                    PRM_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    SC_DD = table.Column<DateTime>(type: "datetime", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TF_IC", x => x.ID);
                    table.ForeignKey(
                        name: "FK_TF_IC_MF_IC",
                        column: x => x.MID,
                        principalTable: "MF_IC",
                        principalColumn: "ID",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "TF_IJ",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    MID = table.Column<int>(nullable: false),
                    IJ_ID = table.Column<string>(unicode: false, maxLength: 2, nullable: false),
                    IJ_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    ITM = table.Column<int>(nullable: false),
                    IJ_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    PRD_NO = table.Column<string>(unicode: false, maxLength: 30, nullable: true),
                    PRD_NAME = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    PRD_MARK = table.Column<string>(unicode: false, maxLength: 40, nullable: true, defaultValueSql: "(space((0)))"),
                    WH = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    UNIT = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    QTY = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY1 = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CST = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    IN_PRICE = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    FIX_CST = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    BAT_NO = table.Column<string>(unicode: false, maxLength: 40, nullable: true),
                    REM = table.Column<string>(unicode: false, maxLength: 200, nullable: true),
                    CST_STD = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    ID_NO = table.Column<string>(unicode: false, maxLength: 38, nullable: true),
                    IJID = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CNTT_NO = table.Column<string>(unicode: false, maxLength: 40, nullable: true),
                    COMPOSE_IDNO = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    BIL_ID = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    BIL_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    PRE_ITM = table.Column<int>(nullable: true),
                    EST_ITM = table.Column<int>(nullable: true),
                    SPC_NO = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    SUP_PRD_NO = table.Column<string>(unicode: false, maxLength: 40, nullable: true),
                    KEY_ITM = table.Column<int>(nullable: true),
                    BOX_ITM = table.Column<int>(nullable: true),
                    UP = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    VALID_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    RK_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    AMTN = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    SQ_ID = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    SQ_NO = table.Column<string>(unicode: false, maxLength: 25, nullable: true),
                    SQ_ITM = table.Column<int>(nullable: true),
                    DEP_RK = table.Column<string>(unicode: false, maxLength: 8, nullable: true),
                    PW_ITM = table.Column<int>(nullable: true),
                    PRD_NO_SO_RES = table.Column<string>(unicode: false, maxLength: 30, nullable: true),
                    UP_MAIN = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    PAK_UNIT = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    PAK_EXC = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    PAK_NW_N = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    PAK_NW = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    PAK_WEIGHT_UNIT = table.Column<string>(unicode: false, maxLength: 8, nullable: true),
                    PAK_GW_N = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    PAK_GW = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    PAK_MEAST = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    PAK_MEAST_UNIT = table.Column<string>(unicode: false, maxLength: 8, nullable: true),
                    QC_FLAG = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    UP_STD = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CST_IFRS = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CST_STD_IFRS = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    UP_MAIN_IFRS = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    UP_STD_IFRS = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    SUP_PRD_MARK = table.Column<string>(unicode: false, maxLength: 40, nullable: true),
                    MATRIX_ITM = table.Column<int>(nullable: true),
                    ADD_ID = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    ZL_LEVEL = table.Column<string>(unicode: false, maxLength: 40, nullable: true),
                    SC_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    GROUP_HDL_DX = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    BIL_ITM = table.Column<int>(nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TF_IJ", x => x.ID);
                    table.ForeignKey(
                        name: "FK_TF_IJ_MF_IJ",
                        column: x => x.MID,
                        principalTable: "MF_IJ",
                        principalColumn: "ID",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "TF_JH",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    MID = table.Column<int>(nullable: false),
                    JH_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    ITM = table.Column<int>(nullable: false),
                    JH_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    PRD_NO = table.Column<string>(unicode: false, maxLength: 30, nullable: true),
                    PRD_MARK = table.Column<string>(unicode: false, maxLength: 40, nullable: true, defaultValueSql: "(space((0)))"),
                    PRD_NAME = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    WH = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    UNIT = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    QTY = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    EST_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    BAT_NO = table.Column<string>(unicode: false, maxLength: 40, nullable: true),
                    MP_CLS_ID = table.Column<bool>(nullable: true),
                    REM = table.Column<string>(unicode: false, maxLength: 200, nullable: true),
                    CPY_SW = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    ID_NO = table.Column<string>(unicode: false, maxLength: 38, nullable: true),
                    PF_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    QTY1 = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    COMPOSE_IDNO = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    OS_ID = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    OS_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    EST_ITM = table.Column<int>(nullable: true),
                    CUS_OS_NO = table.Column<string>(unicode: false, maxLength: 30, nullable: true),
                    PRE_ITM = table.Column<int>(nullable: true),
                    QTY_PO = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_PO_UNSH = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_USE_WH = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    SUP_PRD_NO = table.Column<string>(unicode: false, maxLength: 40, nullable: true),
                    QTY_SO = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_SO_UNSH = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    SUP_PRD_MARK = table.Column<string>(unicode: false, maxLength: 40, nullable: true),
                    MAI_NO = table.Column<string>(unicode: false, maxLength: 60, nullable: true),
                    CLS_ME_ID = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    QTY_IC = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_IC_UNSH = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_ICSQ = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_ICSQ_UNSH = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_SQ = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_SQ_UNSH = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    BACK_ID = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    STOP_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    STOP_USR = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    PlanStartDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    PlannEndDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    BOMNO = table.Column<string>(unicode: false, maxLength: 50, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TF_JH", x => x.ID);
                    table.ForeignKey(
                        name: "FK_TF_JH_MF_JH",
                        column: x => x.MID,
                        principalTable: "MF_JH",
                        principalColumn: "ID",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "TF_JJ",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    MID = table.Column<int>(nullable: false),
                    PRD_NO = table.Column<string>(unicode: false, maxLength: 30, nullable: false),
                    PRD_MARK = table.Column<string>(unicode: false, maxLength: 40, nullable: false, defaultValueSql: "(space((0)))"),
                    ZC_NO = table.Column<string>(unicode: false, maxLength: 10, nullable: false),
                    BOM_NO = table.Column<string>(unicode: false, maxLength: 38, nullable: false),
                    SEB_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    YGXZ = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    UP_DD = table.Column<DateTime>(type: "datetime", nullable: false),
                    ITM = table.Column<int>(nullable: false),
                    QTY = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    AMTN_UNIT = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    UP_UNIT = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    AMTN_BONU = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    AMTN_KC = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    Rem = table.Column<string>(unicode: false, maxLength: 100, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TF_JJ", x => x.ID);
                    table.ForeignKey(
                        name: "FK_TF_JJ_MF_JJ",
                        column: x => x.MID,
                        principalTable: "MF_JJ",
                        principalColumn: "ID",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "TF_JXZB_JS",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    MID = table.Column<int>(nullable: true),
                    TYPE = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    JX_NAME = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    SB_KND = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    AIMV = table.Column<int>(nullable: true),
                    JXV = table.Column<int>(nullable: true),
                    EXAMDEP = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    EMPHAZB = table.Column<bool>(nullable: true),
                    WEAKZB = table.Column<bool>(nullable: true),
                    MEMO = table.Column<string>(unicode: false, maxLength: 500, nullable: true),
                    WORKSHIFT = table.Column<string>(unicode: false, maxLength: 50, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TF_JXZB_JS", x => x.ID);
                    table.ForeignKey(
                        name: "FK_TF_JXZB_JS_MF_JXZB_JS",
                        column: x => x.MID,
                        principalTable: "MF_JXZB_JS",
                        principalColumn: "ID",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "TF_JXZB_SZ",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    MID = table.Column<int>(nullable: true),
                    TYPE = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    JX_NAME = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    SB_KND = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    AIMV = table.Column<int>(nullable: true),
                    JXV = table.Column<int>(nullable: true),
                    STANV = table.Column<int>(nullable: true),
                    CALLV = table.Column<int>(nullable: true),
                    TIMEUNIT = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    EXAMDEP = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    EMPHAZB = table.Column<bool>(nullable: true),
                    WEAKZB = table.Column<bool>(nullable: true),
                    MEMO = table.Column<string>(unicode: false, maxLength: 500, nullable: true),
                    COMPFORMULA = table.Column<string>(unicode: false, maxLength: 100, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TF_JXZB_SZ", x => x.ID);
                    table.ForeignKey(
                        name: "FK_TF_JXZB_SZ_MF_JXZB_SZ",
                        column: x => x.MID,
                        principalTable: "MF_JXZB_SZ",
                        principalColumn: "ID",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "TF_MD_INOUT",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    MID = table.Column<int>(nullable: false),
                    MOD_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    WH = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    StorageNo = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    MOD_STG_STATE = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    MOD_USE_STATE = table.Column<string>(unicode: false, maxLength: 10, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TF_MD_INOUT", x => x.ID);
                    table.ForeignKey(
                        name: "FK_TF_MD_INOUT_MF_MD_INOUT",
                        column: x => x.MID,
                        principalTable: "MF_MD_INOUT",
                        principalColumn: "ID",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "TF_MJAA",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    MID = table.Column<int>(nullable: false),
                    AA_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    ITM = table.Column<int>(nullable: false),
                    AA_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    BIL_ID = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    BIL_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    TI_ITM = table.Column<short>(nullable: true),
                    WH = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    DEP_USE = table.Column<string>(unicode: false, maxLength: 8, nullable: true),
                    SAL_NO_BG = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    MOD_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    ITM_MJ = table.Column<int>(nullable: true),
                    NAME = table.Column<string>(unicode: false, maxLength: 40, nullable: true),
                    UT = table.Column<string>(unicode: false, maxLength: 8, nullable: true),
                    CST = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    STATE_ID = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    MOD_ID = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    PRE_ITM = table.Column<int>(nullable: true),
                    IS_USE = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    SPC = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    REM = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    FT_TYPE = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    FT_MM = table.Column<short>(nullable: true),
                    USE_TIMES = table.Column<int>(nullable: true),
                    USE_NUM = table.Column<int>(nullable: true),
                    QTY_CROP = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    HOURS_ALL = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    WX_TIMES = table.Column<int>(nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TF_MJAA", x => x.ID);
                    table.ForeignKey(
                        name: "FK_TF_MJAA_MF_MJAA",
                        column: x => x.MID,
                        principalTable: "MF_MJAA",
                        principalColumn: "ID",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "TF_ML",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    MID = table.Column<int>(nullable: false),
                    MLID = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    ML_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ITM = table.Column<int>(nullable: true),
                    ML_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    ML_ID = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    PRD_NO = table.Column<string>(unicode: false, maxLength: 30, nullable: true),
                    PRD_NAME = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    PRD_MARK = table.Column<string>(unicode: false, maxLength: 40, nullable: true, defaultValueSql: "(space((0)))"),
                    UNIT = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    QTY = table.Column<decimal>(type: "numeric(18, 2)", nullable: true),
                    WH = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    REM = table.Column<string>(unicode: false, maxLength: 200, nullable: true),
                    BAT_NO = table.Column<string>(unicode: false, maxLength: 40, nullable: true),
                    MO_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    TZ_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    BIL_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    BIL_ITM = table.Column<int>(nullable: true),
                    ZC_NO = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    ID_NO = table.Column<string>(unicode: false, maxLength: 38, nullable: true),
                    EST_ITM = table.Column<int>(nullable: true),
                    QTY_STD = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    ZC_PRD = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    QTY_LEFT = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_OVER = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    RK_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    VALID_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    QTY_RTN = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_QL_GG = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QL_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    QTY_ML = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_WH = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_RSV = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    SC_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    PRE_ITM = table.Column<int>(nullable: true),
                    beginningofPeriod = table.Column<decimal>(type: "decimal(18, 2)", nullable: true),
                    IsLock = table.Column<string>(unicode: false, maxLength: 10, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TF_ML", x => x.ID);
                    table.ForeignKey(
                        name: "FK_TF_ML_MF_ML",
                        column: x => x.MID,
                        principalTable: "MF_ML",
                        principalColumn: "ID",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "TF_MM0",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    MID = table.Column<int>(nullable: false),
                    MM_ID = table.Column<string>(unicode: false, maxLength: 2, nullable: false),
                    MM_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    ITM = table.Column<int>(nullable: false),
                    MM_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    MO_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    TW_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    SO_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    CUS_OS_NO = table.Column<string>(unicode: false, maxLength: 30, nullable: true),
                    DEP = table.Column<string>(unicode: false, maxLength: 8, nullable: true),
                    BAT_NO = table.Column<string>(unicode: false, maxLength: 40, nullable: true),
                    PRD_NO = table.Column<string>(unicode: false, maxLength: 30, nullable: true),
                    ID_NO = table.Column<string>(unicode: false, maxLength: 38, nullable: true),
                    PRD_MARK = table.Column<string>(unicode: false, maxLength: 40, nullable: true),
                    PRD_NAME = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    UNIT = table.Column<string>(unicode: false, maxLength: 8, nullable: true),
                    WH = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    VALID_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    FREE_ID = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    PRE_ITM = table.Column<int>(nullable: true),
                    EST_ITM = table.Column<int>(nullable: true),
                    QTY = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY1 = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_RTN = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_SA = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    AMTN_VAL = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CST_MAKE = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CST_PRD = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CST_OUT = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CST_MAN = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CST = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    USED_TIME = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    TIME_CNT = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CST_SMAKE = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CST_SPRD = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CST_SOUT = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CST_SMAN = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CST_STD = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    USED_STIME = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    TIME_SCNT = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    OLD_MM_ID = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    OLD_MM_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    MM_ITM = table.Column<int>(nullable: true),
                    CALC_ID = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    ZC_FLAG = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    CNTT_NO = table.Column<string>(unicode: false, maxLength: 40, nullable: true),
                    CAS_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    TASK_ID = table.Column<int>(nullable: true),
                    RK_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    DEP_RK = table.Column<string>(unicode: false, maxLength: 8, nullable: true),
                    REM = table.Column<string>(unicode: false, maxLength: 200, nullable: true),
                    ML_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    BIL_ID = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    BIL_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    BIL_ITM = table.Column<int>(nullable: true),
                    QC_FLAG = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    UP_MAIN = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    UP_STD = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CST_IFRS = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CST_MAN_IFRS = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CST_MAK_IFRS = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CST_PRD_IFRS = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CST_OUT_IFRS = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CST_STD_IFRS = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CST_SMAN_IFRS = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CST_SMAK_IFRS = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CST_SPRD_IFRS = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CST_SOUT_IFRS = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    GO_WR = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    UP_MAIN_IFRS = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    UP_STD_IFRS = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    DC_QTYLOST = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    FCP_TYPEIS1 = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    FCP_TYPEIS2 = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    QTY_LOST = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY1_LOST = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    SC_DD = table.Column<DateTime>(type: "datetime", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TF_MM0", x => x.ID);
                    table.ForeignKey(
                        name: "FK_TF_MM0_MF_MM0",
                        column: x => x.MID,
                        principalTable: "MF_MM0",
                        principalColumn: "ID",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "TF_MMJH",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    MID = table.Column<int>(nullable: false),
                    JH_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    ITM = table.Column<int>(nullable: false),
                    JH_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    PRD_NO = table.Column<string>(unicode: false, maxLength: 30, nullable: true),
                    PRD_MARK = table.Column<string>(unicode: false, maxLength: 40, nullable: true, defaultValueSql: "(space((0)))"),
                    PRD_NAME = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    WH = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    UNIT = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    QTY = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_PT = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    EST_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    BAT_NO = table.Column<string>(unicode: false, maxLength: 40, nullable: true),
                    Rem = table.Column<string>(unicode: false, maxLength: 200, nullable: true),
                    ID_NO = table.Column<string>(unicode: false, maxLength: 38, nullable: true),
                    PF_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    QTY1 = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    EST_ITM = table.Column<int>(nullable: true),
                    SUP_PRD_NO = table.Column<string>(unicode: false, maxLength: 40, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TF_MMJH", x => x.ID);
                    table.ForeignKey(
                        name: "FK_TF_MMJH_MF_MMJH",
                        column: x => x.MID,
                        principalTable: "MF_MMJH",
                        principalColumn: "ID",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "TF_MO",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    MID = table.Column<int>(nullable: false),
                    MO_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    ITM = table.Column<int>(nullable: false),
                    PRD_NO = table.Column<string>(unicode: false, maxLength: 30, nullable: true),
                    PRD_NAME = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    PRD_MARK = table.Column<string>(unicode: false, maxLength: 40, nullable: true, defaultValueSql: "(space((0)))"),
                    WH = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    UNIT = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    QTY_RSV = table.Column<decimal>(type: "numeric(22, 0)", nullable: true),
                    QTY_LOST = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY = table.Column<decimal>(type: "numeric(18, 0)", nullable: true, defaultValueSql: "('0')"),
                    BAT_NO = table.Column<string>(unicode: false, maxLength: 40, nullable: true),
                    REM = table.Column<string>(unicode: false, maxLength: 200, nullable: true),
                    CST = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    ZC_NO = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    TW_ID = table.Column<bool>(nullable: true),
                    USEIN_NO = table.Column<string>(unicode: false, maxLength: 1000, nullable: true),
                    PRD_NO_CHG = table.Column<string>(unicode: false, maxLength: 255, nullable: true),
                    QTY1_RSV = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    ID_NO = table.Column<string>(unicode: false, maxLength: 38, nullable: true),
                    QTY_TS = table.Column<decimal>(type: "numeric(18, 0)", nullable: true, defaultValueSql: "('0')"),
                    QTY_TS_UNSH = table.Column<decimal>(type: "numeric(18, 0)", nullable: true, defaultValueSql: "('0')"),
                    TS_ITM = table.Column<int>(nullable: true),
                    EST_ITM = table.Column<int>(nullable: true),
                    PRE_ITM = table.Column<int>(nullable: true),
                    LOS_RTO = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_STD = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    SEB_NO = table.Column<string>(unicode: false, maxLength: 25, nullable: true),
                    GRP_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ZC_PRD = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    CHG_RTO = table.Column<string>(unicode: false, maxLength: 200, nullable: true),
                    CHG_ITM = table.Column<int>(nullable: true),
                    QTY_CHG_RTO = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_QL = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_QL_UNSH = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_DM = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_DM_UNSH = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY1_DM = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_BL = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CST_ML = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CST_MAN = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CST_MAK = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CST_PRD = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CST_OUT = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_BOM = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QC_FLAG = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    QTY_BL_UNSH = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_BAS = table.Column<decimal>(type: "numeric(18, 0)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TF_MO", x => x.ID);
                    table.ForeignKey(
                        name: "FK_TF_MO_MF_MO",
                        column: x => x.MID,
                        principalTable: "MF_MO",
                        principalColumn: "ID",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "TF_MSC",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    MID = table.Column<int>(nullable: false),
                    MSC_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    ITM = table.Column<int>(nullable: false),
                    MSC_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    MOD_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ITM_MOD = table.Column<int>(nullable: true),
                    DEP = table.Column<string>(unicode: false, maxLength: 8, nullable: true),
                    SEB_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    PRE_RTN_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    RTN_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    REM = table.Column<string>(unicode: false, maxLength: 40, nullable: true),
                    TO_OTH = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    CST = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    AMTN_F = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    BIL_ID = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    BIL_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TF_MSC", x => x.ID);
                    table.ForeignKey(
                        name: "FK_TF_MSC_MF_MSC",
                        column: x => x.MID,
                        principalTable: "MF_MSC",
                        principalColumn: "ID",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "TF_POS",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    MID = table.Column<int>(nullable: false),
                    No = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    OS_ID = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    OS_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ITM = table.Column<int>(nullable: true),
                    QT_NO = table.Column<string>(unicode: false, maxLength: 25, nullable: true),
                    PRD_NO = table.Column<string>(unicode: false, maxLength: 30, nullable: true),
                    PRD_NAME = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    PRD_MARK = table.Column<string>(unicode: false, maxLength: 40, nullable: true, defaultValueSql: "(space((0)))"),
                    WH = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    UNIT = table.Column<string>(unicode: false, maxLength: 8, nullable: true),
                    OS_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    TRAY_NO = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    CYL_NO = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    SHIP_NO = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    QTY = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    UP = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    DIS_CNT = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    AMT = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    AMTN = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    TAX = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY1 = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_PS = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_PS_UNSH = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY1_PS = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY1_PS_UNSH = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    EST_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    PAK_UNIT = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    PAK_EXC = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    PAK_NW = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    PAK_WEIGHT_UNIT = table.Column<string>(unicode: false, maxLength: 8, nullable: true),
                    PAK_GW = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    PAK_MEAST = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    PAK_MEAST_UNIT = table.Column<string>(unicode: false, maxLength: 8, nullable: true),
                    VALID_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    REM = table.Column<string>(unicode: false, maxLength: 200, nullable: true),
                    SOURCE_ID = table.Column<int>(nullable: true),
                    AMTN_COM = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CLS_MP_ID = table.Column<bool>(nullable: true),
                    CST_STD = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    UP1 = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    EST_ITM = table.Column<int>(nullable: true),
                    SEND_WH = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    UT = table.Column<string>(unicode: false, maxLength: 8, nullable: true),
                    CODE_NO = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    ATTR = table.Column<string>(unicode: false, maxLength: 30, nullable: true),
                    QTY_RK = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_RK_UNSH = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    BAT_NO = table.Column<string>(unicode: false, maxLength: 40, nullable: true),
                    PRE_EST_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    QTY_PO = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_PO_UNSH = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_PRE = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_PRE_UNSH = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    PRE_ITM = table.Column<int>(nullable: true),
                    ID_NO = table.Column<string>(unicode: false, maxLength: 38, nullable: true),
                    QTY_YS = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_YS_UNSH = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    FREE_ID = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    BIL_ID = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    BZ_KND = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    PRICE_ID = table.Column<string>(unicode: false, maxLength: 4, nullable: true),
                    OTH_ITM = table.Column<int>(nullable: true),
                    TAX_RTO = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    AMT_LC = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_BACK = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CHK_TAX = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    SUP_PRD_NO = table.Column<string>(unicode: false, maxLength: 40, nullable: true),
                    COMPOSE_IDNO = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    QTY_SL = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_SL_UNSH = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CUS_OS_NO = table.Column<string>(unicode: false, maxLength: 30, nullable: true),
                    OTH_ID = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    OTH_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ISVIR = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    JH_ID = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    QTY_FH = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_FH_UNSH = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    PRD_NO_SO_RES = table.Column<string>(unicode: false, maxLength: 30, nullable: true),
                    FH_NO = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    FH_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    QTY_IC = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_IC_UNSH = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    BOX_ITM = table.Column<int>(nullable: true),
                    QTY_ARK = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_PS_ARK = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_PRE_ARK = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_CK_ARK = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    MAI_NO = table.Column<string>(unicode: false, maxLength: 60, nullable: true),
                    SCM_USR = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    SCM_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    QTY_SQ = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_SQ_UNSH = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    UP_PO = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    SQ_ID = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    SQ_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    SQ_ITM = table.Column<int>(nullable: true),
                    QTY_FRAC1 = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_FRAC2 = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_FRAC3 = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_FRAC4 = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_USE_WH = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    TRD_ID = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    TRD_NO = table.Column<string>(unicode: false, maxLength: 30, nullable: true),
                    TRD_ITM = table.Column<int>(nullable: true),
                    PRD_NAME_SO_RES = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    PICPATH = table.Column<string>(unicode: false, maxLength: 128, nullable: true),
                    CHK_RTN = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    MO_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    MO_ID = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    WC_NO = table.Column<string>(unicode: false, maxLength: 25, nullable: true),
                    MTN_TYPE = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    MTN_ALL_ID = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    MTN_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    RTN_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    MTN_REM = table.Column<string>(type: "text", nullable: true),
                    AMT_DIS_CNT = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    OTH_ITM1 = table.Column<int>(nullable: true),
                    FREE_ID_DEF = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    UP_STD = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_AE = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    SUP_PRD_NM = table.Column<string>(unicode: false, maxLength: 30, nullable: true),
                    DETAIL = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    TB_OID = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    SUP_PRD_MARK = table.Column<string>(unicode: false, maxLength: 40, nullable: true),
                    DEF_NO = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    MATRIX_ITM = table.Column<int>(nullable: true),
                    CF_ID = table.Column<string>(unicode: false, maxLength: 4, nullable: true),
                    TT_RNG = table.Column<int>(nullable: true),
                    TT_TYPE_IFRS = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    TT_YM_E = table.Column<DateTime>(type: "datetime", nullable: true),
                    QTY_IO = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_IO_UNSH = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    IS_SP = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    MRP_NOS = table.Column<string>(unicode: false, maxLength: 800, nullable: true),
                    OR_ITM = table.Column<int>(nullable: true),
                    KIND_NO = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    XPM_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    XPM_NO1 = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    XPPRD_ITM = table.Column<int>(nullable: true),
                    XPPRD_ITM1 = table.Column<int>(nullable: true),
                    CLS_ME_ID = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    UP_SAL = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    AMTN_SAL = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    TASK_NO = table.Column<string>(unicode: false, maxLength: 30, nullable: true),
                    PRM_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    QTY_LOCK = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_LOCK_CK = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_LOCK_CK_UNSH = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CHK_REP = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    REM_XP = table.Column<string>(unicode: false, maxLength: 200, nullable: true),
                    PROMO_ID = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    FRELATION = table.Column<string>(unicode: false, maxLength: 40, nullable: true),
                    RECORD_TYPE = table.Column<short>(nullable: true),
                    ZP_BEIZSMM = table.Column<string>(unicode: false, maxLength: 40, nullable: true),
                    ZP_CHKVAL = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    KEY_ITM = table.Column<int>(nullable: true),
                    REMARK = table.Column<string>(unicode: false, maxLength: 300, nullable: true),
                    REMARK_ENG = table.Column<string>(unicode: false, maxLength: 300, nullable: true),
                    CUS_KH_NO = table.Column<string>(unicode: false, maxLength: 30, nullable: true),
                    GROUP_DEP = table.Column<string>(unicode: false, maxLength: 8, nullable: true),
                    UP_NOTAX = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    DateOfMF = table.Column<DateTime>(type: "datetime", nullable: true),
                    BAT_NO_OUTER = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    Ver_No = table.Column<string>(unicode: false, maxLength: 50, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TF_POS", x => x.ID);
                    table.ForeignKey(
                        name: "FK_TF_POS_MF_POS",
                        column: x => x.MID,
                        principalTable: "MF_POS",
                        principalColumn: "ID",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "TF_PROMV",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    MID = table.Column<int>(nullable: false),
                    DEP_NO = table.Column<string>(unicode: false, maxLength: 30, nullable: true),
                    DEP_NAME = table.Column<string>(unicode: false, maxLength: 30, nullable: true),
                    BarcodeNO = table.Column<string>(unicode: false, maxLength: 200, nullable: false, defaultValueSql: "('')"),
                    ZC_NO = table.Column<string>(unicode: false, maxLength: 30, nullable: false, defaultValueSql: "('')"),
                    ZC_NAME = table.Column<string>(unicode: false, maxLength: 30, nullable: false, defaultValueSql: "('')"),
                    PRD_NO = table.Column<string>(unicode: false, maxLength: 30, nullable: false, defaultValueSql: "('')"),
                    PRD_NAME = table.Column<string>(unicode: false, maxLength: 100, nullable: false, defaultValueSql: "('')"),
                    PRD_SPC = table.Column<string>(unicode: false, maxLength: 200, nullable: true, defaultValueSql: "('')"),
                    BAT_NO = table.Column<string>(unicode: false, maxLength: 30, nullable: true, defaultValueSql: "('')"),
                    QTY = table.Column<decimal>(type: "numeric(18, 0)", nullable: true, defaultValueSql: "((0))"),
                    QTY1 = table.Column<decimal>(type: "numeric(18, 0)", nullable: true, defaultValueSql: "((0))"),
                    UNIT = table.Column<string>(unicode: false, maxLength: 10, nullable: false, defaultValueSql: "('')"),
                    RBILL_TYPE = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    RBILL_NO = table.Column<string>(unicode: false, maxLength: 100, nullable: true, defaultValueSql: "('')"),
                    ITM = table.Column<int>(nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TF_PROMV", x => x.ID);
                    table.ForeignKey(
                        name: "FK_TF_PROMV_MF_PROMV",
                        column: x => x.MID,
                        principalTable: "MF_PROMV",
                        principalColumn: "ID",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "TF_PSS",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    MID = table.Column<int>(nullable: false),
                    PS_ID = table.Column<string>(unicode: false, maxLength: 2, nullable: false),
                    PS_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    ITM = table.Column<int>(nullable: false),
                    PS_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    WH = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    BAT_NO = table.Column<string>(unicode: false, maxLength: 40, nullable: true),
                    OS_NO = table.Column<string>(unicode: false, maxLength: 25, nullable: true),
                    PRD_NO = table.Column<string>(unicode: false, maxLength: 30, nullable: true),
                    PRD_NAME = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    PRD_MARK = table.Column<string>(unicode: false, maxLength: 40, nullable: true, defaultValueSql: "(space((0)))"),
                    UNIT = table.Column<string>(unicode: false, maxLength: 8, nullable: true),
                    QTY = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY1 = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CST_SAL = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CSTN_SAL = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    UP = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    SOURCE_ID = table.Column<int>(nullable: true),
                    BIL_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    AMTN_NET = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    AMT = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    TAX = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    DIS_CNT = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_RTN = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_RTN_UNSH = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    AMTN_EP = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    PAK_UNIT = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    PAK_EXC = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    PAK_NW_N = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    PAK_NW = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    PAK_WEIGHT_UNIT = table.Column<string>(unicode: false, maxLength: 8, nullable: true),
                    PAK_GW_N = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    PAK_GW = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    PAK_MEAST = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    PAK_MEAST_UNIT = table.Column<string>(unicode: false, maxLength: 8, nullable: true),
                    VALID_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    REM = table.Column<string>(unicode: false, maxLength: 200, nullable: true),
                    AMTN_COM = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    EST_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    TAX_RTO = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CST_STD = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    UP_QTY1 = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    EST_ITM = table.Column<int>(nullable: true),
                    OS_ID = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    QTY_PS = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    PRE_ITM = table.Column<int>(nullable: true),
                    SEND_WH = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    QTY_LOSS = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY1_LOSS = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTYS = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    AMTN_SNET = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    TAXS = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    UT = table.Column<string>(unicode: false, maxLength: 8, nullable: true),
                    WT = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    AMTN = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CODE_NO = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    ATTR = table.Column<string>(unicode: false, maxLength: 30, nullable: true),
                    QTY_FX = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_FX_UNSH = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    ID_NO = table.Column<string>(unicode: false, maxLength: 38, nullable: true),
                    FREE_ID = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    CK_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    MM_ID = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    AMT_FP = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    AMTN_NET_FP = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    TAX_FP = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_CK = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_CK_UNSH = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    BZ_KND = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    PRICE_ID = table.Column<string>(unicode: false, maxLength: 4, nullable: true),
                    OTH_ITM = table.Column<int>(nullable: true),
                    CUS_OS_NO = table.Column<string>(unicode: false, maxLength: 30, nullable: true),
                    AMTN_FT = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    RK_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    CHK_TAX = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    SUP_PRD_NO = table.Column<string>(unicode: false, maxLength: 40, nullable: true),
                    CNTT_NO = table.Column<string>(unicode: false, maxLength: 40, nullable: true),
                    TYPE_SGT = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    GF_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    PK_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    SP_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    COMPOSE_IDNO = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    B_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    E_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    QTY_SB = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_SB_UNSH = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    TI_ITM = table.Column<int>(nullable: true),
                    QTY_FP = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    SL_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    SH_NO_CUS = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    AMTN_EP1 = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    RTO_EP = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    FH_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    AMTN_FL = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    PRD_NO_SO_RES = table.Column<string>(unicode: false, maxLength: 30, nullable: true),
                    AMTN_SALE = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    UP_SALE = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QC_FLAG = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    SL_ITM = table.Column<int>(nullable: true),
                    QTY_ARK = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_RTN_ARK = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QC_ITM = table.Column<int>(nullable: true),
                    QTY_OUT = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_ZQ = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    BL_OS_ID = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    BL_OS_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    BL_OS_ITM = table.Column<int>(nullable: true),
                    RK_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    BOX_ITM = table.Column<int>(nullable: true),
                    DEP_RK = table.Column<string>(unicode: false, maxLength: 8, nullable: true),
                    QTY_XB = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_XB_UNSH = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    PW_ITM = table.Column<int>(nullable: true),
                    CST_ML = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CST_MAN = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CST_MAK = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CST_PRD = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CST_OUT = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CST_STD_ML = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CST_SMAN = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CST_SMAK = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CST_SPRD = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CST_SOUT = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_OI = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    MTN_REM = table.Column<string>(type: "text", nullable: true),
                    ME_FLAG = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    AMT_DIS_CNT = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    SPC_NO = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    INV_B2C = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    SBAC_CHK = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    FREE_ID_DEF = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    SAL_NO = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    SAL_NO1 = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    MAI_NO = table.Column<string>(unicode: false, maxLength: 60, nullable: true),
                    AMTN_RSV = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    AMT_ZG_FP = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    AMTN_NET_ZG_FP = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    TAX_ZG_FP = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    UP_STD = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    AMTN_IFRS = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    AMTN_NET_IFRS = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CSTN_SAL_IFRS = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    AMTN_EP_IFRS = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CST_STD_IFRS = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    TAX_IFRS = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    UP_MAIN_IFRS = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    UP_STD_IFRS = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    SUP_PRD_MARK = table.Column<string>(unicode: false, maxLength: 40, nullable: true),
                    DEF_NO = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    MO_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    QTY1_FP = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_POS_SO = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    ITM_POSUP = table.Column<int>(nullable: true),
                    CST_ML_IFRS = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CST_MAN_IFRS = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CST_MAK_IFRS = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CST_PRD_IFRS = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CST_OUT_IFRS = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_SQ = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CST_STD_ML_IFRS = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CST_SMAN_IFRS = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CST_SMAK_IFRS = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CST_SPRD_IFRS = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CST_SOUT_IFRS = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    TT_RNG = table.Column<int>(nullable: true),
                    TT_TYPE_IFRS = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    TT_YM_B = table.Column<DateTime>(type: "datetime", nullable: true),
                    TT_YM_E = table.Column<DateTime>(type: "datetime", nullable: true),
                    SPC_NO1 = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    WC_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    IS_SP = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    XPM_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    XPM_NO1 = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    XPPRD_ITM = table.Column<int>(nullable: true),
                    XPPRD_ITM1 = table.Column<int>(nullable: true),
                    TASK_NO = table.Column<string>(unicode: false, maxLength: 30, nullable: true),
                    PRM_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    REM_XP = table.Column<string>(unicode: false, maxLength: 200, nullable: true),
                    NB_BOX_NO = table.Column<string>(unicode: false, maxLength: 255, nullable: true),
                    PROMO_ID = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    UP_OLD = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    AMTN_OLD = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    UP_SP_SW = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    MBDIS_ID = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    DZ_USR = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    DZ_DATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    PRDMO_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    CLS_ID = table.Column<bool>(nullable: true),
                    SC_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    QTY_CFM = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_LOST = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CFM_MAN = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    CFM_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    ZL_LEVEL = table.Column<string>(unicode: false, maxLength: 40, nullable: true),
                    ADD_REMS = table.Column<string>(unicode: false, maxLength: 200, nullable: true),
                    CFM_BIL_ID = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    CFM_BIL_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    CFM_BIL_ITM = table.Column<int>(nullable: true),
                    GROUP_HDL_DX = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    YM_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    YM_ITM = table.Column<int>(nullable: true),
                    GROUP_CY_HDL = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    GROUP_CY_ID = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    GROUP_CY_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    GROUP_CY_ITM = table.Column<int>(nullable: true),
                    GROUP_DX_PCID = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    GROUP_DX_PCNO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    QTY_GROUP_DXCY = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    NB_ZX_NO = table.Column<string>(unicode: false, maxLength: 255, nullable: true),
                    TRD_ID = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    TRD_NO = table.Column<string>(unicode: false, maxLength: 30, nullable: true),
                    TRD_ITM = table.Column<int>(nullable: true),
                    MM_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    MM_ITM = table.Column<int>(nullable: true),
                    FW_FLAG = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    ZDZZ = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    MB_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UP_MAIN = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CHK_RTN = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    OM_ID = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    OM_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    OM_ITM = table.Column<int>(nullable: true),
                    MATRIX_ITM = table.Column<int>(nullable: true),
                    NOJF_ID = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    QTY_SQ_UNSH = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    YH_ID = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    YH_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ITM_YH = table.Column<int>(nullable: true),
                    CF_ID = table.Column<string>(unicode: false, maxLength: 4, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TF_PSS", x => x.ID);
                    table.ForeignKey(
                        name: "FK_TF_PSS_MF_PSS",
                        column: x => x.MID,
                        principalTable: "MF_PSS",
                        principalColumn: "ID",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "TF_QL",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    MID = table.Column<int>(nullable: false),
                    QL_ID = table.Column<string>(unicode: false, maxLength: 2, nullable: false),
                    QL_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    ITM = table.Column<int>(nullable: false),
                    QL_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    QL_TYPE = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    PRD_NO = table.Column<string>(unicode: false, maxLength: 30, nullable: true),
                    PRD_NAME = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    PRD_MARK = table.Column<string>(unicode: false, maxLength: 40, nullable: true, defaultValueSql: "(space((0)))"),
                    UNIT = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    WH = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    QTY = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY1 = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CST = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    BAT_NO = table.Column<string>(unicode: false, maxLength: 40, nullable: true),
                    MO_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    TZ_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    BIL_ID = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    BIL_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    CPY_SW = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    CST_STD = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    PRD_NO_CHG = table.Column<string>(unicode: false, maxLength: 255, nullable: true),
                    ID_NO = table.Column<string>(unicode: false, maxLength: 38, nullable: true),
                    PRD_NO_MO = table.Column<string>(unicode: false, maxLength: 30, nullable: true),
                    QTY_RTN = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_RTN_UNSH = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY1_RTN = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_RK = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY1_RK = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_LQ = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_DIFF = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CNTT_NO = table.Column<string>(unicode: false, maxLength: 40, nullable: true),
                    PRE_ITM = table.Column<int>(nullable: true),
                    EST_ITM = table.Column<int>(nullable: true),
                    USEIN_NO = table.Column<string>(unicode: false, maxLength: 1000, nullable: true),
                    LOS_RTO = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_STD = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    ZC_PRD = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    QTY_LEFT = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CHG_RTO = table.Column<string>(unicode: false, maxLength: 200, nullable: true),
                    CHG_ITM = table.Column<int>(nullable: true),
                    QTY_CHG_RTO = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    ZC_NO = table.Column<string>(unicode: false, maxLength: 200, nullable: true),
                    REM = table.Column<string>(unicode: false, maxLength: 200, nullable: true),
                    PRT_NUM = table.Column<int>(nullable: true),
                    QTY_QL = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    UP_STD = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    DEP = table.Column<string>(unicode: false, maxLength: 8, nullable: true),
                    REASON = table.Column<string>(type: "text", nullable: true),
                    QTY_QL_RTN = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_RSV = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_LOST = table.Column<decimal>(type: "numeric(18, 0)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TF_QL", x => x.ID);
                    table.ForeignKey(
                        name: "FK_TF_QL_MF_QL",
                        column: x => x.MID,
                        principalTable: "MF_QL",
                        principalColumn: "ID",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "TF_QY_M",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    MID = table.Column<int>(nullable: false),
                    QY_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    ITM = table.Column<int>(nullable: false),
                    QY_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    BIL_ID = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    BIL_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    MOD_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    ITM_MJ = table.Column<int>(nullable: true),
                    REM = table.Column<string>(unicode: false, maxLength: 40, nullable: true),
                    WH = table.Column<string>(unicode: false, maxLength: 12, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TF_QY_M", x => x.ID);
                    table.ForeignKey(
                        name: "FK_TF_QY_M_MF_QY_M",
                        column: x => x.MID,
                        principalTable: "MF_QY_M",
                        principalColumn: "ID",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "TF_QY_S",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    MID = table.Column<int>(nullable: false),
                    QY_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    ITM = table.Column<int>(nullable: false),
                    QY_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    SEB_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ITM_SB = table.Column<int>(nullable: true),
                    BIL_ID = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    BIL_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    Rem = table.Column<string>(unicode: false, maxLength: 40, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TF_QY_S", x => x.ID);
                    table.ForeignKey(
                        name: "FK_TF_QY_S_MF_QY_S",
                        column: x => x.MID,
                        principalTable: "MF_QY_S",
                        principalColumn: "ID",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "TF_RSC",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    MID = table.Column<int>(nullable: false),
                    RSC_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    ITM = table.Column<int>(nullable: false),
                    RSC_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    MOD_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    ITM_MOD = table.Column<int>(nullable: true),
                    USE_HOURS = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    BIL_ID = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    BIL_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    WH = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    REM = table.Column<string>(unicode: false, maxLength: 40, nullable: true),
                    USE_NUM = table.Column<int>(nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TF_RSC", x => x.ID);
                    table.ForeignKey(
                        name: "FK_TF_RSC_MF_RSC",
                        column: x => x.MID,
                        principalTable: "MF_RSC",
                        principalColumn: "ID",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "TF_RX_M",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    MID = table.Column<int>(nullable: false),
                    RX_ID = table.Column<string>(unicode: false, maxLength: 2, nullable: false),
                    RX_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    ITM = table.Column<int>(nullable: false),
                    RX_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    MOD_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    ITM_MJ = table.Column<int>(nullable: true),
                    WH = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    REM = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    AMTN_NET = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    TAX_RTO = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    TAX = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    AMT = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    EXP_NO = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    EP_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    RX_STATUS = table.Column<string>(unicode: false, maxLength: 4, nullable: true),
                    SPC = table.Column<string>(type: "text", nullable: true),
                    INV_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ADD_YEAR = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    ADD_TIME = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    ADD_CROP = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    INV_BIL_ID = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    INV_BIL_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    RS_NO = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    RS_DESP = table.Column<string>(unicode: false, maxLength: 200, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TF_RX_M", x => x.ID);
                    table.ForeignKey(
                        name: "FK_TF_RX_M_MF_RX_M",
                        column: x => x.MID,
                        principalTable: "MF_RX_M",
                        principalColumn: "ID",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "TF_RX_S",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    MID = table.Column<int>(nullable: false),
                    RX_ID = table.Column<string>(unicode: false, maxLength: 2, nullable: false),
                    RX_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    ITM = table.Column<int>(nullable: false),
                    RX_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    SEB_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    SEB_NAME = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    SEB_PART = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    FA_APPEARANCE = table.Column<string>(unicode: false, maxLength: 200, nullable: true),
                    WXJ_CONTENT = table.Column<string>(unicode: false, maxLength: 200, nullable: true),
                    ITM_SB = table.Column<int>(nullable: true),
                    DEP_REP = table.Column<string>(unicode: false, maxLength: 8, nullable: true),
                    REM = table.Column<string>(unicode: false, maxLength: 200, nullable: true),
                    BIL_ID = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    BIL_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    FA_RESSON = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    FA_TYPE = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    LESSONS = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    RS_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    RS_DESP = table.Column<string>(unicode: false, maxLength: 200, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TF_RX_S", x => x.ID);
                    table.ForeignKey(
                        name: "FK_TF_RX_S_MF_RX_S",
                        column: x => x.MID,
                        principalTable: "MF_RX_S",
                        principalColumn: "ID",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "TF_SBAA",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    MID = table.Column<int>(nullable: false),
                    AA_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    ITM = table.Column<short>(nullable: false),
                    AA_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    BIL_ID = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    BIL_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    TI_ITM = table.Column<short>(nullable: true),
                    ADR = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    DEP_USE = table.Column<string>(unicode: false, maxLength: 8, nullable: true),
                    SAL_NO_BG = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    SEB_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ITM_SB = table.Column<int>(nullable: true),
                    NAME = table.Column<string>(unicode: false, maxLength: 40, nullable: true),
                    UT = table.Column<string>(unicode: false, maxLength: 8, nullable: true),
                    CST = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    STATE_ID = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    MOD_ID = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    PRE_ITM = table.Column<int>(nullable: true),
                    IS_USE = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    Rem = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    FX_KND = table.Column<string>(unicode: false, maxLength: 10, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TF_SBAA", x => x.ID);
                    table.ForeignKey(
                        name: "FK_TF_SBAA_MF_SBAA",
                        column: x => x.MID,
                        principalTable: "MF_SBAA",
                        principalColumn: "ID",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "TF_SBYCBG",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    MID = table.Column<int>(nullable: false),
                    YC_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    ITM = table.Column<int>(nullable: false),
                    YC_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    YC_REA = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    REM = table.Column<string>(type: "text", nullable: true),
                    PRE_ITM = table.Column<int>(nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TF_SBYCBG", x => x.ID);
                    table.ForeignKey(
                        name: "FK_TF_SBYCBG_MF_SBYCBG",
                        column: x => x.MID,
                        principalTable: "MF_SBYCBG",
                        principalColumn: "ID",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "TF_SQ",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    MID = table.Column<int>(nullable: false),
                    SQ_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    ITM = table.Column<int>(nullable: false),
                    PRD_NO = table.Column<string>(unicode: false, maxLength: 30, nullable: true),
                    PRD_NAME = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    UNIT = table.Column<string>(unicode: false, maxLength: 5, nullable: true),
                    UNIT_NAME = table.Column<string>(unicode: false, maxLength: 8, nullable: true),
                    QTY = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    UP = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    AMTN = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    EST_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    REM = table.Column<string>(unicode: false, maxLength: 200, nullable: true),
                    CHK_MAN = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    CUS_NO = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    CUR_ID = table.Column<string>(unicode: false, maxLength: 4, nullable: true),
                    EXC_RTO = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    BIL_ID = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    BIL_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    BIL_ITM = table.Column<int>(nullable: true),
                    IDX_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    QTY1 = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    UP_QTY1 = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_PO = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_PO_UNSH = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_QS = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_QS_UNSH = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    EST_ITM = table.Column<int>(nullable: true),
                    PRD_MARK = table.Column<string>(unicode: false, maxLength: 40, nullable: true, defaultValueSql: "(space((0)))"),
                    BAT_NO = table.Column<string>(unicode: false, maxLength: 40, nullable: true),
                    REMARK = table.Column<string>(unicode: false, maxLength: 200, nullable: true),
                    AMT = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    COMPOSE_IDNO = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    SO_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    QTY_ID = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    WH = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    ID_NO = table.Column<string>(unicode: false, maxLength: 38, nullable: true),
                    SUP_PRD_NO = table.Column<string>(unicode: false, maxLength: 40, nullable: true),
                    EST_ITM_SO = table.Column<int>(nullable: true),
                    SO_ID = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    ISCHECK = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    IS_SEND = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    USR = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    QTY_HZ = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_HZ_UNSH = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    DEP = table.Column<string>(unicode: false, maxLength: 8, nullable: true),
                    MO_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    MO_ID = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    LY_ID = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    LY_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    LY_ITM = table.Column<int>(nullable: true),
                    PRD_NO_CHG = table.Column<string>(unicode: false, maxLength: 255, nullable: true),
                    SUP_PRD_MARK = table.Column<string>(unicode: false, maxLength: 40, nullable: true),
                    CUS_OS_NO = table.Column<string>(unicode: false, maxLength: 30, nullable: true),
                    IS_SP = table.Column<bool>(nullable: true),
                    MRP_NOS = table.Column<string>(unicode: false, maxLength: 800, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TF_SQ", x => x.ID);
                    table.ForeignKey(
                        name: "FK_TF_SQ_MF_SQ",
                        column: x => x.MID,
                        principalTable: "MF_SQ",
                        principalColumn: "ID",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "TF_SQD",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    MID = table.Column<int>(nullable: false),
                    SQ_ID = table.Column<string>(unicode: false, maxLength: 2, nullable: false),
                    SQ_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    ITM = table.Column<int>(nullable: false),
                    PRD_NO = table.Column<string>(unicode: false, maxLength: 30, nullable: true),
                    PRD_MARK = table.Column<string>(unicode: false, maxLength: 40, nullable: true, defaultValueSql: "(space((0)))"),
                    SPC = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    WH = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    UNIT = table.Column<string>(unicode: false, maxLength: 8, nullable: true),
                    QTY = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY1 = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_ML = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_ML_UNSH = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    REM = table.Column<string>(unicode: false, maxLength: 60, nullable: true),
                    EST_ITM = table.Column<int>(nullable: true),
                    PRE_ITM = table.Column<int>(nullable: true),
                    QTY_MLED = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_MLED_UNSH = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    SPC_NO = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    ID_NO = table.Column<string>(unicode: false, maxLength: 38, nullable: true),
                    BAT_NO = table.Column<string>(unicode: false, maxLength: 40, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TF_SQD", x => x.ID);
                    table.ForeignKey(
                        name: "FK_TF_SQD_MF_SQD",
                        column: x => x.MID,
                        principalTable: "MF_SQD",
                        principalColumn: "ID",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "TF_ST_M",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    MID = table.Column<int>(nullable: false),
                    ST_ID = table.Column<string>(unicode: false, maxLength: 2, nullable: false),
                    ST_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    ITM = table.Column<int>(nullable: false),
                    ST_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    MOD_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    ITM_MJ = table.Column<int>(nullable: true),
                    REP_NO = table.Column<string>(unicode: false, maxLength: 8, nullable: true),
                    REM = table.Column<string>(unicode: false, maxLength: 40, nullable: true),
                    TO_OTH = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    SPC = table.Column<string>(type: "text", nullable: true),
                    OPN_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    AMTN_BF = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    AMTN_FT = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    OLD_STATE_ID = table.Column<string>(unicode: false, maxLength: 1, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TF_ST_M", x => x.ID);
                    table.ForeignKey(
                        name: "FK_TF_ST_M_MF_ST_M",
                        column: x => x.MID,
                        principalTable: "MF_ST_M",
                        principalColumn: "ID",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "TF_ST_S",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    MID = table.Column<int>(nullable: false),
                    ST_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    ITM = table.Column<int>(nullable: false),
                    ST_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    SEB_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ITM_SB = table.Column<int>(nullable: true),
                    REP_NO = table.Column<string>(unicode: false, maxLength: 8, nullable: true),
                    TO_OTH = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    Rem = table.Column<string>(unicode: false, maxLength: 40, nullable: true),
                    BIL_ID_ = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    BIL_NO_ = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    OPN_DD = table.Column<DateTime>(type: "datetime", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TF_ST_S", x => x.ID);
                    table.ForeignKey(
                        name: "FK_TF_ST_S_MF_ST_S",
                        column: x => x.MID,
                        principalTable: "MF_ST_S",
                        principalColumn: "ID",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "TF_TB",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    MID = table.Column<int>(nullable: false),
                    TB_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    ITM = table.Column<int>(nullable: true),
                    PRD_NO = table.Column<string>(unicode: false, maxLength: 30, nullable: true),
                    PRD_NAME = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    PRD_MARK = table.Column<string>(unicode: false, maxLength: 40, nullable: true, defaultValueSql: "(space((0)))"),
                    WH = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    UNIT = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    QTY = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY1 = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_LOST = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY1_LOST = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_RTN = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_RTN_UNSH = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    UP = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    UP_QTY1 = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    UP_LOST = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    UP_QTY1_LOST = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    AMTN_NET = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    TAX = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    AMT = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    BAT_NO = table.Column<string>(unicode: false, maxLength: 40, nullable: true),
                    TW_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ML_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    MM_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    MO_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    REM = table.Column<string>(unicode: false, maxLength: 200, nullable: true),
                    PAK_UNIT = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    PAK_EXC = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    PAK_NW = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    PAK_WEIGHT_UNIT = table.Column<string>(unicode: false, maxLength: 8, nullable: true),
                    PAK_GW = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    PAK_MEAST = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    PAK_MEAST_UNIT = table.Column<string>(unicode: false, maxLength: 8, nullable: true),
                    CPY_SW = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    EST_ITM = table.Column<int>(nullable: true),
                    TZ_NO2 = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ID_NO = table.Column<string>(unicode: false, maxLength: 38, nullable: true),
                    RTO_TAX = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    COMPOSE_IDNO = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    AMT_FP = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    AMTN_NET_FP = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    TAX_FP = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_FP = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    AMTN_EP = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    AMTN_EP1 = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    PRE_ITM = table.Column<int>(nullable: true),
                    RTO_EP = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    TASK_ID = table.Column<int>(nullable: true),
                    SL_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    SL_ITM = table.Column<int>(nullable: true),
                    TW_ID = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    CUS_OS_NO = table.Column<string>(unicode: false, maxLength: 30, nullable: true),
                    CST_STD = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    BIL_ID = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    BIL_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    BIL_ITM = table.Column<int>(nullable: true),
                    QC_FLAG = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    SH_NO_CUS = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    RK_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    VALID_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    FREE_ID = table.Column<bool>(nullable: true),
                    DEP_RK = table.Column<string>(unicode: false, maxLength: 8, nullable: true),
                    DIS_CNT = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    AMT_DIS_CNT = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    AMT_ZG_FP = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    AMTN_NET_ZG_FP = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    TAX_ZG_FP = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    UP_STD = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    AMTN_IFRS = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    AMTN_NET_IFRS = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    AMTN_EP_IFRS = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CST_STD_IFRS = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CST_STD_ML_IFRS = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CST_SMAN_IFRS = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CST_SMAK_IFRS = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CST_SPRD_IFRS = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CST_SOUT_IFRS = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    PAK_GW_N = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    SUP_PRD_NO = table.Column<string>(unicode: false, maxLength: 40, nullable: true),
                    SUP_PRD_MARK = table.Column<string>(unicode: false, maxLength: 40, nullable: true),
                    SC_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    TAX_IFRS = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    UP_STD_IFRS = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY1_FP = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    DC_QTYLOST = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    PAK_NW_N = table.Column<decimal>(type: "numeric(18, 0)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TF_TB", x => x.ID);
                    table.ForeignKey(
                        name: "FK_TF_TB_MF_TB",
                        column: x => x.MID,
                        principalTable: "MF_TB",
                        principalColumn: "ID",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "TF_TI",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    MID = table.Column<int>(nullable: false),
                    R_BusiNO = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    R_MID = table.Column<int>(nullable: true),
                    R_SID = table.Column<int>(nullable: true),
                    TI_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    ITM = table.Column<int>(nullable: false),
                    PRD_NO = table.Column<string>(unicode: false, maxLength: 30, nullable: true),
                    PRD_NAME = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    PRD_MARK = table.Column<string>(unicode: false, maxLength: 40, nullable: true, defaultValueSql: "(space((0)))"),
                    WH = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    UNIT = table.Column<string>(unicode: false, maxLength: 8, nullable: true),
                    QTY = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    PRJ_TYPE = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    BIL_ID = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    BIL_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    BAT_NO = table.Column<string>(unicode: false, maxLength: 40, nullable: true),
                    CHK_RESULT = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    REM = table.Column<string>(unicode: false, maxLength: 200, nullable: true),
                    QTY_RTN = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_RTN_UNSH = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CPY_SW = table.Column<bool>(nullable: true, defaultValueSql: "((0))"),
                    EST_ITM = table.Column<int>(nullable: true),
                    QTY_RK = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    ID_NO = table.Column<string>(unicode: false, maxLength: 38, nullable: true),
                    ZC_NO = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    CUS_NO = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    QTY1 = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY1_RTN = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY1_RTN_UNSH = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    FREE_ID = table.Column<bool>(nullable: true, defaultValueSql: "((0))"),
                    CK_ITM = table.Column<int>(nullable: true),
                    SUP_PRD_NO = table.Column<string>(unicode: false, maxLength: 40, nullable: true),
                    COMPOSE_IDNO = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    B_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    E_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    SL_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    MM_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    CUS_OS_NO = table.Column<string>(unicode: false, maxLength: 30, nullable: true),
                    VALID_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    PRE_ITM = table.Column<int>(nullable: true),
                    SH_NO_CUS = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    QTY_PS = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_PS_UNSH = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CAS_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    TASK_ID = table.Column<int>(nullable: true),
                    USED_TIME = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    SL_ITM = table.Column<int>(nullable: true),
                    GF_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    QTY_CUS = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    RK_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    DEP_RK = table.Column<string>(unicode: false, maxLength: 8, nullable: true),
                    CHKTY_ID = table.Column<bool>(nullable: false),
                    CNTT_NO = table.Column<string>(unicode: false, maxLength: 40, nullable: true),
                    PRODU_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    QTY_RCK = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_RCK_UNSH = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    TRD_ID = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    TRD_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    NEWMAT_FLAG = table.Column<bool>(nullable: true, defaultValueSql: "((0))"),
                    XRF_QCFLAG = table.Column<bool>(nullable: true, defaultValueSql: "((0))"),
                    XRF_SAMPLE = table.Column<bool>(nullable: true, defaultValueSql: "((0))"),
                    SUP_PRD_MARK = table.Column<string>(unicode: false, maxLength: 40, nullable: true),
                    FX_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    FX_NAME = table.Column<string>(unicode: false, maxLength: 40, nullable: true),
                    FX_KND = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    FX_SPC = table.Column<string>(type: "text", nullable: true),
                    FX_UNIT = table.Column<string>(unicode: false, maxLength: 8, nullable: true),
                    YH_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    IS_SP = table.Column<bool>(nullable: true, defaultValueSql: "((0))"),
                    BarCode = table.Column<string>(unicode: false, maxLength: 50, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TF_TI", x => x.ID);
                    table.ForeignKey(
                        name: "FK_TF_TI_MF_TI",
                        column: x => x.MID,
                        principalTable: "MF_TI",
                        principalColumn: "ID",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "TF_TW",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    MID = table.Column<int>(nullable: false),
                    TW_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    ITM = table.Column<int>(nullable: false),
                    PRD_NO = table.Column<string>(unicode: false, maxLength: 30, nullable: true),
                    PRD_NAME = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    PRD_MARK = table.Column<string>(unicode: false, maxLength: 40, nullable: true, defaultValueSql: "(space((0)))"),
                    WH = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    UNIT = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    QTY = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_RTN = table.Column<decimal>(type: "numeric(18, 0)", nullable: true, defaultValueSql: "('0')"),
                    QTY_RTN_UNSH = table.Column<decimal>(type: "numeric(18, 0)", nullable: true, defaultValueSql: "('0')"),
                    BAT_NO = table.Column<string>(unicode: false, maxLength: 40, nullable: true),
                    USEIN_NO = table.Column<string>(unicode: false, maxLength: 1000, nullable: true),
                    CPY_SW = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    REM = table.Column<string>(unicode: false, maxLength: 200, nullable: true),
                    PRD_NO_CHG = table.Column<string>(unicode: false, maxLength: 255, nullable: true),
                    QTY1 = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    ID_NO = table.Column<string>(unicode: false, maxLength: 38, nullable: true),
                    CST = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    WT_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    QTY_TS = table.Column<decimal>(type: "numeric(18, 0)", nullable: true, defaultValueSql: "('0')"),
                    QTY_TS_UNSH = table.Column<decimal>(type: "numeric(18, 0)", nullable: true, defaultValueSql: "('0')"),
                    TS_ITM = table.Column<int>(nullable: true),
                    CNTT_NO = table.Column<string>(unicode: false, maxLength: 40, nullable: true),
                    COMPOSE_IDNO = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    EST_ITM = table.Column<int>(nullable: true),
                    PRE_ITM = table.Column<int>(nullable: true),
                    LOS_RTO = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_STD = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    ZC_PRD = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    QTY_RSV = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_LOST = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CHG_RTO = table.Column<string>(unicode: false, maxLength: 200, nullable: true),
                    CST_STD = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CHG_ITM = table.Column<int>(nullable: true),
                    QTY_CHG_RTO = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_QL = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_QL_UNSH = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY1_QL = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY1_QL_UNSH = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_DM = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_DM_UNSH = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY1_DM = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY1_DM_UNSH = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_BL = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_BL_UNSH = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_QL_YL = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_QL_YL_UNSH = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    UP_STD = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    UP_STD_IFRS = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    PAK_UNIT = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    PAK_EXC = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    PAK_NW_N = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    PAK_NW = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    PAK_WEIGHT_UNIT = table.Column<string>(unicode: false, maxLength: 8, nullable: true),
                    PAK_GW_N = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    PAK_GW = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    PAK_MEAST = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    PAK_MEAST_UNIT = table.Column<string>(unicode: false, maxLength: 8, nullable: true),
                    CQ_FLG = table.Column<string>(unicode: false, maxLength: 1, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TF_TW", x => x.ID);
                    table.ForeignKey(
                        name: "FK_TF_TW_MF_TW",
                        column: x => x.MID,
                        principalTable: "MF_TW",
                        principalColumn: "ID",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "TF_TY",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    MID = table.Column<int>(nullable: false),
                    TY_ID = table.Column<string>(unicode: false, maxLength: 4, nullable: false),
                    TY_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    ITM = table.Column<int>(nullable: false),
                    PRD_NO = table.Column<string>(unicode: false, maxLength: 30, nullable: true),
                    PRD_NAME = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    PRD_MARK = table.Column<string>(unicode: false, maxLength: 40, nullable: true, defaultValueSql: "(space((0)))"),
                    WH = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    UNIT = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    QTY_CHK = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_OK = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_LOST = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_RTN = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CHK_RESULT = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    REM = table.Column<string>(type: "text", nullable: true),
                    BIL_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    TI_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    BAT_NO = table.Column<string>(unicode: false, maxLength: 40, nullable: true),
                    MO_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    CPY_SW = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    SPC_NO = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    PRC_ID = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    BUILD_BIL = table.Column<string>(unicode: false, maxLength: 26, nullable: true),
                    BUILD_BIL_ID = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    EST_ITM = table.Column<int>(nullable: true),
                    MM_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    PRE_ITM = table.Column<int>(nullable: true),
                    QTY_PRE = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_PRE_UNSH = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    ZC_NO = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    ID_NO = table.Column<string>(unicode: false, maxLength: 38, nullable: true),
                    QC_UP = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY1_CHK = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY1_OK = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY1_LOST = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    EST_BUILD_BIL = table.Column<string>(unicode: false, maxLength: 26, nullable: true),
                    FREE_ID = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    CK_ITM = table.Column<int>(nullable: true),
                    RK_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    COMPOSE_IDNO = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    VALID_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    SL_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    TI_ITM = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    SH_NO_CUS = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    AUTO_MV = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    MVTO_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    QTY_OK_RTN = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_OK_RTN_UNSH = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_LOST_RTN = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_LOST_RTN_UNSH = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    MM_ID = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    RTN_ID = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    KEY_ITM = table.Column<int>(nullable: true),
                    CAS_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    TASK_ID = table.Column<int>(nullable: true),
                    USED_TIME = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    GF_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    CUS_OS_NO = table.Column<string>(unicode: false, maxLength: 30, nullable: true),
                    AMTN = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    UP = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    TAX = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    TAX_RTO = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    AMT = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    PC_NO = table.Column<string>(unicode: false, maxLength: 30, nullable: true),
                    QTY_QC = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    RK_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    DEP_RK = table.Column<string>(unicode: false, maxLength: 8, nullable: true),
                    VALID_DD_NEW = table.Column<DateTime>(type: "datetime", nullable: true),
                    CNTT_NO = table.Column<string>(unicode: false, maxLength: 40, nullable: true),
                    LS_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    AMT_DIS_CNT = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    RECHK_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    PRODU_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    FX_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    FX_NAME = table.Column<string>(unicode: false, maxLength: 40, nullable: true),
                    QC_VALUE_AVG = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    BIL_FLAG = table.Column<bool>(nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TF_TY", x => x.ID);
                    table.ForeignKey(
                        name: "FK_TF_TY_MF_TY",
                        column: x => x.MID,
                        principalTable: "MF_TY",
                        principalColumn: "ID",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "TF_TZ",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    MID = table.Column<int>(nullable: false),
                    TZ_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    ITM = table.Column<int>(nullable: false),
                    PRD_NO = table.Column<string>(unicode: false, maxLength: 30, nullable: true),
                    PRD_MARK = table.Column<string>(unicode: false, maxLength: 40, nullable: true, defaultValueSql: "(space((0)))"),
                    WH = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    UNIT = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    QTY = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_RTN = table.Column<decimal>(type: "numeric(18, 0)", nullable: true, defaultValueSql: "('0')"),
                    BAT_NO = table.Column<string>(unicode: false, maxLength: 40, nullable: true),
                    USEIN_NO = table.Column<string>(unicode: false, maxLength: 1000, nullable: true),
                    REM = table.Column<string>(unicode: false, maxLength: 200, nullable: true),
                    PRD_NO_CHG = table.Column<string>(unicode: false, maxLength: 255, nullable: true),
                    QTY1 = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    ID_NO = table.Column<string>(unicode: false, maxLength: 38, nullable: true),
                    CST = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    TS_ITM = table.Column<int>(nullable: true),
                    QTY_TS = table.Column<decimal>(type: "numeric(18, 0)", nullable: true, defaultValueSql: "('0')"),
                    QTY_TS_UNSH = table.Column<decimal>(type: "numeric(18, 0)", nullable: true, defaultValueSql: "('0')"),
                    EST_ITM = table.Column<int>(nullable: true),
                    PRE_ITM = table.Column<int>(nullable: true),
                    LOS_RTO = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_STD = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    ZC_PRD = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    QTY_RSV = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_LOST = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CHG_RTO = table.Column<string>(unicode: false, maxLength: 200, nullable: true),
                    CHG_ITM = table.Column<int>(nullable: true),
                    QTY_CHG_RTO = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_QL = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_QL_UNSH = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_DM = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_DM_UNSH = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_BL = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CST_ML = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CST_MAN = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CST_MAK = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CST_PRD = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CST_OUT = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_BL_UNSH = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QC_FLAG = table.Column<string>(unicode: false, maxLength: 2, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TF_TZ", x => x.ID);
                    table.ForeignKey(
                        name: "FK_TF_TZ_MF_TZ",
                        column: x => x.MID,
                        principalTable: "MF_TZ",
                        principalColumn: "ID",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "TF_UNQC_RECORD",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    MID = table.Column<int>(nullable: false),
                    UNQC_TYPE = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    UNQC_QTY = table.Column<int>(nullable: false),
                    UNQC_MODEL = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    UNQC_REASON = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    REM = table.Column<string>(unicode: false, maxLength: 20, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TF_UNQC_RECORD", x => x.ID);
                    table.ForeignKey(
                        name: "FK_TF_UNQC_RECORD_MF_UNQC_RECORD",
                        column: x => x.MID,
                        principalTable: "MF_UNQC_RECORD",
                        principalColumn: "ID",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "TF_UNQCPRDHL",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    MID = table.Column<int>(nullable: false),
                    ITM = table.Column<int>(nullable: false),
                    SPC_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    SPC_DESCR = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    HL_Result = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    QTY = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    DEPT = table.Column<string>(unicode: false, maxLength: 8, nullable: true),
                    SAL_NO = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    SYS_DD = table.Column<DateTime>(type: "datetime", nullable: true, defaultValueSql: "(getdate())"),
                    CONTENT = table.Column<string>(unicode: false, maxLength: 1000, nullable: true),
                    REM = table.Column<string>(unicode: false, maxLength: 1000, nullable: true),
                    MO_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    BarCode = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    PassCtrl = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    SPC_GRADE = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    RESP_ZCNO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    DSP_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    BAN_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    STEEL_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TF_UNQCPRDHL", x => x.ID);
                    table.ForeignKey(
                        name: "FK_TF_UNQCPRDHL_MF_UNQCPRDHL",
                        column: x => x.MID,
                        principalTable: "MF_UNQCPRDHL",
                        principalColumn: "ID",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "TF_WJ_M",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    MID = table.Column<int>(nullable: false),
                    WXJ_ID = table.Column<string>(unicode: false, maxLength: 2, nullable: false),
                    WXJ_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    ITM = table.Column<int>(nullable: false),
                    WXJ_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    MOD_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    ITM_MJ = table.Column<int>(nullable: true),
                    B_DD_REP = table.Column<DateTime>(type: "datetime", nullable: true),
                    E_DD_REP = table.Column<DateTime>(type: "datetime", nullable: true),
                    REP_NO = table.Column<string>(unicode: false, maxLength: 8, nullable: true),
                    REM = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    TO_OTH = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    SPC = table.Column<string>(type: "text", nullable: true),
                    AMTN_F = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    RS_NO = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    RS_DESP = table.Column<string>(unicode: false, maxLength: 200, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TF_WJ_M", x => x.ID);
                    table.ForeignKey(
                        name: "FK_TF_WJ_M_MF_WJ_M",
                        column: x => x.MID,
                        principalTable: "MF_WJ_M",
                        principalColumn: "ID",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "TF_WJ_S",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    MID = table.Column<int>(nullable: false),
                    WXJ_ID = table.Column<string>(unicode: false, maxLength: 2, nullable: false),
                    WXJ_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    ITM = table.Column<int>(nullable: false),
                    SEB_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    SEB_NAME = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    SEB_Part = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ITM_SB = table.Column<int>(nullable: true),
                    FA_TYPE = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    FA = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    FA_Level = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    B_DD_REP = table.Column<DateTime>(type: "datetime", nullable: true),
                    E_DD_REP = table.Column<DateTime>(type: "datetime", nullable: true),
                    WXJ_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    REP_NO = table.Column<string>(unicode: false, maxLength: 8, nullable: true),
                    REM = table.Column<string>(unicode: false, maxLength: 200, nullable: true),
                    TO_OTH = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    WXJ_CONTENT = table.Column<string>(unicode: false, maxLength: 200, nullable: true),
                    LESSONS = table.Column<string>(unicode: false, maxLength: 200, nullable: true),
                    FA_Appearance = table.Column<string>(unicode: false, maxLength: 200, nullable: true),
                    RS_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    RS_DESP = table.Column<string>(unicode: false, maxLength: 200, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TF_WJ_S", x => x.ID);
                    table.ForeignKey(
                        name: "FK_TF_WJ_S_MF_WJ_S",
                        column: x => x.MID,
                        principalTable: "MF_WJ_S",
                        principalColumn: "ID",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "TF_WX_M",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    MID = table.Column<int>(nullable: false),
                    WX_ID = table.Column<string>(unicode: false, maxLength: 2, nullable: false),
                    WX_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    ITM = table.Column<int>(nullable: false),
                    WX_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    E_DD_REP = table.Column<DateTime>(type: "datetime", nullable: true),
                    MOD_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    ITM_MJ = table.Column<int>(nullable: true),
                    REP_NO = table.Column<string>(unicode: false, maxLength: 8, nullable: true),
                    INWH_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    INWH_ID = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    REM = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    DEP_REP = table.Column<string>(unicode: false, maxLength: 8, nullable: true),
                    BIL_ID = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    BIL_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    TO_OTH = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    B_DD_REP = table.Column<DateTime>(type: "datetime", nullable: true),
                    AMTN = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    AMT = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    SPC = table.Column<string>(type: "text", nullable: true),
                    OLD_STATE_ID = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    RS_NO = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    RS_DESP = table.Column<string>(unicode: false, maxLength: 200, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TF_WX_M", x => x.ID);
                    table.ForeignKey(
                        name: "FK_TF_WX_M_MF_WX_M",
                        column: x => x.MID,
                        principalTable: "MF_WX_M",
                        principalColumn: "ID",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "TF_WX_S",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    MID = table.Column<int>(nullable: false),
                    WX_ID = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    WX_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    ITM = table.Column<int>(nullable: false),
                    WX_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    SEB_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    SEB_NAME = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    SEB_PART = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    FA_APPEARANCE = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    WXJ_CONTENT = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    ITM_SB = table.Column<int>(nullable: true),
                    B_DD_REP = table.Column<DateTime>(type: "datetime", nullable: true),
                    E_DD_REP = table.Column<DateTime>(type: "datetime", nullable: true),
                    REP_NO = table.Column<string>(unicode: false, maxLength: 8, nullable: true),
                    TO_OTH = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    REM = table.Column<string>(unicode: false, maxLength: 200, nullable: true),
                    DEP_REP = table.Column<string>(unicode: false, maxLength: 8, nullable: true),
                    BIL_ID = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    BIL_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    PRE_ITM = table.Column<int>(nullable: true),
                    OLD_STATE_ID = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    RS_DESP = table.Column<string>(unicode: false, maxLength: 200, nullable: true),
                    RS_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TF_WX_S", x => x.ID);
                    table.ForeignKey(
                        name: "FK_TF_WX_S_MF_WX_S",
                        column: x => x.MID,
                        principalTable: "MF_WX_S",
                        principalColumn: "ID",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "TF_ZC",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    MID = table.Column<int>(nullable: true),
                    BOM_NO = table.Column<string>(unicode: false, maxLength: 38, nullable: false),
                    ITM = table.Column<int>(nullable: false),
                    ZC_NO = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    DEP = table.Column<string>(unicode: false, maxLength: 8, nullable: true),
                    CUS_NO = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    RTO_BAD = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    TIME_UNIT = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    TIME_USED = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    ZC_NAME = table.Column<string>(unicode: false, maxLength: 40, nullable: true),
                    ZC_ITM = table.Column<int>(nullable: true),
                    UT_TIME = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    UT_WAIT = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    MD_NO = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    CHK_ID = table.Column<bool>(nullable: true),
                    PRJ_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    MV_ID = table.Column<bool>(nullable: true),
                    ZC_NO_DN = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    ZC_NO_UP = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    QTY_BAT = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    PRD_NO = table.Column<string>(unicode: false, maxLength: 30, nullable: true),
                    QTY_RTO = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    SEB_NO = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    MOD_NO_R = table.Column<string>(unicode: false, maxLength: 200, nullable: true),
                    SPLIT = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    QTY_BAT_P = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    GD_TYPE = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    ML_FIN = table.Column<bool>(nullable: true),
                    QTY_ZC = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_BAS_MAN = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    PrintBarCode = table.Column<bool>(nullable: true),
                    PrintTpName = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    SOP = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    BarCodeType = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    REM = table.Column<string>(unicode: false, maxLength: 1000, nullable: true),
                    IsOnTray = table.Column<bool>(nullable: true),
                    Isputwarehouse = table.Column<bool>(nullable: true),
                    IsReviewBatchBind = table.Column<bool>(nullable: true),
                    WorkCenter = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    IsBottleneck = table.Column<bool>(nullable: true),
                    Auto_Prod = table.Column<bool>(nullable: true),
                    IntegrityCheck = table.Column<bool>(nullable: true),
                    IsSched_Process = table.Column<bool>(nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TF_ZC", x => x.ID);
                    table.ForeignKey(
                        name: "FK_TF_ZC_MF_ZC",
                        column: x => x.MID,
                        principalTable: "MF_ZC",
                        principalColumn: "ID",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "TF_ZG",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    MID = table.Column<int>(nullable: true),
                    ZG_ID = table.Column<string>(unicode: false, maxLength: 2, nullable: false),
                    ZG_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    ITM = table.Column<int>(nullable: false),
                    ZG_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    WH = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    BAT_NO = table.Column<string>(unicode: false, maxLength: 40, nullable: true),
                    OS_NO = table.Column<string>(unicode: false, maxLength: 25, nullable: true),
                    PRD_NO = table.Column<string>(unicode: false, maxLength: 30, nullable: true),
                    PRD_NAME = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    PRD_MARK = table.Column<string>(unicode: false, maxLength: 40, nullable: true, defaultValueSql: "(space((0)))"),
                    UNIT = table.Column<string>(unicode: false, maxLength: 5, nullable: true),
                    QTY = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY1 = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    UP = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    SOURCE_ID = table.Column<int>(nullable: true),
                    AMTN_NET = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    AMT = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    TAX = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    DIS_CNT = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_PC = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_PC_UNSH = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    PAK_UNIT = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    PAK_EXC = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    PAK_NW = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    PAK_WEIGHT_UNIT = table.Column<string>(unicode: false, maxLength: 8, nullable: true),
                    PAK_GW = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    PAK_MEAST = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    PAK_MEAST_UNIT = table.Column<string>(unicode: false, maxLength: 8, nullable: true),
                    VALID_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    REM = table.Column<string>(unicode: false, maxLength: 200, nullable: true),
                    TAX_RTO = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CST_STD = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    UP_QTY1 = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    EST_ITM = table.Column<int>(nullable: true),
                    OS_ID = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    SEND_WH = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    QTY_LOSS = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY1_LOSS = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    ID_NO = table.Column<string>(unicode: false, maxLength: 38, nullable: true),
                    BZ_KND = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    OTH_ITM = table.Column<int>(nullable: true),
                    CUS_OS_NO = table.Column<string>(unicode: false, maxLength: 30, nullable: true),
                    CHK_TAX = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    SUP_PRD_NO = table.Column<string>(unicode: false, maxLength: 40, nullable: true),
                    FREE_ID = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    AMTN_COM = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_PS = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    RK_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    QTY_RTN = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY_RTN_UNSH = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    TI_ITM = table.Column<int>(nullable: true),
                    CK_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    SL_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    SH_NO_CUS = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    PRE_ITM = table.Column<int>(nullable: true),
                    QC_FLAG = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    QC_ITM = table.Column<int>(nullable: true),
                    RK_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    DEP_RK = table.Column<string>(unicode: false, maxLength: 8, nullable: true),
                    PW_ITM = table.Column<int>(nullable: true),
                    SL_ITM = table.Column<int>(nullable: true),
                    CST_STD_ML = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CST_SMAN = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CST_SPRD = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CST_SMAK = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CST_SOUT = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CST_IFRS = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CST_STD_IFRS = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CST_STD_ML_IFRS = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CST_SMAN_IFRS = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CST_SMAK_IFRS = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CST_SPRD_IFRS = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CST_ML_IFRS = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CST_MAN_IFRS = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CST_MAK_IFRS = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CST_PRD_IFRS = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CST_OUT_IFRS = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    UP_STD_IFRS = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    SUP_PRD_MARK = table.Column<string>(unicode: false, maxLength: 40, nullable: true),
                    AMT_DIS_CNT = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    IS_SP = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    MATRIX_ITM = table.Column<int>(nullable: true),
                    SC_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    CST = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    UP_MAIN = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    PRODU_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    FREE_ID_DEF = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    UP_STD = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    CST_SOUT_IFRS = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    AMTN_IFRS = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    AMTN_NET_IFRS = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    TAX_IFRS = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    UP_MAIN_IFRS = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    BusiNo = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    BilType = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    BilTypeName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkMan = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkManName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    IsClose = table.Column<bool>(nullable: true),
                    ClsDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ClsUsr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ClsUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ChkMob = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    IsPrint = table.Column<bool>(nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TF_ZG", x => x.ID);
                    table.ForeignKey(
                        name: "FK_TF_ZG_MF_ZG",
                        column: x => x.MID,
                        principalTable: "MF_ZG",
                        principalColumn: "ID",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "MOLD_MTSPEC_INFO",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    MID = table.Column<int>(nullable: false),
                    NO = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    ITM = table.Column<int>(nullable: false),
                    Part_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    OilsName = table.Column<string>(maxLength: 200, nullable: true),
                    Content = table.Column<string>(maxLength: 2000, nullable: true),
                    RHPoints = table.Column<int>(nullable: true),
                    Standard = table.Column<string>(unicode: false, maxLength: 1000, nullable: true),
                    Method = table.Column<string>(maxLength: 2000, nullable: true),
                    SpecImage = table.Column<Guid>(nullable: true),
                    Unit = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    Lubrication = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    Opportunity = table.Column<string>(unicode: false, maxLength: 200, nullable: true),
                    FaultHandle = table.Column<string>(unicode: false, maxLength: 500, nullable: true),
                    OPType = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    RHType = table.Column<string>(unicode: false, maxLength: 10, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_MOLD_MTSPEC_INFO", x => x.ID);
                    table.ForeignKey(
                        name: "FK_MOLD_MTSPEC_INFO_MOLD_MAINTAIN_SPEC",
                        column: x => x.MID,
                        principalTable: "MOLD_MAINTAIN_SPEC",
                        principalColumn: "ID",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "MOLD_MTORDER_INFO",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    MID = table.Column<int>(nullable: false),
                    ITM = table.Column<int>(nullable: false),
                    Part_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    OilsName = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Content = table.Column<string>(unicode: false, maxLength: 500, nullable: true),
                    Standard = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Method = table.Column<string>(unicode: false, maxLength: 600, nullable: true),
                    SpecImage = table.Column<byte[]>(type: "image", nullable: true),
                    Result = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    Rem = table.Column<string>(maxLength: 2000, nullable: true),
                    ExcStatus = table.Column<string>(unicode: false, maxLength: 1, nullable: false),
                    StandardAddAmount = table.Column<string>(unicode: false, maxLength: 100, nullable: true, defaultValueSql: "((0))"),
                    ActualAddAmount = table.Column<string>(unicode: false, maxLength: 100, nullable: true, defaultValueSql: "((0))"),
                    SpareParts_NO = table.Column<string>(unicode: false, maxLength: 30, nullable: true),
                    Unit = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    Spec_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Recorder = table.Column<string>(unicode: false, maxLength: 20, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_MOLD_MTORDER_INFO", x => x.ID);
                    table.ForeignKey(
                        name: "FK_MOLD_MTORDER_INFO_MOLD_MT_ORDER",
                        column: x => x.MID,
                        principalTable: "MOLD_MT_ORDER",
                        principalColumn: "ID",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "MOLDING_DEVIATES_T",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    MID = table.Column<int>(nullable: false),
                    SEB_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    PARA_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    PARA_VALUE = table.Column<decimal>(type: "numeric(18, 0)", nullable: false),
                    PARA_NAME = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    DEV_TIME = table.Column<DateTime>(type: "datetime", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_MOLDING_DEVIATES_T", x => x.ID);
                    table.ForeignKey(
                        name: "FK_MOLDING_DEVIATES_T_MOLDING_DEVIATE_T",
                        column: x => x.MID,
                        principalTable: "MOLDING_DEVIATE_T",
                        principalColumn: "ID",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "MS_CALNOTICE_INFO",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    MID = table.Column<int>(nullable: false),
                    NTNO = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    RpCalStatus = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    RpCalStatusName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    MsNO = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    MsName = table.Column<string>(unicode: false, maxLength: 100, nullable: false),
                    Initial = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    MsType = table.Column<int>(nullable: false),
                    MsStatus = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    SPC = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    MngType = table.Column<string>(unicode: false, maxLength: 10, nullable: false),
                    CalMode = table.Column<string>(unicode: false, maxLength: 1, nullable: false),
                    CalResult = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    Interval = table.Column<string>(unicode: false, maxLength: 1, nullable: false),
                    CalCyc = table.Column<int>(nullable: false),
                    CalDate = table.Column<DateTime>(type: "datetime", nullable: false),
                    VLD = table.Column<DateTime>(type: "datetime", nullable: false),
                    CalMan = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    CalLocal = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    CalDep = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    UserNO = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    UserDepNO = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    UserDep = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    Maker = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    FactoryNo = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    Rem = table.Column<string>(unicode: false, maxLength: 1000, nullable: false),
                    IsToCal = table.Column<bool>(nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_MS_CALNOTICE_INFO", x => x.ID);
                    table.ForeignKey(
                        name: "FK_MS_CALNOTICE_INFO_MS_CALNOTICE",
                        column: x => x.MID,
                        principalTable: "MS_CALNOTICE",
                        principalColumn: "ID",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "MS_CALPLAN_INFO",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    MID = table.Column<int>(nullable: false),
                    YY = table.Column<int>(nullable: false),
                    MM = table.Column<int>(nullable: false),
                    DD = table.Column<int>(nullable: false),
                    CalFlg = table.Column<string>(unicode: false, maxLength: 10, nullable: false),
                    CalResult = table.Column<string>(unicode: false, maxLength: 2, nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_MS_CALPLAN_INFO", x => x.ID);
                    table.ForeignKey(
                        name: "FK_MS_CALPLAN_INFO_MS_CALPLAN",
                        column: x => x.MID,
                        principalTable: "MS_CALPLAN",
                        principalColumn: "ID",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "PC_InOutPut_Relation",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    Batch_Input = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Batch_No = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Batch_Output = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    DeviceNo = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Feeding_Time = table.Column<DateTime>(type: "datetime", nullable: true),
                    Input = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Layout_No = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    MID = table.Column<int>(nullable: false),
                    Output = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Process_No = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Prod_No = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Qty_Feed = table.Column<decimal>(type: "decimal(22, 8)", nullable: true),
                    Qty_Output = table.Column<decimal>(type: "decimal(22, 8)", nullable: true),
                    Qty_Use = table.Column<decimal>(type: "decimal(22, 8)", nullable: true),
                    Report_Prod = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Report_Time = table.Column<DateTime>(type: "datetime", nullable: true),
                    ShiftNo = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    StationNo = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    Unit = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    Unit_Output = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    WO_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_PC_InOutPut_Relation", x => x.ID);
                    table.ForeignKey(
                        name: "FK_PC_InOutPut_Relation_PC_OutPut",
                        column: x => x.MID,
                        principalTable: "PC_OutPut",
                        principalColumn: "ID",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "PC_OutPut_Defect",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    Defect_Name = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    Defect_No = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Defect_Type = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    MID = table.Column<int>(nullable: false),
                    Qty = table.Column<int>(nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_PC_OutPut_Defect", x => x.ID);
                    table.ForeignKey(
                        name: "FK_PC_OutPut_Defect_PC_OutPut",
                        column: x => x.MID,
                        principalTable: "PC_OutPut",
                        principalColumn: "ID",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "PP_Plan_Orders",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    MID = table.Column<int>(nullable: false),
                    Plan_No = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Item = table.Column<int>(nullable: true),
                    Prod_No = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Prod_Name = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    Prod_Mark = table.Column<string>(unicode: false, maxLength: 40, nullable: true),
                    Prod_Spec = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    Unit = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    Whse_No = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    Qty = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    Req_Date = table.Column<DateTime>(type: "datetime", nullable: true),
                    Ver_No = table.Column<string>(unicode: false, maxLength: 38, nullable: true),
                    Order_No = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    Order_No_Cust = table.Column<string>(unicode: false, maxLength: 30, nullable: true),
                    Prod_No_Sup = table.Column<string>(unicode: false, maxLength: 40, nullable: true),
                    StartDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    EndDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    StopDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    Bom_No = table.Column<string>(unicode: false, maxLength: 50, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_PP_Plan_Orders", x => x.ID);
                    table.ForeignKey(
                        name: "FK_PP_Plan_Orders_PP_Plan_Order",
                        column: x => x.MID,
                        principalTable: "PP_Plan_Order",
                        principalColumn: "ID",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "PP_Production_Orders",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    MID = table.Column<int>(nullable: false),
                    Item = table.Column<int>(nullable: true),
                    Prod_No = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Prod_Name = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    Prod_Mark = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    Prod_Spec = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    Unit = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    Process_No = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Process_Name = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    Whse_No = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    Qty = table.Column<decimal>(type: "numeric(18, 0)", nullable: false),
                    Qty_Std = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    Qty_Base = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    Batch_No = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Rem = table.Column<string>(unicode: false, maxLength: 200, nullable: true),
                    IsOutSourcing = table.Column<bool>(nullable: true),
                    Ver_No = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Src_ItemID = table.Column<int>(nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_PP_Production_Orders", x => x.ID);
                    table.ForeignKey(
                        name: "FK_PP_Production_Orders_PP_Production_Order",
                        column: x => x.MID,
                        principalTable: "PP_Production_Order",
                        principalColumn: "ID",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "PP_WorkOrder_Mats",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    MID = table.Column<int>(nullable: false),
                    WO_No = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    Process_No = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Item = table.Column<int>(nullable: true),
                    Prod_No = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Prod_Name = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    Prod_Spec = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    Prod_Mark = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Ver_No = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    Whse_No = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    Unit = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    Qty = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    Batch_No = table.Column<string>(unicode: false, maxLength: 40, nullable: true),
                    Rem = table.Column<string>(unicode: false, maxLength: 200, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_PP_WorkOrder_Mats", x => x.ID);
                    table.ForeignKey(
                        name: "FK_PP_WorkOrder_Mats_PP_WorkOrder",
                        column: x => x.MID,
                        principalTable: "PP_WorkOrder",
                        principalColumn: "ID",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "PP_WorkOrder_Procs",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    MID = table.Column<int>(nullable: false),
                    MO_No = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    WO_No = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    Wk_Center_No = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    Process_No = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Qty_Fin = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    Qty_Pass = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    Qty_Lost = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    Qty_Scrap = table.Column<decimal>(type: "numeric(18, 0)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_PP_WorkOrder_Procs", x => x.ID);
                    table.ForeignKey(
                        name: "FK_PP_WorkOrder_Procs_PP_WorkOrder",
                        column: x => x.MID,
                        principalTable: "PP_WorkOrder",
                        principalColumn: "ID",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "QC_RECORDVALUE",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    MID = table.Column<int>(nullable: false),
                    ItemNo = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    QC_ITM = table.Column<string>(unicode: false, maxLength: 60, nullable: true),
                    QC_VALUE = table.Column<string>(unicode: false, maxLength: 80, nullable: true),
                    SAL_NO = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    SPC_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    DESCP = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    NUM_MAX = table.Column<decimal>(type: "decimal(18, 4)", nullable: true),
                    NUM_MIN = table.Column<decimal>(type: "decimal(18, 4)", nullable: true),
                    UPSYBOL = table.Column<string>(unicode: false, maxLength: 6, nullable: true),
                    LOWSYBOL = table.Column<string>(unicode: false, maxLength: 6, nullable: true),
                    SP_ID = table.Column<int>(nullable: true),
                    QC_MODEL = table.Column<string>(unicode: false, maxLength: 6, nullable: true),
                    QC_Result = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    QC_Unit = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    IsSubmit = table.Column<bool>(nullable: true),
                    InspectionQty = table.Column<decimal>(type: "decimal(18, 4)", nullable: true),
                    InspectionFunc = table.Column<string>(unicode: false, maxLength: 500, nullable: true),
                    ParamType = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    QC_Enum_BusiNo = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    StandardValue = table.Column<decimal>(type: "decimal(18, 5)", nullable: true),
                    FirstValueID = table.Column<int>(nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_QC_RECORDVALUE", x => x.ID);
                    table.ForeignKey(
                        name: "FK_QC_RECORDVALUE_QC_RECORD",
                        column: x => x.MID,
                        principalTable: "QC_RECORD",
                        principalColumn: "ID",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "QM_InspectS",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false),
                    MID = table.Column<int>(nullable: false),
                    SampleNo = table.Column<string>(unicode: false, maxLength: 50, nullable: true, comment: "样本号"),
                    DeviceNo = table.Column<string>(unicode: false, maxLength: 50, nullable: true, comment: "设备号"),
                    InspectDevice = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    ProductNo = table.Column<string>(unicode: false, maxLength: 50, nullable: true, comment: "产品编码"),
                    InspectType = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Result = table.Column<string>(unicode: false, maxLength: 20, nullable: true, comment: "是否合格"),
                    TraceNo = table.Column<string>(unicode: false, maxLength: 55, nullable: true),
                    TZ_NO = table.Column<string>(unicode: false, maxLength: 55, nullable: true),
                    AdvanceSampleNO = table.Column<string>(unicode: false, maxLength: 55, nullable: true),
                    DeptNo = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    ReworkQty = table.Column<decimal>(type: "decimal(18, 4)", nullable: true),
                    AcceptOnDeviationQty = table.Column<decimal>(type: "decimal(18, 4)", nullable: true),
                    ReturnQty = table.Column<decimal>(type: "decimal(18, 4)", nullable: true),
                    QualifiedQty = table.Column<decimal>(type: "decimal(18, 4)", nullable: true),
                    ScrapQty = table.Column<decimal>(type: "decimal(18, 4)", nullable: true),
                    BatchNo = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    RawMaterialBatch = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    ProducedDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    IsSample = table.Column<bool>(nullable: true),
                    SourceBillNo = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    EnterFormItemID = table.Column<int>(nullable: true),
                    INSPECTDATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    InspectQty = table.Column<decimal>(type: "decimal(18, 4)", nullable: true),
                    HandlingSuggestion = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    SourceLocation = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    TargetWareHouse = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    ReturnedQty = table.Column<decimal>(type: "decimal(18, 4)", nullable: true),
                    TFedQty = table.Column<decimal>(type: "decimal(18, 4)", nullable: true),
                    Comment = table.Column<string>(unicode: false, maxLength: 200, nullable: true),
                    ScrapedQty = table.Column<decimal>(type: "decimal(18, 4)", nullable: true),
                    ReceiveQty = table.Column<decimal>(type: "decimal(18, 4)", nullable: true),
                    ScrapQtySupp = table.Column<decimal>(type: "decimal(18, 4)", nullable: true),
                    UndisposedQty = table.Column<decimal>(type: "decimal(18, 4)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_QM_InspectS", x => x.ID);
                    table.ForeignKey(
                        name: "FK_QM_InspectS_QM_InspectBill",
                        column: x => x.MID,
                        principalTable: "QM_InspectBill",
                        principalColumn: "ID",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "QM_InspectingRecord",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    InspectingNo = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    ItemNo = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UpSymbols = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    LowSymbols = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    UpValue = table.Column<decimal>(type: "numeric(18, 4)", nullable: true),
                    LowValue = table.Column<decimal>(type: "numeric(18, 4)", nullable: true),
                    StandardValue = table.Column<decimal>(type: "numeric(18, 4)", nullable: true),
                    SolutionNo = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    PrdNo = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    Result = table.Column<int>(nullable: true),
                    MID = table.Column<int>(nullable: false),
                    Usr = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    UsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: false),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 50, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_QM_InspectingRecord", x => x.ID);
                    table.ForeignKey(
                        name: "FK_QM_InspectingRecord_QM_InspectingOrder",
                        column: x => x.MID,
                        principalTable: "QM_InspectingOrder",
                        principalColumn: "ID",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "QM_InspectTD",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    MID = table.Column<int>(nullable: false),
                    Name = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    InspectCode = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    Unit = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    LowerLimit = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UpperLimit = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    StandardValue = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    BillIndex = table.Column<int>(nullable: false),
                    IsRequiredFields = table.Column<bool>(nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_QM_InspectTD", x => x.ID);
                    table.ForeignKey(
                        name: "FK_QM_InspectTD_QM_InspectT",
                        column: x => x.MID,
                        principalTable: "QM_InspectT",
                        principalColumn: "ID",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "qmTISub",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    BatchNo = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Comment = table.Column<string>(unicode: false, maxLength: 500, nullable: true),
                    InspectionDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    IsCheck = table.Column<bool>(nullable: true),
                    IsSample = table.Column<bool>(nullable: true),
                    MID = table.Column<int>(nullable: true),
                    ProducedDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ProductionNo = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    QTY_PS = table.Column<decimal>(type: "decimal(18, 4)", nullable: true),
                    QTY_RTN = table.Column<decimal>(type: "decimal(18, 4)", nullable: true),
                    RawMaterialBatch = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    RBillNo = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    RBillSID = table.Column<int>(nullable: true),
                    RBusiName = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    RBusiNo = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    SIQty = table.Column<decimal>(type: "decimal(18, 4)", nullable: true),
                    WhID = table.Column<int>(nullable: true),
                    QTY_RCK = table.Column<decimal>(type: "decimal(18, 4)", nullable: true),
                    SourceLocation = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    TargetWareHouse = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Result = table.Column<bool>(nullable: true),
                    StorageLocation = table.Column<string>(unicode: false, maxLength: 50, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_qmTISub", x => x.ID);
                    table.ForeignKey(
                        name: "FK_qmTISub_qmTI",
                        column: x => x.MID,
                        principalTable: "qmTI",
                        principalColumn: "ID",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "qmTYSub",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    BatchNo = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Comment = table.Column<string>(unicode: false, maxLength: 200, nullable: true),
                    InspectionDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    MID = table.Column<int>(nullable: true),
                    PRC_ID = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    ProductionNo = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    QTY_CHK = table.Column<decimal>(type: "decimal(18, 4)", nullable: true),
                    QTY_CHK_LOST = table.Column<decimal>(type: "decimal(18, 4)", nullable: true),
                    QTY_CHK_OK = table.Column<decimal>(type: "decimal(18, 4)", nullable: true),
                    QTY_LOST_RTN = table.Column<decimal>(type: "decimal(18, 4)", nullable: true),
                    QTY_OK_RTN = table.Column<decimal>(type: "decimal(18, 4)", nullable: true),
                    QTY_RTN = table.Column<decimal>(type: "decimal(18, 4)", nullable: true),
                    RBillNo = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    RBillSID = table.Column<int>(nullable: true),
                    RBusiName = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    RBusiNo = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    SPC_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    WhID = table.Column<int>(nullable: true),
                    Qty = table.Column<decimal>(type: "decimal(18, 4)", nullable: true),
                    qtyRBill = table.Column<decimal>(type: "decimal(18, 4)", nullable: true),
                    UnqulifiedType = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    ProducedDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    SourceLocation = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    TargetWareHouse = table.Column<string>(unicode: false, maxLength: 50, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_qmTYSub", x => x.ID);
                    table.ForeignKey(
                        name: "FK_qmTYSub_qmTY",
                        column: x => x.MID,
                        principalTable: "qmTY",
                        principalColumn: "ID",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "RM_Mold_Insp_Items",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    Attachment = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Content = table.Column<string>(unicode: false, maxLength: 200, nullable: true),
                    DataType = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    Enum_No = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    Item = table.Column<int>(nullable: true),
                    Low_Limit = table.Column<decimal>(type: "decimal(16, 3)", nullable: true),
                    LowSybol = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    Method = table.Column<string>(unicode: false, maxLength: 200, nullable: true),
                    MID = table.Column<int>(nullable: false),
                    PartNo = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Standard = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Up_Limit = table.Column<decimal>(type: "decimal(16, 3)", nullable: true),
                    UpSybol = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    Insp_TypeNo = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    IsRequired = table.Column<bool>(nullable: true),
                    Rem = table.Column<string>(unicode: false, maxLength: 500, nullable: true),
                    Unit = table.Column<string>(unicode: false, maxLength: 20, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_RM_Mold_Insp_Items", x => x.ID);
                    table.ForeignKey(
                        name: "FK_RM_Mold_Insp_Items_RM_Mold_Insp_Program",
                        column: x => x.MID,
                        principalTable: "RM_Mold_Insp_Program",
                        principalColumn: "ID",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "RM_Mold_InspTask_Items",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    Content = table.Column<string>(unicode: false, maxLength: 200, nullable: true),
                    DataType = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    Enum_No = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    Item = table.Column<int>(nullable: true),
                    Low_Limit = table.Column<decimal>(type: "decimal(16, 3)", nullable: true),
                    LowSybol = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    Method = table.Column<string>(unicode: false, maxLength: 200, nullable: true),
                    MID = table.Column<int>(nullable: false),
                    PartNo = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Result = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Src_ItemID = table.Column<int>(nullable: true),
                    Standard = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Up_Limit = table.Column<decimal>(type: "decimal(16, 3)", nullable: true),
                    UpSybol = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    Unit = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    IsFail = table.Column<bool>(nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_RM_Mold_InspTask_Items", x => x.ID);
                    table.ForeignKey(
                        name: "FK_RM_Mold_InspTask_Items_RM_Mold_Insp_Task",
                        column: x => x.MID,
                        principalTable: "RM_Mold_Insp_Task",
                        principalColumn: "ID",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "RM_MoldSparePart_Info",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    CycleUnit = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    Item = table.Column<int>(nullable: true),
                    MID = table.Column<int>(nullable: true),
                    PartNo = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Qty = table.Column<decimal>(type: "decimal(12, 8)", nullable: true),
                    Rem = table.Column<string>(unicode: false, maxLength: 500, nullable: true),
                    Rep_Cycle = table.Column<int>(nullable: true),
                    SP_Name = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    SP_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_RM_MoldSparePart_Info", x => x.ID);
                    table.ForeignKey(
                        name: "FK_RM_MoldSparePart_Info_RM_Mold_Parts",
                        column: x => x.MID,
                        principalTable: "RM_Mold_Parts",
                        principalColumn: "ID",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "RM_Mold_RepairRecord_Item",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    EndDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    Item = table.Column<int>(nullable: true),
                    MID = table.Column<int>(nullable: false),
                    MOD_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    MOD_SN = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Qty = table.Column<decimal>(type: "decimal(16, 8)", nullable: true),
                    Src_ItemID = table.Column<int>(nullable: true),
                    StartDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    PartNo = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    MOD_Type = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    CancelReason = table.Column<string>(unicode: false, maxLength: 200, nullable: true),
                    Rep_Code = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Rep_Content = table.Column<string>(unicode: false, maxLength: 200, nullable: true),
                    Status = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    Usr_Cancel = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Usr_Rep = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Usr_Valid = table.Column<string>(unicode: false, maxLength: 50, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_RM_Mold_RepairRecord_Item", x => x.ID);
                    table.ForeignKey(
                        name: "FK_RM_Mold_RepairRecord_Item_RM_Mold_RepairRecord",
                        column: x => x.MID,
                        principalTable: "RM_Mold_RepairRecord",
                        principalColumn: "ID",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "RM_Mold_RepairRequest_Item",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    Item = table.Column<int>(nullable: true),
                    MID = table.Column<int>(nullable: false),
                    MOD_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    MOD_SN = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Qty = table.Column<decimal>(type: "decimal(16, 8)", nullable: true),
                    PartNo = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    ItemStatus = table.Column<string>(unicode: false, maxLength: 10, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_RM_Mold_RepairRequest_Item", x => x.ID);
                    table.ForeignKey(
                        name: "FK_RM_Mold_RepairRequest_Item_RM_Mold_RepairRequest",
                        column: x => x.MID,
                        principalTable: "RM_Mold_RepairRequest",
                        principalColumn: "ID",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "SB_MTSPEC_INFO",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    MID = table.Column<int>(nullable: false),
                    NO = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    ITM = table.Column<int>(nullable: false),
                    Part_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    OilsName = table.Column<string>(maxLength: 200, nullable: true),
                    Content = table.Column<string>(maxLength: 2000, nullable: true),
                    RHPoints = table.Column<int>(nullable: true),
                    Standard = table.Column<string>(unicode: false, maxLength: 1000, nullable: true),
                    Method = table.Column<string>(maxLength: 2000, nullable: true),
                    SpecImage = table.Column<byte[]>(nullable: true),
                    Unit = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    Lubrication = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    Opportunity = table.Column<string>(unicode: false, maxLength: 200, nullable: true),
                    FaultHandle = table.Column<string>(unicode: false, maxLength: 500, nullable: true),
                    OPType = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    RHType = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    CHK_MODEL = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    CHK_ENUM_BUSINO = table.Column<string>(unicode: false, maxLength: 50, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SB_MTSPEC_INFO", x => x.ID);
                    table.ForeignKey(
                        name: "FK_SB_MTSPEC_INFO_SB_MAINTAIN_SPEC",
                        column: x => x.MID,
                        principalTable: "SB_MAINTAIN_SPEC",
                        principalColumn: "ID",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "SB_SPARE_PART",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    MID = table.Column<int>(nullable: false),
                    MITM = table.Column<int>(nullable: false),
                    SP_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    NAME = table.Column<string>(unicode: false, maxLength: 100, nullable: false),
                    QTY = table.Column<decimal>(type: "decimal(18, 4)", nullable: false),
                    Rem = table.Column<string>(unicode: false, maxLength: 2000, nullable: true),
                    Spec_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SB_SPARE_PART", x => x.ID);
                    table.ForeignKey(
                        name: "FK_SB_SPARE_PART_SB_MAINTAIN_SPEC",
                        column: x => x.MID,
                        principalTable: "SB_MAINTAIN_SPEC",
                        principalColumn: "ID",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "SB_MTORDER_INFO",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    MID = table.Column<int>(nullable: false),
                    ITM = table.Column<int>(nullable: false),
                    Part_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    OilsName = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Content = table.Column<string>(unicode: false, maxLength: 500, nullable: true),
                    Standard = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Method = table.Column<string>(unicode: false, maxLength: 600, nullable: true),
                    SpecImage = table.Column<byte[]>(type: "image", nullable: true),
                    Result = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Rem = table.Column<string>(maxLength: 2000, nullable: true),
                    ExcStatus = table.Column<string>(unicode: false, maxLength: 1, nullable: false),
                    StandardAddAmount = table.Column<string>(unicode: false, maxLength: 100, nullable: true, defaultValueSql: "((0))"),
                    ActualAddAmount = table.Column<string>(unicode: false, maxLength: 100, nullable: true, defaultValueSql: "((0))"),
                    SpareParts_NO = table.Column<string>(unicode: false, maxLength: 30, nullable: true),
                    Unit = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    Spec_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Recorder = table.Column<string>(unicode: false, maxLength: 20, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SB_MTORDER_INFO", x => x.ID);
                    table.ForeignKey(
                        name: "FK_SB_MTORDER_INFO_SB_MT_ORDER",
                        column: x => x.MID,
                        principalTable: "SB_MT_ORDER",
                        principalColumn: "ID",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "SB_PRDT_PARAS",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    MID = table.Column<int>(nullable: false),
                    ITM = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    Para_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    Para_Name = table.Column<string>(unicode: false, maxLength: 100, nullable: false),
                    UT = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Up_Limit = table.Column<decimal>(type: "decimal(18, 4)", nullable: true),
                    Low_Limit = table.Column<decimal>(type: "decimal(18, 4)", nullable: true),
                    Standard = table.Column<decimal>(type: "decimal(18, 4)", nullable: true),
                    LowSybol = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    UpSybol = table.Column<string>(unicode: false, maxLength: 2, nullable: true),
                    PType = table.Column<string>(unicode: false, maxLength: 1, nullable: false),
                    Manner = table.Column<string>(unicode: false, maxLength: 1, nullable: false),
                    Formula = table.Column<string>(unicode: false, maxLength: 1000, nullable: true),
                    UT_ID = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    DefaultVal = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    TimeStamp = table.Column<byte[]>(rowVersion: true, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SB_PRDT_PARAS", x => x.ID);
                    table.ForeignKey(
                        name: "FK_SB_PRDT_PARAS_SB_PRDT_PARA",
                        column: x => x.MID,
                        principalTable: "SB_PRDT_PARA",
                        principalColumn: "ID",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "SB_STATUS_CHANGES",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    MID = table.Column<int>(nullable: false),
                    SEB_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    SEB_Name = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    BGType = table.Column<string>(unicode: false, maxLength: 10, nullable: false),
                    BG_Property = table.Column<string>(unicode: false, maxLength: 2, nullable: false),
                    DEP = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    PRE_DEP = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    EXP_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    PRE_EXP_DD = table.Column<DateTime>(type: "datetime", nullable: true),
                    OEC = table.Column<decimal>(type: "decimal(18, 4)", nullable: true),
                    PRE_OEC = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    STATE = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    PRE_STATE = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    Rem = table.Column<string>(unicode: false, maxLength: 2000, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SB_STATUS_CHANGES", x => x.ID);
                    table.ForeignKey(
                        name: "FK_SB_STATUS_CHANGES_SB_STATUS_CHANGE",
                        column: x => x.MID,
                        principalTable: "SB_STATUS_CHANGE",
                        principalColumn: "ID",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "SBBY_PLAN_INFO",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    MID = table.Column<int>(nullable: false),
                    MM = table.Column<int>(nullable: false),
                    Plan_EXC = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    D1 = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    D2 = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    D3 = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    D4 = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    D5 = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    D6 = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    D7 = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    D8 = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    D9 = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    D10 = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    D11 = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    D12 = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    D13 = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    D14 = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    D15 = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    D16 = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    D17 = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    D18 = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    D19 = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    D20 = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    D21 = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    D22 = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    D23 = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    D24 = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    D25 = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    D26 = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    D27 = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    D28 = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    D29 = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    D30 = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    D31 = table.Column<string>(unicode: false, maxLength: 50, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SBBY_PLAN_INFO", x => x.ID);
                    table.ForeignKey(
                        name: "FK_SBBY_PLAN_INFO_SBBY_PLAN",
                        column: x => x.MID,
                        principalTable: "SBBY_PLAN",
                        principalColumn: "ID",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "ST_BARCODEINFOS",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    MID = table.Column<int>(nullable: true),
                    RBILL_TYPE = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    RBILL_NO = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    ITM = table.Column<int>(nullable: true),
                    EST_ITM = table.Column<int>(nullable: true),
                    PRD_NO = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    PRD_SNM = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    PRD_NAME = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    PRD_SPC = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    BAT_NO = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    BARCODE = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    BILL_DATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    CODE_DATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    ISPRINT = table.Column<bool>(nullable: true),
                    PRINT_DATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    MAKE_DATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    VALID_DAYS = table.Column<int>(nullable: true),
                    VALID_DATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    QTY = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    QTY1 = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    UNIT = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    UNIT1 = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    RESBARCODE = table.Column<string>(unicode: false, maxLength: 300, nullable: true),
                    MEMO = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    CUS_NO = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    CUS_NAME = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    TRAY_NO = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    CYL_NO = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    SHIP_NO = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    RAN = table.Column<string>(unicode: false, maxLength: 100, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ST_BARCODEINFOS", x => x.ID);
                    table.ForeignKey(
                        name: "FK_ST_BARCODEINFOS_ST_BARCODEINFO",
                        column: x => x.MID,
                        principalTable: "ST_BARCODEINFO",
                        principalColumn: "ID",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "ST_TDCODE_PALLET",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    PCODE = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    TDCODE = table.Column<string>(unicode: false, maxLength: 100, nullable: false),
                    SYSDATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    MID = table.Column<int>(nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ST_TDCODE_PALLET", x => x.ID);
                    table.ForeignKey(
                        name: "FK_ST_TDCODE_PALLET_ST_PALLETCODE_INFO",
                        column: x => x.MID,
                        principalTable: "ST_PALLETCODE_INFO",
                        principalColumn: "ID",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "SYS_AccountClose_Item",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    BillType = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    Close_Date = table.Column<DateTime>(type: "datetime", nullable: true),
                    IsValid = table.Column<bool>(nullable: true),
                    MID = table.Column<int>(nullable: false),
                    Rem = table.Column<string>(unicode: false, maxLength: 200, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SYS_AccountClose_Item", x => x.ID);
                    table.ForeignKey(
                        name: "FK_SYS_AccountClose_Item_SYS_Account_Close",
                        column: x => x.MID,
                        principalTable: "SYS_Account_Close",
                        principalColumn: "ID",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "sys_AudBill_Item",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    MID = table.Column<int>(nullable: false),
                    Item = table.Column<int>(nullable: true),
                    Usr_Aud = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    Result = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    Aud_Date = table.Column<DateTime>(type: "datetime", nullable: true),
                    Usr_Main = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    Rem = table.Column<string>(unicode: false, maxLength: 200, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_sys_AudBill_Item", x => x.ID);
                    table.ForeignKey(
                        name: "FK_sys_AudBill_Item_sys_AudBill_Info",
                        column: x => x.MID,
                        principalTable: "sys_AudBill_Info",
                        principalColumn: "ID",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "sys_AuditFlow_Details",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    MID = table.Column<int>(nullable: false),
                    BusiNo = table.Column<string>(unicode: false, maxLength: 100, nullable: false),
                    ChkMob = table.Column<string>(unicode: false, maxLength: 30, nullable: false),
                    Item = table.Column<int>(nullable: false),
                    Usr = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UsrName = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Rem = table.Column<string>(unicode: false, maxLength: 200, nullable: true),
                    Agent = table.Column<string>(unicode: false, maxLength: 250, nullable: true),
                    VALID_TIME = table.Column<short>(nullable: true),
                    DELAY_TIME = table.Column<short>(nullable: true),
                    TONEXT = table.Column<string>(unicode: false, maxLength: 1, nullable: true),
                    Signer = table.Column<string>(unicode: false, maxLength: 250, nullable: true),
                    Signing_Agent = table.Column<string>(unicode: false, maxLength: 250, nullable: true),
                    IS_TITLE = table.Column<bool>(nullable: true),
                    CDT_SQL = table.Column<string>(unicode: false, maxLength: 4000, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_sys_AuditFlow_Details", x => x.ID);
                    table.ForeignKey(
                        name: "FK_TF_SHLC_MF_SHLC",
                        column: x => x.MID,
                        principalTable: "sys_Audit_Flow",
                        principalColumn: "ID",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "sys_AuditFlow_Usr",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    MID = table.Column<int>(nullable: false),
                    USR = table.Column<string>(unicode: false, maxLength: 12, nullable: true),
                    DEP = table.Column<string>(unicode: false, maxLength: 8, nullable: true, defaultValueSql: "(space((0)))"),
                    BusiNo = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    ChkMob = table.Column<string>(unicode: false, maxLength: 30, nullable: false),
                    ISDEFAULT_MOB = table.Column<bool>(nullable: true),
                    BilType = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    Factory_No = table.Column<string>(unicode: false, maxLength: 50, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_sys_AuditFlow_Usr", x => x.ID);
                    table.ForeignKey(
                        name: "FK_sys_AuditFlow_Usr_sys_Audit_Flow",
                        column: x => x.MID,
                        principalTable: "sys_Audit_Flow",
                        principalColumn: "ID",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "SYS_CODENO_RULES",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    MID = table.Column<int>(nullable: false),
                    CombiID = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    CombiType = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    CombiOrder = table.Column<int>(nullable: false),
                    ItemType = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    FixChar = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    ItemLen = table.Column<int>(nullable: true),
                    Format = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Align = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    CoverChar = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    VarField = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    UpdateTime = table.Column<string>(unicode: false, maxLength: 20, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SYS_CODENO_RULES", x => x.ID);
                    table.ForeignKey(
                        name: "FK_SYS_CODENO_RULES_SYS_CODENO_RULE",
                        column: x => x.MID,
                        principalTable: "SYS_CODENO_RULE",
                        principalColumn: "ID",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "SYS_ROLE_DATA",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    MID = table.Column<int>(nullable: false),
                    BusiNo = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    ObjectID = table.Column<int>(nullable: false),
                    ObjectNo = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    ObjectName = table.Column<string>(unicode: false, maxLength: 200, nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SYS_ROLE_DATA", x => x.ID);
                    table.ForeignKey(
                        name: "FK_SYS_ROLE_DATA_SYS_ROLE",
                        column: x => x.MID,
                        principalTable: "SYS_ROLE",
                        principalColumn: "ID",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "SYS_ROLE_FIELD",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    MID = table.Column<int>(nullable: false),
                    Type = table.Column<int>(nullable: false),
                    BusiNo = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    FieldName = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    Visible = table.Column<bool>(nullable: false),
                    Editable = table.Column<bool>(nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SYS_ROLE_FIELD", x => x.ID);
                    table.ForeignKey(
                        name: "FK_SYS_ROLE_FIELD_SYS_ROLE",
                        column: x => x.MID,
                        principalTable: "SYS_ROLE",
                        principalColumn: "ID",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "SYS_ROLE_MENU",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    MID = table.Column<int>(nullable: false),
                    MenuNo = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    iView = table.Column<int>(nullable: true),
                    iAdd = table.Column<bool>(nullable: true),
                    iEdit = table.Column<int>(nullable: true),
                    iDelete = table.Column<int>(nullable: true),
                    iPrint = table.Column<bool>(nullable: true),
                    iExport = table.Column<bool>(nullable: true),
                    iProperty = table.Column<bool>(nullable: true),
                    iSubmit = table.Column<int>(nullable: true),
                    iunSubmit = table.Column<int>(nullable: true),
                    iAudit = table.Column<int>(nullable: true),
                    iunAudit = table.Column<int>(nullable: true),
                    iViewAudit = table.Column<int>(nullable: true),
                    iClose = table.Column<int>(nullable: true),
                    iunClose = table.Column<int>(nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SYS_ROLE_MENU", x => x.ID);
                    table.ForeignKey(
                        name: "FK_SYS_ROLE_MENU_SYS_ROLE",
                        column: x => x.MID,
                        principalTable: "SYS_ROLE",
                        principalColumn: "ID",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "SYS_Terminal_Items",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    MID = table.Column<int>(nullable: false),
                    Rem = table.Column<string>(unicode: false, maxLength: 500, nullable: true),
                    Station_Name = table.Column<string>(unicode: false, maxLength: 100, nullable: false),
                    Station_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    TM_NAME = table.Column<string>(unicode: false, maxLength: 100, nullable: false),
                    TM_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SYS_Terminal_Items", x => x.ID);
                    table.ForeignKey(
                        name: "FK_SYS_Terminal_Items_SYS_Terminal",
                        column: x => x.MID,
                        principalTable: "SYS_Terminal",
                        principalColumn: "ID",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "SYS_ROLE_USER",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    MID = table.Column<int>(nullable: false),
                    UserID = table.Column<int>(nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SYS_ROLE_USER", x => x.ID);
                    table.ForeignKey(
                        name: "FK_SYS_ROLE_USER_SYS_ROLE",
                        column: x => x.MID,
                        principalTable: "SYS_ROLE",
                        principalColumn: "ID",
                        onDelete: ReferentialAction.Cascade);
                    table.ForeignKey(
                        name: "FK_SYS_ROLE_USER_SYS_USER",
                        column: x => x.UserID,
                        principalTable: "SYS_USER",
                        principalColumn: "ID",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "UnacceptedProductionHandleSub",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    BatchNoOrBarcode = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    DefectNo = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    DefectPhenomenon = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    HandleMode = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    MID = table.Column<int>(nullable: true),
                    ProductionNo = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Qty = table.Column<int>(nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_UnacceptedProductionHandleSub", x => x.ID);
                    table.ForeignKey(
                        name: "FK_UnacceptedProductionHandleSub_UnacceptedProductionHandle",
                        column: x => x.MID,
                        principalTable: "UnacceptedProductionHandle",
                        principalColumn: "ID",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "WM_AsnItem",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    MID = table.Column<int>(nullable: true),
                    Prod_No = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Quantity = table.Column<decimal>(type: "decimal(18, 4)", nullable: true),
                    Location = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Unit = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Batch_No = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    ProductionDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    Remark = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    FinishQuantity = table.Column<decimal>(type: "decimal(18, 4)", nullable: true),
                    Source_No = table.Column<string>(unicode: false, maxLength: 55, nullable: true),
                    Status = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    MaterialBatch_No = table.Column<string>(unicode: false, maxLength: 55, nullable: true),
                    PrintQuantity = table.Column<decimal>(type: "decimal(18, 4)", nullable: true),
                    RefuseQuantity = table.Column<decimal>(type: "decimal(18, 4)", nullable: true),
                    TargetWareHouseNo = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    OrderNo = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    ItemNo = table.Column<string>(unicode: false, maxLength: 50, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_WM_AsnItem", x => x.ID);
                    table.ForeignKey(
                        name: "FK_WM_AsnItem_WM_Asn",
                        column: x => x.MID,
                        principalTable: "WM_Asn",
                        principalColumn: "ID",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "WM_Barcode",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    MID = table.Column<int>(nullable: false),
                    Barcode = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Type = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    Qty = table.Column<int>(nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_WM_Barcode", x => x.ID);
                    table.ForeignKey(
                        name: "FK_WM_Barcode_WM_Barcode_Source",
                        column: x => x.MID,
                        principalTable: "WM_Barcode_Source",
                        principalColumn: "ID",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "WM_FeedingHistory",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    Batch_No = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    FeedType = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    FinishQuantity = table.Column<decimal>(type: "decimal(18, 4)", nullable: true),
                    IOType = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    MID = table.Column<int>(nullable: true),
                    MPROD_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    PackageNo = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Process = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    PROD_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    ProductionDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    Quantity = table.Column<decimal>(type: "decimal(18, 4)", nullable: true),
                    ReturnQuantity = table.Column<decimal>(type: "decimal(18, 4)", nullable: true),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    TraceNo = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Usr = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    WO_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    WorkStation = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Shift_No = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    MO_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Plan_No = table.Column<string>(unicode: false, maxLength: 50, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_WM_FeedingHistory", x => x.ID);
                    table.ForeignKey(
                        name: "FK_WM_FeedingHistory_WM_Feeding",
                        column: x => x.MID,
                        principalTable: "WM_Feeding",
                        principalColumn: "ID",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "WM_FormItem",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    MID = table.Column<int>(nullable: true),
                    Prod_No = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Quantity = table.Column<decimal>(type: "decimal(18, 4)", nullable: true),
                    Location = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Unit = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Batch_No = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    ProductionDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    Remark = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    SourceLocation = table.Column<string>(maxLength: 50, nullable: true),
                    Status = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    FinishQuantity = table.Column<decimal>(type: "decimal(18, 4)", nullable: true, defaultValueSql: "((0))"),
                    Source_NO = table.Column<string>(unicode: false, maxLength: 55, nullable: true),
                    MaterialBatch_No = table.Column<string>(unicode: false, maxLength: 55, nullable: true),
                    ShippedQuantity = table.Column<decimal>(type: "decimal(18, 4)", nullable: true, defaultValueSql: "((0))"),
                    DeadLineDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    SourceLineNumber = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    WO_NO = table.Column<string>(unicode: false, maxLength: 55, nullable: true),
                    ERPOrderNumber = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    OrderNumber = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    AcceptanceItemID = table.Column<string>(unicode: false, maxLength: 50, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_WM_FormItem", x => x.ID);
                    table.ForeignKey(
                        name: "FK_WM_FormItem_WM_Form",
                        column: x => x.MID,
                        principalTable: "WM_Form",
                        principalColumn: "ID",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "WM_FreezeStorageHistory",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    Batch_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    FreezeQuantity = table.Column<decimal>(type: "decimal(22, 8)", nullable: true),
                    FreezeReason = table.Column<string>(unicode: false, maxLength: 200, nullable: true),
                    MID = table.Column<int>(nullable: true),
                    PackageNo = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    PROD_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Status = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    Usr = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    UsrName = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    WareHouseNo = table.Column<string>(unicode: false, maxLength: 50, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_WM_FreezeStorageHistory", x => x.ID);
                    table.ForeignKey(
                        name: "FK_WM_FreezeStorageHistory_WM_FreezeStorage",
                        column: x => x.MID,
                        principalTable: "WM_FreezeStorage",
                        principalColumn: "ID",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "WM_InventoryPlanItem",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    AccountQuantity = table.Column<decimal>(type: "decimal(18, 4)", nullable: true),
                    ActualQuantity = table.Column<decimal>(type: "decimal(18, 4)", nullable: true),
                    LackQuantity = table.Column<decimal>(type: "decimal(18, 4)", nullable: true),
                    MID = table.Column<int>(nullable: true),
                    MuchQuantity = table.Column<decimal>(type: "decimal(18, 4)", nullable: true),
                    Prod_No = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Remark = table.Column<string>(unicode: false, maxLength: 200, nullable: true),
                    Unit = table.Column<string>(unicode: false, maxLength: 50, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_WM_InventoryPlanItem", x => x.ID);
                    table.ForeignKey(
                        name: "FK_WM_InventoryPlanItem_WM_InventoryPlan",
                        column: x => x.MID,
                        principalTable: "WM_InventoryPlan",
                        principalColumn: "ID",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "WM_MaterialPreparaPlanItem",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    MID = table.Column<int>(nullable: true),
                    Prod_No = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    PlanQuantity = table.Column<decimal>(type: "decimal(18, 4)", nullable: true),
                    Quantity = table.Column<decimal>(type: "decimal(18, 4)", nullable: true),
                    Status = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Unit = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Batch_No = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    ProductionDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    Remark = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    DeadLineDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    LineNumber = table.Column<string>(unicode: false, maxLength: 50, nullable: true, defaultValueSql: "(newid())"),
                    TransferQuantity = table.Column<decimal>(type: "decimal(18, 4)", nullable: true),
                    UnFinishedQuantity = table.Column<decimal>(type: "decimal(18, 4)", nullable: true),
                    Type = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    FinishQuantity = table.Column<decimal>(type: "decimal(18, 4)", nullable: true),
                    SourceWareHouse = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    TargetWareHouse = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    WkCenter_No = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    WO_NO = table.Column<string>(unicode: false, maxLength: 55, nullable: true),
                    ConfirmQuantity = table.Column<decimal>(type: "decimal(18, 0)", nullable: true),
                    PickMaterialNo = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    PickMaterialQuantity = table.Column<decimal>(type: "decimal(18, 0)", nullable: true),
                    ShippedQuantity = table.Column<decimal>(type: "decimal(18, 0)", nullable: true),
                    Location = table.Column<string>(unicode: false, maxLength: 50, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_WM_MaterialPreparaPlanItem", x => x.ID);
                    table.ForeignKey(
                        name: "FK_WM_MaterialPreparaPlanItem_WM_MaterialPreparaPlan",
                        column: x => x.MID,
                        principalTable: "WM_MaterialPreparaPlan",
                        principalColumn: "ID",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "WM_OnShelfGuideItem",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    MID = table.Column<int>(nullable: true),
                    Prod_No = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    PlanQuantity = table.Column<decimal>(type: "decimal(18, 4)", nullable: true),
                    Quantity = table.Column<decimal>(type: "decimal(18, 4)", nullable: true),
                    Unit = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Batch_No = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    ProductionDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    Remark = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Status = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    SourceLocation = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    TargetLocation = table.Column<string>(unicode: false, maxLength: 50, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_WM_OnShelfGuideItem", x => x.ID);
                    table.ForeignKey(
                        name: "FK_WM_OnShelfGuideItem_WM_OnShelfGuide",
                        column: x => x.MID,
                        principalTable: "WM_OnShelfGuide",
                        principalColumn: "ID",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "WM_OutFormApplyItem",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    MID = table.Column<int>(nullable: true),
                    Prod_No = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Quantity = table.Column<decimal>(type: "decimal(18, 4)", nullable: true),
                    ShippedQuantity = table.Column<decimal>(type: "decimal(18, 4)", nullable: true, defaultValueSql: "((0))"),
                    SourceLocation = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Location = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Unit = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Batch_No = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    ProductionDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    Remark = table.Column<string>(unicode: false, maxLength: 500, nullable: true),
                    Status = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    MaxDeliveryQuantity = table.Column<decimal>(type: "decimal(18, 4)", nullable: true),
                    MinDeliveryQuantity = table.Column<decimal>(type: "decimal(18, 4)", nullable: true),
                    OrderNumber = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    ActualHandoverDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ERPOrderNumber = table.Column<string>(unicode: false, maxLength: 50, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_WM_OutFormApplyItem", x => x.ID);
                    table.ForeignKey(
                        name: "FK_WM_OutFormApplyItem_WM_OutFormApply",
                        column: x => x.MID,
                        principalTable: "WM_OutFormApply",
                        principalColumn: "ID",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "WM_Package_BOM_Items",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    BOM_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Item = table.Column<int>(nullable: true),
                    MID = table.Column<int>(nullable: false),
                    Prod_Name = table.Column<string>(unicode: false, maxLength: 100, nullable: true),
                    Prod_No = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    Prod_Spec = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Qty = table.Column<decimal>(type: "decimal(12, 8)", nullable: true),
                    Unit = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    Whse_No = table.Column<string>(unicode: false, maxLength: 50, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_WM_Package_BOM_Items", x => x.ID);
                    table.ForeignKey(
                        name: "FK_WM_Package_BOM_Items_WM_Package_BOM",
                        column: x => x.MID,
                        principalTable: "WM_Package_BOM",
                        principalColumn: "ID",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "WM_ShelfGuideItem",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    MID = table.Column<int>(nullable: true),
                    Prod_No = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    PlanQuantity = table.Column<decimal>(type: "decimal(18, 4)", nullable: true),
                    Quantity = table.Column<decimal>(type: "decimal(18, 4)", nullable: true),
                    Unit = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Batch_No = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    ProductionDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    Remark = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Status = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    SourceLocation = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    TargetLocation = table.Column<string>(unicode: false, maxLength: 50, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_WM_ShelfGuideItem", x => x.ID);
                    table.ForeignKey(
                        name: "FK_WM_ShelfGuideItem_WM_ShelfGuide",
                        column: x => x.MID,
                        principalTable: "WM_ShelfGuide",
                        principalColumn: "ID",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "WM_StorageHistory",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    MID = table.Column<int>(nullable: true),
                    Location = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Prod_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Quantity = table.Column<decimal>(type: "decimal(18, 4)", nullable: true),
                    Unit = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Batch_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    BeginningOfPeriod = table.Column<decimal>(type: "decimal(18, 4)", nullable: true),
                    Balance = table.Column<decimal>(type: "decimal(18, 4)", nullable: true),
                    Usr = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    IOType = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Source_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_WM_StorageHistory", x => x.ID);
                    table.ForeignKey(
                        name: "FK_WM_StorageHistory_WM_Storage",
                        column: x => x.MID,
                        principalTable: "WM_Storage",
                        principalColumn: "ID",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "WM_StorageBarcodeHistory",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    Location = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Cust_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    SourceNo_Form = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Prod_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    PackageNO = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Batch_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Source_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    TradeDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    IOType = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ProductionDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    Unit = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    BeginningOfPeriod = table.Column<decimal>(type: "decimal(18, 4)", nullable: true),
                    Quantity = table.Column<decimal>(type: "decimal(18, 4)", nullable: true),
                    Balance = table.Column<decimal>(type: "decimal(18, 4)", nullable: true),
                    MID = table.Column<int>(nullable: true),
                    MaterialBatch_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Usr = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    UsrName = table.Column<string>(unicode: false, maxLength: 50, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_WM_StorageBarcodeHistory", x => x.ID);
                    table.ForeignKey(
                        name: "FK_WM_StorageBarcodeHistory_WM_StorageBarcode",
                        column: x => x.MID,
                        principalTable: "WM_StorageBarcode",
                        principalColumn: "ID",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "MDM_ProcessBOM",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    Effect_Date = table.Column<DateTime>(type: "datetime", nullable: true),
                    Expiry_Date = table.Column<DateTime>(type: "datetime", nullable: true),
                    MID = table.Column<int>(nullable: true),
                    Picking_Mode = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    Proc_VerNo = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    ProcessNo = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Prod_Alternate = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Prod_No = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Qty = table.Column<decimal>(type: "decimal(12, 4)", nullable: true),
                    Wastage_Rate = table.Column<decimal>(type: "decimal(12, 8)", nullable: true),
                    Qty_Base = table.Column<decimal>(type: "decimal(12, 4)", nullable: true),
                    Wastage_Qty = table.Column<decimal>(type: "decimal(12, 4)", nullable: true),
                    Mateial_Type = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    Accuracy_Trace = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    IsGenerateTraceBarcode = table.Column<bool>(nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_MDM_ProcessBOM", x => x.ID);
                    table.ForeignKey(
                        name: "FK_MDM_ProcessBOM_TF_BOM",
                        column: x => x.MID,
                        principalTable: "TF_BOM",
                        principalColumn: "ID",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "TF_UNQCDSP_INFOS",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    MID = table.Column<int>(nullable: false),
                    SPC_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    SPC_NAME = table.Column<string>(unicode: false, maxLength: 100, nullable: false),
                    SEB_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    MOD_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    ITM = table.Column<int>(nullable: true),
                    QCDATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    SPC_GRADE = table.Column<string>(unicode: false, maxLength: 10, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TF_UNQCDSP_INFOS", x => x.ID);
                    table.ForeignKey(
                        name: "FK_TF_UNQCDSP_INFOS_TF_UNQCPRDHL",
                        column: x => x.MID,
                        principalTable: "TF_UNQCPRDHL",
                        principalColumn: "ID",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "MDM_CycleTime",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    MID = table.Column<int>(nullable: true),
                    TypeNo = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    No = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    CycleTime = table.Column<decimal>(type: "decimal(16, 8)", nullable: true),
                    Qty_Single = table.Column<decimal>(type: "decimal(16, 8)", nullable: true),
                    Unit = table.Column<string>(unicode: false, maxLength: 10, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_MDM_CycleTime", x => x.ID);
                    table.ForeignKey(
                        name: "FK_MDM_CycleTime_TF_ZC",
                        column: x => x.MID,
                        principalTable: "TF_ZC",
                        principalColumn: "ID",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "TF_ZC_RES",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    MID = table.Column<int>(nullable: false),
                    Res_No = table.Column<string>(unicode: false, maxLength: 50, nullable: false),
                    Res_Name = table.Column<string>(unicode: false, maxLength: 100, nullable: false),
                    Res_Type = table.Column<string>(unicode: false, maxLength: 2, nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TF_ZC_RES", x => x.ID);
                    table.ForeignKey(
                        name: "FK_TF_ZC_RES_TF_ZC",
                        column: x => x.MID,
                        principalTable: "TF_ZC",
                        principalColumn: "ID",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "PP_WorkOrder_Station",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    MID = table.Column<int>(nullable: false),
                    MO_No = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    Process_No = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Wk_Center_No = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    Station_No = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    Qty = table.Column<decimal>(type: "decimal(12, 8)", nullable: true),
                    Qty_Fin = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    Qty_Pass = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    Qty_Lost = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    Qty_Scrap = table.Column<decimal>(type: "numeric(18, 0)", nullable: true),
                    WO_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_PP_WorkOrder_Station", x => x.ID);
                    table.ForeignKey(
                        name: "FK_PP_WorkOrder_Station_PP_WorkOrder_Procs",
                        column: x => x.MID,
                        principalTable: "PP_WorkOrder_Procs",
                        principalColumn: "ID",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "QM_SIO_BCI",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    BarCode = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    HandleResult = table.Column<int>(nullable: true),
                    HandleUser = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    HandleDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ProcessNo = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    Qty = table.Column<decimal>(type: "decimal(18, 4)", nullable: true),
                    MID = table.Column<int>(nullable: false),
                    RelationID = table.Column<int>(nullable: true),
                    Comment = table.Column<string>(maxLength: 500, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_QM_SIO_BCI", x => x.ID);
                    table.ForeignKey(
                        name: "FK_QM_SIO_BCI_MID",
                        column: x => x.MID,
                        principalTable: "QM_InspectS",
                        principalColumn: "ID",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "qmTIBarcode",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    Barcode = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Comment = table.Column<string>(unicode: false, maxLength: 500, nullable: true),
                    HandleDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    HandleResult = table.Column<int>(nullable: true),
                    HandleUser = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    MID = table.Column<int>(nullable: true),
                    Qty = table.Column<decimal>(type: "decimal(18, 4)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_qmTIBarcode", x => x.ID);
                    table.ForeignKey(
                        name: "FK_qmTIBarcode_qmTISub",
                        column: x => x.MID,
                        principalTable: "qmTISub",
                        principalColumn: "ID",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "qmTYBarcode",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    Barcode = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Comment = table.Column<string>(unicode: false, maxLength: 500, nullable: true),
                    HandleDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    HandleResult = table.Column<int>(nullable: true),
                    HandleUser = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    MID = table.Column<int>(nullable: true),
                    Qty = table.Column<decimal>(type: "decimal(18, 4)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_qmTYBarcode", x => x.ID);
                    table.ForeignKey(
                        name: "FK_qmTYBarcode_qmTYSub",
                        column: x => x.MID,
                        principalTable: "qmTYSub",
                        principalColumn: "ID",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "RM_Mold_RepairRecord_Reason",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    MID = table.Column<int>(nullable: false),
                    MOD_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    MOD_SN = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    ReasonCode = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    ReasonDesc = table.Column<string>(unicode: false, maxLength: 200, nullable: true),
                    PartNo = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    FaultCode = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    FaultDesc = table.Column<string>(unicode: false, maxLength: 200, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_RM_Mold_RepairRecord_Reason", x => x.ID);
                    table.ForeignKey(
                        name: "FK_RM_Mold_RepairRecord_Reason_RM_Mold_RepairRecord_Item",
                        column: x => x.MID,
                        principalTable: "RM_Mold_RepairRecord_Item",
                        principalColumn: "ID",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "RM_Mold_RepairRequest_Fault",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    FaultCode = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    FaultDesc = table.Column<string>(unicode: false, maxLength: 200, nullable: true),
                    MID = table.Column<int>(nullable: false),
                    MOD_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    MOD_SN = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    PartNo = table.Column<string>(unicode: false, maxLength: 50, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_RM_Mold_RepairRequest_Fault", x => x.ID);
                    table.ForeignKey(
                        name: "FK_RM_Mold_RepairRequest_Fault_RM_Mold_RepairRequest_Item",
                        column: x => x.MID,
                        principalTable: "RM_Mold_RepairRequest_Item",
                        principalColumn: "ID",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "SYS_ROLE_MENU_ACTIONS",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    MID = table.Column<int>(nullable: false),
                    ACTIONNAME = table.Column<string>(unicode: false, maxLength: 10, nullable: false),
                    ACTIONVALUE = table.Column<int>(nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SYS_ROLE_MENU_ACTIONS", x => x.ID);
                    table.ForeignKey(
                        name: "FK_SYS_ROLE_MENU_ACTIONS_SYS_ROLE_MENU",
                        column: x => x.MID,
                        principalTable: "SYS_ROLE_MENU",
                        principalColumn: "ID",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "UnacceptedProductionHandleSubResult",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    Barcode = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Comment = table.Column<string>(unicode: false, maxLength: 200, nullable: true),
                    MID = table.Column<int>(nullable: true),
                    Qty = table.Column<int>(nullable: true),
                    Result = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Remarketing = table.Column<bool>(nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_UnacceptedProductionHandleSubResult", x => x.ID);
                    table.ForeignKey(
                        name: "FK_UnacceptedProductionHandleSubResult_UnacceptedProductionHandleSub",
                        column: x => x.MID,
                        principalTable: "UnacceptedProductionHandleSub",
                        principalColumn: "ID",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "WM_AsnBarcodeInfo",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    MID = table.Column<int>(nullable: true),
                    Prod_No = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Batch_No = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    PackageNo = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Quantity = table.Column<decimal>(type: "decimal(18, 4)", nullable: true),
                    Unit = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    ProductionDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    Status = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    FinishQuantity = table.Column<decimal>(type: "decimal(18, 4)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_WM_AsnBarcodeInfo", x => x.ID);
                    table.ForeignKey(
                        name: "FK_WM_AsnBarcodeInfo_WM_AsnItem",
                        column: x => x.MID,
                        principalTable: "WM_AsnItem",
                        principalColumn: "ID",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "WM_Barcode_BatchInfo",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    MID = table.Column<int>(nullable: false),
                    Barcode_Pkg = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Barcode = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Qty = table.Column<decimal>(type: "decimal(16, 8)", nullable: true),
                    Prod_State = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    Quality_State = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    Usr_Exec = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    Process_No = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    PrintDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ReworkDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    PackingDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ReportDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    StorageDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ShippingDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    Station_No = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    Dev_No = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    WO_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    MO_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    Whse_No_Cur = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    Shipping_No = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    Process_InOut = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    Usr = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    UsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: false),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    Reserved1 = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Reserved2 = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Reserved3 = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Reserved4 = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Reserved5 = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Reserved6 = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Reserved7 = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Reserved8 = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Reserved9 = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Reserved10 = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    BarcodeDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    Prod_No = table.Column<string>(unicode: false, maxLength: 50, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_WM_Barcode_BatchInfo", x => x.ID);
                    table.ForeignKey(
                        name: "FK_WM_Barcode_BatchInfo_WM_Barcode",
                        column: x => x.MID,
                        principalTable: "WM_Barcode",
                        principalColumn: "ID",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "WM_FormBarcodeInfo",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    MID = table.Column<int>(nullable: true),
                    Prod_No = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Batch_No = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    PackageNo = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Quantity = table.Column<decimal>(type: "decimal(18, 4)", nullable: true),
                    Unit = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    ProductionDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    Status = table.Column<string>(maxLength: 50, nullable: true),
                    Location = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    SourceLocation = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    ReturnQuantity = table.Column<decimal>(type: "decimal(18, 4)", nullable: true),
                    MaterialBatch_NO = table.Column<string>(unicode: false, maxLength: 50, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_WM_FormBarcodeInfo", x => x.ID);
                    table.ForeignKey(
                        name: "FK_WM_FormBarcodeInfo_WM_FormItem",
                        column: x => x.MID,
                        principalTable: "WM_FormItem",
                        principalColumn: "ID",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "WM_InventoryPlanBarcode",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    Batch_No = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Location = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    MID = table.Column<int>(nullable: true),
                    PackageNo = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Prod_No = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    ProductionDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    Quantity = table.Column<decimal>(type: "decimal(18, 4)", nullable: true),
                    Status = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Unit = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    ActualQuantity = table.Column<decimal>(type: "decimal(18, 4)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_WM_InventoryPlanBarcode", x => x.ID);
                    table.ForeignKey(
                        name: "FK_WM_InventoryPlanBarcode_WM_InventoryPlanItem",
                        column: x => x.MID,
                        principalTable: "WM_InventoryPlanItem",
                        principalColumn: "ID",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "WM_MaterialPreparaPlanBarcode",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    MID = table.Column<int>(nullable: true),
                    Prod_No = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Batch_No = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    PackageNo = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Quantity = table.Column<decimal>(type: "decimal(18, 4)", nullable: true),
                    Unit = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    ProductionDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    SourceLocation = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Status = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    TargetLocation = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    SourceWareHouseNo = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    FinishQuantity = table.Column<decimal>(type: "decimal(18, 0)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_WM_MaterialPreparaPlanBarcode", x => x.ID);
                    table.ForeignKey(
                        name: "FK_WM_MaterialPreparaPlanBarcode_WM_MaterialPreparaPlanItem",
                        column: x => x.MID,
                        principalTable: "WM_MaterialPreparaPlanItem",
                        principalColumn: "ID",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "WM_OnShelfGuideBarcode",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    MID = table.Column<int>(nullable: true),
                    Prod_No = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Batch_No = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    PackageNo = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Quantity = table.Column<decimal>(type: "decimal(18, 4)", nullable: true),
                    Unit = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    ProductionDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    Location = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    SourceLocation = table.Column<string>(unicode: false, maxLength: 55, nullable: true),
                    Status = table.Column<string>(unicode: false, maxLength: 55, nullable: true),
                    FinishQuantity = table.Column<decimal>(type: "decimal(18, 4)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_WM_OnShelfGuideBarcode", x => x.ID);
                    table.ForeignKey(
                        name: "FK_WM_OnShelfGuideBarcode_WM_OnShelfGuideItem",
                        column: x => x.MID,
                        principalTable: "WM_OnShelfGuideItem",
                        principalColumn: "ID",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "WM_OutFormApplyBarcodeInfo",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    MID = table.Column<int>(nullable: true),
                    Prod_No = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Batch_No = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    PackageNo = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Quantity = table.Column<decimal>(type: "decimal(18, 4)", nullable: true),
                    Unit = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    ProductionDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    SourceLocation = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Location = table.Column<string>(unicode: false, maxLength: 50, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_WM_OutFormApplyBarcodeInfo", x => x.ID);
                    table.ForeignKey(
                        name: "FK_WM_OutFormApplyBarcodeInfo_WM_OutFormApplyItem",
                        column: x => x.MID,
                        principalTable: "WM_OutFormApplyItem",
                        principalColumn: "ID",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "WM_ShelfGuideBarcode",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    MID = table.Column<int>(nullable: true),
                    Prod_No = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Batch_No = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    PackageNo = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Quantity = table.Column<decimal>(type: "decimal(18, 4)", nullable: true),
                    Unit = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    ProductionDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    Location = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    SourceLocation = table.Column<string>(unicode: false, maxLength: 55, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_WM_ShelfGuideBarcode", x => x.ID);
                    table.ForeignKey(
                        name: "FK_WM_ShelfGuideBarcode_WM_ShelfGuideItem",
                        column: x => x.MID,
                        principalTable: "WM_ShelfGuideItem",
                        principalColumn: "ID",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "WM_Barcode_BatchInfoHis",
                columns: table => new
                {
                    ID = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    MID = table.Column<int>(nullable: false),
                    Barcode_Pkg = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Barcode = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Qty = table.Column<decimal>(type: "decimal(16, 8)", nullable: true),
                    Prod_State = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    Quality_State = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    Usr_Exec = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    Process_No = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    PrintDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ReworkDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    PackingDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ReportDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    StorageDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ShippingDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    Station_No = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    Dev_No = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    WO_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    MO_NO = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    Whse_No_Cur = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    Shipping_No = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    Process_InOut = table.Column<string>(unicode: false, maxLength: 10, nullable: true),
                    Usr = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    UsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: false),
                    SysDate = table.Column<DateTime>(type: "datetime", nullable: false),
                    UpdUsr = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    UpdUsrName = table.Column<string>(unicode: false, maxLength: 20, nullable: true),
                    UpdDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    Reserved1 = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Reserved2 = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Reserved3 = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Reserved4 = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Reserved5 = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Reserved6 = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Reserved7 = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Reserved8 = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Reserved9 = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    Reserved10 = table.Column<string>(unicode: false, maxLength: 50, nullable: true),
                    BarcodeDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    Prod_No = table.Column<string>(unicode: false, maxLength: 50, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_WM_Barcode_BatchInfoHis", x => x.ID);
                    table.ForeignKey(
                        name: "FK_WM_Barcode_BatchInfoHis_WM_Barcode_BatchInfo",
                        column: x => x.MID,
                        principalTable: "WM_Barcode_BatchInfo",
                        principalColumn: "ID",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateIndex(
                name: "IX_BARCODE_PRODUCT_MAP",
                table: "BARCODE_PRODUCT_MAP",
                columns: new[] { "BARCODE", "PRD_NO" },
                unique: true);

            migrationBuilder.CreateIndex(
                name: "IX_BF_RPT_TEMPLETS_MID",
                table: "BF_RPT_TEMPLETS",
                column: "MID");

            migrationBuilder.CreateIndex(
                name: "IX_CMM_MEASURE_REC_ITEM_MID",
                table: "CMM_MEASURE_REC_ITEM",
                column: "MID");

            migrationBuilder.CreateIndex(
                name: "IX_EQP_MTSPEC_INFO_MID",
                table: "EQP_MTSPEC_INFO",
                column: "MID");

            migrationBuilder.CreateIndex(
                name: "IX_EQP_RUN_RECORD_MID",
                table: "EQP_RUN_RECORD",
                column: "MID");

            migrationBuilder.CreateIndex(
                name: "IX_EQP_Spare_Part_MID",
                table: "EQP_Spare_Part",
                column: "MID");

            migrationBuilder.CreateIndex(
                name: "IX_GX_Other_Items_MID",
                table: "GX_Other_Items",
                column: "MID");

            migrationBuilder.CreateIndex(
                name: "IX_LE_TestItems_MID",
                table: "LE_TestItems",
                column: "MID");

            migrationBuilder.CreateIndex(
                name: "IX_MDM_CycleTime_MID",
                table: "MDM_CycleTime",
                column: "MID");

            migrationBuilder.CreateIndex(
                name: "IX_MDM_Fixture_FaultBOMDetail_MID",
                table: "MDM_Fixture_FaultBOMDetail",
                column: "MID");

            migrationBuilder.CreateIndex(
                name: "IX_MDM_ProcessBOM_MID",
                table: "MDM_ProcessBOM",
                column: "MID");

            migrationBuilder.CreateIndex(
                name: "IX_sys_WorkCenter",
                table: "MDM_WorkCenter",
                column: "NO",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "IX_MF_TZ_1",
                table: "MF_TZ",
                column: "TZ_NO",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "IX_MF_TZ_2",
                table: "MF_TZ",
                columns: new[] { "MRP_NO", "ZC_NO" });

            migrationBuilder.CreateIndex(
                name: "IX_MF_TZ",
                table: "MF_TZ",
                columns: new[] { "TZ_DD", "SEB_NO" });

            migrationBuilder.CreateIndex(
                name: "IX_MOLD_MTORDER_INFO_MID",
                table: "MOLD_MTORDER_INFO",
                column: "MID");

            migrationBuilder.CreateIndex(
                name: "IX_MOLD_MTSPEC_INFO_MID",
                table: "MOLD_MTSPEC_INFO",
                column: "MID");

            migrationBuilder.CreateIndex(
                name: "IX_MOLDING_DEVIATES_T_MID",
                table: "MOLDING_DEVIATES_T",
                column: "MID");

            migrationBuilder.CreateIndex(
                name: "IX_MS_CALNOTICE_INFO_MID",
                table: "MS_CALNOTICE_INFO",
                column: "MID");

            migrationBuilder.CreateIndex(
                name: "IX_MS_CALPLAN_INFO_MID",
                table: "MS_CALPLAN_INFO",
                column: "MID");

            migrationBuilder.CreateIndex(
                name: "IX_PC_InOutPut_Relation_MID",
                table: "PC_InOutPut_Relation",
                column: "MID");

            migrationBuilder.CreateIndex(
                name: "IX_PC_OutPut",
                table: "PC_OutPut",
                column: "Report_Guid");

            migrationBuilder.CreateIndex(
                name: "IX_PC_OutPut_Defect_MID",
                table: "PC_OutPut_Defect",
                column: "MID");

            migrationBuilder.CreateIndex(
                name: "IX_PC_TraceabilityDataPortal",
                table: "PC_TraceabilityDataPortal",
                column: "TraceCode",
                unique: true,
                filter: "[TraceCode] IS NOT NULL");

            migrationBuilder.CreateIndex(
                name: "IX_PC_TraceabilityLog",
                table: "PC_TraceabilityLog",
                column: "MainTraceCode");

            migrationBuilder.CreateIndex(
                name: "IX_PP_Plan_Orders_MID",
                table: "PP_Plan_Orders",
                column: "MID");

            migrationBuilder.CreateIndex(
                name: "IX_PP_Production_Order1",
                table: "PP_Production_Order",
                column: "MO_No",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "IX_PP_Production_Orders_MID",
                table: "PP_Production_Orders",
                column: "MID");

            migrationBuilder.CreateIndex(
                name: "IX_PP_WorkOrder_1",
                table: "PP_WorkOrder",
                column: "UniqueCode");

            migrationBuilder.CreateIndex(
                name: "IX_PP_WorkOrder",
                table: "PP_WorkOrder",
                columns: new[] { "WO_No", "MO_No" },
                unique: true,
                filter: "[MO_No] IS NOT NULL");

            migrationBuilder.CreateIndex(
                name: "IX_PP_WorkOrder_Mats_MID",
                table: "PP_WorkOrder_Mats",
                column: "MID");

            migrationBuilder.CreateIndex(
                name: "IX_PP_WorkOrder_Procs_MID",
                table: "PP_WorkOrder_Procs",
                column: "MID");

            migrationBuilder.CreateIndex(
                name: "IX_PP_WorkOrder_Procs",
                table: "PP_WorkOrder_Procs",
                columns: new[] { "MO_No", "WO_No" });

            migrationBuilder.CreateIndex(
                name: "IX_PP_WorkOrder_Station_MID",
                table: "PP_WorkOrder_Station",
                column: "MID");

            migrationBuilder.CreateIndex(
                name: "IX_PRDT",
                table: "PRDT",
                columns: new[] { "PRD_NO", "NAME" },
                unique: true,
                filter: "[NAME] IS NOT NULL");

            migrationBuilder.CreateIndex(
                name: "IX_PRDT_1",
                table: "PRDT",
                columns: new[] { "SNM", "PRD_NO" });

            migrationBuilder.CreateIndex(
                name: "IX_QC_RECORDVALUE_MID",
                table: "QC_RECORDVALUE",
                column: "MID");

            migrationBuilder.CreateIndex(
                name: "IX_QM_InspectingRecord_MID",
                table: "QM_InspectingRecord",
                column: "MID");

            migrationBuilder.CreateIndex(
                name: "IX_QM_InspectS_MID",
                table: "QM_InspectS",
                column: "MID");

            migrationBuilder.CreateIndex(
                name: "IX_QM_InspectTD_MID",
                table: "QM_InspectTD",
                column: "MID");

            migrationBuilder.CreateIndex(
                name: "IX_QM_SIO_BCI_MID",
                table: "QM_SIO_BCI",
                column: "MID");

            migrationBuilder.CreateIndex(
                name: "IX_qmTIBarcode_MID",
                table: "qmTIBarcode",
                column: "MID");

            migrationBuilder.CreateIndex(
                name: "IX_qmTISub_MID",
                table: "qmTISub",
                column: "MID");

            migrationBuilder.CreateIndex(
                name: "IX_qmTYBarcode_MID",
                table: "qmTYBarcode",
                column: "MID");

            migrationBuilder.CreateIndex(
                name: "IX_qmTYSub_MID",
                table: "qmTYSub",
                column: "MID");

            migrationBuilder.CreateIndex(
                name: "IX_RM_Cutters_SerialNumber",
                table: "RM_Cutters_SerialNumber",
                column: "SerialNo",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "RM_Mold_Insp_Items_MID",
                table: "RM_Mold_Insp_Items",
                column: "MID");

            migrationBuilder.CreateIndex(
                name: "RM_Mold_Insp_Program_BusiNo",
                table: "RM_Mold_Insp_Program",
                column: "BusiNo");

            migrationBuilder.CreateIndex(
                name: "IX_RM_Mold_InspTask_Items_MID",
                table: "RM_Mold_InspTask_Items",
                column: "MID");

            migrationBuilder.CreateIndex(
                name: "IX_RM_Mold_RepairRecord_Item_MID",
                table: "RM_Mold_RepairRecord_Item",
                column: "MID");

            migrationBuilder.CreateIndex(
                name: "IX_RM_Mold_RepairRecord_Reason_MID",
                table: "RM_Mold_RepairRecord_Reason",
                column: "MID");

            migrationBuilder.CreateIndex(
                name: "IX_RM_Mold_RepairRequest_Fault_MID",
                table: "RM_Mold_RepairRequest_Fault",
                column: "MID");

            migrationBuilder.CreateIndex(
                name: "IX_RM_Mold_RepairRequest_Item_MID",
                table: "RM_Mold_RepairRequest_Item",
                column: "MID");

            migrationBuilder.CreateIndex(
                name: "IX_RM_MoldSparePart_Info_MID",
                table: "RM_MoldSparePart_Info",
                column: "MID");

            migrationBuilder.CreateIndex(
                name: "IX_SB_MTORDER_INFO_MID",
                table: "SB_MTORDER_INFO",
                column: "MID");

            migrationBuilder.CreateIndex(
                name: "IX_SB_MTSPEC_INFO_MID",
                table: "SB_MTSPEC_INFO",
                column: "MID");

            migrationBuilder.CreateIndex(
                name: "IX_SB_PRDT_PARAS_MID",
                table: "SB_PRDT_PARAS",
                column: "MID");

            migrationBuilder.CreateIndex(
                name: "IX_SB_SPARE_PART_MID",
                table: "SB_SPARE_PART",
                column: "MID");

            migrationBuilder.CreateIndex(
                name: "IX_SB_STATUS_CHANGES_MID",
                table: "SB_STATUS_CHANGES",
                column: "MID");

            migrationBuilder.CreateIndex(
                name: "IX_SBBY_PLAN_INFO_MID",
                table: "SBBY_PLAN_INFO",
                column: "MID");

            migrationBuilder.CreateIndex(
                name: "IX_SEBEI_SEB_NO",
                table: "SEBEI",
                column: "SEB_NO",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "IX_ST_BARCODEINFOS_MID",
                table: "ST_BARCODEINFOS",
                column: "MID");

            migrationBuilder.CreateIndex(
                name: "IX_ST_TDCODE_PALLET_MID",
                table: "ST_TDCODE_PALLET",
                column: "MID");

            migrationBuilder.CreateIndex(
                name: "IX_Student_MajorID",
                table: "Student",
                column: "MajorID");

            migrationBuilder.CreateIndex(
                name: "IX_SYS_AccountClose_Item_MID",
                table: "SYS_AccountClose_Item",
                column: "MID");

            migrationBuilder.CreateIndex(
                name: "IX_SYS_ATTACHMENT_1",
                table: "SYS_ATTACHMENT",
                column: "FileID");

            migrationBuilder.CreateIndex(
                name: "IX_SYS_ATTACHMENT",
                table: "SYS_ATTACHMENT",
                columns: new[] { "BUSINO", "BillID" });

            migrationBuilder.CreateIndex(
                name: "IX_sys_AudBill_Item_MID",
                table: "sys_AudBill_Item",
                column: "MID");

            migrationBuilder.CreateIndex(
                name: "IX_sys_AuditFlow_Details_MID",
                table: "sys_AuditFlow_Details",
                column: "MID");

            migrationBuilder.CreateIndex(
                name: "IX_sys_AuditFlow_Usr_MID",
                table: "sys_AuditFlow_Usr",
                column: "MID");

            migrationBuilder.CreateIndex(
                name: "IX_SYS_BILLNO_TEMP",
                table: "SYS_BILLNO_TEMP",
                column: "BILLID");

            migrationBuilder.CreateIndex(
                name: "u_ruleid",
                table: "SYS_CODENO_RULE",
                column: "RuleID",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "CK_CombiID",
                table: "SYS_CODENO_RULES",
                column: "CombiID",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "IX_SYS_CODENO_RULES_MID",
                table: "SYS_CODENO_RULES",
                column: "MID");

            migrationBuilder.CreateIndex(
                name: "IX_sys_Menu_LocalSet",
                table: "sys_Menu_LocalSet",
                column: "MenuNo",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "IX_sys_OuterDB_ConnString",
                table: "sys_OuterDB_ConnString",
                column: "No",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "IX_SYS_ROLE_DATA_MID",
                table: "SYS_ROLE_DATA",
                column: "MID");

            migrationBuilder.CreateIndex(
                name: "IX_SYS_ROLE_FIELD_MID",
                table: "SYS_ROLE_FIELD",
                column: "MID");

            migrationBuilder.CreateIndex(
                name: "IX_SYS_ROLE_MENU",
                table: "SYS_ROLE_MENU",
                columns: new[] { "MID", "MenuNo" },
                unique: true);

            migrationBuilder.CreateIndex(
                name: "IX_SYS_ROLE_MENU_ACTIONS_MID",
                table: "SYS_ROLE_MENU_ACTIONS",
                column: "MID");

            migrationBuilder.CreateIndex(
                name: "IX_SYS_ROLE_USER_MID",
                table: "SYS_ROLE_USER",
                column: "MID");

            migrationBuilder.CreateIndex(
                name: "IX_SYS_ROLE_USER_UserID",
                table: "SYS_ROLE_USER",
                column: "UserID");

            migrationBuilder.CreateIndex(
                name: "IX_SYS_Terminal_Items_MID",
                table: "SYS_Terminal_Items",
                column: "MID");

            migrationBuilder.CreateIndex(
                name: "IX_TF_BAN_MID",
                table: "TF_BAN",
                column: "MID");

            migrationBuilder.CreateIndex(
                name: "IX_TF_BOM_MID",
                table: "TF_BOM",
                column: "MID");

            migrationBuilder.CreateIndex(
                name: "IX_TF_BYJL_MID",
                table: "TF_BYJL",
                column: "MID");

            migrationBuilder.CreateIndex(
                name: "IX_TF_CK_MID",
                table: "TF_CK",
                column: "MID");

            migrationBuilder.CreateIndex(
                name: "IX_TF_CS_MID",
                table: "TF_CS",
                column: "MID");

            migrationBuilder.CreateIndex(
                name: "IX_TF_DS_MID",
                table: "TF_DS",
                column: "MID");

            migrationBuilder.CreateIndex(
                name: "IX_TF_GR_M_MID",
                table: "TF_GR_M",
                column: "MID");

            migrationBuilder.CreateIndex(
                name: "IX_TF_GR_S_MID",
                table: "TF_GR_S",
                column: "MID");

            migrationBuilder.CreateIndex(
                name: "IX_TF_IC_MID",
                table: "TF_IC",
                column: "MID");

            migrationBuilder.CreateIndex(
                name: "IX_TF_IJ_MID",
                table: "TF_IJ",
                column: "MID");

            migrationBuilder.CreateIndex(
                name: "IX_TF_JH_MID",
                table: "TF_JH",
                column: "MID");

            migrationBuilder.CreateIndex(
                name: "IX_TF_JJ_MID",
                table: "TF_JJ",
                column: "MID");

            migrationBuilder.CreateIndex(
                name: "IX_TF_JXZB_JS_MID",
                table: "TF_JXZB_JS",
                column: "MID");

            migrationBuilder.CreateIndex(
                name: "IX_TF_JXZB_SZ_MID",
                table: "TF_JXZB_SZ",
                column: "MID");

            migrationBuilder.CreateIndex(
                name: "IX_TF_MD_INOUT_MID",
                table: "TF_MD_INOUT",
                column: "MID");

            migrationBuilder.CreateIndex(
                name: "IX_TF_MJAA_MID",
                table: "TF_MJAA",
                column: "MID");

            migrationBuilder.CreateIndex(
                name: "IX_TF_ML_MID",
                table: "TF_ML",
                column: "MID");

            migrationBuilder.CreateIndex(
                name: "IX_TF_MM0_MID",
                table: "TF_MM0",
                column: "MID");

            migrationBuilder.CreateIndex(
                name: "IX_TF_MMJH_MID",
                table: "TF_MMJH",
                column: "MID");

            migrationBuilder.CreateIndex(
                name: "IX_TF_MO_MID",
                table: "TF_MO",
                column: "MID");

            migrationBuilder.CreateIndex(
                name: "IX_TF_MSC_MID",
                table: "TF_MSC",
                column: "MID");

            migrationBuilder.CreateIndex(
                name: "IX_TF_POS_MID",
                table: "TF_POS",
                column: "MID");

            migrationBuilder.CreateIndex(
                name: "IX_TF_PROMV_MID",
                table: "TF_PROMV",
                column: "MID");

            migrationBuilder.CreateIndex(
                name: "IX_TF_PSS_MID",
                table: "TF_PSS",
                column: "MID");

            migrationBuilder.CreateIndex(
                name: "IX_TF_QL_MID",
                table: "TF_QL",
                column: "MID");

            migrationBuilder.CreateIndex(
                name: "IX_TF_QY_M_MID",
                table: "TF_QY_M",
                column: "MID");

            migrationBuilder.CreateIndex(
                name: "IX_TF_QY_S_MID",
                table: "TF_QY_S",
                column: "MID");

            migrationBuilder.CreateIndex(
                name: "IX_TF_RSC_MID",
                table: "TF_RSC",
                column: "MID");

            migrationBuilder.CreateIndex(
                name: "IX_TF_RX_M_MID",
                table: "TF_RX_M",
                column: "MID");

            migrationBuilder.CreateIndex(
                name: "IX_TF_RX_S_MID",
                table: "TF_RX_S",
                column: "MID");

            migrationBuilder.CreateIndex(
                name: "IX_TF_SBAA_MID",
                table: "TF_SBAA",
                column: "MID");

            migrationBuilder.CreateIndex(
                name: "IX_TF_SBYCBG_MID",
                table: "TF_SBYCBG",
                column: "MID");

            migrationBuilder.CreateIndex(
                name: "IX_TF_SQ_MID",
                table: "TF_SQ",
                column: "MID");

            migrationBuilder.CreateIndex(
                name: "IX_TF_SQD_MID",
                table: "TF_SQD",
                column: "MID");

            migrationBuilder.CreateIndex(
                name: "IX_TF_ST_M_MID",
                table: "TF_ST_M",
                column: "MID");

            migrationBuilder.CreateIndex(
                name: "IX_TF_ST_S_MID",
                table: "TF_ST_S",
                column: "MID");

            migrationBuilder.CreateIndex(
                name: "IX_TF_TB_MID",
                table: "TF_TB",
                column: "MID");

            migrationBuilder.CreateIndex(
                name: "IX_TF_TI_MID",
                table: "TF_TI",
                column: "MID");

            migrationBuilder.CreateIndex(
                name: "IX_TF_TW_MID",
                table: "TF_TW",
                column: "MID");

            migrationBuilder.CreateIndex(
                name: "IX_TF_TY_MID",
                table: "TF_TY",
                column: "MID");

            migrationBuilder.CreateIndex(
                name: "IX_TF_TZ_MID",
                table: "TF_TZ",
                column: "MID");

            migrationBuilder.CreateIndex(
                name: "IX_TF_UNQC_RECORD_MID",
                table: "TF_UNQC_RECORD",
                column: "MID");

            migrationBuilder.CreateIndex(
                name: "IX_TF_UNQCDSP_INFOS_MID",
                table: "TF_UNQCDSP_INFOS",
                column: "MID");

            migrationBuilder.CreateIndex(
                name: "IX_TF_UNQCPRDHL_MID",
                table: "TF_UNQCPRDHL",
                column: "MID");

            migrationBuilder.CreateIndex(
                name: "IX_TF_WJ_M_MID",
                table: "TF_WJ_M",
                column: "MID");

            migrationBuilder.CreateIndex(
                name: "IX_TF_WJ_S_MID",
                table: "TF_WJ_S",
                column: "MID");

            migrationBuilder.CreateIndex(
                name: "IX_TF_WX_M_MID",
                table: "TF_WX_M",
                column: "MID");

            migrationBuilder.CreateIndex(
                name: "IX_TF_WX_S_MID",
                table: "TF_WX_S",
                column: "MID");

            migrationBuilder.CreateIndex(
                name: "IX_TF_ZC_MID",
                table: "TF_ZC",
                column: "MID");

            migrationBuilder.CreateIndex(
                name: "IX_TF_ZC_RES_MID",
                table: "TF_ZC_RES",
                column: "MID");

            migrationBuilder.CreateIndex(
                name: "IX_TF_ZG_MID",
                table: "TF_ZG",
                column: "MID");

            migrationBuilder.CreateIndex(
                name: "IX_UnacceptedProductionHandleSub_MID",
                table: "UnacceptedProductionHandleSub",
                column: "MID");

            migrationBuilder.CreateIndex(
                name: "IX_UnacceptedProductionHandleSubResult_MID",
                table: "UnacceptedProductionHandleSubResult",
                column: "MID");

            migrationBuilder.CreateIndex(
                name: "IX_WM_AsnBarcodeInfo_MID",
                table: "WM_AsnBarcodeInfo",
                column: "MID");

            migrationBuilder.CreateIndex(
                name: "IX_WM_AsnItem_MID",
                table: "WM_AsnItem",
                column: "MID");

            migrationBuilder.CreateIndex(
                name: "IX_WM_Barcode",
                table: "WM_Barcode",
                column: "Barcode",
                unique: true,
                filter: "[Barcode] IS NOT NULL");

            migrationBuilder.CreateIndex(
                name: "IX_WM_Barcode_MID",
                table: "WM_Barcode",
                column: "MID");

            migrationBuilder.CreateIndex(
                name: "IX_WM_Barcode_BatchInfo",
                table: "WM_Barcode_BatchInfo",
                column: "Barcode");

            migrationBuilder.CreateIndex(
                name: "IX_WM_Barcode_BatchInfo_MID",
                table: "WM_Barcode_BatchInfo",
                column: "MID");

            migrationBuilder.CreateIndex(
                name: "IX_WM_Barcode_BatchInfoHis_MID",
                table: "WM_Barcode_BatchInfoHis",
                column: "MID");

            migrationBuilder.CreateIndex(
                name: "IX_WM_Barcode_Source",
                table: "WM_Barcode_Source",
                columns: new[] { "Src_No", "Src_ItemID" });

            migrationBuilder.CreateIndex(
                name: "IX_WM_FeedingHistory_MID",
                table: "WM_FeedingHistory",
                column: "MID");

            migrationBuilder.CreateIndex(
                name: "UN_NO",
                table: "WM_Form",
                column: "No",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "IX_WM_FormBarcodeInfo_MID",
                table: "WM_FormBarcodeInfo",
                column: "MID");

            migrationBuilder.CreateIndex(
                name: "IX_WM_FormItem_MID",
                table: "WM_FormItem",
                column: "MID");

            migrationBuilder.CreateIndex(
                name: "IX_WM_FreezeStorageHistory_MID",
                table: "WM_FreezeStorageHistory",
                column: "MID");

            migrationBuilder.CreateIndex(
                name: "IX_WM_InventoryPlanBarcode_MID",
                table: "WM_InventoryPlanBarcode",
                column: "MID");

            migrationBuilder.CreateIndex(
                name: "IX_WM_InventoryPlanItem_MID",
                table: "WM_InventoryPlanItem",
                column: "MID");

            migrationBuilder.CreateIndex(
                name: "IX_WM_MaterialPreparaPlanBarcode_MID",
                table: "WM_MaterialPreparaPlanBarcode",
                column: "MID");

            migrationBuilder.CreateIndex(
                name: "IX_WM_MaterialPreparaPlanItem_MID",
                table: "WM_MaterialPreparaPlanItem",
                column: "MID");

            migrationBuilder.CreateIndex(
                name: "IX_WM_OnShelfGuideBarcode_MID",
                table: "WM_OnShelfGuideBarcode",
                column: "MID");

            migrationBuilder.CreateIndex(
                name: "IX_WM_OnShelfGuideItem_MID",
                table: "WM_OnShelfGuideItem",
                column: "MID");

            migrationBuilder.CreateIndex(
                name: "IX_WM_OutFormApplyBarcodeInfo_MID",
                table: "WM_OutFormApplyBarcodeInfo",
                column: "MID");

            migrationBuilder.CreateIndex(
                name: "IX_WM_OutFormApplyItem_MID",
                table: "WM_OutFormApplyItem",
                column: "MID");

            migrationBuilder.CreateIndex(
                name: "IX_WM_Package_BOM_Items_MID",
                table: "WM_Package_BOM_Items",
                column: "MID");

            migrationBuilder.CreateIndex(
                name: "IX_WM_ShelfGuideBarcode_MID",
                table: "WM_ShelfGuideBarcode",
                column: "MID");

            migrationBuilder.CreateIndex(
                name: "IX_WM_ShelfGuideItem_MID",
                table: "WM_ShelfGuideItem",
                column: "MID");

            migrationBuilder.CreateIndex(
                name: "NonClusteredIndex-20200618-084818",
                table: "WM_Storage",
                columns: new[] { "Location", "Prod_NO", "Batch_NO", "ProductionDate", "Quantity" });

            migrationBuilder.CreateIndex(
                name: "NonClusteredIndex-20200618-085138",
                table: "WM_StorageBarcode",
                columns: new[] { "Location", "Prod_NO", "PackageNO", "Batch_NO", "ProductionDate", "Quantity" });

            migrationBuilder.CreateIndex(
                name: "IX_WM_StorageBarcodeHistory_MID",
                table: "WM_StorageBarcodeHistory",
                column: "MID");

            migrationBuilder.CreateIndex(
                name: "IX_WM_StorageHistory_MID",
                table: "WM_StorageHistory",
                column: "MID");

            migrationBuilder.CreateIndex(
                name: "NonClusteredIndex-20200617-190521",
                table: "WM_WareHouse",
                column: "WarehouseNo");
        }

        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.DropTable(
                name: "_bf_Busi_Field_C");

            migrationBuilder.DropTable(
                name: "_bf_Data_History");

            migrationBuilder.DropTable(
                name: "_bf_FieldSelectList");

            migrationBuilder.DropTable(
                name: "ACCN");

            migrationBuilder.DropTable(
                name: "ACTUALDCR");

            migrationBuilder.DropTable(
                name: "ACTUALPARA");

            migrationBuilder.DropTable(
                name: "ALERT_MESSAGE_HIS_T");

            migrationBuilder.DropTable(
                name: "ALERT_MESSAGE_T");

            migrationBuilder.DropTable(
                name: "ALERT_PDPARA");

            migrationBuilder.DropTable(
                name: "ALERT_RULES_T");

            migrationBuilder.DropTable(
                name: "AREA");

            migrationBuilder.DropTable(
                name: "BACLOSE");

            migrationBuilder.DropTable(
                name: "BACOMP");

            migrationBuilder.DropTable(
                name: "BARCODE_PRODUCT_MAP");

            migrationBuilder.DropTable(
                name: "BAT_NO");

            migrationBuilder.DropTable(
                name: "BAT_REC1");

            migrationBuilder.DropTable(
                name: "BATCHG_REC");

            migrationBuilder.DropTable(
                name: "BF_FILTER");

            migrationBuilder.DropTable(
                name: "BF_LAYOUT");

            migrationBuilder.DropTable(
                name: "BF_RPT_TEMPLET_S");

            migrationBuilder.DropTable(
                name: "BF_RPT_TEMPLETS");

            migrationBuilder.DropTable(
                name: "BIL_SPC");

            migrationBuilder.DropTable(
                name: "BILLBASE");

            migrationBuilder.DropTable(
                name: "BLOB_TEMP");

            migrationBuilder.DropTable(
                name: "CALL_INFO");

            migrationBuilder.DropTable(
                name: "CALLTYPE");

            migrationBuilder.DropTable(
                name: "CAMERA_SEB_MAP");

            migrationBuilder.DropTable(
                name: "CASN");

            migrationBuilder.DropTable(
                name: "CMM_MEASURE_REC_ITEM");

            migrationBuilder.DropTable(
                name: "CNTT_SGT");

            migrationBuilder.DropTable(
                name: "COMBITABLE");

            migrationBuilder.DropTable(
                name: "CSiTemp");

            migrationBuilder.DropTable(
                name: "CUR_ID");

            migrationBuilder.DropTable(
                name: "CUS_BOX");

            migrationBuilder.DropTable(
                name: "CUS_WH");

            migrationBuilder.DropTable(
                name: "CUST");

            migrationBuilder.DropTable(
                name: "CYCLE_TIME");

            migrationBuilder.DropTable(
                name: "DATABASE");

            migrationBuilder.DropTable(
                name: "dc_CS_Record");

            migrationBuilder.DropTable(
                name: "DCRRESULT");

            migrationBuilder.DropTable(
                name: "DCT_Device");

            migrationBuilder.DropTable(
                name: "DCT_DeviceAlarm");

            migrationBuilder.DropTable(
                name: "DEPT");

            migrationBuilder.DropTable(
                name: "DEVICE_SHIFT");

            migrationBuilder.DropTable(
                name: "DIE_CHANGE_INFOS");

            migrationBuilder.DropTable(
                name: "DNC_ALARM_REC");

            migrationBuilder.DropTable(
                name: "DNC_PROCESS_PARAS_REC");

            migrationBuilder.DropTable(
                name: "DNC_TTL_T");

            migrationBuilder.DropTable(
                name: "EQP_Alert_Trace");

            migrationBuilder.DropTable(
                name: "EQP_DeviceWarning");

            migrationBuilder.DropTable(
                name: "EQP_Maintain_Plan");

            migrationBuilder.DropTable(
                name: "EQP_MT_Order");

            migrationBuilder.DropTable(
                name: "EQP_MT_RunTime");

            migrationBuilder.DropTable(
                name: "EQP_MTOrder_Info");

            migrationBuilder.DropTable(
                name: "EQP_MTSPEC_INFO");

            migrationBuilder.DropTable(
                name: "EQP_PartChange_Record");

            migrationBuilder.DropTable(
                name: "EQP_PartInfo");

            migrationBuilder.DropTable(
                name: "EQP_RUN_RECORD");

            migrationBuilder.DropTable(
                name: "EQP_RunStatus_Def");

            migrationBuilder.DropTable(
                name: "EQP_Spare_Part");

            migrationBuilder.DropTable(
                name: "EQPT_INFO_EA211_3");

            migrationBuilder.DropTable(
                name: "EVN_NO");

            migrationBuilder.DropTable(
                name: "EVN_PARM_INFO");

            migrationBuilder.DropTable(
                name: "EVN_PARM_RECORD");

            migrationBuilder.DropTable(
                name: "EVN_PARM_RECORD_VALUE");

            migrationBuilder.DropTable(
                name: "EX_IMP_TEMP");

            migrationBuilder.DropTable(
                name: "FAULT_CAUSE");

            migrationBuilder.DropTable(
                name: "FIELDSTABLE");

            migrationBuilder.DropTable(
                name: "FIFOINCLUDELIST");

            migrationBuilder.DropTable(
                name: "FILEDSTABLE");

            migrationBuilder.DropTable(
                name: "Fixture_RLOSP");

            migrationBuilder.DropTable(
                name: "FLOW_CHECK");

            migrationBuilder.DropTable(
                name: "FR_XT");

            migrationBuilder.DropTable(
                name: "Furnace_Binding");

            migrationBuilder.DropTable(
                name: "FX_KND");

            migrationBuilder.DropTable(
                name: "GX_Other_Items");

            migrationBuilder.DropTable(
                name: "HFPL_REC");

            migrationBuilder.DropTable(
                name: "HFPL_RECS");

            migrationBuilder.DropTable(
                name: "INDX");

            migrationBuilder.DropTable(
                name: "INDX1");

            migrationBuilder.DropTable(
                name: "INSPECT_ITEMS_LIST");

            migrationBuilder.DropTable(
                name: "JHTP_TEMP");

            migrationBuilder.DropTable(
                name: "JHTP2_TEMP");

            migrationBuilder.DropTable(
                name: "LBL_SUPQC");

            migrationBuilder.DropTable(
                name: "LBL_SUPQC_BARS");

            migrationBuilder.DropTable(
                name: "LE_LogisticsTasks");

            migrationBuilder.DropTable(
                name: "LE_LogisticsTasksHistory");

            migrationBuilder.DropTable(
                name: "LE_LogisticsTasksItem");

            migrationBuilder.DropTable(
                name: "LE_TestItems");

            migrationBuilder.DropTable(
                name: "LSB_YZJ_MAP");

            migrationBuilder.DropTable(
                name: "MD_SP_INFO");

            migrationBuilder.DropTable(
                name: "MDM_AQLSample");

            migrationBuilder.DropTable(
                name: "MDM_Attribute");

            migrationBuilder.DropTable(
                name: "MDM_AttributeValue");

            migrationBuilder.DropTable(
                name: "MDM_BOM");

            migrationBuilder.DropTable(
                name: "MDM_BOMDetail");

            migrationBuilder.DropTable(
                name: "MDM_Customer");

            migrationBuilder.DropTable(
                name: "MDM_CycleTime");

            migrationBuilder.DropTable(
                name: "MDM_Fixture_FaultBOMDetail");

            migrationBuilder.DropTable(
                name: "MDM_Fixture_FaultCause");

            migrationBuilder.DropTable(
                name: "MDM_Fixture_FaultPhenomenon");

            migrationBuilder.DropTable(
                name: "MDM_FormAttribute");

            migrationBuilder.DropTable(
                name: "MDM_Layout");

            migrationBuilder.DropTable(
                name: "MDM_Material");

            migrationBuilder.DropTable(
                name: "MDM_ParameterType");

            migrationBuilder.DropTable(
                name: "MDM_PQIP");

            migrationBuilder.DropTable(
                name: "MDM_ProcessBOM");

            migrationBuilder.DropTable(
                name: "MDM_ProcessProduct_Map");

            migrationBuilder.DropTable(
                name: "MDM_ProdCapacity");

            migrationBuilder.DropTable(
                name: "MDM_SpotCheckSchedule");

            migrationBuilder.DropTable(
                name: "MDM_Supplier");

            migrationBuilder.DropTable(
                name: "MDM_WareHouse");

            migrationBuilder.DropTable(
                name: "MDM_WorkCenter");

            migrationBuilder.DropTable(
                name: "MDM_WorkCenter_Map");

            migrationBuilder.DropTable(
                name: "MES_DNC_INTFC_T");

            migrationBuilder.DropTable(
                name: "MES_JOB_DATA");

            migrationBuilder.DropTable(
                name: "MES_JOB_INFOS");

            migrationBuilder.DropTable(
                name: "MES_JOB_LOG");

            migrationBuilder.DropTable(
                name: "MF_MK_YG");

            migrationBuilder.DropTable(
                name: "MF_MP");

            migrationBuilder.DropTable(
                name: "MF_PSS0_Z");

            migrationBuilder.DropTable(
                name: "MF_TYPROCJY_Z");

            migrationBuilder.DropTable(
                name: "MF_VHID");

            migrationBuilder.DropTable(
                name: "MK_YG");

            migrationBuilder.DropTable(
                name: "MKPG");

            migrationBuilder.DropTable(
                name: "MKPGS");

            migrationBuilder.DropTable(
                name: "MM_MaterielRequest");

            migrationBuilder.DropTable(
                name: "MM_MaterielRequestList");

            migrationBuilder.DropTable(
                name: "MOD_DISQUALREASON");

            migrationBuilder.DropTable(
                name: "MOD_RECORD");

            migrationBuilder.DropTable(
                name: "MOJ_GRP");

            migrationBuilder.DropTable(
                name: "MOLD");

            migrationBuilder.DropTable(
                name: "MOLD_MAINTAIN_PLAN");

            migrationBuilder.DropTable(
                name: "MOLD_MTORDER_INFO");

            migrationBuilder.DropTable(
                name: "MOLD_MTSPEC_INFO");

            migrationBuilder.DropTable(
                name: "MOLD_SPAREPARTS");

            migrationBuilder.DropTable(
                name: "MOLD_TYPEINFO");

            migrationBuilder.DropTable(
                name: "MOLD_WH");

            migrationBuilder.DropTable(
                name: "MOLDING_DEVIATES_T");

            migrationBuilder.DropTable(
                name: "MOLDING_RULES_T");

            migrationBuilder.DropTable(
                name: "MS_ALERT");

            migrationBuilder.DropTable(
                name: "MS_BORROW");

            migrationBuilder.DropTable(
                name: "MS_CALCYC_CHANGE");

            migrationBuilder.DropTable(
                name: "MS_CALINFO");

            migrationBuilder.DropTable(
                name: "MS_CALINSTITUTION");

            migrationBuilder.DropTable(
                name: "MS_CALNOTICE_INFO");

            migrationBuilder.DropTable(
                name: "MS_CALPLAN_INFO");

            migrationBuilder.DropTable(
                name: "MS_CALRULE");

            migrationBuilder.DropTable(
                name: "MS_FLOW_STATUS");

            migrationBuilder.DropTable(
                name: "MS_MEASURE_INFO");

            migrationBuilder.DropTable(
                name: "MS_MEASURE_INFO_OLD");

            migrationBuilder.DropTable(
                name: "MS_MEASURE_STATUS");

            migrationBuilder.DropTable(
                name: "MS_MEASURE_TYPE");

            migrationBuilder.DropTable(
                name: "MS_REPAIR");

            migrationBuilder.DropTable(
                name: "MSGCACHE");

            migrationBuilder.DropTable(
                name: "MSMNG_STATUSINFO");

            migrationBuilder.DropTable(
                name: "MY_WH");

            migrationBuilder.DropTable(
                name: "NYXH_RECORD");

            migrationBuilder.DropTable(
                name: "OP_WORKSTART");

            migrationBuilder.DropTable(
                name: "OPSBALLOT");

            migrationBuilder.DropTable(
                name: "PC_BATCHReview");

            migrationBuilder.DropTable(
                name: "PC_InOutPut_Relation");

            migrationBuilder.DropTable(
                name: "PC_Integrity_Check");

            migrationBuilder.DropTable(
                name: "PC_Order_HeaterNum");

            migrationBuilder.DropTable(
                name: "PC_OutPut_Defect");

            migrationBuilder.DropTable(
                name: "PC_TraceabilityDataPortal");

            migrationBuilder.DropTable(
                name: "PC_TraceabilityLog");

            migrationBuilder.DropTable(
                name: "PC_Transfer");

            migrationBuilder.DropTable(
                name: "PC_UsrLogin");

            migrationBuilder.DropTable(
                name: "PC_WorkStationDeviceMapping");

            migrationBuilder.DropTable(
                name: "pd_Handover");

            migrationBuilder.DropTable(
                name: "PERF_LOSSTIME_T");

            migrationBuilder.DropTable(
                name: "PERF_OEE_T");

            migrationBuilder.DropTable(
                name: "PERF_OUTPUT_T");

            migrationBuilder.DropTable(
                name: "PHOTO_TEMP");

            migrationBuilder.DropTable(
                name: "PIDS_TEMP");

            migrationBuilder.DropTable(
                name: "POST");

            migrationBuilder.DropTable(
                name: "PP_MOSched_Temp");

            migrationBuilder.DropTable(
                name: "PP_Plan_Orders");

            migrationBuilder.DropTable(
                name: "PP_Production_Orders");

            migrationBuilder.DropTable(
                name: "PP_Work_Calendar");

            migrationBuilder.DropTable(
                name: "PP_WorkOrder_Mats");

            migrationBuilder.DropTable(
                name: "PP_WorkOrder_Station");

            migrationBuilder.DropTable(
                name: "PP_WorkPlan");

            migrationBuilder.DropTable(
                name: "PRD_PARAINFO");

            migrationBuilder.DropTable(
                name: "PRD_PARATYPE");

            migrationBuilder.DropTable(
                name: "PRD_SPC");

            migrationBuilder.DropTable(
                name: "PRD_STANDARD");

            migrationBuilder.DropTable(
                name: "PRD_STATION");

            migrationBuilder.DropTable(
                name: "PRD_STATION_PARA");

            migrationBuilder.DropTable(
                name: "PRD_TOOLS");

            migrationBuilder.DropTable(
                name: "PRDANDWH");

            migrationBuilder.DropTable(
                name: "PRDT");

            migrationBuilder.DropTable(
                name: "PRDT_CHANGE_INFOS");

            migrationBuilder.DropTable(
                name: "PRDT_CUS1");

            migrationBuilder.DropTable(
                name: "PRDT_CUS2");

            migrationBuilder.DropTable(
                name: "PRDT_UT");

            migrationBuilder.DropTable(
                name: "PRDT1");

            migrationBuilder.DropTable(
                name: "PRDT1_INFO");

            migrationBuilder.DropTable(
                name: "PREDEFREASON");

            migrationBuilder.DropTable(
                name: "PROCESSINFO");

            migrationBuilder.DropTable(
                name: "QC_BARCODE");

            migrationBuilder.DropTable(
                name: "QC_DefectType");

            migrationBuilder.DropTable(
                name: "qc_finished");

            migrationBuilder.DropTable(
                name: "QC_INSP_FREQ");

            migrationBuilder.DropTable(
                name: "QC_ITEM");

            migrationBuilder.DropTable(
                name: "QC_PRD_INSPECT_SCHEMES");

            migrationBuilder.DropTable(
                name: "QC_PRD_MEASURE_RECORD");

            migrationBuilder.DropTable(
                name: "QC_PRD_MEASURE_RECORD_ITEM");

            migrationBuilder.DropTable(
                name: "QC_PRD_MEASURE_SCHEMES");

            migrationBuilder.DropTable(
                name: "QC_PRD_MEASURE_SCHEMES_ITEM");

            migrationBuilder.DropTable(
                name: "QC_PRD_SQC");

            migrationBuilder.DropTable(
                name: "QC_PRD_SQC_ITEM");

            migrationBuilder.DropTable(
                name: "QC_PRJ");

            migrationBuilder.DropTable(
                name: "QC_PRJ_ITEM");

            migrationBuilder.DropTable(
                name: "QC_PRJ_TYPE");

            migrationBuilder.DropTable(
                name: "QC_RECORDVALUE");

            migrationBuilder.DropTable(
                name: "QC_TOOL");

            migrationBuilder.DropTable(
                name: "QCINTERFACERECORDD");

            migrationBuilder.DropTable(
                name: "QCINTERFACERECORDM");

            migrationBuilder.DropTable(
                name: "QCINTERFACERECORDV");

            migrationBuilder.DropTable(
                name: "QCITEMINTERFACE");

            migrationBuilder.DropTable(
                name: "QM_InspectingRecord");

            migrationBuilder.DropTable(
                name: "QM_InspectionTypeDevice");

            migrationBuilder.DropTable(
                name: "QM_InspectPlan");

            migrationBuilder.DropTable(
                name: "QM_InspectSD");

            migrationBuilder.DropTable(
                name: "QM_InspectTD");

            migrationBuilder.DropTable(
                name: "QM_MF_QC_XJ");

            migrationBuilder.DropTable(
                name: "QM_ProcessInspection");

            migrationBuilder.DropTable(
                name: "QM_SendInspectingOrder");

            migrationBuilder.DropTable(
                name: "QM_SIO_BCI");

            migrationBuilder.DropTable(
                name: "QM_TF_QC_XJ");

            migrationBuilder.DropTable(
                name: "qmTIBarcode");

            migrationBuilder.DropTable(
                name: "qmTYBarcode");

            migrationBuilder.DropTable(
                name: "QPIS_PIC_MAP");

            migrationBuilder.DropTable(
                name: "RESP_INFO");

            migrationBuilder.DropTable(
                name: "RJG_TZ_MAP");

            migrationBuilder.DropTable(
                name: "RL_SBEI");

            migrationBuilder.DropTable(
                name: "RM_CutterProdectMapping");

            migrationBuilder.DropTable(
                name: "RM_Cutters_Code");

            migrationBuilder.DropTable(
                name: "RM_Cutters_Loss");

            migrationBuilder.DropTable(
                name: "RM_Cutters_SerialNumber");

            migrationBuilder.DropTable(
                name: "RM_Cutters_Trace");

            migrationBuilder.DropTable(
                name: "RM_Cutters_Use");

            migrationBuilder.DropTable(
                name: "RM_CuttersProd_Map");

            migrationBuilder.DropTable(
                name: "RM_Fixtrue_His");

            migrationBuilder.DropTable(
                name: "RM_Fixtrue_Use");

            migrationBuilder.DropTable(
                name: "RM_FixtureLedger");

            migrationBuilder.DropTable(
                name: "RM_FixtureProdectMapping");

            migrationBuilder.DropTable(
                name: "RM_FixtureSerialNumber");

            migrationBuilder.DropTable(
                name: "RM_MeasuringLedger");

            migrationBuilder.DropTable(
                name: "RM_MeasuringProdectMapping");

            migrationBuilder.DropTable(
                name: "RM_MeasuringSerialNumber");

            migrationBuilder.DropTable(
                name: "RM_Mold_FaultDef");

            migrationBuilder.DropTable(
                name: "RM_Mold_FaultReason");

            migrationBuilder.DropTable(
                name: "RM_Mold_His");

            migrationBuilder.DropTable(
                name: "RM_Mold_Insp_Items");

            migrationBuilder.DropTable(
                name: "RM_Mold_InspTask_Items");

            migrationBuilder.DropTable(
                name: "RM_Mold_RepairRecord_Reason");

            migrationBuilder.DropTable(
                name: "RM_Mold_RepairRequest_Fault");

            migrationBuilder.DropTable(
                name: "RM_Mold_Whse");

            migrationBuilder.DropTable(
                name: "RM_MoldProdectMapping");

            migrationBuilder.DropTable(
                name: "RM_MoldSparePart_Info");

            migrationBuilder.DropTable(
                name: "RM_ToolType");

            migrationBuilder.DropTable(
                name: "SALM");

            migrationBuilder.DropTable(
                name: "SB_DISQUALREASON");

            migrationBuilder.DropTable(
                name: "SB_FAULT_MEASURE");

            migrationBuilder.DropTable(
                name: "SB_LHJL");

            migrationBuilder.DropTable(
                name: "SB_MAINTAIN_PLAN");

            migrationBuilder.DropTable(
                name: "SB_MAINTAIN_RUN_RECORD");

            migrationBuilder.DropTable(
                name: "SB_MT_RUNTIME");

            migrationBuilder.DropTable(
                name: "SB_MTORDER_INFO");

            migrationBuilder.DropTable(
                name: "SB_MTSPEC_INFO");

            migrationBuilder.DropTable(
                name: "SB_OP_MAPPING");

            migrationBuilder.DropTable(
                name: "SB_PARA_BASE");

            migrationBuilder.DropTable(
                name: "SB_PARA_RECORD");

            migrationBuilder.DropTable(
                name: "SB_PARA_SET");

            migrationBuilder.DropTable(
                name: "SB_PARTCHANGE_RECORD");

            migrationBuilder.DropTable(
                name: "SB_PARTINFO");

            migrationBuilder.DropTable(
                name: "SB_PRDT_PARAS");

            migrationBuilder.DropTable(
                name: "SB_QRCODERECORD");

            migrationBuilder.DropTable(
                name: "SB_RECORD");

            migrationBuilder.DropTable(
                name: "SB_RUN_RECORD");

            migrationBuilder.DropTable(
                name: "SB_RUN_RECORD_INFO");

            migrationBuilder.DropTable(
                name: "SB_RUN_STATUS");

            migrationBuilder.DropTable(
                name: "SB_SP_RECORD");

            migrationBuilder.DropTable(
                name: "SB_SPARE_PART");

            migrationBuilder.DropTable(
                name: "SB_SPAREPARTS");

            migrationBuilder.DropTable(
                name: "SB_STATUS_CHANGES");

            migrationBuilder.DropTable(
                name: "SB_TYPEINFO");

            migrationBuilder.DropTable(
                name: "SBB");

            migrationBuilder.DropTable(
                name: "SBBY");

            migrationBuilder.DropTable(
                name: "SBBY_DJ");

            migrationBuilder.DropTable(
                name: "SBBY_NR");

            migrationBuilder.DropTable(
                name: "SBBY_PLAN_INFO");

            migrationBuilder.DropTable(
                name: "SBBY_PRJ");

            migrationBuilder.DropTable(
                name: "SC_SBXXB");

            migrationBuilder.DropTable(
                name: "SEASON_DEF");

            migrationBuilder.DropTable(
                name: "SEB_IDX2");

            migrationBuilder.DropTable(
                name: "SEB_MOJ_PW");

            migrationBuilder.DropTable(
                name: "SEB_SCOPE");

            migrationBuilder.DropTable(
                name: "SEB_STATE");

            migrationBuilder.DropTable(
                name: "SEB_WR");

            migrationBuilder.DropTable(
                name: "SEBEI");

            migrationBuilder.DropTable(
                name: "SEBEI_RECORD");

            migrationBuilder.DropTable(
                name: "SETDEFVALUES");

            migrationBuilder.DropTable(
                name: "SH_DJ");

            migrationBuilder.DropTable(
                name: "SH_LIST");

            migrationBuilder.DropTable(
                name: "SHIFT_SCHEDULING");

            migrationBuilder.DropTable(
                name: "SPC_LST");

            migrationBuilder.DropTable(
                name: "SpectrumTemp");

            migrationBuilder.DropTable(
                name: "SPRD");

            migrationBuilder.DropTable(
                name: "SPRD1");

            migrationBuilder.DropTable(
                name: "ST_BARCODECHANGE");

            migrationBuilder.DropTable(
                name: "ST_BARCODEINFOS");

            migrationBuilder.DropTable(
                name: "ST_BARCODEMERGEINFO");

            migrationBuilder.DropTable(
                name: "ST_BARCODERES");

            migrationBuilder.DropTable(
                name: "ST_BARCODESPLIT");

            migrationBuilder.DropTable(
                name: "ST_TDCODE_BUSI");

            migrationBuilder.DropTable(
                name: "ST_TDCODE_BUSI_Record");

            migrationBuilder.DropTable(
                name: "ST_TDCODE_INFO");

            migrationBuilder.DropTable(
                name: "ST_TDCODE_PALLET");

            migrationBuilder.DropTable(
                name: "ST_TDCODE_TEMP");

            migrationBuilder.DropTable(
                name: "STATION_SEB");

            migrationBuilder.DropTable(
                name: "Student");

            migrationBuilder.DropTable(
                name: "SYS_AccountClose_Item");

            migrationBuilder.DropTable(
                name: "SYS_ATTACHMENT");

            migrationBuilder.DropTable(
                name: "sys_AudBill_Item");

            migrationBuilder.DropTable(
                name: "sys_AuditFlow_Details");

            migrationBuilder.DropTable(
                name: "sys_AuditFlow_Usr");

            migrationBuilder.DropTable(
                name: "SYS_BARCODE_INFO");

            migrationBuilder.DropTable(
                name: "SYS_BARCODE_RULE");

            migrationBuilder.DropTable(
                name: "SYS_BILLNO_INFO");

            migrationBuilder.DropTable(
                name: "SYS_BILLNO_INFO_DEL");

            migrationBuilder.DropTable(
                name: "SYS_BILLNO_RULE");

            migrationBuilder.DropTable(
                name: "SYS_BILLNO_RULE_SET");

            migrationBuilder.DropTable(
                name: "SYS_BILLNO_TEMP");

            migrationBuilder.DropTable(
                name: "SYS_BILLSOURCE");

            migrationBuilder.DropTable(
                name: "SYS_BUSINO");

            migrationBuilder.DropTable(
                name: "SYS_CODENO_RULES");

            migrationBuilder.DropTable(
                name: "sys_Data_Rules");

            migrationBuilder.DropTable(
                name: "SYS_FILE");

            migrationBuilder.DropTable(
                name: "SYS_FLOW");

            migrationBuilder.DropTable(
                name: "SYS_FLOWCHART");

            migrationBuilder.DropTable(
                name: "SYS_FLOWCHARTAUTHSET");

            migrationBuilder.DropTable(
                name: "SYS_FORMNO_INFO");

            migrationBuilder.DropTable(
                name: "SYS_InterfaceLog");

            migrationBuilder.DropTable(
                name: "SYS_InterfaceQueue");

            migrationBuilder.DropTable(
                name: "SYS_InterfaceURL");

            migrationBuilder.DropTable(
                name: "sys_Lang_Data");

            migrationBuilder.DropTable(
                name: "sys_Menu_LocalSet");

            migrationBuilder.DropTable(
                name: "sys_menu_zc");

            migrationBuilder.DropTable(
                name: "sys_OuterDB_ConnString");

            migrationBuilder.DropTable(
                name: "SYS_ParamGroups");

            migrationBuilder.DropTable(
                name: "SYS_Params");

            migrationBuilder.DropTable(
                name: "SYS_PROPERTY");

            migrationBuilder.DropTable(
                name: "SYS_PROPERTY_SET");

            migrationBuilder.DropTable(
                name: "SYS_ROLE_DATA");

            migrationBuilder.DropTable(
                name: "SYS_ROLE_DATA_BUSI");

            migrationBuilder.DropTable(
                name: "SYS_ROLE_FIELD");

            migrationBuilder.DropTable(
                name: "SYS_ROLE_MENU_ACTIONS");

            migrationBuilder.DropTable(
                name: "SYS_ROLE_USER");

            migrationBuilder.DropTable(
                name: "SYS_SUMMARY");

            migrationBuilder.DropTable(
                name: "SYS_SUMMARY_REPORTTEMPLATE");

            migrationBuilder.DropTable(
                name: "SYS_SUMMARY_SET");

            migrationBuilder.DropTable(
                name: "SYS_Terminal_Items");

            migrationBuilder.DropTable(
                name: "SYS_UNIQUESET");

            migrationBuilder.DropTable(
                name: "SYS_UPDATE_LOG");

            migrationBuilder.DropTable(
                name: "SYS_WARNING");

            migrationBuilder.DropTable(
                name: "SYSAUDIT_FIELD");

            migrationBuilder.DropTable(
                name: "SYSBILLNOSET");

            migrationBuilder.DropTable(
                name: "SYSMSG");

            migrationBuilder.DropTable(
                name: "SYSMSGCONFIG");

            migrationBuilder.DropTable(
                name: "SYSMSGSETUP");

            migrationBuilder.DropTable(
                name: "SYSMSGSETUPINFO");

            migrationBuilder.DropTable(
                name: "SZB_DELETE_BAK_20181019");

            migrationBuilder.DropTable(
                name: "T_BASEUSER_DEVICE");

            migrationBuilder.DropTable(
                name: "T_DEVICEBINDLOG");

            migrationBuilder.DropTable(
                name: "T_TEST");

            migrationBuilder.DropTable(
                name: "T_USER");

            migrationBuilder.DropTable(
                name: "T1");

            migrationBuilder.DropTable(
                name: "Table_1");

            migrationBuilder.DropTable(
                name: "TASK");

            migrationBuilder.DropTable(
                name: "TB_BL");

            migrationBuilder.DropTable(
                name: "TB_CPMXRB");

            migrationBuilder.DropTable(
                name: "TB_INITWIP");

            migrationBuilder.DropTable(
                name: "TB_JOBBOOKING");

            migrationBuilder.DropTable(
                name: "TB_OEE_CQ");

            migrationBuilder.DropTable(
                name: "TB_PAINTENTRY");

            migrationBuilder.DropTable(
                name: "TB_PERF_TIMESERVICELOG");

            migrationBuilder.DropTable(
                name: "TB_QUOTA");

            migrationBuilder.DropTable(
                name: "TB_RATE");

            migrationBuilder.DropTable(
                name: "TB_RB_HZ");

            migrationBuilder.DropTable(
                name: "TB_RB_MX");

            migrationBuilder.DropTable(
                name: "TB_RB_MX_MONTH");

            migrationBuilder.DropTable(
                name: "TB_REWORKDAYHZ");

            migrationBuilder.DropTable(
                name: "TB_SBRECORD_CAMERA_MAP");

            migrationBuilder.DropTable(
                name: "TB_SZB_DAYSTATISTICLOG");

            migrationBuilder.DropTable(
                name: "TB_SZBHZ_CQ");

            migrationBuilder.DropTable(
                name: "TB_SZDATA");

            migrationBuilder.DropTable(
                name: "TB_TRANSFERINOUT");

            migrationBuilder.DropTable(
                name: "TB_TZRB_HZ");

            migrationBuilder.DropTable(
                name: "TB_TZRB_MX");

            migrationBuilder.DropTable(
                name: "TB_TZRB_MX_MONTH");

            migrationBuilder.DropTable(
                name: "TB_WASTE");

            migrationBuilder.DropTable(
                name: "TB_WASTETIME");

            migrationBuilder.DropTable(
                name: "TB_XRAY");

            migrationBuilder.DropTable(
                name: "TB_XRAY_ZB");

            migrationBuilder.DropTable(
                name: "TB_XRAYHGL");

            migrationBuilder.DropTable(
                name: "TBL_BARCODE");

            migrationBuilder.DropTable(
                name: "TBL_PROCESSINFO");

            migrationBuilder.DropTable(
                name: "TERMINAL_ALLOT");

            migrationBuilder.DropTable(
                name: "TERMINAL_SETUP");

            migrationBuilder.DropTable(
                name: "TESTI");

            migrationBuilder.DropTable(
                name: "TF_BAN");

            migrationBuilder.DropTable(
                name: "TF_BOM2");

            migrationBuilder.DropTable(
                name: "TF_BYJL");

            migrationBuilder.DropTable(
                name: "TF_CK");

            migrationBuilder.DropTable(
                name: "TF_CS");

            migrationBuilder.DropTable(
                name: "TF_DS");

            migrationBuilder.DropTable(
                name: "TF_GR_M");

            migrationBuilder.DropTable(
                name: "TF_GR_S");

            migrationBuilder.DropTable(
                name: "TF_IC");

            migrationBuilder.DropTable(
                name: "TF_IJ");

            migrationBuilder.DropTable(
                name: "TF_JH");

            migrationBuilder.DropTable(
                name: "TF_JJ");

            migrationBuilder.DropTable(
                name: "TF_JXZB_JS");

            migrationBuilder.DropTable(
                name: "TF_JXZB_SZ");

            migrationBuilder.DropTable(
                name: "TF_MD_INOUT");

            migrationBuilder.DropTable(
                name: "TF_MJAA");

            migrationBuilder.DropTable(
                name: "TF_ML");

            migrationBuilder.DropTable(
                name: "TF_MM0");

            migrationBuilder.DropTable(
                name: "TF_MMJH");

            migrationBuilder.DropTable(
                name: "TF_MO");

            migrationBuilder.DropTable(
                name: "TF_MP1");

            migrationBuilder.DropTable(
                name: "TF_MP2");

            migrationBuilder.DropTable(
                name: "TF_MP3");

            migrationBuilder.DropTable(
                name: "TF_MSC");

            migrationBuilder.DropTable(
                name: "TF_POS");

            migrationBuilder.DropTable(
                name: "TF_PROMV");

            migrationBuilder.DropTable(
                name: "TF_PSS");

            migrationBuilder.DropTable(
                name: "TF_QL");

            migrationBuilder.DropTable(
                name: "TF_QY_M");

            migrationBuilder.DropTable(
                name: "TF_QY_S");

            migrationBuilder.DropTable(
                name: "TF_RSC");

            migrationBuilder.DropTable(
                name: "TF_RX_M");

            migrationBuilder.DropTable(
                name: "TF_RX_S");

            migrationBuilder.DropTable(
                name: "TF_SBAA");

            migrationBuilder.DropTable(
                name: "TF_SBYCBG");

            migrationBuilder.DropTable(
                name: "TF_SBYCBG1");

            migrationBuilder.DropTable(
                name: "TF_SQ");

            migrationBuilder.DropTable(
                name: "TF_SQD");

            migrationBuilder.DropTable(
                name: "TF_ST_M");

            migrationBuilder.DropTable(
                name: "TF_ST_S");

            migrationBuilder.DropTable(
                name: "TF_TB");

            migrationBuilder.DropTable(
                name: "TF_TI");

            migrationBuilder.DropTable(
                name: "TF_TW");

            migrationBuilder.DropTable(
                name: "TF_TY");

            migrationBuilder.DropTable(
                name: "TF_TZ");

            migrationBuilder.DropTable(
                name: "TF_UNQC_RECORD");

            migrationBuilder.DropTable(
                name: "TF_UNQCDSP_INFOS");

            migrationBuilder.DropTable(
                name: "TF_VHID");

            migrationBuilder.DropTable(
                name: "TF_WJ_M");

            migrationBuilder.DropTable(
                name: "TF_WJ_S");

            migrationBuilder.DropTable(
                name: "TF_WX_M");

            migrationBuilder.DropTable(
                name: "TF_WX_S");

            migrationBuilder.DropTable(
                name: "TF_ZC_RES");

            migrationBuilder.DropTable(
                name: "TF_ZG");

            migrationBuilder.DropTable(
                name: "TI_TYPE");

            migrationBuilder.DropTable(
                name: "TMP_DPH_HGL");

            migrationBuilder.DropTable(
                name: "TMP_HJ_HGL");

            migrationBuilder.DropTable(
                name: "TMP_HUANMO");

            migrationBuilder.DropTable(
                name: "TMP_JJG_HGL");

            migrationBuilder.DropTable(
                name: "TMP_MATERIALS");

            migrationBuilder.DropTable(
                name: "TMP_SZB");

            migrationBuilder.DropTable(
                name: "TMP_SZBDATA");

            migrationBuilder.DropTable(
                name: "TMP_TZZMXL");

            migrationBuilder.DropTable(
                name: "TOMES_YPLACEBAR");

            migrationBuilder.DropTable(
                name: "Tool");

            migrationBuilder.DropTable(
                name: "Tool_Prdt");

            migrationBuilder.DropTable(
                name: "TRAY_BARCODEBINDING");

            migrationBuilder.DropTable(
                name: "TRAY_BARCODEINFOS");

            migrationBuilder.DropTable(
                name: "TT");

            migrationBuilder.DropTable(
                name: "TT1");

            migrationBuilder.DropTable(
                name: "TT2");

            migrationBuilder.DropTable(
                name: "TypeUnqualified");

            migrationBuilder.DropTable(
                name: "TZ_BARCODEINFOS");

            migrationBuilder.DropTable(
                name: "TZ_MOD");

            migrationBuilder.DropTable(
                name: "TZ_SEB");

            migrationBuilder.DropTable(
                name: "TZ_SPECTRUM_INFO");

            migrationBuilder.DropTable(
                name: "TZSC_MAP");

            migrationBuilder.DropTable(
                name: "TZSC_MAP_20184");

            migrationBuilder.DropTable(
                name: "UnacceptedProductionHandleSubResult");

            migrationBuilder.DropTable(
                name: "WH_ENTRY_BARCODE");

            migrationBuilder.DropTable(
                name: "WH_ENTRY_INFO");

            migrationBuilder.DropTable(
                name: "WH_ENTRY_TEMP");

            migrationBuilder.DropTable(
                name: "WH_INVENTORY_BARCODE");

            migrationBuilder.DropTable(
                name: "WH_INVENTORY_PART");

            migrationBuilder.DropTable(
                name: "WM_AsnBarcodeInfo");

            migrationBuilder.DropTable(
                name: "WM_Barcode_BatchInfoHis");

            migrationBuilder.DropTable(
                name: "WM_BarCodeScan_Temp");

            migrationBuilder.DropTable(
                name: "WM_FeedingDetail");

            migrationBuilder.DropTable(
                name: "WM_FeedingHistory");

            migrationBuilder.DropTable(
                name: "WM_FormBarcodeInfo");

            migrationBuilder.DropTable(
                name: "WM_FormScene");

            migrationBuilder.DropTable(
                name: "WM_FormType");

            migrationBuilder.DropTable(
                name: "WM_FreezeStorageHistory");

            migrationBuilder.DropTable(
                name: "WM_FrozenStorage");

            migrationBuilder.DropTable(
                name: "WM_InventoryPlanBarcode");

            migrationBuilder.DropTable(
                name: "WM_ItemPageAge");

            migrationBuilder.DropTable(
                name: "WM_MaterialPreparaPlanBarcode");

            migrationBuilder.DropTable(
                name: "WM_OnShelfGuideBarcode");

            migrationBuilder.DropTable(
                name: "WM_OnShelfGuideRule");

            migrationBuilder.DropTable(
                name: "WM_OrderBars_Qty");

            migrationBuilder.DropTable(
                name: "WM_OutFormApplyBarcodeInfo");

            migrationBuilder.DropTable(
                name: "WM_Package");

            migrationBuilder.DropTable(
                name: "WM_Package_BOM_Items");

            migrationBuilder.DropTable(
                name: "WM_Package_SN_Mng");

            migrationBuilder.DropTable(
                name: "WM_PackageBarcode");

            migrationBuilder.DropTable(
                name: "WM_PackageBarcodeHistory");

            migrationBuilder.DropTable(
                name: "WM_PackageChange");

            migrationBuilder.DropTable(
                name: "WM_PackageFeed");

            migrationBuilder.DropTable(
                name: "WM_PackageType");

            migrationBuilder.DropTable(
                name: "WM_PackageTypeProduct");

            migrationBuilder.DropTable(
                name: "WM_PackageTypeRelation");

            migrationBuilder.DropTable(
                name: "WM_ShelfGuideBarcode");

            migrationBuilder.DropTable(
                name: "WM_Stock");

            migrationBuilder.DropTable(
                name: "WM_StorageBarcodeHistory");

            migrationBuilder.DropTable(
                name: "WM_StorageBarcodeLock");

            migrationBuilder.DropTable(
                name: "WM_StorageHistory");

            migrationBuilder.DropTable(
                name: "WM_WareHouse");

            migrationBuilder.DropTable(
                name: "WM_WareHouseProduct");

            migrationBuilder.DropTable(
                name: "WORK_GROUP");

            migrationBuilder.DropTable(
                name: "WORK_SHIFT");

            migrationBuilder.DropTable(
                name: "WS_RETURN_MATERIAL");

            migrationBuilder.DropTable(
                name: "ychj");

            migrationBuilder.DropTable(
                name: "yctl");

            migrationBuilder.DropTable(
                name: "ZC_NO");

            migrationBuilder.DropTable(
                name: "ZZ_SBMOD_BC");

            migrationBuilder.DropTable(
                name: "BF_RPT_TEMPLET_C");

            migrationBuilder.DropTable(
                name: "CMM_MEASURE_REC");

            migrationBuilder.DropTable(
                name: "EQP_RunStatus");

            migrationBuilder.DropTable(
                name: "EQP_MAINTAIN_SPEC");

            migrationBuilder.DropTable(
                name: "GX_Other_Main");

            migrationBuilder.DropTable(
                name: "LE_Test_Main");

            migrationBuilder.DropTable(
                name: "MDM_Fixture_FaultBOM");

            migrationBuilder.DropTable(
                name: "TF_BOM");

            migrationBuilder.DropTable(
                name: "MOLD_MT_ORDER");

            migrationBuilder.DropTable(
                name: "MOLD_MAINTAIN_SPEC");

            migrationBuilder.DropTable(
                name: "MOLDING_DEVIATE_T");

            migrationBuilder.DropTable(
                name: "MS_CALNOTICE");

            migrationBuilder.DropTable(
                name: "MS_CALPLAN");

            migrationBuilder.DropTable(
                name: "PC_OutPut");

            migrationBuilder.DropTable(
                name: "PP_Plan_Order");

            migrationBuilder.DropTable(
                name: "PP_Production_Order");

            migrationBuilder.DropTable(
                name: "PP_WorkOrder_Procs");

            migrationBuilder.DropTable(
                name: "QC_RECORD");

            migrationBuilder.DropTable(
                name: "QM_InspectingOrder");

            migrationBuilder.DropTable(
                name: "QM_InspectT");

            migrationBuilder.DropTable(
                name: "QM_InspectS");

            migrationBuilder.DropTable(
                name: "qmTISub");

            migrationBuilder.DropTable(
                name: "qmTYSub");

            migrationBuilder.DropTable(
                name: "RM_Mold_Insp_Program");

            migrationBuilder.DropTable(
                name: "RM_Mold_Insp_Task");

            migrationBuilder.DropTable(
                name: "RM_Mold_RepairRecord_Item");

            migrationBuilder.DropTable(
                name: "RM_Mold_RepairRequest_Item");

            migrationBuilder.DropTable(
                name: "RM_Mold_Parts");

            migrationBuilder.DropTable(
                name: "SB_MT_ORDER");

            migrationBuilder.DropTable(
                name: "SB_PRDT_PARA");

            migrationBuilder.DropTable(
                name: "SB_MAINTAIN_SPEC");

            migrationBuilder.DropTable(
                name: "SB_STATUS_CHANGE");

            migrationBuilder.DropTable(
                name: "SBBY_PLAN");

            migrationBuilder.DropTable(
                name: "ST_BARCODEINFO");

            migrationBuilder.DropTable(
                name: "ST_PALLETCODE_INFO");

            migrationBuilder.DropTable(
                name: "Major");

            migrationBuilder.DropTable(
                name: "SYS_Account_Close");

            migrationBuilder.DropTable(
                name: "sys_AudBill_Info");

            migrationBuilder.DropTable(
                name: "sys_Audit_Flow");

            migrationBuilder.DropTable(
                name: "SYS_CODENO_RULE");

            migrationBuilder.DropTable(
                name: "SYS_ROLE_MENU");

            migrationBuilder.DropTable(
                name: "SYS_USER");

            migrationBuilder.DropTable(
                name: "SYS_Terminal");

            migrationBuilder.DropTable(
                name: "MF_BAN");

            migrationBuilder.DropTable(
                name: "MF_BYJL");

            migrationBuilder.DropTable(
                name: "MF_CK");

            migrationBuilder.DropTable(
                name: "MF_CS");

            migrationBuilder.DropTable(
                name: "MF_DS");

            migrationBuilder.DropTable(
                name: "MF_GR_M");

            migrationBuilder.DropTable(
                name: "MF_GR_S");

            migrationBuilder.DropTable(
                name: "MF_IC");

            migrationBuilder.DropTable(
                name: "MF_IJ");

            migrationBuilder.DropTable(
                name: "MF_JH");

            migrationBuilder.DropTable(
                name: "MF_JJ");

            migrationBuilder.DropTable(
                name: "MF_JXZB_JS");

            migrationBuilder.DropTable(
                name: "MF_JXZB_SZ");

            migrationBuilder.DropTable(
                name: "MF_MD_INOUT");

            migrationBuilder.DropTable(
                name: "MF_MJAA");

            migrationBuilder.DropTable(
                name: "MF_ML");

            migrationBuilder.DropTable(
                name: "MF_MM0");

            migrationBuilder.DropTable(
                name: "MF_MMJH");

            migrationBuilder.DropTable(
                name: "MF_MO");

            migrationBuilder.DropTable(
                name: "MF_MSC");

            migrationBuilder.DropTable(
                name: "MF_POS");

            migrationBuilder.DropTable(
                name: "MF_PROMV");

            migrationBuilder.DropTable(
                name: "MF_PSS");

            migrationBuilder.DropTable(
                name: "MF_QL");

            migrationBuilder.DropTable(
                name: "MF_QY_M");

            migrationBuilder.DropTable(
                name: "MF_QY_S");

            migrationBuilder.DropTable(
                name: "MF_RSC");

            migrationBuilder.DropTable(
                name: "MF_RX_M");

            migrationBuilder.DropTable(
                name: "MF_RX_S");

            migrationBuilder.DropTable(
                name: "MF_SBAA");

            migrationBuilder.DropTable(
                name: "MF_SBYCBG");

            migrationBuilder.DropTable(
                name: "MF_SQ");

            migrationBuilder.DropTable(
                name: "MF_SQD");

            migrationBuilder.DropTable(
                name: "MF_ST_M");

            migrationBuilder.DropTable(
                name: "MF_ST_S");

            migrationBuilder.DropTable(
                name: "MF_TB");

            migrationBuilder.DropTable(
                name: "MF_TI");

            migrationBuilder.DropTable(
                name: "MF_TW");

            migrationBuilder.DropTable(
                name: "MF_TY");

            migrationBuilder.DropTable(
                name: "MF_TZ");

            migrationBuilder.DropTable(
                name: "MF_UNQC_RECORD");

            migrationBuilder.DropTable(
                name: "TF_UNQCPRDHL");

            migrationBuilder.DropTable(
                name: "MF_WJ_M");

            migrationBuilder.DropTable(
                name: "MF_WJ_S");

            migrationBuilder.DropTable(
                name: "MF_WX_M");

            migrationBuilder.DropTable(
                name: "MF_WX_S");

            migrationBuilder.DropTable(
                name: "TF_ZC");

            migrationBuilder.DropTable(
                name: "MF_ZG");

            migrationBuilder.DropTable(
                name: "UnacceptedProductionHandleSub");

            migrationBuilder.DropTable(
                name: "WM_AsnItem");

            migrationBuilder.DropTable(
                name: "WM_Barcode_BatchInfo");

            migrationBuilder.DropTable(
                name: "WM_Feeding");

            migrationBuilder.DropTable(
                name: "WM_FormItem");

            migrationBuilder.DropTable(
                name: "WM_FreezeStorage");

            migrationBuilder.DropTable(
                name: "WM_InventoryPlanItem");

            migrationBuilder.DropTable(
                name: "WM_MaterialPreparaPlanItem");

            migrationBuilder.DropTable(
                name: "WM_OnShelfGuideItem");

            migrationBuilder.DropTable(
                name: "WM_OutFormApplyItem");

            migrationBuilder.DropTable(
                name: "WM_Package_BOM");

            migrationBuilder.DropTable(
                name: "WM_ShelfGuideItem");

            migrationBuilder.DropTable(
                name: "WM_StorageBarcode");

            migrationBuilder.DropTable(
                name: "WM_Storage");

            migrationBuilder.DropTable(
                name: "MF_BOM");

            migrationBuilder.DropTable(
                name: "PP_WorkOrder");

            migrationBuilder.DropTable(
                name: "QM_InspectBill");

            migrationBuilder.DropTable(
                name: "qmTI");

            migrationBuilder.DropTable(
                name: "qmTY");

            migrationBuilder.DropTable(
                name: "RM_Mold_RepairRecord");

            migrationBuilder.DropTable(
                name: "RM_Mold_RepairRequest");

            migrationBuilder.DropTable(
                name: "SYS_ROLE");

            migrationBuilder.DropTable(
                name: "MF_UNQCPRDHL");

            migrationBuilder.DropTable(
                name: "MF_ZC");

            migrationBuilder.DropTable(
                name: "UnacceptedProductionHandle");

            migrationBuilder.DropTable(
                name: "WM_Asn");

            migrationBuilder.DropTable(
                name: "WM_Barcode");

            migrationBuilder.DropTable(
                name: "WM_Form");

            migrationBuilder.DropTable(
                name: "WM_InventoryPlan");

            migrationBuilder.DropTable(
                name: "WM_MaterialPreparaPlan");

            migrationBuilder.DropTable(
                name: "WM_OnShelfGuide");

            migrationBuilder.DropTable(
                name: "WM_OutFormApply");

            migrationBuilder.DropTable(
                name: "WM_ShelfGuide");

            migrationBuilder.DropTable(
                name: "WM_Barcode_Source");
        }
    }
}
